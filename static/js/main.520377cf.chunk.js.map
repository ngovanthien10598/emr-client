{"version":3,"sources":["components/Circle/Circle.module.scss","components/Icons/LoginIcon.jsx","store/actionTypes.js","constant/apiUrl.js","services/auth/auth.service.js","services/user/user.service.js","store/actions/user.action.js","store/actions/auth.action.js","forms/LoginForm/LoginForm.jsx","utils/routing.js","pages/login.jsx","pages/admin/dashboard.jsx","forms/DrugCategoryForm/DrugCategoryForm.jsx","services/admin/drug-category.service.js","constant/formActions.js","pages/common/drug/drug-category.jsx","forms/DrugUnitForm/DrugUnitForm.jsx","services/admin/drug-unit.service.js","pages/common/drug/drug-unit.jsx","utils/string.js","services/admin/drug.service.js","forms/DrugForm/DrugForm.jsx","pages/common/drug/drug.jsx","forms/DrugInstructionForm/DrugInstructionForm.jsx","services/admin/drug-instruction.service.js","pages/common/drug/drug-instruction.jsx","forms/DiseaseCategoryForm/DiseaseCategoryForm.jsx","services/admin/disease-category.service.js","pages/common/disease/disease-category.jsx","services/admin/disease.service.js","forms/DiseaseForm/DiseaseForm.jsx","pages/common/disease/disease.jsx","pages/common/notification/notification.jsx","services/user/room.service.js","services/admin/room.service.js","services/user/visit.service.js","services/admin/visit.service.js","utils/array.js","pages/common/visit/visit.jsx","pages/common/patient/patient.jsx","pages/common/appointment/apointment.jsx","services/admin/medical-service.service.js","forms/ServiceForm/ServiceForm.jsx","pages/common/service/service.jsx","services/admin/working-hours.service.js","pages/admin/working-hour.jsx","forms/RoomForm/RoomForm.jsx","pages/common/room/room.jsx","services/admin/user.service.js","constant/roles.js","forms/UserForm/UserForm.jsx","components/Circle/Circle.jsx","pages/admin/account.jsx","pages/admin/setting.jsx","HOCs/withPrivateRoute.jsx","components/Header.jsx","layouts/AdminLayout/AdminLayout.jsx","forms/Visit/VisitLivingFunctionForm.jsx","services/user/disease.service.js","forms/Visit/VisitDiseaseForm.jsx","forms/Visit/VisitServiceForm.jsx","services/user/drug.service.js","forms/Visit/VisitDrugForm.jsx","services/user/disease-category.service.js","services/user/medical-service.service.js","services/user/drug-category.service.js","services/user/drug-instruction.service.js","pages/common/examination/examination.jsx","layouts/PhysicianLayout/PhysicianLayout.jsx","services/user/patient.service.js","forms/PatientForm/PatientForm.jsx","pages/receptionist/receive.jsx","pages/common/profile/profile.jsx","layouts/ReceptionistLayout/ReceptionistLayout.jsx","components/Icons/EmailIcon.jsx","pages/verify-email.jsx","App.jsx","utils/interceptor.js","store/reducers/auth.reducer.js","store/reducers/user.reducer.js","store/rootReducer.js","store/store.js","serviceWorker.js","index.jsx"],"names":["module","exports","LoginIcon","width","height","xmlns","xmlnsXlink","version","id","x","y","viewBox","fill","xmlSpace","cx","cy","r","d","LOGIN_PENDING","LOGIN_SUCCESS","LOGIN_FAILURE","GET_PROFILE_PENDING","GET_PROFILE_SUCCESS","GET_PROFILE_FAILURE","LOGOUT","API_URL","endpointPrefix","login","email","password","url","axios","post","refreshToken","refresh_token","verifyEmailAPI","token","get","getProfile","getProfileSuccess","user","type","actionTypes","payload","getProfileAction","dispatch","a","profileRes","data","console","log","logoutAction","Cookie","remove","LoginForm","history","useHistory","useDispatch","authState","useSelector","state","userState","useEffect","role","redirectPath","getRedirectPath","replace","className","layout","autoComplete","onFinish","values","loginRes","loginData","accessToken","access_token","set","expires","Icon","component","Item","name","placeholder","Password","to","loading","loginLoading","getProfileLoading","block","size","htmlType","LoginPage","props","AdminDashboard","DrugCategoryForm","form","defaultCategory","label","initialValue","autoFocus","getDrugCategoryAPI","search","addDrugCategoryAPI","updateDrugCategoryAPI","put","deleteDrugCategoryAPI","delete","formActions","DrugCategoryPage","useState","modalVisible","setModalVisible","categories","setCategories","fetchingCategories","setFetchingCategories","modalLoading","setModalLoading","action","setAction","selectedCategory","setSelectedCategory","Form","useForm","drugCategoryForm","tableColumns","title","key","render","text","record","index","dataIndex","icon","EditOutlined","onClick","category","onConfirm","handleDelete","okText","okType","cancelText","DeleteOutlined","getDrugCategories","response","handleFormSubmit","validateFields","unit","justify","PlusOutlined","rowKey","columns","dataSource","pagination","visible","onCancel","confirmLoading","destroyOnClose","afterClose","resetFields","onOk","DrugUnitForm","defaultUnit","getDrugUnitsAPI","addDrugUnitAPI","updateDrugUnitAPI","deleteDrugUnitAPI","DrugUnitPage","drugUnits","setDrugUnits","fetchingDrugUnits","setFetchingDrugUnits","selectedUnit","setSelectedUnit","drugUnitForm","getDrugUnits","getQueryString","queryObj","Object","keys","map","join","getDrugsAPI","params","getDrugDetailsAPI","addDrugAPI","code","drug_category","price","drug_unit","Number","updateDrugAPI","deleteDrugAPI","DrugForm","defaultDrug","units","setUnits","drugDetail","setDrugDetail","catLoading","setCatLoading","unitLoading","setUnitLoading","detailLoading","setDetailLoading","catResponse","unitResponse","getDrugDetail","detailResponse","prevCats","findIndex","cat","prevUnits","u","Promise","all","getData","setFieldsValue","spinning","suffix","Option","value","DrugPage","drugs","setDrugs","fetchingDrugs","setFetchingDrugs","selectedDrug","setSelectedDrug","drugForm","thousandSeparator","displayType","drug","getDrugs","results","DrugInstructionForm","defaultInstruction","instruction","getDrugInstructionsAPI","addDrugInstructionAPI","updateDrugInstructionAPI","deleteDrugInstructionAPI","DrugInstructionPage","drugInstructions","setDrugInstructions","fetchingDrugInstructions","setFetchingDrugInstructions","selectedInstruction","setSelectedInstruction","drugInstructionForm","ins","getDrugInstructions","DiseaseCategoryForm","getDiseaseCategoryAPI","addDiseaseCategoryAPI","updateDiseaseCategoryAPI","deleteDiseaseCategoryAPI","DiseaseCategoryPage","diseaseCategoryForm","getDiseaseCategories","getDiseasesAPI","getDiseaseDetailsAPI","addDiseaseAPI","disease_category","updateDiseaseAPI","deleteDiseaseAPI","DiseaseForm","defaultDisease","diseaseDetail","setDiseaseDetail","getDiseaseDetail","DiseasePage","diseases","setDiseases","fetchingDiseases","setFetchingDiseases","selectedDisease","setSelectedDisease","diseaseForm","disease","getDiseases","NotificationPage","getRoomAPI","addRoomAPI","number","updateRoomAPI","deleteRoomAPI","getVisitDataAPI","createVisitAPI","patientId","roomId","room_id","patient_id","removeDuplicates","myArr","prop","filter","obj","pos","arr","mapObj","indexOf","connect","pathname","useLocation","rooms","setRooms","roomLoading","setRoomLoading","visitData","setVisitData","visitLoading","setVisitLoading","selectedRoom","setSelectedRoom","visiting","setVisiting","visitList","visit","createdAt","Date","created_at","today","getDate","getMonth","getFullYear","room","_","__","patient","first_name","last_name","gender","ken","prev","emrObj","avatar","DOB","physician","livingFunctions","emr_diseases","emr_services","emr_drugs","images","symptom","unique","localStorage","setItem","JSON","stringify","push","getRooms","adminGetRoomAPI","roomResponse","prevSelected","getItem","getVisitData","adminGetVisitDataAPI","visitDataResponse","getInitialData","localVisitingStr","localVisitingObj","parse","style","onChange","flex","length","description","PatientPage","AppointmentPage","getServicesAPI","getServiceDetailsAPI","addServiceAPI","updateServiceAPI","deleteServiceAPI","ServiceForm","defaultService","serviceDetail","setServiceDetail","getServiceDetail","ServicePage","services","setServices","fetchingServices","setFetchingServices","selectedService","setSelectedService","serviceForm","service","getServices","getWorkingHoursAPI","updateWorkingHourAPI","weekday","isClosed","is_closed","WorkingHourPage","workingHours","setWorkingHours","setLoading","checked","handleWorkingHourChange","getWorkingHours","workingHoursResponse","sort","b","wh","RoomForm","defaultRoom","RoomPage","roomForm","getUsersAPI","query","qs","getUserDetailsAPI","addUserAPI","phone","role_id","format","updateUserAPI","deleteUserAPI","blockUserAPI","userId","unblockUserAPI","ROLES","display","ROLES_LIST","UserForm","defaultUser","userDetail","setUserDetail","getUserDetail","moment","rules","required","message","Group","Circle","classes","classnames","styles","circle","color","AdminAccountPage","urlSearchParams","URLSearchParams","currentPageOnURL","page","setPage","users","setUsers","fetchingUsers","setFetchingUsers","selectedUser","setSelectedUser","userForm","is_verified_email","is_verified_phone","EyeOutlined","handleBlockUnblock","is_active","danger","LockOutlined","UnlockOutlined","getUsers","defaultCurrent","current","pageSize","total","count","AdminSettingPage","withPrivateRoute","Child","roles","userRole","includes","isValidRole","jwtDecode","error","Header","Layout","CustomHeader","ghost","LogoutOutlined","Modal","confirm","ExclamationCircleOutlined","content","Sider","Content","SubMenu","Menu","match","useRouteMatch","location","path","mode","borderRight","selectedKeys","DashboardOutlined","MedicineBoxOutlined","BugOutlined","NotificationOutlined","ContainerOutlined","IdcardOutlined","CalendarOutlined","DollarOutlined","ClockCircleOutlined","AppstoreOutlined","UserOutlined","SettingOutlined","padding","margin","minHeight","exact","VisitLivingFunctionForm","currentValues","bmi","setBmi","heightStr","getFieldValue","weightStr","weight","Math","pow","gutter","field","toFixed","SaveOutlined","categoryId","List","Select","VisitDiseaseForm","localCategories","setLocalCategories","diseaseLoading","setDiseaseLoading","adminGetDiseasesAPI","diseaseResponse","handleCatSearch","filterArr","handleCatChange","getDiseasesByCategory","initialValues","fields","add","align","fieldKey","showSearch","onSearch","MinusCircleOutlined","VisitServiceForm","VisitDrugForm","instructions","drugLoading","setDrugLoading","adminGetDrugsAPI","drugResponse","handleCategoryChange","getDrugsByCategory","minWidth","diseaseCategories","setDiseaseCategories","drugCategories","setDrugCategories","adminGetDiseaseCategoryAPI","diseaseCategoryResponse","diseaseCategoriesData","adminGetServicesAPI","servicesResponse","servicesData","adminGetDrugCategoryAPI","drugCategoryResponse","drugCategoriesData","adminGetDrugInstructionsAPI","drugInsResponse","drugInsData","onBack","goBack","v","TabPane","tab","span","defaultActiveKey","Panel","header","visitId","prevValue","find","finalList","success","handleSaveLivingFunctions","handleSaveDiseases","handleSaveServices","handleSaveDrugs","handleFinishExamination","listAllPatientsAPI","PatientForm","ReceivePage","patientData","setPatientData","patientLoading","setPatientLoading","isCreatingVisit","setCreatingVisit","patientForm","renderMenu","handleCreateVisit","overlay","overlayStyle","trigger","listAllPatients","patientResponse","createVisitResponse","extra","Search","ProfilePage","EmailIcon","enableBackground","VerifyPage","setSuccess","setError","isValidToken","isValid","test","verifyEmail","showIcon","App","interceptors","request","use","config","method","headers","reject","res","destroy","originalRequest","status","_retry","AuthService","refreshResponse","newToken","resolve","then","catch","errorMessage","fetchProfile","refresh","newTokenReponse","checkRefresh","AdminLayout","PhysicianLayout","ReceptionistLayout","initialState","rootReducer","combineReducers","middlewares","thunk","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","Boolean","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.520377cf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"circle\":\"Circle_circle__3fC-i\",\"circle--success\":\"Circle_circle--success__1IfvS\"};","import React from 'react';\n\nconst LoginIcon = () => (\n  <svg width=\"50\" height=\"50\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" version=\"1.1\" id=\"Capa_1\" x=\"0px\" y=\"0px\" viewBox=\"0 0 512.002 512.002\" fill=\"currentColor\" xmlSpace=\"preserve\">\n    <g>\n      <g>\n        <g>\n          <circle cx=\"338\" cy=\"346.001\" r=\"20\" />\n          <path d=\"M238,472.001H80c-22.056,0-40-17.944-40-40v-164c0-22.056,17.944-40,40-40h288c22.056,0,40,17.944,40,40v40     c0,11.046,8.954,20,20,20c11.046,0,20-8.954,20-20v-40c0-44.112-35.888-80-80-80h-24.037v-70.534     c0-64.771-53.832-117.466-120-117.466s-120,52.695-120,117.466v70.534H80c-44.112,0-80,35.888-80,80v164     c0,44.112,35.888,80,80,80h158c11.046,0,20-8.954,20-20S249.046,472.001,238,472.001z M143.963,117.467     c0-42.715,35.888-77.466,80-77.466s80,34.751,80,77.466v70.534h-160V117.467z\" />\n          <path d=\"M503.643,325.739c-8.982-6.431-21.477-4.362-27.904,4.62l-98.581,137.7c-2.692,3.122-6.066,3.796-7.874,3.916     c-1.854,0.123-5.424-0.112-8.567-3.061l-63.708-62.171c-7.906-7.716-20.568-7.559-28.282,0.345     c-7.715,7.905-7.561,20.567,0.345,28.282l63.82,62.281c0.06,0.058,0.119,0.116,0.18,0.173C342.639,506.933,355.41,512,368.55,512     c1.129,0,2.261-0.037,3.393-0.113c14.314-0.954,27.679-7.915,36.666-19.097c0.232-0.29,0.456-0.585,0.673-0.887l98.981-138.26     C514.692,344.662,512.624,332.168,503.643,325.739z\" />\n          <circle cx=\"262\" cy=\"346.001\" r=\"20\" />\n          <circle cx=\"112\" cy=\"346.001\" r=\"20\" />\n          <circle cx=\"187\" cy=\"346.001\" r=\"20\" />\n        </g>\n      </g>\n    </g>\n    <g>\n    </g>\n    <g>\n    </g>\n    <g>\n    </g>\n    <g>\n    </g>\n    <g>\n    </g>\n    <g>\n    </g>\n    <g>\n    </g>\n    <g>\n    </g>\n    <g>\n    </g>\n    <g>\n    </g>\n    <g>\n    </g>\n    <g>\n    </g>\n    <g>\n    </g>\n    <g>\n    </g>\n    <g>\n    </g>\n  </svg>\n)\n\nexport default LoginIcon;","export const LOGIN_PENDING = \"LOGIN_PENDING\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_FAILURE = \"LOGIN_FAILURE\";\n\nexport const GET_PROFILE_PENDING = \"GET_PROFILE_PENDING\";\nexport const GET_PROFILE_SUCCESS = \"GET_PROFILE_SUCCESS\";\nexport const GET_PROFILE_FAILURE = \"GET_PROFILE_FAILURE\";\n\nexport const LOGOUT = \"LOGOUT\";","export const API_URL = 'https://emr-2020.wl.r.appspot.com/api';","import { API_URL } from \"constant/apiUrl\";\nimport axios from 'axios';\n\n\nconst endpointPrefix = `${API_URL}/auth`;\n\n/**\n * Login to system\n * @param email\n * @param password\n */\nexport function login(email, password) {\n  const url = `${endpointPrefix}/login/`;\n  return axios.post(url, {\n    email: email,\n    password: password\n  });\n}\n\n/**\n * This function is used to get new access token from refresh token\n * when current access token is expired\n * @param refreshToken Refresh token from last login\n */\nexport function refreshToken(refreshToken) {\n  const url = `${endpointPrefix}/refresh-token/`;\n  return axios.post(url, {\n    refresh_token: refreshToken\n  });\n}\n\n\nexport function verifyEmailAPI(token) {\n  const url = `${endpointPrefix}/verify-email/${token}/`;\n  return axios.get(url);\n}","import { API_URL } from \"constant/apiUrl\";\nimport axios from 'axios';\n\nconst endpointPrefix = `${API_URL}/user`;\n\n/**\n* Get user profile\n* @param token Access token\n*/\nexport function getProfile() {\n  const url = `${endpointPrefix}/profile/`;\n  return axios.get(url);\n}","import * as actionTypes from '../actionTypes';\nimport { getProfile } from 'services/user/user.service';\n\nfunction getProfilePending() {\n  return {\n    type: actionTypes.GET_PROFILE_PENDING\n  }\n}\n\nfunction getProfileSuccess(user) {\n  return {\n    type: actionTypes.GET_PROFILE_SUCCESS,\n    payload: user\n  }\n}\n\nfunction getProfileFailure() {\n  return {\n    type: actionTypes.GET_PROFILE_FAILURE\n  }\n}\n\nexport function getProfileAction() {\n  return async dispatch => {\n    try {\n      dispatch(getProfilePending());\n      const profileRes = await getProfile();\n      const user = profileRes.data;\n      dispatch(getProfileSuccess(user));\n    } catch(error) {\n      console.log(error);\n      dispatch(getProfileFailure());\n    }\n  }\n}\n\nexport function removeUserAction() {\n  return {\n    type: actionTypes.LOGOUT\n  }\n}","import * as actionTypes from '../actionTypes';\nimport { login } from 'services/auth/auth.service';\nimport Cookie from 'js-cookie';\nimport { getProfileAction, removeUserAction } from './user.action';\n\nfunction loginPending() {\n  return {\n    type: actionTypes.LOGIN_PENDING\n  }\n}\n\nfunction loginSuccess() {\n  return {\n    type: actionTypes.LOGIN_SUCCESS,\n  }\n}\n\nfunction loginFailure() {\n  return {\n    type: actionTypes.LOGIN_FAILURE\n  }\n}\n\nexport function loginAction(email, password) {\n  return async dispatch => {\n    try {\n      dispatch(loginPending());\n      const loginRes = await login(email, password);\n      const loginData = loginRes.data;\n\n      const accessToken = loginData.access_token;\n      const refreshToken = loginData.refresh_token;\n      Cookie.set('EMR_token', accessToken, { expires: 3 / 24 }); // 3 hours\n      Cookie.set('EMR_refresh', refreshToken, { expires: 7 }); // 7 days\n      dispatch(loginSuccess());\n      dispatch(getProfileAction());\n    } catch (error) {\n      dispatch(loginFailure());\n    }\n  }\n}\n\nexport function logoutAction() {\n  Cookie.remove('EMR_token');\n  Cookie.remove('EMR_refresh');\n\n  return dispatch => {\n    dispatch(removeUserAction());\n  }\n}","import React, { useEffect } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { Form, Input, Button } from 'antd';\nimport Icon from '@ant-design/icons';\nimport LoginIcon from 'components/Icons/LoginIcon';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { loginAction } from 'store/actions/auth.action';\nimport { getRedirectPath } from 'utils/routing';\n\nconst LoginForm = () => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const authState = useSelector(state => state.authState);\n  const userState = useSelector(state => state.userState);\n  const user = userState.user;\n\n  function handleSubmit(values) {\n    dispatch(loginAction(values.email, values.password));\n  }\n\n  useEffect(() => {\n    if (user && user.role) {\n      const redirectPath = getRedirectPath(user.role);\n      console.log(redirectPath);\n      history.replace(redirectPath);\n    }\n  }, [user, history]);\n\n  return (\n    <Form\n      className=\"auth\"\n      layout=\"vertical\"\n      autoComplete=\"off\"\n      onFinish={handleSubmit}>\n\n      <div className=\"auth__header text-center\">\n        <Icon component={LoginIcon} />\n        <h1 className=\"text-3xl\">Đăng nhập</h1>\n      </div>\n\n      <Form.Item name=\"email\">\n        <Input type=\"email\" placeholder=\"Email\" />\n      </Form.Item>\n\n      <Form.Item name=\"password\" className=\"m-0\">\n        <Input.Password placeholder=\"Mật khẩu\" />\n        {/* <Button type=\"link\"> */}\n        {/* </Button> */}\n      </Form.Item>\n      <Link className=\"block mt-2 mb-6\" to=\"/forgot-password\">Quên mật khẩu</Link>\n\n      <Form.Item>\n        <Button loading={authState.loginLoading || userState.getProfileLoading} block type=\"primary\" size=\"large\" htmlType=\"submit\">Đăng nhập</Button>\n      </Form.Item>\n    </Form>\n  )\n}\n\nexport default LoginForm;","export function getRedirectPath(role) {\n  if (!role) return \"/login\";\n\n  switch (role.id) {\n    case 1:\n      return \"/admin\";\n    case 2:\n      return \"/physician\";\n    case 3:\n      return \"/receptionist\";\n    case 4:\n      return \"/patient\";\n    default:\n      return \"\";\n  }\n}","import React from 'react';\nimport LoginForm from 'forms/LoginForm/LoginForm';\n\nconst LoginPage = (props) => {\n  return (\n    <main className=\"login-page\">\n      <LoginForm />\n    </main>\n  )\n}\n\nexport default LoginPage;","import React from 'react';\n\nconst AdminDashboard = () => {\n  return (\n    <div>Admin dashboard</div>\n  )\n}\n\nexport default AdminDashboard;","import React from 'react';\nimport { Form, Input } from 'antd';\n\nconst DrugCategoryForm = props => {\n  const { form, onFinish, defaultCategory } = props;\n\n  return (\n    <Form\n      layout=\"vertical\"\n      form={form}\n      onFinish={onFinish}>\n      <Form.Item label=\"Loại thuốc\" name=\"name\" initialValue={defaultCategory?.name}>\n        <Input autoFocus />\n      </Form.Item>\n    </Form>\n  )\n}\n\nexport default DrugCategoryForm;","import axios from 'axios';\n\nimport { API_URL } from \"constant/apiUrl\";\n\nconst endpointPrefix = `${API_URL}/admin/manage-drug-category`;\n\nexport function getDrugCategoryAPI(search = \"\") {\n  const url = `${endpointPrefix}/?search=${search}`;\n  return axios.get(url);\n}\n\nexport function addDrugCategoryAPI(name) {\n  const url = `${endpointPrefix}/`;\n  return axios.post(url, { name: name });\n}\n\nexport function updateDrugCategoryAPI(id, name) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.put(url, {\n    name: name\n  })\n}\n\nexport function deleteDrugCategoryAPI(id) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.delete(url);\n}","export const formActions = {\n  CREATE: 'CREATE',\n  UPDATE: 'UPDATE'\n}","import React, { useState, useEffect } from 'react';\nimport { Row, Col, Button, Modal, Table, Form, Popconfirm, Space } from 'antd';\nimport { PlusOutlined, EditOutlined, DeleteOutlined } from '@ant-design/icons';\nimport DrugCategoryForm from 'forms/DrugCategoryForm/DrugCategoryForm';\nimport { addDrugCategoryAPI, deleteDrugCategoryAPI, getDrugCategoryAPI, updateDrugCategoryAPI } from 'services/admin/drug-category.service';\nimport { formActions } from 'constant/formActions';\n\nconst DrugCategoryPage = () => {\n\n  const [modalVisible, setModalVisible] = useState(false);\n  const [categories, setCategories] = useState([]);\n  const [fetchingCategories, setFetchingCategories] = useState(false);\n  const [modalLoading, setModalLoading] = useState(false);\n  const [action, setAction] = useState(formActions.CREATE);\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [drugCategoryForm] = Form.useForm();\n\n  const tableColumns = [\n    {\n      title: '#',\n      key: '#',\n      render: (text, record, index) => index + 1\n    },\n    {\n      title: 'Tên',\n      key: 'name',\n      dataIndex: 'name'\n    },\n    {\n      title: 'Hành động',\n      key: 'action',\n      render: (text, record, index) => (\n        <Space size={10}>\n          <Button icon={<EditOutlined />} onClick={() => handleEditClick(record)}></Button>\n          <Popconfirm\n            onConfirm={() => handleDelete(record)} title=\"Bạn có chắc muốn xóa không?\"\n            okText=\"Xóa\"\n            okType=\"danger\"\n            cancelText=\"Hủy bỏ\">\n            <Button icon={<DeleteOutlined />}></Button>\n          </Popconfirm>\n        </Space>\n      )\n    }\n  ]\n\n  function handleOpenModal() {\n    setAction(formActions.CREATE);\n    setModalVisible(true);\n  }\n\n  function handleCloseModal() {\n    setModalVisible(false);\n  }\n\n  async function getDrugCategories() {\n    try {\n      setFetchingCategories(true);\n      const response = await getDrugCategoryAPI();\n      setCategories(response.data);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setFetchingCategories(false);\n    }\n  }\n\n  async function handleFormSubmit() {\n    try {\n      setModalLoading(true);\n      const values = await drugCategoryForm.validateFields();\n      if (action === formActions.CREATE) {\n        await addDrugCategoryAPI(values.name);\n      }\n\n      if (action === formActions.UPDATE) {\n        await updateDrugCategoryAPI(selectedCategory.id, values.name);\n      }\n\n      getDrugCategories();\n\n      setModalVisible(false);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setModalLoading(false);\n    }\n  }\n\n  function handleEditClick(category) {\n    setAction(formActions.UPDATE);\n    setSelectedCategory(category);\n    setModalVisible(true);\n  }\n\n  async function handleDelete(unit) {\n    try {\n      await deleteDrugCategoryAPI(unit.id);\n      getDrugCategories();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  function afterClose() {\n    drugCategoryForm.resetFields();\n    setSelectedCategory(null);\n  }\n\n  useEffect(() => {\n    getDrugCategories();\n  }, []);\n\n  return (\n    <>\n      <Row justify=\"space-between\">\n        <Col><h1 className=\"text-xl\">Quản lý loại thuốc</h1></Col>\n        <Col>\n          <Button type=\"primary\" icon={<PlusOutlined />} onClick={handleOpenModal}>Tạo mới</Button>\n        </Col>\n      </Row>\n      <Table\n        rowKey=\"id\"\n        columns={tableColumns}\n        dataSource={categories}\n        pagination={false}\n        loading={fetchingCategories} />\n      <Modal\n        visible={modalVisible}\n        title={action === formActions.CREATE ? 'Thêm loại thuốc' : 'Cập nhật loại thuốc'}\n        onCancel={handleCloseModal}\n        confirmLoading={modalLoading}\n        destroyOnClose={true}\n        afterClose={afterClose}\n        onOk={handleFormSubmit}>\n        <DrugCategoryForm onFinish={handleFormSubmit} form={drugCategoryForm} defaultCategory={selectedCategory} />\n      </Modal>\n    </>\n  )\n}\n\nexport default DrugCategoryPage;","import React from 'react';\nimport { Form, Input } from 'antd';\n\nconst DrugUnitForm = props => {\n  const { form, onFinish, defaultUnit } = props;\n\n  return (\n    <Form\n      layout=\"vertical\"\n      form={form}\n      onFinish={onFinish}>\n      <Form.Item label=\"Đơn vị tính\" name=\"name\" initialValue={defaultUnit?.name}>\n        <Input autoFocus />\n      </Form.Item>\n    </Form>\n  )\n}\n\nexport default DrugUnitForm;","import axios from 'axios';\n\nimport { API_URL } from \"constant/apiUrl\";\n\nconst endpointPrefix = `${API_URL}/admin/manage-drug-unit`;\n\nexport function getDrugUnitsAPI(search = \"\") {\n  const url = `${endpointPrefix}/?search=${search}`;\n  return axios.get(url);\n}\n\nexport function addDrugUnitAPI(name) {\n  const url = `${endpointPrefix}/`;\n  return axios.post(url, { name: name });\n}\n\nexport function updateDrugUnitAPI(id, name) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.put(url, {\n    name: name\n  })\n}\n\nexport function deleteDrugUnitAPI(id) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.delete(url);\n}","import React, { useState, useEffect } from 'react';\nimport { Row, Col, Button, Modal, Table, Form, Popconfirm, Space } from 'antd';\nimport { PlusOutlined, EditOutlined, DeleteOutlined } from '@ant-design/icons';\nimport DrugUnitForm from 'forms/DrugUnitForm/DrugUnitForm';\nimport { getDrugUnitsAPI, addDrugUnitAPI, updateDrugUnitAPI, deleteDrugUnitAPI } from 'services/admin/drug-unit.service';\nimport { formActions } from 'constant/formActions';\n\nconst DrugUnitPage = () => {\n\n  const [modalVisible, setModalVisible] = useState(false);\n  const [drugUnits, setDrugUnits] = useState([]);\n  const [fetchingDrugUnits, setFetchingDrugUnits] = useState(false);\n  const [modalLoading, setModalLoading] = useState(false);\n  const [action, setAction] = useState(formActions.CREATE);\n  const [selectedUnit, setSelectedUnit] = useState(null);\n  const [drugUnitForm] = Form.useForm();\n\n  const tableColumns = [\n    {\n      title: '#',\n      key: '#',\n      render: (text, record, index) => index + 1\n    },\n    {\n      title: 'Đơn vị tính',\n      key: 'name',\n      dataIndex: 'name'\n    },\n    {\n      title: 'Hành động',\n      key: 'action',\n      render: (text, record, index) => (\n        <Space size={10}>\n          <Button icon={<EditOutlined />} onClick={() => handleEditClick(record)}></Button>\n          <Popconfirm\n            onConfirm={() => handleDelete(record)} title=\"Bạn có chắc muốn xóa không?\"\n            okText=\"Xóa\"\n            okType=\"danger\"\n            cancelText=\"Hủy bỏ\">\n            <Button icon={<DeleteOutlined />}></Button>\n          </Popconfirm>\n        </Space>\n      )\n    }\n  ]\n\n  function handleOpenModal() {\n    setAction(formActions.CREATE);\n    setModalVisible(true);\n  }\n\n  function handleCloseModal() {\n    setModalVisible(false);\n  }\n\n  async function getDrugUnits() {\n    try {\n      setFetchingDrugUnits(true);\n      const response = await getDrugUnitsAPI();\n      setDrugUnits(response.data);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setFetchingDrugUnits(false);\n    }\n  }\n\n  async function handleFormSubmit() {\n    try {\n      setModalLoading(true);\n      const values = await drugUnitForm.validateFields();\n      if (action === formActions.CREATE) {\n        await addDrugUnitAPI(values.name);\n      }\n\n      if (action === formActions.UPDATE) {\n        await updateDrugUnitAPI(selectedUnit.id, values.name);\n      }\n\n      getDrugUnits();\n\n      setModalVisible(false);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setModalLoading(false);\n    }\n  }\n\n  function handleEditClick(unit) {\n    setAction(formActions.UPDATE);\n    setSelectedUnit(unit);\n    setModalVisible(true);\n  }\n\n  async function handleDelete(unit) {\n    try {\n      await deleteDrugUnitAPI(unit.id);\n      getDrugUnits();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  function afterClose() {\n    drugUnitForm.resetFields();\n    setSelectedUnit(null);\n  }\n\n  useEffect(() => {\n    getDrugUnits();\n  }, []);\n\n  return (\n    <>\n      <Row justify=\"space-between\">\n        <Col><h1 className=\"text-xl\">Quản lý đơn vị tính</h1></Col>\n        <Col>\n          <Button type=\"primary\" icon={<PlusOutlined />} onClick={handleOpenModal}>Tạo mới</Button>\n        </Col>\n      </Row>\n      <Table\n        rowKey=\"id\"\n        columns={tableColumns}\n        dataSource={drugUnits}\n        loading={fetchingDrugUnits}\n        pagination={false} />\n      <Modal\n        visible={modalVisible}\n        title={action === formActions.CREATE ? 'Thêm đơn vị tính' : 'Cập nhật đơn vị tính'}\n        onCancel={handleCloseModal}\n        confirmLoading={modalLoading}\n        destroyOnClose={true}\n        afterClose={afterClose}\n        onOk={handleFormSubmit}>\n        <DrugUnitForm onFinish={handleFormSubmit} form={drugUnitForm} defaultUnit={selectedUnit} />\n      </Modal>\n    </>\n  )\n}\n\nexport default DrugUnitPage;","export function getQueryString(queryObj) {\n  if (!queryObj) return \"\";\n  return Object.keys(queryObj).map(key => `${key}=${queryObj[key]}`).join('&');\n}","import axios from 'axios';\nimport { API_URL } from 'constant/apiUrl';\nimport { getQueryString } from 'utils/string';\n\nconst endpointPrefix = `${API_URL}/admin/manage-drug`;\n\nexport function getDrugsAPI(params) {\n  const url = `${endpointPrefix}/`;\n\n  if (params) {\n    return axios.get(`${url}?${getQueryString(params)}`);\n  }\n  return axios.get(url);\n}\n\nexport function getDrugDetailsAPI(id) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.get(url);\n}\n\nexport function addDrugAPI({ code, name, drug_category, price, drug_unit }) {\n  const url = `${endpointPrefix}/`;\n  return axios.post(url, {\n    code,\n    name,\n    drug_category,\n    price: Number(price),\n    drug_unit\n  });\n}\n\nexport function updateDrugAPI(id, { code, name, drug_category, price, drug_unit }) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.put(url, {\n    code,\n    name,\n    drug_category,\n    price: Number(price),\n    drug_unit\n  });\n}\n\nexport function deleteDrugAPI(id) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.delete(url);\n}","import React, { useState, useEffect } from 'react';\nimport { Form, Input, Select, Spin } from 'antd';\nimport { getDrugCategoryAPI } from 'services/admin/drug-category.service';\nimport { getDrugUnitsAPI } from 'services/admin/drug-unit.service';\nimport { getDrugDetailsAPI } from 'services/admin/drug.service';\n\nconst DrugForm = props => {\n  const { form, onFinish, defaultDrug } = props;\n\n  const [categories, setCategories] = useState([]);\n  const [units, setUnits] = useState([]);\n  const [drugDetail, setDrugDetail] = useState(null);\n  const [catLoading, setCatLoading] = useState(false);\n  const [unitLoading, setUnitLoading] = useState(false);\n  const [detailLoading, setDetailLoading] = useState(false);\n\n  async function getDrugCategories() {\n    try {\n      setCatLoading(true);\n      const catResponse = await getDrugCategoryAPI();\n      setCategories(catResponse.data);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setCatLoading(false);\n    }\n  }\n\n  async function getDrugUnits() {\n    try {\n      setUnitLoading(true);\n      const unitResponse = await getDrugUnitsAPI();\n      setUnits(unitResponse.data);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setUnitLoading(false);\n    }\n  }\n\n  async function getDrugDetail(id) {\n    try {\n      setDetailLoading(true);\n      const detailResponse = await getDrugDetailsAPI(id);\n      const drugDetail = detailResponse.data;\n      setDrugDetail(drugDetail);\n      setCategories(prevCats => {\n        const index = prevCats.findIndex(cat => cat.id === defaultDrug.drug_category);\n        if (index > -1) {\n          prevCats[index] = drugDetail.drug_category;\n          return prevCats;\n        } else {\n          return [...[drugDetail.drug_category], ...prevCats];\n        }\n      });\n      setUnits(prevUnits => {\n        const index = prevUnits.findIndex(u => u.id === defaultDrug.drug_unit);\n        if (index > -1) {\n          prevUnits[index] = drugDetail.drug_unit;\n          return prevUnits;\n        } else {\n          return [...[drugDetail.drug_unit], ...prevUnits];\n        }\n      });\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setDetailLoading(false);\n    }\n  }\n\n  async function getData() {\n    if (defaultDrug?.id) {\n      await Promise.all([\n        getDrugDetail(defaultDrug.id),\n        getDrugCategories(),\n        getDrugUnits()\n      ]);\n\n    } else {\n      await Promise.all([\n        getDrugCategories(),\n        getDrugUnits()\n      ])\n    }\n\n  }\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  useEffect(() => {\n    if (drugDetail) {\n      form.setFieldsValue({\n        code: drugDetail.code,\n        name: drugDetail.name,\n        price: drugDetail.price,\n        drug_category: drugDetail.drug_category.id,\n        drug_unit: drugDetail.drug_unit.id\n      });\n    }\n  }, [drugDetail, defaultDrug, form]);\n\n  return (\n    <Spin spinning={detailLoading}>\n      <Form\n        layout=\"vertical\"\n        form={form}\n        onFinish={onFinish}>\n        <Form.Item label=\"Mã thuốc\" name=\"code\" initialValue={drugDetail?.code}>\n          <Input />\n        </Form.Item>\n\n        <Form.Item label=\"Tên thuốc\" name=\"name\" initialValue={drugDetail?.name}>\n          <Input />\n        </Form.Item>\n\n        <Form.Item label=\"Giá\" name=\"price\" initialValue={drugDetail?.price}>\n          <Input type=\"number\" suffix=\"VNĐ\" />\n        </Form.Item>\n\n        <Form.Item label=\"Loại thuốc\" name=\"drug_category\" initialValue={drugDetail?.drug_category.id}>\n          <Select loading={catLoading}>\n            {\n              categories.map(cat => (\n                <Select.Option key={cat.id} value={cat.id}>{cat.name}</Select.Option>\n              ))\n            }\n          </Select>\n        </Form.Item>\n\n        <Form.Item label=\"Đơn vị tính\" name=\"drug_unit\" initialValue={drugDetail?.drug_unit.id}>\n          <Select loading={unitLoading}>\n            {\n              units.map(cat => (\n                <Select.Option key={cat.id} value={cat.id}>{cat.name}</Select.Option>\n              ))\n            }\n          </Select>\n        </Form.Item>\n      </Form>\n    </Spin>\n  )\n}\n\nexport default DrugForm;","import React, { useState, useEffect } from 'react';\nimport { Row, Col, Button, Modal, Table, Form, Popconfirm, Space } from 'antd';\nimport { PlusOutlined, EditOutlined, DeleteOutlined } from '@ant-design/icons';\nimport DrugForm from 'forms/DrugForm/DrugForm';\nimport { getDrugsAPI, addDrugAPI, updateDrugAPI, deleteDrugAPI } from 'services/admin/drug.service';\nimport { formActions } from 'constant/formActions';\nimport NumberFormat from 'react-number-format';\n\nconst DrugPage = () => {\n\n  const [modalVisible, setModalVisible] = useState(false);\n  const [drugs, setDrugs] = useState();\n  const [fetchingDrugs, setFetchingDrugs] = useState(false);\n  const [modalLoading, setModalLoading] = useState(false);\n  const [action, setAction] = useState(formActions.CREATE);\n  const [selectedDrug, setSelectedDrug] = useState(null);\n  const [drugForm] = Form.useForm();\n\n  const tableColumns = [\n    {\n      title: '#',\n      key: '#',\n      render: (text, record, index) => index + 1\n    },\n    {\n      title: 'Mã thuốc',\n      key: 'code',\n      dataIndex: 'code'\n    },\n    {\n      title: 'Tên thuốc',\n      key: 'name',\n      dataIndex: 'name'\n    },\n    {\n      title: 'Giá',\n      key: 'price',\n      dataIndex: 'price',\n      render: (text, record, index) => (<NumberFormat thousandSeparator=\" \" suffix=\" VNĐ\" value={text} displayType=\"text\" />)\n    },\n    {\n      title: 'Hành động',\n      key: 'action',\n      render: (text, record, index) => (\n        <Space size={10}>\n          <Button icon={<EditOutlined />} onClick={() => handleEditClick(record)}></Button>\n          <Popconfirm\n            onConfirm={() => handleDelete(record)} title=\"Bạn có chắc muốn xóa không?\"\n            okText=\"Xóa\"\n            okType=\"danger\"\n            cancelText=\"Hủy bỏ\">\n            <Button icon={<DeleteOutlined />}></Button>\n          </Popconfirm>\n        </Space>\n      )\n    }\n  ]\n\n  function handleOpenModal() {\n    setAction(formActions.CREATE);\n    setModalVisible(true);\n  }\n\n  function handleCloseModal() {\n    setModalVisible(false);\n  }\n\n  async function getDrugs() {\n    try {\n      setFetchingDrugs(true);\n      const response = await getDrugsAPI();\n      setDrugs(response.data.results);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setFetchingDrugs(false);\n    }\n  }\n\n  async function handleFormSubmit() {\n    try {\n      setModalLoading(true);\n      const values = await drugForm.validateFields();\n      const data = {\n        code: values.code,\n        name: values.name,\n        price: values.price,\n        drug_category: values.drug_category,\n        drug_unit: values.drug_unit\n      }\n      if (action === formActions.CREATE) {\n        await addDrugAPI(data);\n      }\n\n      if (action === formActions.UPDATE) {\n        await updateDrugAPI(selectedDrug.id, data);\n      }\n\n      getDrugs();\n\n      setModalVisible(false);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setModalLoading(false);\n    }\n  }\n\n  function handleEditClick(drug) {\n    setAction(formActions.UPDATE);\n    setSelectedDrug(drug);\n    setModalVisible(true);\n  }\n\n  async function handleDelete(drug) {\n    try {\n      await deleteDrugAPI(drug.id);\n      getDrugs();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  function afterClose() {\n    drugForm.resetFields();\n    setSelectedDrug(null);\n  }\n\n  useEffect(() => {\n    getDrugs();\n  }, []);\n\n  return (\n    <>\n      <Row justify=\"space-between\">\n        <Col><h1 className=\"text-xl\">Quản lý thuốc</h1></Col>\n        <Col>\n          <Button type=\"primary\" icon={<PlusOutlined />} onClick={handleOpenModal}>Tạo mới</Button>\n        </Col>\n      </Row>\n      <Table\n        rowKey=\"id\"\n        columns={tableColumns}\n        dataSource={drugs}\n        loading={fetchingDrugs}\n        pagination={false} />\n      <Modal\n        visible={modalVisible}\n        title={action === formActions.CREATE ? 'Thêm thuốc' : 'Cập nhật thuốc'}\n        onCancel={handleCloseModal}\n        confirmLoading={modalLoading}\n        destroyOnClose={true}\n        afterClose={afterClose}\n        onOk={handleFormSubmit}>\n        <DrugForm onFinish={handleFormSubmit} form={drugForm} defaultDrug={selectedDrug} />\n      </Modal>\n    </>\n  )\n}\n\nexport default DrugPage;","import React from 'react';\nimport { Form, Input } from 'antd';\n\nconst DrugInstructionForm = props => {\n  const { form, onFinish, defaultInstruction } = props;\n\n  return (\n    <Form\n      layout=\"vertical\"\n      form={form}\n      onFinish={onFinish}>\n      <Form.Item label=\"Hướng dẫn sử dụng\" name=\"instruction\" initialValue={defaultInstruction?.instruction}>\n        <Input autoFocus />\n      </Form.Item>\n    </Form>\n  )\n}\n\nexport default DrugInstructionForm;","import axios from 'axios';\n\nimport { API_URL } from \"constant/apiUrl\";\n\nconst endpointPrefix = `${API_URL}/admin/manage-drug-instruction`;\n\nexport function getDrugInstructionsAPI() {\n  const url = `${endpointPrefix}/`;\n  return axios.get(url);\n}\n\nexport function addDrugInstructionAPI(instruction) {\n  const url = `${endpointPrefix}/`;\n  return axios.post(url, { instruction: instruction });\n}\n\nexport function updateDrugInstructionAPI(id, instruction) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.put(url, {\n    instruction: instruction\n  })\n}\n\nexport function deleteDrugInstructionAPI(id) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.delete(url);\n}","import React, { useState, useEffect } from 'react';\nimport { Row, Col, Button, Modal, Table, Form, Popconfirm, Space } from 'antd';\nimport { PlusOutlined, EditOutlined, DeleteOutlined } from '@ant-design/icons';\nimport DrugInstructionForm from 'forms/DrugInstructionForm/DrugInstructionForm';\nimport { getDrugInstructionsAPI, addDrugInstructionAPI, updateDrugInstructionAPI, deleteDrugInstructionAPI } from 'services/admin/drug-instruction.service';\nimport { formActions } from 'constant/formActions';\n\nconst DrugInstructionPage = () => {\n\n  const [modalVisible, setModalVisible] = useState(false);\n  const [drugInstructions, setDrugInstructions] = useState([]);\n  const [fetchingDrugInstructions, setFetchingDrugInstructions] = useState(false);\n  const [modalLoading, setModalLoading] = useState(false);\n  const [action, setAction] = useState(formActions.CREATE);\n  const [selectedInstruction, setSelectedInstruction] = useState(null);\n  const [drugInstructionForm] = Form.useForm();\n\n  const tableColumns = [\n    {\n      title: '#',\n      key: '#',\n      render: (text, record, index) => index + 1\n    },\n    {\n      title: 'Hướng dẫn sử dụng',\n      key: 'instruction',\n      dataIndex: 'instruction'\n    },\n    {\n      title: 'Hành động',\n      key: 'action',\n      render: (text, record, index) => (\n        <Space size={10}>\n          <Button icon={<EditOutlined />} onClick={() => handleEditClick(record)}></Button>\n          <Popconfirm\n            onConfirm={() => handleDelete(record)} title=\"Bạn có chắc muốn xóa không?\"\n            okText=\"Xóa\"\n            okType=\"danger\"\n            cancelText=\"Hủy bỏ\">\n            <Button icon={<DeleteOutlined />}></Button>\n          </Popconfirm>\n        </Space>\n      )\n    }\n  ]\n\n  function handleOpenModal() {\n    setAction(formActions.CREATE);\n    setModalVisible(true);\n  }\n\n  function handleCloseModal() {\n    setModalVisible(false);\n  }\n\n  async function getDrugInstructions() {\n    try {\n      setFetchingDrugInstructions(true);\n      const response = await getDrugInstructionsAPI();\n      setDrugInstructions(response.data);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setFetchingDrugInstructions(false);\n    }\n  }\n\n  async function handleFormSubmit() {\n    try {\n      setModalLoading(true);\n      const values = await drugInstructionForm.validateFields();\n      if (action === formActions.CREATE) {\n        await addDrugInstructionAPI(values.instruction);\n      }\n\n      if (action === formActions.UPDATE) {\n        await updateDrugInstructionAPI(selectedInstruction.id, values.instruction);\n      }\n\n      getDrugInstructions();\n\n      setModalVisible(false);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setModalLoading(false);\n    }\n  }\n\n  function handleEditClick(ins) {\n    setAction(formActions.UPDATE);\n    setSelectedInstruction(ins);\n    setModalVisible(true);\n  }\n\n  async function handleDelete(unit) {\n    try {\n      await deleteDrugInstructionAPI(unit.id);\n      getDrugInstructions();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  function afterClose() {\n    drugInstructionForm.resetFields();\n    setSelectedInstruction(null);\n  }\n\n  useEffect(() => {\n    getDrugInstructions();\n  }, []);\n\n  return (\n    <>\n      <Row justify=\"space-between\">\n        <Col><h1 className=\"text-xl\">Quản lý hướng dẫn sử dụng</h1></Col>\n        <Col>\n          <Button type=\"primary\" icon={<PlusOutlined />} onClick={handleOpenModal}>Tạo mới</Button>\n        </Col>\n      </Row>\n      <Table\n        rowKey=\"id\"\n        columns={tableColumns}\n        dataSource={drugInstructions}\n        loading={fetchingDrugInstructions}\n        pagination={false} />\n      <Modal\n        visible={modalVisible}\n        title={action === formActions.CREATE ? 'Thêm hướng dẫn sử dụng' : 'Cập nhật hướng dẫn sử dụng'}\n        onCancel={handleCloseModal}\n        confirmLoading={modalLoading}\n        destroyOnClose={true}\n        afterClose={afterClose}\n        onOk={handleFormSubmit}>\n        <DrugInstructionForm onFinish={handleFormSubmit} form={drugInstructionForm} defaultInstruction={selectedInstruction} />\n      </Modal>\n    </>\n  )\n}\n\nexport default DrugInstructionPage;","import React from 'react';\nimport { Form, Input } from 'antd';\n\nconst DiseaseCategoryForm = props => {\n  const { form, onFinish, defaultCategory } = props;\n\n  return (\n    <Form\n      layout=\"vertical\"\n      form={form}\n      onFinish={onFinish}>\n      <Form.Item label=\"Loại bệnh\" name=\"name\" initialValue={defaultCategory?.name}>\n        <Input autoFocus />\n      </Form.Item>\n    </Form>\n  )\n}\n\nexport default DiseaseCategoryForm;","import axios from 'axios';\n\nimport { API_URL } from \"constant/apiUrl\";\n\nconst endpointPrefix = `${API_URL}/admin/manage-disease-category`;\n\nexport function getDiseaseCategoryAPI(search = \"\") {\n  const url = `${endpointPrefix}/?search=${search}`;\n  return axios.get(url);\n}\n\nexport function addDiseaseCategoryAPI(name) {\n  const url = `${endpointPrefix}/`;\n  return axios.post(url, { name: name });\n}\n\nexport function updateDiseaseCategoryAPI(id, name) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.put(url, {\n    name: name\n  })\n}\n\nexport function deleteDiseaseCategoryAPI(id) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.delete(url);\n}","import React, { useState, useEffect } from 'react';\nimport { Row, Col, Button, Modal, Table, Form, Popconfirm, Space } from 'antd';\nimport { PlusOutlined, EditOutlined, DeleteOutlined } from '@ant-design/icons';\nimport DiseaseCategoryForm from 'forms/DiseaseCategoryForm/DiseaseCategoryForm';\nimport { addDiseaseCategoryAPI, deleteDiseaseCategoryAPI, getDiseaseCategoryAPI, updateDiseaseCategoryAPI } from 'services/admin/disease-category.service';\nimport { formActions } from 'constant/formActions';\n\nconst DiseaseCategoryPage = () => {\n\n  const [modalVisible, setModalVisible] = useState(false);\n  const [categories, setCategories] = useState([]);\n  const [fetchingCategories, setFetchingCategories] = useState(false);\n  const [modalLoading, setModalLoading] = useState(false);\n  const [action, setAction] = useState(formActions.CREATE);\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [diseaseCategoryForm] = Form.useForm();\n\n  const tableColumns = [\n    {\n      title: '#',\n      key: '#',\n      render: (text, record, index) => index + 1\n    },\n    {\n      title: 'Tên',\n      key: 'name',\n      dataIndex: 'name'\n    },\n    {\n      title: 'Hành động',\n      key: 'action',\n      render: (text, record, index) => (\n        <Space size={10}>\n          <Button icon={<EditOutlined />} onClick={() => handleEditClick(record)}></Button>\n          <Popconfirm\n            onConfirm={() => handleDelete(record)} title=\"Bạn có chắc muốn xóa không?\"\n            okText=\"Xóa\"\n            okType=\"danger\"\n            cancelText=\"Hủy bỏ\">\n            <Button icon={<DeleteOutlined />}></Button>\n          </Popconfirm>\n        </Space>\n      )\n    }\n  ]\n\n  function handleOpenModal() {\n    setAction(formActions.CREATE);\n    setModalVisible(true);\n  }\n\n  function handleCloseModal() {\n    setModalVisible(false);\n  }\n\n  async function getDiseaseCategories() {\n    try {\n      setFetchingCategories(true);\n      const response = await getDiseaseCategoryAPI();\n      setCategories(response.data);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setFetchingCategories(false);\n    }\n  }\n\n  async function handleFormSubmit() {\n    try {\n      setModalLoading(true);\n      const values = await diseaseCategoryForm.validateFields();\n      if (action === formActions.CREATE) {\n        await addDiseaseCategoryAPI(values.name);\n      }\n\n      if (action === formActions.UPDATE) {\n        await updateDiseaseCategoryAPI(selectedCategory.id, values.name);\n      }\n\n      getDiseaseCategories();\n\n      setModalVisible(false);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setModalLoading(false);\n    }\n  }\n\n  function handleEditClick(category) {\n    setAction(formActions.UPDATE);\n    setSelectedCategory(category);\n    setModalVisible(true);\n  }\n\n  async function handleDelete(unit) {\n    try {\n      await deleteDiseaseCategoryAPI(unit.id);\n      getDiseaseCategories();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  function afterClose() {\n    diseaseCategoryForm.resetFields();\n    setSelectedCategory(null);\n  }\n\n  useEffect(() => {\n    getDiseaseCategories();\n  }, []);\n\n  return (\n    <>\n      <Row justify=\"space-between\">\n        <Col><h1 className=\"text-xl\">Quản lý loại bệnh</h1></Col>\n        <Col>\n          <Button type=\"primary\" icon={<PlusOutlined />} onClick={handleOpenModal}>Tạo mới</Button>\n        </Col>\n      </Row>\n      <Table\n        rowKey=\"id\"\n        columns={tableColumns}\n        dataSource={categories}\n        \n        loading={fetchingCategories} />\n      <Modal\n        visible={modalVisible}\n        title={action === formActions.CREATE ? 'Thêm loại bệnh' : 'Cập nhật loại bệnh'}\n        onCancel={handleCloseModal}\n        confirmLoading={modalLoading}\n        destroyOnClose={true}\n        afterClose={afterClose}\n        onOk={handleFormSubmit}>\n        <DiseaseCategoryForm onFinish={handleFormSubmit} form={diseaseCategoryForm} defaultCategory={selectedCategory} />\n      </Modal>\n    </>\n  )\n}\n\nexport default DiseaseCategoryPage;","import axios from 'axios';\nimport { API_URL } from 'constant/apiUrl';\n\nconst endpointPrefix = `${API_URL}/admin/manage-disease`;\n\nexport function getDiseasesAPI() {\n  const url = `${endpointPrefix}/`;\n  return axios.get(url);\n}\n\nexport function getDiseaseDetailsAPI(id) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.get(url);\n}\n\nexport function addDiseaseAPI({ code, name, disease_category }) {\n  const url = `${endpointPrefix}/`;\n  return axios.post(url, {\n    code,\n    name,\n    disease_category\n  });\n}\n\nexport function updateDiseaseAPI(id, { code, name, disease_category }) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.put(url, {\n    code,\n    name,\n    disease_category\n  });\n}\n\nexport function deleteDiseaseAPI(id) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.delete(url);\n}","import React, { useState, useEffect } from 'react';\nimport { Form, Input, Select, Spin } from 'antd';\nimport { getDiseaseCategoryAPI } from 'services/admin/disease-category.service';\nimport { getDiseaseDetailsAPI } from 'services/admin/disease.service';\n\nconst DiseaseForm = props => {\n  const { form, onFinish, defaultDisease } = props;\n\n  const [categories, setCategories] = useState([]);\n  const [diseaseDetail, setDiseaseDetail] = useState(null);\n  const [catLoading, setCatLoading] = useState(false);\n  const [detailLoading, setDetailLoading] = useState(false);\n\n  async function getDiseaseCategories() {\n    try {\n      setCatLoading(true);\n      const catResponse = await getDiseaseCategoryAPI();\n      setCategories(catResponse.data);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setCatLoading(false);\n    }\n  }\n\n  async function getDiseaseDetail(id) {\n    try {\n      setDetailLoading(true);\n      const detailResponse = await getDiseaseDetailsAPI(id);\n      const diseaseDetail = detailResponse.data;\n      setDiseaseDetail(diseaseDetail);\n      setCategories(prevCats => {\n        const index = prevCats.findIndex(cat => cat.id === defaultDisease.disease_category);\n        if (index > -1) {\n          prevCats[index] = diseaseDetail.disease_category;\n          return prevCats;\n        } else {\n          return [...[diseaseDetail.disease_category], ...prevCats];\n        }\n      });\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setDetailLoading(false);\n    }\n  }\n\n  async function getData() {\n    if (defaultDisease?.id) {\n      await Promise.all([\n        getDiseaseDetail(defaultDisease.id),\n        getDiseaseCategories(),\n      ]);\n\n    } else {\n      await Promise.all([\n        getDiseaseCategories(),\n      ])\n    }\n\n  }\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  useEffect(() => {\n    if (diseaseDetail) {\n      form.setFieldsValue({\n        code: diseaseDetail.code,\n        name: diseaseDetail.name,\n        disease_category: diseaseDetail.disease_category.id,\n      });\n    }\n  }, [diseaseDetail, defaultDisease, form]);\n\n  return (\n    <Spin spinning={detailLoading}>\n      <Form\n        layout=\"vertical\"\n        form={form}\n        onFinish={onFinish}>\n        <Form.Item label=\"Mã bệnh\" name=\"code\" initialValue={diseaseDetail?.code}>\n          <Input />\n        </Form.Item>\n\n        <Form.Item label=\"Tên bệnh\" name=\"name\" initialValue={diseaseDetail?.name}>\n          <Input />\n        </Form.Item>\n\n        <Form.Item label=\"Loại bệnh\" name=\"disease_category\" initialValue={diseaseDetail?.disease_category.id}>\n          <Select loading={catLoading}>\n            {\n              categories.map(cat => (\n                <Select.Option key={cat.id} value={cat.id}>{cat.name}</Select.Option>\n              ))\n            }\n          </Select>\n        </Form.Item>\n      </Form>\n    </Spin>\n  )\n}\n\nexport default DiseaseForm;","import React, { useState, useEffect } from 'react';\nimport { Row, Col, Button, Modal, Table, Form, Popconfirm, Space } from 'antd';\nimport { PlusOutlined, EditOutlined, DeleteOutlined } from '@ant-design/icons';\nimport DiseaseForm from 'forms/DiseaseForm/DiseaseForm';\nimport { getDiseasesAPI, addDiseaseAPI, updateDiseaseAPI, deleteDiseaseAPI } from 'services/admin/disease.service';\nimport { formActions } from 'constant/formActions';\n\nconst DiseasePage = () => {\n\n  const [modalVisible, setModalVisible] = useState(false);\n  const [diseases, setDiseases] = useState();\n  const [fetchingDiseases, setFetchingDiseases] = useState(false);\n  const [modalLoading, setModalLoading] = useState(false);\n  const [action, setAction] = useState(formActions.CREATE);\n  const [selectedDisease, setSelectedDisease] = useState(null);\n  const [diseaseForm] = Form.useForm();\n\n  const tableColumns = [\n    {\n      title: '#',\n      key: '#',\n      render: (text, record, index) => index + 1\n    },\n    {\n      title: 'Mã bệnh',\n      key: 'code',\n      dataIndex: 'code'\n    },\n    {\n      title: 'Tên bệnh',\n      key: 'name',\n      dataIndex: 'name'\n    },\n    {\n      title: 'Hành động',\n      key: 'action',\n      render: (text, record, index) => (\n        <Space size={10}>\n          <Button icon={<EditOutlined />} onClick={() => handleEditClick(record)}></Button>\n          <Popconfirm\n            onConfirm={() => handleDelete(record)} title=\"Bạn có chắc muốn xóa không?\"\n            okText=\"Xóa\"\n            okType=\"danger\"\n            cancelText=\"Hủy bỏ\">\n            <Button icon={<DeleteOutlined />}></Button>\n          </Popconfirm>\n        </Space>\n      )\n    }\n  ]\n\n  function handleOpenModal() {\n    setAction(formActions.CREATE);\n    setModalVisible(true);\n  }\n\n  function handleCloseModal() {\n    setModalVisible(false);\n  }\n\n  async function getDiseases() {\n    try {\n      setFetchingDiseases(true);\n      const response = await getDiseasesAPI();\n      setDiseases(response.data.results);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setFetchingDiseases(false);\n    }\n  }\n\n  async function handleFormSubmit() {\n    try {\n      setModalLoading(true);\n      const values = await diseaseForm.validateFields();\n      const data = {\n        code: values.code,\n        name: values.name,\n        disease_category: values.disease_category,\n      }\n      if (action === formActions.CREATE) {\n        await addDiseaseAPI(data);\n      }\n\n      if (action === formActions.UPDATE) {\n        await updateDiseaseAPI(selectedDisease.id, data);\n      }\n\n      getDiseases();\n\n      setModalVisible(false);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setModalLoading(false);\n    }\n  }\n\n  function handleEditClick(disease) {\n    setAction(formActions.UPDATE);\n    setSelectedDisease(disease);\n    setModalVisible(true);\n  }\n\n  async function handleDelete(disease) {\n    try {\n      await deleteDiseaseAPI(disease.id);\n      getDiseases();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  function afterClose() {\n    diseaseForm.resetFields();\n    setSelectedDisease(null);\n  }\n\n  useEffect(() => {\n    getDiseases();\n  }, []);\n\n  return (\n    <>\n      <Row justify=\"space-between\">\n        <Col><h1 className=\"text-xl\">Quản lý bệnh</h1></Col>\n        <Col>\n          <Button type=\"primary\" icon={<PlusOutlined />} onClick={handleOpenModal}>Tạo mới</Button>\n        </Col>\n      </Row>\n      <Table\n        rowKey=\"id\"\n        columns={tableColumns}\n        dataSource={diseases}\n        loading={fetchingDiseases} />\n      <Modal\n        visible={modalVisible}\n        title={action === formActions.CREATE ? 'Thêm bệnh' : 'Cập nhật bệnh'}\n        onCancel={handleCloseModal}\n        confirmLoading={modalLoading}\n        destroyOnClose={true}\n        afterClose={afterClose}\n        onOk={handleFormSubmit}>\n        <DiseaseForm onFinish={handleFormSubmit} form={diseaseForm} defaultDisease={selectedDisease} />\n      </Modal>\n    </>\n  )\n}\n\nexport default DiseasePage;","import React from 'react';\n\nconst NotificationPage = () => {\n  return (\n    <div>Notification Page</div>\n  )\n}\n\nexport default NotificationPage;","import axios from 'axios';\n\nimport { API_URL } from \"constant/apiUrl\";\n\nconst endpointPrefix = `${API_URL}/user/room`;\n\nexport function getRoomAPI() {\n  const url = `${endpointPrefix}/`;\n  return axios.get(url);\n}\n\nexport function getRoomDetailsAPI(roomId) {\n  const url = `${endpointPrefix}/${roomId}/`;\n  return axios.get(url);\n}","import axios from 'axios';\n\nimport { API_URL } from \"constant/apiUrl\";\n\nconst endpointPrefix = `${API_URL}/admin/manage-room`;\n\nexport function getRoomAPI() {\n  const url = `${endpointPrefix}/`;\n  return axios.get(url);\n}\n\nexport function addRoomAPI({ number, name }) {\n  const url = `${endpointPrefix}/`;\n  return axios.post(url, { number: Number(number), name });\n}\n\nexport function updateRoomAPI(id, { name, number }) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.put(url, {\n    number: Number(number),\n    name\n  })\n}\n\nexport function deleteRoomAPI(id) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.delete(url);\n}","import axios from 'axios';\nimport { API_URL } from 'constant/apiUrl';\n\nconst endpointPrefix = `${API_URL}/user/visit`;\n\nexport function getVisitDataAPI() {\n  const url = `${endpointPrefix}/`;\n  return axios.get(url);\n}\n\nexport function createVisitAPI({ patientId, roomId }) {\n  const url = `${endpointPrefix}/`;\n  return axios.post(url, {\n    room_id: roomId,\n    patient_id: patientId\n  })\n}","import axios from 'axios';\nimport { API_URL } from 'constant/apiUrl';\n\nconst endpointPrefix = `${API_URL}/admin/manage-visit`;\n\nexport function getVisitDataAPI() {\n  const url = `${endpointPrefix}/`;\n  return axios.get(url);\n}\n\nexport function createVisitAPI({ patientId, roomId }) {\n  const url = `${endpointPrefix}/`;\n  return axios.post(url, {\n    room_id: roomId,\n    patient_id: patientId\n  })\n}","export function removeDuplicates(myArr, prop) {\n  return myArr.filter((obj, pos, arr) => {\n    return arr.map(mapObj => mapObj[prop]).indexOf(obj[prop]) === pos;\n  });\n}","import React, { useState, useEffect } from 'react';\nimport { Row, Col, Select, Empty, Table, Button } from 'antd';\nimport { getRoomAPI } from 'services/user/room.service';\nimport { getRoomAPI as adminGetRoomAPI } from 'services/admin/room.service';\nimport { getVisitDataAPI } from 'services/user/visit.service';\nimport { getVisitDataAPI as adminGetVisitDataAPI } from 'services/admin/visit.service';\nimport { connect } from 'react-redux';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { removeDuplicates } from 'utils/array';\n\n\nconst VisitPage = props => {\n  const user = props.user;\n  const { pathname } = useLocation();\n\n  const history = useHistory();\n  const [rooms, setRooms] = useState([]);\n  const [roomLoading, setRoomLoading] = useState(false);\n  const [visitData, setVisitData] = useState(null);\n  const [visitLoading, setVisitLoading] = useState(false);\n\n  const [selectedRoom, setSelectedRoom] = useState(\"\");\n  const [visiting, setVisiting] = useState([]);\n\n  const visitList = visitData?.results.filter(visit => {\n    const createdAt = new Date(visit.created_at);\n    const today = new Date();\n    const isToday = createdAt.getDate() === today.getDate() &&\n      createdAt.getMonth() === today.getMonth() &&\n      createdAt.getFullYear() === today.getFullYear();\n    return (isToday && visit.room.id === selectedRoom)\n  });\n\n  const tableColumns = [\n    {\n      title: '#',\n      key: '#',\n      render: (_, __, index) => index + 1\n    },\n    {\n      title: 'Họ và tên',\n      key: 'fullname',\n      render: (_, record) => record.patient.first_name + \" \" + record.patient.last_name\n    },\n    {\n      title: 'Giới tính',\n      key: 'gender',\n      render: (_, record) => record.patient.gender\n    },\n    {\n      ken: 'action',\n      render: (_, record) => <Button onClick={() => handlePatientClick(record)}>Khám bệnh</Button>\n    }\n  ]\n\n  async function getRooms() {\n    try {\n      setRoomLoading(true);\n      let roomResponse;\n      if (user.role.name === \"admin\") {\n        roomResponse = await adminGetRoomAPI();\n        console.log(\"admin\");\n      } else if (user.role.name === \"physician\" || user?.role?.name === \"receptionist\") {\n        console.log(\"user\");\n        roomResponse = await getRoomAPI();\n      }\n      setRooms(roomResponse.data);\n\n      const prevSelected = localStorage.getItem(\"selectedRoom\");\n      setSelectedRoom(prevSelected);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setRoomLoading(false);\n    }\n  }\n\n  async function getVisitData() {\n    try {\n      let visitDataResponse;\n      setVisitLoading(true);\n      if (user.role.name === \"admin\") {\n        visitDataResponse = await adminGetVisitDataAPI();\n      } else {\n        visitDataResponse = await getVisitDataAPI()\n      }\n      const visitData = visitDataResponse.data;\n      setVisitData(visitData);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setVisitLoading(false);\n    }\n  }\n\n  async function getInitialData() {\n    await Promise.all([\n      getVisitData(),\n      getRooms(),\n    ]);\n  }\n\n  useEffect(() => {\n    if (user) {\n      getInitialData();\n    }\n\n    const localVisitingStr = localStorage.getItem(\"visiting\");\n    const localVisitingObj = JSON.parse(localVisitingStr);\n    if (localVisitingObj) {\n      setVisiting(localVisitingObj);\n    }\n  }, [user]);\n\n  useEffect(() => {\n    if (selectedRoom) {\n      localStorage.setItem(\"selectedRoom\", selectedRoom);\n    }\n  }, [selectedRoom, visiting])\n\n  function handlePatientClick(visit) {\n    setVisiting(prev => {\n      const patient = visit.patient;\n      const emrObj = {\n        id: visit.id,\n        patient: {\n          id: patient.id,\n          first_name: patient.first_name,\n          last_name: patient.last_name,\n          gender: patient.gender,\n          role: patient.role.name,\n          avatar: patient.avatar,\n          DOB: patient.DOB\n        },\n        physician: {\n          id: user.id,\n          first_name: user.first_name,\n          last_name: user.last_name,\n          gender: user.gender,\n          role: user.role.name,\n          avatar: user.avatar\n        },\n        room: visit.room.name,\n        livingFunctions: null,\n        emr_diseases: null,\n        emr_services: null,\n        emr_drugs: null,\n        images: null,\n        created_at: visit.created_at,\n        symptom: \"\",\n      }\n      const newArr = [...prev, ...[emrObj]];\n      const unique = removeDuplicates(newArr, \"id\");\n      localStorage.setItem(\"visiting\", JSON.stringify(unique));\n      return unique;\n    });\n    history.push(`${pathname}/examination?visit-id=${visit.id}`);\n  }\n\n  function handleChangeRoom(value) {\n    setSelectedRoom(value);\n  }\n\n  return (\n    <>\n      <Row className=\"flex-no-wrap\">\n        <Col style={{ width: 350 }} className=\"flex-shrink-0\">\n          <div className=\"mb-5\">\n            <h2 className=\"text-sm\">Phòng trực</h2>\n            <Select loading={roomLoading} style={{ width: '100%' }} value={selectedRoom} onChange={handleChangeRoom}>\n              {\n                rooms.map(room => (\n                  <Select.Option key={room.id} value={room.id}>{room.name}</Select.Option>\n                ))\n              }\n            </Select>\n          </div>\n\n\n        </Col>\n        <Col className=\"ml-3\" flex={1}>\n          <h2 className=\"text-sm\">Bệnh nhân đang chờ khám</h2>\n          {\n            !selectedRoom ?\n              <Empty description=\"Vui lòng chọn phòng\" />\n              :\n              visitList?.length > 0 ?\n                <Table dataSource={visitList} columns={tableColumns} rowKey=\"id\" loading={visitLoading} />\n                : <Empty description=\"Không có dữ liệu\" />\n          }\n        </Col>\n      </Row>\n    </>\n  )\n}\n\nconst mapStateToProps = state => ({\n  user: state.userState.user\n})\n\nexport default connect(mapStateToProps)(VisitPage);","import React from 'react';\n\nconst PatientPage = () => {\n  return (\n    <div>Patient page</div>\n  )\n}\n\nexport default PatientPage; ","import React from 'react';\n\nconst AppointmentPage = () => {\n  return (\n    <div>Appointment Page</div>\n  )\n}\n\nexport default AppointmentPage;","import axios from 'axios';\n\nimport { API_URL } from \"constant/apiUrl\";\n\nconst endpointPrefix = `${API_URL}/admin/manage-service`;\n\nexport function getServicesAPI(search = \"\") {\n  const url = `${endpointPrefix}/?search=${search}`;\n  return axios.get(url);\n}\n\nexport function getServiceDetailsAPI(id) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.get(url);\n}\n\nexport function addServiceAPI({ name, price }) {\n  const url = `${endpointPrefix}/`;\n  return axios.post(url, { name, price: Number(price) });\n}\n\nexport function updateServiceAPI(id, { name, price }) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.put(url, {\n    name,\n    price: Number(price)\n  })\n}\n\nexport function deleteServiceAPI(id) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.delete(url);\n}","import React, { useState, useEffect } from 'react';\nimport { Form, Input, Spin } from 'antd';\nimport { getServiceDetailsAPI } from 'services/admin/medical-service.service';\n\nconst ServiceForm = props => {\n  const { form, onFinish, defaultService } = props;\n\n  const [serviceDetail, setServiceDetail] = useState(null);\n  const [detailLoading, setDetailLoading] = useState(false);\n\n  async function getServiceDetail(id) {\n    try {\n      setDetailLoading(true);\n      const detailResponse = await getServiceDetailsAPI(id);\n      const serviceDetail = detailResponse.data;\n      setServiceDetail(serviceDetail);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setDetailLoading(false);\n    }\n  }\n\n  async function getData() {\n    if (defaultService?.id) {\n      await Promise.all([\n        getServiceDetail(defaultService.id),\n      ]);\n    }\n  }\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  useEffect(() => {\n    if (serviceDetail) {\n      form.setFieldsValue({\n        name: serviceDetail.name,\n        price: serviceDetail.price,\n      });\n    }\n  }, [serviceDetail, defaultService, form]);\n\n  return (\n    <Spin spinning={detailLoading}>\n      <Form\n        layout=\"vertical\"\n        form={form}\n        onFinish={onFinish}>\n\n        <Form.Item label=\"Tên dịch vụ\" name=\"name\" initialValue={serviceDetail?.name}>\n          <Input />\n        </Form.Item>\n\n        <Form.Item label=\"Giá\" name=\"price\" initialValue={serviceDetail?.price}>\n          <Input type=\"number\" suffix=\"VNĐ\" />\n        </Form.Item>\n      </Form>\n    </Spin>\n  )\n}\n\nexport default ServiceForm;","import React, { useState, useEffect } from 'react';\nimport { Row, Col, Button, Modal, Table, Form, Popconfirm, Space } from 'antd';\nimport { PlusOutlined, EditOutlined, DeleteOutlined } from '@ant-design/icons';\nimport ServiceForm from 'forms/ServiceForm/ServiceForm';\nimport { getServicesAPI, addServiceAPI, updateServiceAPI, deleteServiceAPI } from 'services/admin/medical-service.service';\nimport { formActions } from 'constant/formActions';\nimport NumberFormat from 'react-number-format';\n\nconst ServicePage = () => {\n\n  const [modalVisible, setModalVisible] = useState(false);\n  const [services, setServices] = useState();\n  const [fetchingServices, setFetchingServices] = useState(false);\n  const [modalLoading, setModalLoading] = useState(false);\n  const [action, setAction] = useState(formActions.CREATE);\n  const [selectedService, setSelectedService] = useState(null);\n  const [serviceForm] = Form.useForm();\n\n  const tableColumns = [\n    {\n      title: '#',\n      key: '#',\n      render: (text, record, index) => index + 1\n    },\n    {\n      title: 'Tên dịch vụ',\n      key: 'name',\n      dataIndex: 'name'\n    },\n    {\n      title: 'Giá',\n      key: 'price',\n      dataIndex: 'price',\n      render: (text, record, index) => (<NumberFormat thousandSeparator=\" \" suffix=\" VNĐ\" value={text} displayType=\"text\" />)\n    },\n    {\n      title: 'Hành động',\n      key: 'action',\n      render: (text, record, index) => (\n        <Space size={10}>\n          <Button icon={<EditOutlined />} onClick={() => handleEditClick(record)}></Button>\n          <Popconfirm\n            onConfirm={() => handleDelete(record)} title=\"Bạn có chắc muốn xóa không?\"\n            okText=\"Xóa\"\n            okType=\"danger\"\n            cancelText=\"Hủy bỏ\">\n            <Button icon={<DeleteOutlined />}></Button>\n          </Popconfirm>\n        </Space>\n      )\n    }\n  ]\n\n  function handleOpenModal() {\n    setAction(formActions.CREATE);\n    setModalVisible(true);\n  }\n\n  function handleCloseModal() {\n    setModalVisible(false);\n  }\n\n  async function getServices() {\n    try {\n      setFetchingServices(true);\n      const response = await getServicesAPI();\n      setServices(response.data);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setFetchingServices(false);\n    }\n  }\n\n  async function handleFormSubmit() {\n    try {\n      setModalLoading(true);\n      const values = await serviceForm.validateFields();\n      const data = {\n        name: values.name,\n        price: values.price,\n      }\n      if (action === formActions.CREATE) {\n        await addServiceAPI(data);\n      }\n\n      if (action === formActions.UPDATE) {\n        await updateServiceAPI(selectedService.id, data);\n      }\n\n      getServices();\n\n      setModalVisible(false);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setModalLoading(false);\n    }\n  }\n\n  function handleEditClick(service) {\n    setAction(formActions.UPDATE);\n    setSelectedService(service);\n    setModalVisible(true);\n  }\n\n  async function handleDelete(service) {\n    try {\n      await deleteServiceAPI(service.id);\n      getServices();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  function afterClose() {\n    serviceForm.resetFields();\n    setSelectedService(null);\n  }\n\n  useEffect(() => {\n    getServices();\n  }, []);\n\n  return (\n    <>\n      <Row justify=\"space-between\">\n        <Col><h1 className=\"text-xl\">Quản lý thuốc</h1></Col>\n        <Col>\n          <Button type=\"primary\" icon={<PlusOutlined />} onClick={handleOpenModal}>Tạo mới</Button>\n        </Col>\n      </Row>\n      <Table\n        rowKey=\"id\"\n        columns={tableColumns}\n        dataSource={services}\n        loading={fetchingServices} />\n      <Modal\n        visible={modalVisible}\n        title={action === formActions.CREATE ? 'Thêm thuốc' : 'Cập nhật thuốc'}\n        onCancel={handleCloseModal}\n        confirmLoading={modalLoading}\n        destroyOnClose={true}\n        afterClose={afterClose}\n        onOk={handleFormSubmit}>\n        <ServiceForm onFinish={handleFormSubmit} form={serviceForm} defaultService={selectedService} />\n      </Modal>\n    </>\n  )\n}\n\nexport default ServicePage;","import axios from 'axios';\nimport { API_URL } from 'constant/apiUrl';\n\nconst endpointPrefix = `${API_URL}/admin/manage-working-hours`;\n\nexport function getWorkingHoursAPI() {\n  const url = `${endpointPrefix}/`;\n  return axios.get(url);\n}\n\nexport function updateWorkingHourAPI(id, { weekday, isClosed }) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.put(url, {\n    weekday: weekday,\n    is_closed: isClosed\n  })\n}","import React, { useState, useEffect } from 'react';\nimport { Table, Switch } from 'antd';\nimport { getWorkingHoursAPI, updateWorkingHourAPI } from 'services/admin/working-hours.service';\n\nconst WorkingHourPage = () => {\n\n  const [workingHours, setWorkingHours] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const tableColumns = [\n    {\n      title: 'Ngày',\n      key: 'weekday',\n      dataIndex: 'weekday'\n    },\n    {\n      title: 'Đóng cửa',\n      key: 'is_closed',\n      render: (text, record) => (\n        <Switch\n          checked={record.is_closed}\n          onChange={() => handleWorkingHourChange(record)} />\n      )\n    }\n  ]\n\n  async function getWorkingHours() {\n    try {\n      setLoading(true);\n      const workingHoursResponse = await getWorkingHoursAPI();\n      setWorkingHours(workingHoursResponse.data.sort((a, b) => {\n        if (a.id < b.id) {\n          return -1\n        } else {\n          return 1\n        }\n      }));\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  async function handleWorkingHourChange(wh) {\n    try {\n      setLoading(true);\n      await updateWorkingHourAPI(wh.id, {\n        weekday: wh.weekday,\n        isClosed: !wh.is_closed\n      });\n      getWorkingHours();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  useEffect(() => {\n    getWorkingHours();\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"text-xl\">Quản lý giờ làm việc</h1>\n      <div style={{width: 400}}>\n      <Table\n        rowKey=\"weekday\"\n        dataSource={workingHours}\n        columns={tableColumns}\n        loading={loading}\n        pagination={false} />\n      </div>\n      \n    </>\n  )\n}\n\nexport default WorkingHourPage;","import React from 'react';\nimport { Form, Input } from 'antd';\n\nconst RoomForm = props => {\n  const { form, onFinish, defaultRoom } = props;\n\n  return (\n    <Form\n      layout=\"vertical\"\n      form={form}\n      onFinish={onFinish}>\n      <Form.Item label=\"Số phòng\" name=\"number\" initialValue={defaultRoom?.number}>\n        <Input type=\"number\" autoFocus />\n      </Form.Item>\n      <Form.Item label=\"Tên phòng\" name=\"name\" initialValue={defaultRoom?.name}>\n        <Input />\n      </Form.Item>\n    </Form>\n  )\n}\n\nexport default RoomForm;","import React, { useState, useEffect } from 'react';\nimport { Row, Col, Button, Modal, Table, Form, Popconfirm, Space } from 'antd';\nimport { PlusOutlined, EditOutlined, DeleteOutlined } from '@ant-design/icons';\nimport RoomForm from 'forms/RoomForm/RoomForm';\nimport { addRoomAPI, deleteRoomAPI, getRoomAPI, updateRoomAPI } from 'services/admin/room.service';\nimport { formActions } from 'constant/formActions';\n\nconst RoomPage = () => {\n\n  const [modalVisible, setModalVisible] = useState(false);\n  const [rooms, setCategories] = useState([]);\n  const [fetchingCategories, setFetchingCategories] = useState(false);\n  const [modalLoading, setModalLoading] = useState(false);\n  const [action, setAction] = useState(formActions.CREATE);\n  const [selectedRoom, setSelectedRoom] = useState(null);\n  const [roomForm] = Form.useForm();\n\n  const tableColumns = [\n    {\n      title: '#',\n      key: '#',\n      render: (text, record, index) => index + 1\n    },\n    {\n      title: 'Số phòng',\n      key: 'number',\n      dataIndex: 'number'\n    },\n    {\n      title: 'Tên',\n      key: 'name',\n      dataIndex: 'name'\n    },\n    {\n      title: 'Hành động',\n      key: 'action',\n      render: (text, record, index) => (\n        <Space size={10}>\n          <Button icon={<EditOutlined />} onClick={() => handleEditClick(record)}></Button>\n          <Popconfirm\n            onConfirm={() => handleDelete(record)} title=\"Bạn có chắc muốn xóa không?\"\n            okText=\"Xóa\"\n            okType=\"danger\"\n            cancelText=\"Hủy bỏ\">\n            <Button icon={<DeleteOutlined />}></Button>\n          </Popconfirm>\n        </Space>\n      )\n    }\n  ]\n\n  function handleOpenModal() {\n    setAction(formActions.CREATE);\n    setModalVisible(true);\n  }\n\n  function handleCloseModal() {\n    setModalVisible(false);\n  }\n\n  async function getRooms() {\n    try {\n      setFetchingCategories(true);\n      const response = await getRoomAPI();\n      setCategories(response.data);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setFetchingCategories(false);\n    }\n  }\n\n  async function handleFormSubmit() {\n    try {\n      setModalLoading(true);\n      const values = await roomForm.validateFields();\n      if (action === formActions.CREATE) {\n        await addRoomAPI(values);\n      }\n\n      if (action === formActions.UPDATE) {\n        await updateRoomAPI(selectedRoom.id, values);\n      }\n\n      getRooms();\n\n      setModalVisible(false);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setModalLoading(false);\n    }\n  }\n\n  function handleEditClick(room) {\n    setAction(formActions.UPDATE);\n    setSelectedRoom(room);\n    setModalVisible(true);\n  }\n\n  async function handleDelete(unit) {\n    try {\n      await deleteRoomAPI(unit.id);\n      getRooms();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  function afterClose() {\n    roomForm.resetFields();\n    setSelectedRoom(null);\n  }\n\n  useEffect(() => {\n    getRooms();\n  }, []);\n\n  return (\n    <>\n      <Row justify=\"space-between\">\n        <Col><h1 className=\"text-xl\">Quản lý phòng</h1></Col>\n        <Col>\n          <Button type=\"primary\" icon={<PlusOutlined />} onClick={handleOpenModal}>Tạo mới</Button>\n        </Col>\n      </Row>\n      <Table\n        rowKey=\"id\"\n        columns={tableColumns}\n        dataSource={rooms}\n        \n        loading={fetchingCategories} />\n      <Modal\n        visible={modalVisible}\n        title={action === formActions.CREATE ? 'Thêm phòng' : 'Cập nhật phòng'}\n        onCancel={handleCloseModal}\n        confirmLoading={modalLoading}\n        destroyOnClose={true}\n        afterClose={afterClose}\n        onOk={handleFormSubmit}>\n        <RoomForm onFinish={handleFormSubmit} form={roomForm} defaultRoom={selectedRoom} />\n      </Modal>\n    </>\n  )\n}\n\nexport default RoomPage;","import axios from 'axios';\nimport { API_URL } from 'constant/apiUrl';\nimport qs from 'qs';\n\nconst endpointPrefix = `${API_URL}/admin/manage-user`;\n\nexport function getUsersAPI(query) {\n  const url = `${endpointPrefix}/?${qs.stringify(query)}`;\n  return axios.get(url);\n}\n\nexport function getUserDetailsAPI(id) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.get(url);\n}\n\nexport function addUserAPI({ email, password, first_name, last_name, phone, DOB, gender, role_id }) {\n  const url = `${endpointPrefix}/`;\n  return axios.post(url, {\n    email,\n    password,\n    first_name,\n    last_name,\n    phone,\n    DOB: DOB.format('yyyy-MM-DD'),\n    gender,\n    role_id\n  });\n}\n\nexport function updateUserAPI(id, { email, password, first_name, last_name, phone, DOB, gender, role_id }) {\n  const url = `${endpointPrefix}/${id}/`;\n  if (password) {\n    return axios.put(url, {\n      email,\n      password,\n      first_name,\n      last_name,\n      phone,\n      DOB: DOB.format('yyyy-MM-DD'),\n      gender,\n      role_id\n    })\n  }\n\n  return axios.put(url, {\n    email,\n    first_name,\n    last_name,\n    phone,\n    DOB: DOB.format('yyyy-MM-DD'),\n    gender,\n    role_id\n  })\n}\n\nexport function deleteUserAPI(id) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.delete(url);\n}\n\nexport function blockUserAPI(userId) {\n  const url = `${endpointPrefix}/${userId}/block/`;\n  return axios.get(url);\n}\n\nexport function unblockUserAPI(userId) {\n  const url = `${endpointPrefix}/${userId}/unblock/`;\n  return axios.get(url);\n}","export const ROLES = {\n  \"1\": {\n    name: \"admin\",\n    display: \"Quản trị viên\"\n  },\n  \"2\": {\n    name: \"physician\",\n    display: \"Bác sĩ\"\n  },\n  \"3\": {\n    name: \"receptionist\",\n    display: \"Lễ tân\"\n  },\n  \"4\": {\n    name: \"patient\",\n    display: \"Bệnh nhân\"\n  }\n}\n\nexport const ROLES_LIST = [1, 2, 3, 4];","import React, { useState, useEffect } from 'react';\nimport { Form, Input, Select, Spin, Row, Col, DatePicker, Radio } from 'antd';\nimport { getUserDetailsAPI } from 'services/admin/user.service';\nimport { ROLES, ROLES_LIST } from 'constant/roles';\nimport moment from 'moment';\n\nconst UserForm = props => {\n  const { form, onFinish, defaultUser } = props;\n  const [userDetail, setUserDetail] = useState(null);\n  const [detailLoading, setDetailLoading] = useState(false);\n\n  async function getUserDetail(id) {\n    try {\n      setDetailLoading(true);\n      const detailResponse = await getUserDetailsAPI(id);\n      const userDetail = detailResponse.data;\n      setUserDetail(userDetail);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setDetailLoading(false);\n    }\n  }\n\n  async function getData() {\n    if (defaultUser?.id) {\n      await Promise.all([\n        getUserDetail(defaultUser.id),\n      ]);\n    }\n  }\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  useEffect(() => {\n    if (userDetail) {\n      form.setFieldsValue({\n        email: userDetail.email,\n        first_name: userDetail.first_name,\n        last_name: userDetail.last_name,\n        phone: userDetail.phone,\n        DOB: moment(userDetail.DOB),\n        gender: userDetail.gender,\n        role_id: userDetail.role.id\n      });\n    }\n  }, [userDetail, defaultUser, form]);\n\n  return (\n    <Spin spinning={detailLoading}>\n      <Form\n        layout=\"vertical\"\n        form={form}\n        autoComplete=\"off\"\n        onFinish={onFinish}>\n        <Form.Item label=\"Email\" name=\"email\" initialValue={userDetail?.email} rules={[\n          {\n            required: true,\n            message: \"Vui lòng điền vào trường này\"\n          }\n        ]}>\n          <Input type=\"email\" />\n        </Form.Item>\n\n        <Form.Item label=\"Mật khẩu\" name=\"password\" rules={[\n          {\n            required: !userDetail?.id,\n            message: \"Vui lòng điền vào trường này\"\n          }\n        ]}>\n          <Input.Password />\n        </Form.Item>\n\n        <Row>\n          <Col flex={1}>\n            <Form.Item label=\"Họ\" name=\"first_name\" rules={[\n              {\n                required: true,\n                message: \"Vui lòng điền vào trường này\"\n              }\n            ]}>\n              <Input />\n            </Form.Item>\n          </Col>\n          <div style={{ width: 20 }}></div>\n          <Col flex={1}>\n            <Form.Item label=\"Tên\" name=\"last_name\" rules={[\n              {\n                required: true,\n                message: \"Vui lòng điền vào trường này\"\n              }\n            ]}>\n              <Input />\n            </Form.Item>\n          </Col>\n        </Row>\n\n        <Form.Item label=\"Điện thoại\" name=\"phone\" initialValue={userDetail?.phone} rules={[\n          {\n            required: true,\n            message: \"Vui lòng điền vào trường này\"\n          }\n        ]}>\n          <Input type=\"tel\" />\n        </Form.Item>\n\n        <Row>\n          <Col>\n            <Form.Item label=\"Ngày sinh\" name=\"DOB\" rules={[\n              {\n                required: true,\n                message: \"Vui lòng chọn ngày sinh\"\n              }\n            ]}>\n              <DatePicker placeholder=\"Chọn ngày\" />\n            </Form.Item>\n          </Col>\n          <div style={{ width: 20 }}></div>\n          <Col flex={1}>\n            <Form.Item label=\"Giới tính\" name=\"gender\" rules={[\n              {\n                required: true,\n                message: \"Vui lòng chọn một giá trị\"\n              }\n            ]}>\n              <Radio.Group>\n                <Radio value=\"Nam\">Nam</Radio>\n                <Radio value=\"Nữ\">Nữ</Radio>\n                <Radio value=\"Khác\">Khác</Radio>\n              </Radio.Group>\n            </Form.Item>\n          </Col>\n        </Row>\n\n\n        <Form.Item label=\"Vai trò\" name=\"role_id\" initialValue={userDetail?.role_id} rules={[\n          {\n            required: true,\n            message: \"Vui lòng chọn vai trò\"\n          }\n        ]}>\n          <Select>\n            {\n              ROLES_LIST.map(role_id => (\n                <Select.Option key={role_id} value={role_id}>{ROLES[role_id].display}</Select.Option>\n              ))\n            }\n          </Select>\n        </Form.Item>\n      </Form>\n    </Spin>\n  )\n}\n\nexport default UserForm;","import React from 'react';\nimport classnames from 'classnames';\nimport styles from './Circle.module.scss';\n\nconst Circle = props => {\n\n  const classes = classnames(\n    styles.circle,\n    { [styles['circle--success']]: props.color === 'success' }\n  )\n\n  return (\n    <div className={classes}></div>\n  )\n}\n\nexport default Circle;","import React, { useState, useEffect } from 'react';\nimport { Row, Col, Button, Modal, Table, Form, Popconfirm, Space } from 'antd';\nimport { PlusOutlined, LockOutlined, UnlockOutlined, EditOutlined, DeleteOutlined, EyeOutlined } from '@ant-design/icons';\nimport UserForm from 'forms/UserForm/UserForm';\nimport { getUsersAPI, addUserAPI, updateUserAPI, deleteUserAPI, blockUserAPI, unblockUserAPI } from 'services/admin/user.service';\nimport { formActions } from 'constant/formActions';\nimport NumberFormat from 'react-number-format';\nimport { ROLES } from 'constant/roles';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport Circle from 'components/Circle/Circle';\n\nconst AdminAccountPage = () => {\n\n  const history = useHistory();\n  const { pathname, search } = useLocation();\n  const urlSearchParams = new URLSearchParams(search);\n  const currentPageOnURL = Number(urlSearchParams.get('page'));\n  const [page, setPage] = useState(currentPageOnURL || 1);\n  const [modalVisible, setModalVisible] = useState(false);\n  const [users, setUsers] = useState();\n  const [fetchingUsers, setFetchingUsers] = useState(false);\n  const [modalLoading, setModalLoading] = useState(false);\n  const [action, setAction] = useState(formActions.CREATE);\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [userForm] = Form.useForm();\n\n  const tableColumns = [\n    {\n      title: '#',\n      key: '#',\n      render: (text, record, index) => index + 1\n    },\n    {\n      title: 'Họ và tên',\n      key: 'fullname',\n      render: (text, record) => record.first_name + \" \" + record.last_name\n    },\n    {\n      title: 'Email',\n      key: 'email',\n      dataIndex: 'email',\n      render: (text, record) => (\n        <Space>\n          <Circle color={record.is_verified_email ? 'success' : ''} />\n          <span>{record.email}</span>\n        </Space>\n      )\n    },\n    {\n      title: 'Điện thoại',\n      key: 'phone',\n      dataIndex: 'phone',\n      render: (text, record) => (\n        <Space>\n          <Circle color={record.is_verified_phone ? 'success' : ''} />\n          <span>{record.phone}</span>\n        </Space>\n      )\n    },\n    {\n      title: 'Vai trò',\n      key: 'role',\n      render: (text, record) => <span>{ROLES[record.role.id].display}</span>\n    },\n    {\n      title: 'Hành động', key: 'action', render: (text, record) => {\n        return (\n          <Space size={10}>\n            <Button icon={<EyeOutlined />} onClick={() => handleViewClick(record)}></Button>\n            <Button icon={<EditOutlined />} onClick={() => handleEditClick(record)}></Button>\n            <Popconfirm\n              onConfirm={() => handleDelete(record)}\n              title=\"Bạn có chắc muốn xóa không?\"\n              okText=\"Xóa\"\n              okType=\"danger\"\n              cancelText=\"Hủy bỏ\">\n              <Button icon={<DeleteOutlined />}></Button>\n            </Popconfirm>\n            {\n              <Popconfirm\n                onConfirm={() => handleBlockUnblock(record)}\n                title={`Bạn có chắc muốn ${record.is_active ? 'khóa' : 'mở khóa'} tài khoản này không?`}\n                okText={record.is_active ? \"Khóa\" : \"Mở khóa\"}\n                okType={record.is_active ? \"danger\" : \"primary\"}\n                cancelText=\"Hủy bỏ\">\n                {\n                  record.is_active ?\n                    <Button danger type=\"link\" icon={<LockOutlined />}>Khóa</Button>\n                    :\n                    <Button type=\"link\" icon={<UnlockOutlined />}>Mở khóa</Button>\n                }\n              </Popconfirm>\n            }\n          </Space>\n        )\n      }\n    }\n  ]\n\n  function handleOpenModal() {\n    setAction(formActions.CREATE);\n    setModalVisible(true);\n  }\n\n  function handleCloseModal() {\n    setModalVisible(false);\n  }\n\n  async function getUsers(page) {\n    try {\n      setFetchingUsers(true);\n      const response = await getUsersAPI({ page: page });\n      setUsers(response.data);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setFetchingUsers(false);\n    }\n  }\n\n  async function handleFormSubmit() {\n    try {\n      setModalLoading(true);\n      const values = await userForm.validateFields();\n      if (action === formActions.CREATE) {\n        await addUserAPI(values);\n      }\n\n      if (action === formActions.UPDATE) {\n        if (values.password.length === 0) {\n          delete values.password;\n        }\n        await updateUserAPI(selectedUser.id, values);\n      }\n\n      getUsers(page);\n\n      setModalVisible(false);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setModalLoading(false);\n    }\n  }\n\n  async function handleBlockUnblock(user) {\n    try {\n      setFetchingUsers(true);\n      if (user.is_active) {\n        await blockUserAPI(user.id);\n      } else {\n        await unblockUserAPI(user.id);\n      }\n      getUsers();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  function handleViewClick(user) {\n\n  }\n\n  function handleEditClick(user) {\n    setAction(formActions.UPDATE);\n    setSelectedUser(user);\n    setModalVisible(true);\n  }\n\n  async function handleDelete(user) {\n    try {\n      await deleteUserAPI(user.id);\n      getUsers(page);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  function afterClose() {\n    userForm.resetFields();\n    setSelectedUser(null);\n  }\n\n  function handlePaginationChange(page) {\n    getUsers(page);\n    setPage(page);\n    history.push({\n      pathname: pathname,\n      search: `page=${page}`\n    })\n  }\n\n  useEffect(() => {\n    getUsers(page);\n  }, []);\n\n  return (\n    <>\n      <Row justify=\"space-between\">\n        <Col><h1 className=\"text-xl\">Quản lý tài khoản</h1></Col>\n        <Col>\n          <Button type=\"primary\" icon={<PlusOutlined />} onClick={handleOpenModal}>Tạo mới</Button>\n        </Col>\n      </Row>\n      <Table\n        rowKey=\"id\"\n        columns={tableColumns}\n        dataSource={users?.results}\n        pagination={{\n          defaultCurrent: page,\n          current: page,\n          pageSize: 10,\n          total: users?.count,\n          onChange: handlePaginationChange\n        }}\n        loading={fetchingUsers} />\n      <Modal\n        visible={modalVisible}\n        title={action === formActions.CREATE ? 'Thêm tài khoản' : 'Cập nhật tài khoản'}\n        onCancel={handleCloseModal}\n        confirmLoading={modalLoading}\n        destroyOnClose={true}\n        afterClose={afterClose}\n        onOk={handleFormSubmit}>\n        <UserForm onFinish={handleFormSubmit} form={userForm} defaultUser={selectedUser} />\n      </Modal>\n    </>\n  )\n}\n\nexport default AdminAccountPage;","import React from 'react';\n\nconst AdminSettingPage = () => {\n  return (\n    <div>Admin setting page</div>\n  )\n}\n\nexport default AdminSettingPage;","import React, { useEffect } from 'react';\nimport Cookie from 'js-cookie';\nimport { Redirect } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { logoutAction } from 'store/actions/auth.action';\nimport jwtDecode from 'jwt-decode';\n\nconst withPrivateRoute = (Child, roles) => {\n  const WrapperComponent = (props) => {\n\n    const dispatch = useDispatch();\n    const token = Cookie.get('EMR_token');\n    const user = useSelector((state) => state.userState.user);\n\n    function isValidRole(user) {\n      const userRole = user?.role.name;\n      const isValid = roles.includes(userRole);\n      return isValid;\n    }\n\n    useEffect(() => {\n      if (user && user.role) {\n        if (!isValidRole(user)) {\n          dispatch(logoutAction());\n        }\n      }\n    }, [user, dispatch]);\n\n    try {\n      if (!token || token.length === 0 || !jwtDecode(token)) {\n        return <Redirect to=\"/login\" />;\n      } else {\n        return <Child {...props} />\n      }\n      \n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  return WrapperComponent;\n}\n\nexport default withPrivateRoute;","import React from 'react';\nimport { Button, Layout, Modal } from 'antd';\nimport {\n  LogoutOutlined,\n  ExclamationCircleOutlined\n} from '@ant-design/icons';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { logoutAction } from 'store/actions/auth.action';\n\nconst { Header } = Layout;\n\nconst CustomHeader = () => {\n\n  const dispatch = useDispatch();\n  const user = useSelector((state) => state.userState.user);\n\n  function handleLogout() {\n    Modal.confirm({\n      title: \"Đăng xuất\",\n      icon: <ExclamationCircleOutlined />,\n      content: \"Bạn có chắc muốn đăng xuất không?\",\n      onOk() {\n        dispatch(logoutAction());\n      }\n    })\n  }\n\n  return (\n    <Header className=\"header flex items-center\">\n      <div className=\"text-2xl text-white\">EMR</div>\n      <div className=\"ml-auto\"></div>\n      <div className=\"text-white\">{user?.first_name} {user?.last_name} <span className=\"ml-3\">|</span></div>\n      <Button type=\"default\" ghost icon={<LogoutOutlined />} className=\"border-none\" onClick={handleLogout}>Đăng xuất</Button>\n    </Header>\n  )\n}\n\nexport default CustomHeader;","import React from 'react';\nimport { Link, Redirect, Switch, Route, useRouteMatch, useLocation } from 'react-router-dom';\nimport { Layout, Menu } from 'antd';\nimport {\n  UserOutlined,\n  DashboardOutlined,\n  MedicineBoxOutlined,\n  BugOutlined,\n  DollarOutlined,\n  IdcardOutlined,\n  ClockCircleOutlined,\n  AppstoreOutlined,\n  CalendarOutlined,\n  ContainerOutlined,\n  SettingOutlined,\n  NotificationOutlined} from '@ant-design/icons';\nimport AdminDashboard from 'pages/admin/dashboard';\nimport DrugCategoryPage from 'pages/common/drug/drug-category';\nimport DrugUnitPage from 'pages/common/drug/drug-unit';\nimport DrugPage from 'pages/common/drug/drug';\nimport DrugInstructionPage from 'pages/common/drug/drug-instruction';\nimport DiseaseCategory from 'pages/common/disease/disease-category';\nimport DiseasePage from 'pages/common/disease/disease';\nimport NotificationPage from 'pages/common/notification/notification';\nimport VisitPage from 'pages/common/visit/visit';\nimport PatientPage from 'pages/common/patient/patient';\nimport AppointmentPage from 'pages/common/appointment/apointment';\nimport ServicePage from 'pages/common/service/service';\nimport WorkingHourPage from 'pages/admin/working-hour';\nimport RoomPage from 'pages/common/room/room';\nimport AdminAccountPage from 'pages/admin/account';\nimport AdminSettingPage from 'pages/admin/setting';\nimport withPrivateRoute from 'HOCs/withPrivateRoute';\nimport CustomHeader from 'components/Header';\n\nconst { Sider, Content } = Layout;\nconst { SubMenu } = Menu;\n\nconst AdminLayout = () => {\n  const match = useRouteMatch();\n  const location = useLocation();\n  const path = match.path;\n\n  return (\n    <Layout>\n      <CustomHeader />\n      <Layout>\n        <Sider width={200} className=\"site-layout-background\">\n          <Menu\n            mode=\"inline\"\n            style={{ height: '100%', borderRight: 0 }}\n            selectedKeys={[location.pathname]}\n          >\n            <Menu.Item key=\"/admin/dashboard\" icon={<DashboardOutlined />}>\n              <Link to=\"/admin/dashboard\">Bảng điều khiển</Link>\n            </Menu.Item>\n            <SubMenu key=\"drug\" icon={<MedicineBoxOutlined />} title=\"Quản lý thuốc\">\n              <Menu.Item key=\"/admin/drug/category\">\n                <Link to=\"/admin/drug/category\">Loại thuốc</Link>\n              </Menu.Item>\n              <Menu.Item key=\"/admin/drug/unit\">\n                <Link to=\"/admin/drug/unit\">Đơn vị tính</Link>\n              </Menu.Item>\n              <Menu.Item key=\"/admin/drug\">\n                <Link to=\"/admin/drug\">Thuốc</Link>\n              </Menu.Item>\n              <Menu.Item key=\"/admin/drug/instruction\">\n                <Link to=\"/admin/drug/instruction\">Hướng dẫn sử dụng</Link>\n              </Menu.Item>\n            </SubMenu>\n            <SubMenu key=\"disease\" icon={<BugOutlined />} title=\"Quản lý bệnh\">\n              <Menu.Item key=\"/admin/disease/category\">\n                <Link to=\"/admin/disease/category\">Loại bệnh</Link>\n              </Menu.Item>\n              <Menu.Item key=\"/admin/disease\">\n                <Link to=\"/admin/disease\">Bệnh</Link>\n              </Menu.Item>\n            </SubMenu>\n\n            <Menu.Item key=\"/admin/notification\" icon={<NotificationOutlined />}>\n              <Link to=\"/admin/notification\">Thông báo</Link>\n            </Menu.Item>\n            <Menu.Item key=\"/admin/visit\" icon={<ContainerOutlined />}>\n              <Link to=\"/admin/visit\">Khám bệnh</Link>\n            </Menu.Item>\n            <Menu.Item key=\"/admin/patient\" icon={<IdcardOutlined />}>\n              <Link to=\"/admin/patient\">Bệnh nhân</Link>\n            </Menu.Item>\n            <Menu.Item key=\"/admin/appointment\" icon={<CalendarOutlined />}>\n              <Link to=\"/admin/appointment\">Lịch hẹn</Link>\n            </Menu.Item>\n            <Menu.Item key=\"/admin/service\" icon={<DollarOutlined />}>\n              <Link to=\"/admin/service\">Dịch vụ</Link>\n            </Menu.Item>\n\n            <Menu.Item key=\"/admin/working-hour\" icon={<ClockCircleOutlined />}>\n              <Link to=\"/admin/working-hour\">Giờ làm việc</Link>\n            </Menu.Item>\n            <Menu.Item key=\"/admin/room\" icon={<AppstoreOutlined />}>\n              <Link to=\"/admin/room\">Phòng</Link>\n            </Menu.Item>\n\n            <Menu.Item key=\"/admin/account\" icon={<UserOutlined />}>\n              <Link to=\"/admin/account\">Tài khoản</Link>\n            </Menu.Item>\n            <Menu.Item key=\"/admin/setting\" icon={<SettingOutlined />}>\n              <Link to=\"/admin/setting\">Cài đặt</Link>\n            </Menu.Item>\n          </Menu>\n        </Sider>\n        <Layout style={{ padding: '0 24px 24px' }}>\n          <Content\n            className=\"site-layout-background\"\n            style={{\n              padding: 24,\n              margin: 0,\n              minHeight: 280,\n            }}\n          >\n            <Switch>\n              {/* Dashboard */}\n              <Route path={`${path}/dashboard`}>\n                <AdminDashboard />\n              </Route>\n\n              {/* Drug */}\n              <Route path={`${path}/drug/category`}>\n                <DrugCategoryPage />\n              </Route>\n              <Route path={`${path}/drug/unit`}>\n                <DrugUnitPage />\n              </Route>\n              <Route path={`${path}/drug`} exact>\n                <DrugPage />\n              </Route>\n              <Route path={`${path}/drug/instruction`}>\n                <DrugInstructionPage />\n              </Route>\n\n              {/* Disease */}\n              <Route path={`${path}/disease/category`}>\n                <DiseaseCategory />\n              </Route>\n              <Route path={`${path}/disease`}>\n                <DiseasePage />\n              </Route>\n\n              {/* Notification */}\n              <Route path={`${path}/notification`}>\n                <NotificationPage />\n              </Route>\n\n              {/* Visit */}\n              <Route path={`${path}/visit`}>\n                <VisitPage />\n              </Route>\n\n              {/* Patient */}\n              <Route path={`${path}/patient`}>\n                <PatientPage />\n              </Route>\n\n              {/* Appointment */}\n              <Route path={`${path}/appointment`}>\n                <AppointmentPage />\n              </Route>\n\n              {/* Service */}\n              <Route path={`${path}/service`}>\n                <ServicePage />\n              </Route>\n\n              {/* Service */}\n              <Route path={`${path}/working-hour`}>\n                <WorkingHourPage />\n              </Route>\n\n              {/* Room */}\n              <Route path={`${path}/room`}>\n                <RoomPage />\n              </Route>\n\n              {/* Room */}\n              <Route path={`${path}/account`}>\n                <AdminAccountPage />\n              </Route>\n\n              {/* Room */}\n              <Route path={`${path}/setting`}>\n                <AdminSettingPage />\n              </Route>\n\n              {/* Fallback */}\n              <Redirect to={`/admin/dashboard`} />\n            </Switch>\n          </Content>\n        </Layout>\n      </Layout>\n    </Layout>\n  )\n}\n\nexport default withPrivateRoute(AdminLayout, ['admin']);","import React, { useState } from 'react';\nimport { Form, Input, Row, Col, Button } from 'antd';\nimport { SaveOutlined } from '@ant-design/icons';\n\nconst { Item } = Form;\n\nconst VisitLivingFunctionForm = props => {\n\n  const { form, currentValues} = props;\n  const [bmi, setBmi] = useState(currentValues?.bmi || 0.0);\n\n  const row1 = [\n    {\n      name: \"heartbeat\",\n      text: \"Mạch\",\n      unit: \"lần/phút\"\n    },\n    {\n      name: \"temp\",\n      text: \"Nhiệt độ\",\n      unit: \"°C\"\n    },\n    {\n      name: \"pressure\",\n      text: \"Huyết áp\",\n      unit: \"mmHg\"\n    },\n  ]\n\n  const row2 = [\n    {\n      name: \"breathing\",\n      text: \"Nhịp thở\",\n      unit: \"lần/phút\"\n    },\n    {\n      name: \"height\",\n      text: \"Chiều cao\",\n      unit: \"cm\"\n    },\n    {\n      name: \"weight\",\n      text: \"Cân nặng\",\n      unit: \"kg\"\n    },\n  ]\n\n  function getBMI() {\n    const heightStr = form.getFieldValue('height');\n    const weightStr = form.getFieldValue('weight');\n    const height = Number(heightStr);\n    const weight = Number(weightStr);\n\n    if (!height || !weight || weight <= 0) {\n      setBmi(0.00);\n    } else {\n      setBmi(weight / Math.pow(height * 0.01, 2));\n    }\n  }\n\n  function getBMIDesc() {\n    let result = \"\";\n\n    if (bmi === 0) {\n      return \"Không có dữ liệu\"\n    } else if (bmi < 16) {\n      return \"Gầy độ III\";\n    } else if (bmi >= 16 && bmi < 17) {\n      return \"Gầy độ II\";\n    } else if (bmi >= 17 && bmi < 18.5) {\n      return \"Gầy độ I\";\n    } else if (bmi >= 18.5 && bmi < 25) {\n      return \"Bình thường\";\n    } else if (bmi >= 25 && bmi < 30) {\n      return \"Thừa cân\";\n    } else if (bmi >= 30 && bmi < 35) {\n      return \"Béo phì độ I\";\n    } else if (bmi >= 35 && bmi < 40) {\n      return \"Béo phì độ II\";\n    } else {\n      return \"Béo phì độ III\";\n    }\n  }\n\n  function onFinish(values) {\n    values.bmi = bmi;\n    props.onFinish(values);\n  }\n\n  return (\n    <Form layout=\"vertical\" form={form} onChange={getBMI} onFinish={onFinish}>\n      <Row justify=\"start\" gutter={15}>\n        {\n          row1.map(field => (\n            <Col flex=\"0 0 243px\" key={field.name}>\n              <Item name={field.name} key={field.name} rules={[{ required: true, message: \"Vui lòng nhập trường này\" }]} initialValue={currentValues[field.name]}>\n                <Input type={field.name !== \"pressure\" ? \"number\" : \"text\"} placeholder={field.text} suffix={field.unit} />\n              </Item>\n            </Col>\n          ))\n        }\n      </Row>\n      <Row justify=\"start\" gutter={15}>\n        {\n          row2.map(field => (\n            <Col flex=\"0 0 243px\" key={field.name}>\n              <Item name={field.name} key={field.name} rules={[{ required: true, message: \"Vui lòng nhập trường này\" }]} initialValue={currentValues[field.name]}>\n                <Input type=\"number\" placeholder={field.text} suffix={field.unit} />\n              </Item>\n            </Col>\n          ))\n        }\n      </Row>\n      <div className=\"mb-3\">\n        <strong>BMI: </strong>{bmi.toFixed(2)} ({getBMIDesc()})\n      </div>\n      <div>\n        <Button icon={<SaveOutlined />} htmlType=\"submit\">Lưu</Button>\n      </div>\n    </Form>\n  )\n}\n\nexport default VisitLivingFunctionForm;","import axios from 'axios';\nimport { API_URL } from 'constant/apiUrl';\n\nconst endpointPrefix = `${API_URL}/user/disease`;\n\nexport function getDiseasesAPI(categoryId) {\n  const url = `${endpointPrefix}/`;\n  if (categoryId) {\n    return axios.get(`${url}?disease_category=${categoryId}`);\n  }\n  return axios.get(url);\n}\n\nexport function getDiseaseDetailsAPI(id) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.get(url);\n}","import React, { useState, useEffect } from 'react';\nimport { Form, Select, Row, Col, Button } from 'antd';\nimport { getDiseasesAPI } from 'services/user/disease.service';\nimport { getDiseasesAPI as adminGetDiseasesAPI } from 'services/admin/disease.service';\nimport { SaveOutlined, MinusCircleOutlined } from '@ant-design/icons';\n\nconst { Item, List } = Form;\nconst { Option } = Select;\n\nconst VisitDiseaseForm = props => {\n  const { form, categories, user, currentValues } = props;\n  const [localCategories, setLocalCategories] = useState(categories);\n  const [diseases, setDiseases] = useState(null);\n  const [diseaseLoading, setDiseaseLoading] = useState(false);\n\n  async function getDiseasesByCategory(category) {\n    try {\n      setDiseaseLoading(true);\n      setDiseases(null);\n      let diseaseResponse;\n      if (user.role === \"admin\") {\n        diseaseResponse = await adminGetDiseasesAPI(category);\n      } else {\n        diseaseResponse = await getDiseasesAPI(category);\n      }\n      setDiseases(diseaseResponse.data);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setDiseaseLoading(false);\n    }\n  }\n\n  useEffect(() => {\n    setLocalCategories(categories);\n  }, [categories])\n\n  function handleCatSearch(value) {\n    console.log(value);\n\n    if (value) {\n      const filterArr = categories.filter(cat => cat.name.includes(value));\n      console.log(filterArr);\n      setLocalCategories(filterArr);\n    } else {\n      setLocalCategories(categories);\n    }\n  }\n\n  function handleCatChange(value) {\n    if (value) {\n      getDiseasesByCategory(value);\n    }\n  }\n\n  function onFinish(values) {\n    props.onFinish(values);\n  }\n\n  return (\n    <Form form={form} name=\"dynamic_form\" layout=\"vertical\" onFinish={onFinish} initialValues={currentValues}>\n      <List name=\"emr_diseases\">\n        {(fields, { add, remove }) => (\n          <>\n            {\n              fields.map((field, index) => (\n                <Row gutter={15} key={field.key} align=\"middle\" className=\"mb-5\">\n                  <Col>{index + 1}</Col>\n                  <Col flex=\"0 0 300px\">\n                    <Item\n                      {...field}\n                      name={[field.name, 'diseaseCategory']}\n                      fieldKey={[field.fieldKey, 'diseaseCategory']}\n                      rules={[{ required: true, message: \"Trường này là bắt buộc\" }]}\n                      style={{margin: 0}}>\n                      <Select\n                        showSearch onSearch={handleCatSearch}\n                        placeholder=\"Nhóm bệnh\"\n                        onChange={handleCatChange}>\n                        {\n                          localCategories.map(cat => (\n                            <Option key={cat.id} value={cat.id}>{cat.name}</Option>\n                          ))\n                        }\n                      </Select>\n                    </Item>\n                  </Col>\n                  <Col flex={5}>\n                    <Item\n                      {...field}\n                      name={[field.name, 'disease']}\n                      fieldKey={[field.fieldKey, 'disease']}\n                      rules={[{ required: true, message: \"Trường này là bắt buộc\" }]}\n                      style={{margin: 0}}>\n                      <Select loading={diseaseLoading} placeholder=\"Bệnh\">\n                        {\n                          diseases?.results.map(disease => (\n                            <Option key={disease.id} value={disease.name}>{disease.name}</Option>\n                          ))\n                        }\n                      </Select>\n                    </Item>\n                  </Col>\n                  <Col>\n                    <MinusCircleOutlined onClick={() => remove(field.name)} />\n                  </Col>\n                </Row>\n              ))\n            }\n            <Item>\n              <Button type=\"dashed\" block onClick={() => add()}>Thêm bệnh</Button>\n            </Item>\n          </>\n        )\n        }\n      </List>\n\n      <div>\n        <Button htmlType=\"submit\" icon={<SaveOutlined />}>Lưu</Button>\n      </div>\n    </Form>\n  )\n}\n\nexport default VisitDiseaseForm;","import React from 'react';\nimport { Form, Row, Col, Select, Button } from 'antd';\nimport NumberFormat from 'react-number-format';\nimport { SaveOutlined, PlusOutlined, MinusCircleOutlined } from '@ant-design/icons';\n\nconst { Item, List } = Form;\nconst { Option } = Select;\n\nconst VisitServiceForm = props => {\n\n  const { services, currentValues } = props;\n\n  return (\n    <Form onFinish={props.onFinish} initialValues={currentValues}>\n      <List name=\"emr_services\">\n        {\n          (fields, { add, remove }) => (\n            <>\n              {\n                fields.map((field, index) => (\n                  <Row gutter={15} key={field.key} align=\"middle\" className=\"mb-5\">\n                    <Col>{index + 1}</Col>\n                    <Col flex={1}>\n                      <Item {...field} name={[field.name, 'service']} fieldKey={[field.fieldKey, 'service']} style={{margin: 0}} rules={[{ required: true, message: \"Trường này là bắt buộc\" }]}>\n                        <Select placeholder=\"Chọn dịch vụ\">\n                          {\n                            services.map(service => (\n                              <Option value={service.name} key={service.id}>\n                                {service.name} (<NumberFormat displayType=\"text\" thousandSeparator=\" \" value={service.price} suffix=\" VNĐ\" />)\n                              </Option>\n                            ))\n                          }\n                        </Select>\n                      </Item>\n                    </Col>\n                    <Col>\n                          <MinusCircleOutlined onClick={() => remove(field.name)} />\n                    </Col>\n                  </Row>\n                ))\n              }\n              <Item>\n                <Button type=\"dashed\" block onClick={() => add()} icon={<PlusOutlined />}>Thêm dịch vụ</Button>\n              </Item>\n            </>\n          )\n        }\n      </List>\n\n      <div>\n        <Button htmlType=\"submit\" icon={<SaveOutlined />}>Lưu</Button>\n      </div>\n    </Form>\n  )\n}\n\nexport default VisitServiceForm;","import axios from 'axios';\nimport { API_URL } from 'constant/apiUrl';\nimport { getQueryString } from 'utils/string';\n\nconst endpointPrefix = `${API_URL}/user/drug`;\n\nexport function getDrugsAPI(params) {\n  const url = `${endpointPrefix}/`;\n\n  if (params) {\n    return axios.get(`${url}?${getQueryString(params)}`);\n  }\n  return axios.get(url);\n}\n\nexport function getDrugDetailsAPI(id) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.get(url);\n}","import React, { useState, useEffect } from 'react';\nimport { Form, Input, Select, Row, Col, Button } from 'antd';\nimport { getDrugsAPI as adminGetDrugsAPI } from 'services/admin/drug.service';\nimport { getDrugsAPI } from 'services/user/drug.service';\nimport { useForm } from 'antd/lib/form/Form';\nimport { PlusOutlined, MinusCircleOutlined, SaveOutlined } from '@ant-design/icons';\n\nconst { Item, List } = Form;\nconst { Option } = Select;\n\nconst VisitDrugForm = props => {\n  const { user, categories, instructions, currentValues } = props;\n\n  const [drugs, setDrugs] = useState([]);\n  const [drugLoading, setDrugLoading] = useState(false);\n\n  async function getDrugsByCategory(category) {\n    try {\n      setDrugLoading(true);\n      let drugResponse;\n      if (user.role === \"admin\") {\n        drugResponse = await adminGetDrugsAPI({ drug_category: category });\n      } else {\n        drugResponse = await getDrugsAPI({ drug_category: category });\n      }\n      setDrugs(drugResponse.data.results);\n    } catch (error) {\n\n    } finally {\n      setDrugLoading(false);\n    }\n  }\n\n  function handleCategoryChange(category) {\n    getDrugsByCategory(category);\n  }\n\n  return (\n    <Form layout=\"vertical\" onFinish={props.onFinish} initialValues={currentValues}>\n      <List name=\"emr_drugs\">\n        {(fields, { add, remove }) => (\n          <>\n            {\n              fields.map((field, index) => (\n                <Row gutter={15} key={field.key} align=\"middle\">\n                  <Col>{index + 1}</Col>\n                  <Col flex=\"0 0 220px\">\n                    <Item\n                      {...field}\n                      label=\"Nhóm thuốc\"\n                      name={[field.name, 'drugCategory']}\n                      fieldKey={[field.fieldKey, 'drugCategory']}\n                      rules={[{ required: true, message: \"Trường này là bắt buộc\" }]}>\n                      <Select onChange={handleCategoryChange}>\n                        {\n                          categories.map(cat => (\n                            <Option key={cat.id} value={cat.id}>{cat.name}</Option>\n                          ))\n                        }\n                      </Select>\n                    </Item>\n                  </Col>\n                  <Col flex=\"1 0 220px\">\n                    <Item\n                      {...field}\n                      label=\"Thuốc\"\n                      name={[field.name, 'drug']}\n                      fieldKey={[field.fieldKey, 'drug']}\n                      rules={[{ required: true, message: \"Trường này là bắt buộc\" }]}>\n                      <Select loading={drugLoading}>\n                        {\n                          drugs.map(drug => (\n                            <Option key={drug.id} value={drug.name}>{drug.code}. {drug.name}</Option>\n                          ))\n                        }\n                      </Select>\n                    </Item>\n                  </Col>\n                  <Col flex=\"0 0 120px\">\n                    <Item\n                      {...field}\n                      name={[field.name, 'drugInstruction']}\n                      fieldKey={[field.fieldKey, 'drugInstruction']}\n                      rules={[{ required: true, message: \"Trường này là bắt buộc\" }]}\n                      label=\"Cách dùng\"\n                      style={{ minWidth: 200 }}>\n                      <Select>\n                        {\n                          instructions.map(ins => (\n                            <Option key={ins.id} value={ins.instruction}>{ins.instruction}</Option>\n                          ))\n                        }\n                      </Select>\n                    </Item>\n                  </Col>\n                  {/* </Row> */}\n                  {/* <Row gutter={15}> */}\n                  <Col flex=\"0 0 80px\">\n                    <Item\n                      {...field}\n                      name={[field.name, 'numberOfDays']}\n                      fieldKey={[field.fieldKey, 'numberOfDays']}\n                      rules={[{ required: true, message: \"Trường này là bắt buộc\" }]}\n                      label=\"Số ngày\">\n                      <Input type=\"number\" />\n                    </Item>\n                  </Col>\n                  <Col flex=\"0 0 80px\">\n                    <Item label=\"Sáng\" name={[field.name, 'morning']}>\n                      <Input type=\"number\" />\n                    </Item>\n                  </Col>\n                  <Col flex=\"0 0 80px\">\n                    <Item label=\"Trưa\" name={[field.name, 'afternoon']}>\n                      <Input type=\"number\" />\n                    </Item>\n                  </Col>\n                  <Col flex=\"0 0 80px\">\n                    <Item label=\"Chiều\" name={[field.name, 'evening']}>\n                      <Input type=\"number\" />\n                    </Item>\n                  </Col>\n                  <Col flex=\"0 0 80px\">\n                    <Item label=\"Tối\" name={[field.name, 'night']}>\n                      <Input type=\"number\" />\n                    </Item>\n                  </Col>\n                  <Col flex=\"0 0 80px\">\n                    <Item\n                      {...field}\n                      label=\"Số lượng\"\n                      name={[field.name, 'total']}\n                      fieldKey={[field.fieldKey, 'total']}>\n                      <Input type=\"number\" />\n                    </Item>\n                  </Col>\n                  <Col>\n                    <MinusCircleOutlined onClick={() => remove(field.name)} />\n                  </Col>\n                </Row>\n              ))\n\n            }\n            <Item>\n              <Button type=\"dashed\" block onClick={() => add()} icon={<PlusOutlined />}>Thêm đơn thuốc</Button>\n            </Item>\n          </>\n        )}\n      </List>\n\n      <div>\n        <Button htmlType=\"submit\" icon={<SaveOutlined />}>Lưu</Button>\n      </div>\n    </Form>\n  )\n}\n\nexport default VisitDrugForm;","import axios from 'axios';\n\nimport { API_URL } from \"constant/apiUrl\";\n\nconst endpointPrefix = `${API_URL}/user/disease-category`;\n\nexport function getDiseaseCategoryAPI(search = \"\") {\n  const url = `${endpointPrefix}/?search=${search}`;\n  return axios.get(url);\n}","import axios from 'axios';\n\nimport { API_URL } from \"constant/apiUrl\";\n\nconst endpointPrefix = `${API_URL}/user/service`;\n\nexport function getServicesAPI(search = \"\") {\n  const url = `${endpointPrefix}/?search=${search}`;\n  return axios.get(url);\n}\n\nexport function getServiceDetailsAPI(id) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.get(url);\n}","import axios from 'axios';\n\nimport { API_URL } from \"constant/apiUrl\";\n\nconst endpointPrefix = `${API_URL}/user/drug-category`;\n\nexport function getDrugCategoryAPI(search = \"\") {\n  const url = `${endpointPrefix}/?search=${search}`;\n  return axios.get(url);\n}","import axios from 'axios';\n\nimport { API_URL } from \"constant/apiUrl\";\n\nconst endpointPrefix = `${API_URL}/user/drug-instruction`;\n\nexport function getDrugInstructionsAPI() {\n  const url = `${endpointPrefix}/`;\n  return axios.get(url);\n}","import React, { useState, useEffect } from 'react';\nimport { Tabs, Descriptions, Collapse, PageHeader, message, Divider, Button, Row, Col, Space } from 'antd';\nimport moment from 'moment';\nimport { connect } from 'react-redux';\nimport VisitLivingFunctionForm from 'forms/Visit/VisitLivingFunctionForm';\nimport VisitDiseaseForm from 'forms/Visit/VisitDiseaseForm';\nimport VisitServiceForm from 'forms/Visit/VisitServiceForm';\nimport VisitDrugForm from 'forms/Visit/VisitDrugForm';\nimport { getDiseaseCategoryAPI } from 'services/user/disease-category.service';\nimport { getServicesAPI } from 'services/user/medical-service.service';\nimport { getDrugCategoryAPI } from 'services/user/drug-category.service';\nimport { getDrugInstructionsAPI } from 'services/user/drug-instruction.service';\nimport { getDiseaseCategoryAPI as adminGetDiseaseCategoryAPI } from 'services/admin/disease-category.service';\nimport { getServicesAPI as adminGetServicesAPI } from 'services/admin/medical-service.service';\nimport { getDrugCategoryAPI as adminGetDrugCategoryAPI } from 'services/admin/drug-category.service';\nimport { getDrugInstructionsAPI as adminGetDrugInstructionsAPI } from 'services/admin/drug-instruction.service';\nimport { useHistory } from 'react-router-dom';\nimport { removeDuplicates } from 'utils/array';\n\nconst ExaminationPage = props => {\n\n  const user = props.user;\n  const history = useHistory();\n\n  const [diseaseCategories, setDiseaseCategories] = useState([]);\n  const [services, setServices] = useState([]);\n  const [drugCategories, setDrugCategories] = useState([]);\n  const [drugInstructions, setDrugInstructions] = useState([]);\n\n  const [visiting, setVisiting] = useState([]);\n\n  async function getDiseaseCategories() {\n    try {\n      let diseaseCategoryResponse;\n      if (user.role.name === \"admin\") {\n        diseaseCategoryResponse = await adminGetDiseaseCategoryAPI();\n      } else {\n        diseaseCategoryResponse = await getDiseaseCategoryAPI()\n      }\n      const diseaseCategoriesData = diseaseCategoryResponse.data;\n      setDiseaseCategories(diseaseCategoriesData);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async function getServices() {\n    try {\n      let servicesResponse;\n      if (user.role.name === \"admin\") {\n        servicesResponse = await adminGetServicesAPI();\n      } else {\n        servicesResponse = await getServicesAPI()\n      }\n      const servicesData = servicesResponse.data;\n      setServices(servicesData);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async function getDrugCategories() {\n    try {\n      let drugCategoryResponse;\n      if (user.role.name === \"admin\") {\n        drugCategoryResponse = await adminGetDrugCategoryAPI();\n      } else {\n        drugCategoryResponse = await getDrugCategoryAPI()\n      }\n      const drugCategoriesData = drugCategoryResponse.data;\n      setDrugCategories(drugCategoriesData);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async function getDrugInstructions() {\n    try {\n      let drugInsResponse;\n      if (user.role.name === \"admin\") {\n        drugInsResponse = await adminGetDrugInstructionsAPI();\n      } else {\n        drugInsResponse = await getDrugInstructionsAPI()\n      }\n      const drugInsData = drugInsResponse.data;\n      setDrugInstructions(drugInsData);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async function getInitialData() {\n    await Promise.all([\n      getDiseaseCategories(),\n      getServices(),\n      getDrugCategories(),\n      getDrugInstructions()\n    ]);\n  }\n\n  useEffect(() => {\n    if (user) {\n      getInitialData();\n    }\n\n    const localVisitingStr = localStorage.getItem(\"visiting\");\n    const localVisitingObj = JSON.parse(localVisitingStr);\n    if (localVisitingObj) {\n      setVisiting(localVisitingObj);\n    }\n  }, [user]);\n\n  function handleSaveLivingFunctions(visitId, values) {\n    setVisiting(prevValue => {\n      const visit = prevValue.find(v => v.id === visitId);\n      visit.livingFunctions = values;\n      const newState = [...prevValue, ...[visit]];\n      const finalList = removeDuplicates(newState, \"id\");\n      localStorage.setItem(\"visiting\", JSON.stringify(finalList));\n      message.success({ content: \"Lưu thành công\" });\n      return finalList;\n    })\n  }\n\n  function handleSaveDiseases(visitId, values) {\n    setVisiting(prevValue => {\n      const visit = prevValue.find(v => v.id === visitId);\n      visit.emr_diseases = values.emr_diseases;\n      const newState = [...prevValue, ...[visit]];\n      const finalList = removeDuplicates(newState, \"id\");\n      localStorage.setItem(\"visiting\", JSON.stringify(finalList));\n      message.success({ content: \"Lưu thành công\" });\n      return finalList;\n    })\n  }\n\n  function handleSaveServices(visitId, values) {\n    setVisiting(prevValue => {\n      const visit = prevValue.find(v => v.id === visitId);\n      visit.emr_services = values.emr_services;\n      const newState = [...prevValue, ...[visit]];\n      const finalList = removeDuplicates(newState, \"id\");\n      localStorage.setItem(\"visiting\", JSON.stringify(finalList));\n      message.success({ content: \"Lưu thành công\" });\n      return finalList;\n    })\n  }\n\n  function handleSaveDrugs(visitId, values) {\n    setVisiting(prevValue => {\n      const visit = prevValue.find(v => v.id === visitId);\n      visit.emr_drugs = values.emr_drugs;\n      const newState = [...prevValue, ...[visit]];\n      const finalList = removeDuplicates(newState, \"id\");\n      localStorage.setItem(\"visiting\", JSON.stringify(finalList));\n      message.success({ content: \"Lưu thành công\" });\n      return finalList;\n    })\n  }\n\n  function handleFinishExamination(visitId) {\n    const visit = visiting.find(v => v.id === visitId);\n    console.log(visit);\n  }\n\n  return (\n    <>\n      <PageHeader title=\"Khám bệnh\" onBack={() => history.goBack()} />\n      <Tabs type=\"card\">\n        {\n          visiting.map(v => (\n            <Tabs.TabPane key={v.id} tab={`${v.patient.first_name} ${v.patient.last_name}`}>\n              <Descriptions title=\"Thông tin bệnh nhân\">\n                <Descriptions.Item span={1} label=\"Họ và tên\">\n                  {v.patient.first_name} {v.patient.last_name} ({v.patient.gender})\n                    </Descriptions.Item>\n                <Descriptions.Item span={1} label=\"Ngày sinh\">\n                  {v.patient.DOB}\n                </Descriptions.Item>\n              </Descriptions>\n\n              <Descriptions title={`Thông tin khám bệnh (Phòng khám: ${v.room})`}>\n                <Descriptions.Item span={1} label=\"Ngày vào khám\">{moment(v.created_at).format(\"DD/MM/YYYY HH:mm:ss\")}</Descriptions.Item>\n                <Descriptions.Item span={1} label=\"Bác sĩ khám bệnh\">\n                  {v.physician.first_name} {v.physician.last_name}\n                </Descriptions.Item>\n              </Descriptions>\n\n              <Collapse defaultActiveKey={[\"living-function\", \"diseases\", \"services\", \"drugs\"]}>\n                <Collapse.Panel header=\"Chức năng sống\" key=\"living-function\">\n                  <VisitLivingFunctionForm\n                    onFinish={(values) => handleSaveLivingFunctions(v.id, values)}\n                    currentValues={v.livingFunctions} />\n                </Collapse.Panel>\n\n                <Collapse.Panel header=\"Bệnh\" key=\"diseases\">\n                  <VisitDiseaseForm\n                    categories={diseaseCategories}\n                    user={user}\n                    onFinish={(values) => handleSaveDiseases(v.id, values)}\n                    currentValues={v} />\n                </Collapse.Panel>\n                <Collapse.Panel header=\"Chỉ định dịch vụ\" key=\"services\">\n                  <VisitServiceForm\n                    user={user}\n                    services={services}\n                    onFinish={(values) => handleSaveServices(v.id, values)}\n                    currentValues={v} />\n                </Collapse.Panel>\n                <Collapse.Panel header=\"Kê đơn thuốc\" key=\"drugs\">\n                  <VisitDrugForm\n                    user={user}\n                    categories={drugCategories}\n                    instructions={drugInstructions}\n                    onFinish={(values) => handleSaveDrugs(v.id, values)}\n                    currentValues={v} />\n                </Collapse.Panel>\n              </Collapse>\n\n              <Divider />\n              <div className=\"text-right\">\n                <Space>\n                  <Button danger size=\"large\">Hủy đơn</Button>\n                  <Button type=\"primary\" size=\"large\" onClick={() => handleFinishExamination(v.id)}>Kết thúc khám</Button>\n                </Space>\n              </div>\n            </Tabs.TabPane>\n          ))\n        }\n\n      </Tabs>\n    </>\n  )\n}\n\nconst mapStateToProps = state => ({\n  user: state.userState.user\n})\n\nexport default connect(mapStateToProps)(ExaminationPage);","import React from 'react';\nimport { Link, Redirect, Switch, Route, useRouteMatch, useLocation } from 'react-router-dom';\nimport { Layout, Menu } from 'antd';\nimport {\n  UserOutlined,\n  DashboardOutlined,\n  MedicineBoxOutlined,\n  BugOutlined,\n  DollarOutlined,\n  IdcardOutlined,\n  AppstoreOutlined,\n  CalendarOutlined,\n  ContainerOutlined,\n  SettingOutlined,\n  NotificationOutlined} from '@ant-design/icons';\nimport AdminDashboard from 'pages/admin/dashboard';\nimport DrugCategoryPage from 'pages/common/drug/drug-category';\nimport DrugUnitPage from 'pages/common/drug/drug-unit';\nimport DrugPage from 'pages/common/drug/drug';\nimport DrugInstructionPage from 'pages/common/drug/drug-instruction';\nimport DiseaseCategory from 'pages/common/disease/disease-category';\nimport DiseasePage from 'pages/common/disease/disease';\nimport NotificationPage from 'pages/common/notification/notification';\nimport VisitPage from 'pages/common/visit/visit';\nimport PatientPage from 'pages/common/patient/patient';\nimport AppointmentPage from 'pages/common/appointment/apointment';\nimport ServicePage from 'pages/common/service/service';\nimport RoomPage from 'pages/common/room/room';\nimport AdminAccountPage from 'pages/admin/account';\nimport AdminSettingPage from 'pages/admin/setting';\nimport withPrivateRoute from 'HOCs/withPrivateRoute';\nimport CustomHeader from 'components/Header';\nimport ExaminationPage from 'pages/common/examination/examination';\n\nconst { Sider, Content } = Layout;\nconst { SubMenu } = Menu;\n\nconst PhysicianLayout = () => {\n  const match = useRouteMatch();\n  const location = useLocation();\n  const path = match.path;\n\n  return (\n    <Layout>\n      <CustomHeader />\n      <Layout>\n        <Sider width={200} className=\"site-layout-background\">\n          <Menu\n            mode=\"inline\"\n            style={{ height: '100%', borderRight: 0 }}\n            selectedKeys={[location.pathname]}\n          >\n\n            <Menu.Item key=\"/physician/notification\" icon={<NotificationOutlined />}>\n              <Link to=\"/physician/notification\">Thông báo</Link>\n            </Menu.Item>\n            <Menu.Item key=\"/physician/visit\" icon={<ContainerOutlined />}>\n              <Link to=\"/physician/visit\">Khám bệnh</Link>\n            </Menu.Item>\n            <Menu.Item key=\"/physician/patient\" icon={<IdcardOutlined />}>\n              <Link to=\"/physician/patient\">Bệnh nhân</Link>\n            </Menu.Item>\n            <Menu.Item key=\"/physician/appointment\" icon={<CalendarOutlined />}>\n              <Link to=\"/physician/appointment\">Lịch hẹn</Link>\n            </Menu.Item>\n            <Menu.Item key=\"/physician/setting\" icon={<SettingOutlined />}>\n              <Link to=\"/physician/setting\">Cài đặt</Link>\n            </Menu.Item>\n          </Menu>\n        </Sider>\n        <Layout style={{ padding: '0 24px 24px' }}>\n          <Content\n            className=\"site-layout-background\"\n            style={{\n              padding: 24,\n              margin: 0,\n              minHeight: 280,\n            }}\n          >\n            <Switch>\n              {/* Dashboard */}\n              <Route path={`${path}/dashboard`}>\n                <AdminDashboard />\n              </Route>\n\n              {/* Drug */}\n              <Route path={`${path}/drug/category`}>\n                <DrugCategoryPage />\n              </Route>\n              <Route path={`${path}/drug/unit`}>\n                <DrugUnitPage />\n              </Route>\n              <Route path={`${path}/drug`} exact>\n                <DrugPage />\n              </Route>\n              <Route path={`${path}/drug/instruction`}>\n                <DrugInstructionPage />\n              </Route>\n\n              {/* Disease */}\n              <Route path={`${path}/disease/category`}>\n                <DiseaseCategory />\n              </Route>\n              <Route path={`${path}/disease`}>\n                <DiseasePage />\n              </Route>\n\n              {/* Notification */}\n              <Route path={`${path}/notification`}>\n                <NotificationPage />\n              </Route>\n\n              {/* Visit */}\n              <Route path={`${path}/visit`} exact>\n                <VisitPage />\n              </Route>\n\n              <Route path={`${path}/visit/examination`}>\n                <ExaminationPage />\n              </Route>\n\n              {/* Patient */}\n              <Route path={`${path}/patient`}>\n                <PatientPage />\n              </Route>\n\n              {/* Appointment */}\n              <Route path={`${path}/appointment`}>\n                <AppointmentPage />\n              </Route>\n\n              {/* Service */}\n              <Route path={`${path}/service`}>\n                <ServicePage />\n              </Route>\n\n              {/* Room */}\n              <Route path={`${path}/room`}>\n                <RoomPage />\n              </Route>\n\n              {/* Account */}\n              <Route path={`${path}/account`}>\n                <AdminAccountPage />\n              </Route>\n\n              {/* Room */}\n              <Route path={`${path}/setting`}>\n                <AdminSettingPage />\n              </Route>\n\n              {/* Fallback */}\n              <Redirect to={`/physician/dashboard`} />\n            </Switch>\n          </Content>\n        </Layout>\n      </Layout>\n    </Layout>\n  )\n}\n\nexport default withPrivateRoute(PhysicianLayout, ['physician']);","import axios from 'axios';\nimport { API_URL } from 'constant/apiUrl';\n\nconst endpointPrefix = `${API_URL}/user/patient`;\n\nexport function listAllPatientsAPI(search = \"\") {\n  const url = `${endpointPrefix}/?search=${search}`;\n  return axios.get(url);\n}","import React from 'react';\nimport { Form, Input } from 'antd';\n\nconst PatientForm = props => {\n  const { form, onFinish } = props;\n\n  return (\n    <Form\n      layout=\"vertical\"\n      onFinish={onFinish}\n      form={form}>\n      <Form.Item label=\"Tên bệnh nhân\">\n        <Input />\n      </Form.Item>\n    </Form>\n  )\n}\n\nexport default PatientForm;","import React, { useState, useEffect } from 'react';\nimport { Input, Table, Form, PageHeader, Button, Modal, Menu, Dropdown } from 'antd';\nimport { listAllPatientsAPI } from 'services/user/patient.service';\nimport { PlusOutlined } from '@ant-design/icons';\nimport PatientForm from 'forms/PatientForm/PatientForm';\nimport { getRoomAPI } from 'services/user/room.service';\nimport { createVisitAPI } from 'services/user/visit.service';\n\nconst ReceivePage = props => {\n\n  const [patientData, setPatientData] = useState(null);\n  const [patientLoading, setPatientLoading] = useState(false);\n  const [rooms, setRooms] = useState(null);\n  const [roomLoading, setRoomLoading] = useState(false);\n  const [roomModalVisible, setRoomModalVisible] = useState(false);\n  const [modalVisible, setModalVisible] = useState(false);\n  const [isCreatingVisit, setCreatingVisit] = useState(false);\n  const [patientForm] = Form.useForm();\n\n  function renderMenu(patientId) {\n    return (\n      <Menu>\n        {\n          rooms.map(room => (\n            <Menu.Item key={room.id} onClick={() => handleCreateVisit(patientId, room.id)}>{room.name}</Menu.Item>\n          ))\n        }\n      </Menu>\n    )\n  }\n\n  const tableColumns = [\n    {\n      title: '#',\n      key: 'index',\n      render: (text, record, index) => index + 1\n    },\n    {\n      title: 'Họ và tên',\n      key: 'fullname',\n      render: (text, { first_name, last_name }) => first_name + ' ' + last_name\n    },\n    {\n      title: 'Giới tính',\n      key: 'gender',\n      dataIndex: 'gender'\n    },\n    {\n      title: 'Ngày sinh',\n      key: 'DOB',\n      dataIndex: 'DOB'\n    },\n    {\n      title: 'Điện thoại',\n      key: 'phone',\n      dataIndex: 'phone'\n    },\n    {\n      title: 'Hành động',\n      key: 'action',\n      render: (text, record) => (\n        <Dropdown overlay={renderMenu(record.id)} overlayStyle={{ minWidth: 200 }} trigger=\"click\">\n          <Button>Tiếp nhận</Button>\n        </Dropdown>\n      )\n    }\n  ]\n\n\n  //\n  // Load initial data\n  //\n  async function listAllPatients(search) {\n    try {\n      setPatientLoading(true);\n      const patientResponse = await listAllPatientsAPI(search);\n      setPatientData(patientResponse.data);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setPatientLoading(false);\n    }\n  }\n\n  async function getRooms() {\n    try {\n      setRoomLoading(true);\n      const roomResponse = await getRoomAPI();\n      setRooms(roomResponse.data);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setRoomLoading(false);\n    }\n  }\n\n  async function getInitialData() {\n    await Promise.all([\n      listAllPatients(),\n      getRooms()\n    ])\n  }\n\n  useEffect(() => {\n    getInitialData();\n  }, []);\n\n  //\n  // Component functions\n  //\n  function handleAddClick() {\n    setModalVisible(true);\n  }\n\n  function handleCloseModal() {\n    setModalVisible(false);\n  }\n\n  function handleSearch(values) {\n    listAllPatients(values.search);\n  }\n\n  function handleSubmit() {\n\n  }\n\n  function handleReceiveClick(patientId) {\n    setRoomModalVisible(true);\n  }\n\n  async function handleCreateVisit(patientId, roomId) {\n    try {\n      setCreatingVisit(true);\n      const createVisitResponse = await createVisitAPI({ patientId, roomId });\n      console.log(createVisitResponse.data);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setCreatingVisit(false);\n    }\n  }\n\n  return (\n    <>\n      <PageHeader\n        title=\"Tiếp nhận bệnh nhân\"\n        className=\"pl-0\"\n        extra={<Button type=\"primary\" onClick={handleAddClick} icon={<PlusOutlined />}>Bệnh nhân mới</Button>} />\n\n      <Form onFinish={handleSearch}>\n        <Form.Item name=\"search\">\n          <Input.Search size=\"large\" placeholder=\"Tìm kiếm bệnh nhân theo tên/SĐT\" />\n        </Form.Item>\n      </Form>\n      <Table\n        rowKey=\"id\"\n        dataSource={patientData?.results}\n        loading={patientLoading || isCreatingVisit}\n        columns={tableColumns} />\n      <Modal\n        visible={modalVisible}\n        onCancel={handleCloseModal}\n        destroyOnClose={true}\n        title=\"Bệnh nhân mới\">\n        <PatientForm form={patientForm} onFinish={handleSubmit} />\n      </Modal>\n    </>\n  )\n}\n\nexport default ReceivePage;","import React from 'react';\n\nconst ProfilePage = props => {\n  return (\n    <div>Profile Page</div>\n  )\n}\n\nexport default ProfilePage;","import React from 'react';\nimport { Link, Redirect, Switch, Route, useRouteMatch, useLocation } from 'react-router-dom';\nimport { Layout, Menu } from 'antd';\nimport {\n  UserOutlined,\n  DashboardOutlined,\n  CalendarOutlined,\n} from '@ant-design/icons';\nimport AppointmentPage from 'pages/common/appointment/apointment';\nimport withPrivateRoute from 'HOCs/withPrivateRoute';\nimport CustomHeader from 'components/Header';\nimport ReceivePage from 'pages/receptionist/receive';\nimport ProfilePage from 'pages/common/profile/profile';\n\nconst { Sider, Content } = Layout;\n\nconst ReceptionistLayout = () => {\n  const match = useRouteMatch();\n  const location = useLocation();\n  const path = match.path;\n\n  return (\n    <Layout>\n      <CustomHeader />\n      <Layout>\n        <Sider width={200} className=\"site-layout-background\">\n          <Menu\n            mode=\"inline\"\n            style={{ height: '100%', borderRight: 0 }}\n            selectedKeys={[location.pathname]}\n          >\n            <Menu.Item key=\"/receptionist/receive\" icon={<DashboardOutlined />}>\n              <Link to=\"/receptionist/receive\">Tiếp đón</Link>\n            </Menu.Item>\n            <Menu.Item key=\"/receptionist/appointment\" icon={<CalendarOutlined />}>\n              <Link to=\"/receptionist/appointment\">Lịch hẹn</Link>\n            </Menu.Item>\n\n            <Menu.Item key=\"/receptionist/profile\" icon={<UserOutlined />}>\n              <Link to=\"/receptionist/profile\">Hồ sơ</Link>\n            </Menu.Item>\n          </Menu>\n        </Sider>\n        <Layout style={{ padding: '0 24px 24px' }}>\n          <Content\n            className=\"site-layout-background\"\n            style={{\n              padding: 24,\n              margin: 0,\n              minHeight: 280,\n            }}\n          >\n            <Switch>\n              {/* Dashboard */}\n              <Route path={`${path}/receive`}>\n                <ReceivePage />\n              </Route>\n\n              {/* Appointment */}\n              <Route path={`${path}/appointment`}>\n                <AppointmentPage />\n              </Route>\n\n              <Route path={`${path}/profile`}>\n                <ProfilePage />\n              </Route>\n\n              {/* Fallback */}\n              <Redirect to={`/receptionist/receive`} />\n            </Switch>\n          </Content>\n        </Layout>\n      </Layout>\n    </Layout>\n  )\n}\n\nexport default withPrivateRoute(ReceptionistLayout, ['receptionist']);","import React from 'react';\n\nconst EmailIcon = () => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" id=\"Capa_1\" enableBackground=\"new 0 0 512 512\" height=\"50\" viewBox=\"0 0 512 512\" width=\"50\"><g><g><path d=\"m497 15.243h-482c-8.284 0-15 6.716-15 15v330c0 8.284 6.716 15 15 15h121.019c-.006.505-.019 1.008-.019 1.515 0 66.168 53.832 120 120 120s120-53.832 120-120c0-.506-.013-1.01-.019-1.515h121.019c8.284 0 15-6.716 15-15v-330c0-8.285-6.716-15-15-15zm-43.122 30-197.878 147.792-197.878-147.792zm-197.878 421.514c-49.626 0-90-40.374-90-90s40.374-90 90-90 90 40.374 90 90-40.374 90-90 90zm226-121.514h-110.208c-13.876-50.929-60.527-88.485-115.792-88.485-55.266 0-101.916 37.557-115.792 88.485h-110.208v-283.56l217.024 162.092c2.662 1.988 5.819 2.982 8.976 2.982s6.314-.994 8.976-2.982l217.024-162.092zm-191.606 5.908-49.394 49.393-19.394-19.393c-5.857-5.858-15.355-5.858-21.213 0s-5.858 15.355 0 21.213l30 30c2.929 2.929 6.768 4.394 10.606 4.394s7.678-1.464 10.606-4.394l60-60c5.858-5.858 5.858-15.355 0-21.213-5.856-5.859-15.354-5.859-21.211 0z\" fill=\"currentColor\" /></g></g></svg>\n)\n\nexport default EmailIcon;","import React, { useState, useEffect } from 'react';\nimport EmailIcon from 'components/Icons/EmailIcon';\nimport Icon from '@ant-design/icons';\nimport { Alert, Button, Space, Spin } from 'antd';\nimport { Link, useLocation } from 'react-router-dom';\nimport { verifyEmailAPI } from 'services/auth/auth.service';\n\nconst VerifyPage = (props) => {\n\n  const [loading, setLoading] = useState(false);\n  const [success, setSuccess] = useState(false);\n  const [error, setError] = useState(null);\n  const { search } = useLocation();\n  const urlSearchParams = new URLSearchParams(search);\n  const token = urlSearchParams.get('token');\n\n  function isValidToken(token = \"\") {\n    const isValid = /[A-Za-z0-9-_=]+\\.[A-Za-z0-9-_=]+\\.?[A-Za-z0-9-_.+/=]*/.test(token);\n    console.log(isValid);\n    return isValid;\n  }\n\n  async function verifyEmail(token) {\n    try {\n      setLoading(true);\n      await verifyEmailAPI(token);\n      setSuccess(true);\n    } catch (error) {\n      setError(error);\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  useEffect(() => {\n    if (token && token.length > 0 && isValidToken(token)) {\n      verifyEmail(token);\n    }\n  }, [search, token]);\n\n  return (\n    <main className=\"login-page\">\n      <div className=\"auth\">\n        <div className=\"auth__header text-center\">\n          <Icon component={EmailIcon} />\n          <h1 className=\"text-3xl\">Xác thực email</h1>\n        </div>\n\n        {\n          loading &&\n          <Space align=\"center\" className=\"flex text-center justify-center\">\n            <Spin />\n            <span>Vui lòng đợi</span>\n          </Space>\n        }\n\n        {\n          success &&\n          <Alert\n            showIcon\n            type=\"success\"\n            message=\"Xác thực địa chỉ email thành công\"\n          />\n        }\n\n        {\n          !isValidToken(token) &&\n          <Alert\n            showIcon\n            type=\"error\"\n            message=\"URL không hợp lệ\"\n          />\n        }\n\n        {\n          !!error &&\n          <Alert\n            showIcon\n            type=\"error\"\n            message={error?.response?.data.message || \"Có lỗi khi xác thực email, vui lòng thử lại\"}\n          />\n        }\n\n        <div className=\"text-center mt-5\">\n          <Button type=\"link\">\n            <Link to=\"/\">Về trang chủ</Link>\n          </Button>\n        </div>\n      </div>\n    </main>\n  )\n}\n\nexport default VerifyPage;","import React, { useEffect } from 'react';\nimport { Route, HashRouter as Router, Switch, Redirect  } from 'react-router-dom';\nimport LoginPage from 'pages/login';\nimport Cookie from 'js-cookie';\nimport jwtDecode from 'jwt-decode';\nimport AdminLayout from 'layouts/AdminLayout/AdminLayout';\nimport PhysicianLayout from 'layouts/PhysicianLayout/PhysicianLayout';\nimport ReceptionistLayout from 'layouts/ReceptionistLayout/ReceptionistLayout';\nimport setupInterceptor from 'utils/interceptor';\nimport { useDispatch } from 'react-redux';\nimport { getProfileAction } from 'store/actions/user.action';\nimport { refreshToken } from 'services/auth/auth.service';\n\n// import \"normalize.css/normalize.css\";\n// import \"@blueprintjs/core/lib/css/blueprint.css\";\n// import \"@blueprintjs/icons/lib/css/blueprint-icons.css\";\nimport 'antd/dist/antd.css';\nimport 'styles/main.scss';\nimport VerifyPage from 'pages/verify-email';\n\n\nfunction App() {\n\n  setupInterceptor();\n\n  const dispatch = useDispatch();\n\n  function fetchProfile() {\n    try {\n      const token = Cookie.get('EMR_token');\n      if (token && jwtDecode(token)) {\n        dispatch(getProfileAction());\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async function checkRefresh() {\n    try {\n      const token = Cookie.get('EMR_token');\n      const refresh = Cookie.get('EMR_refresh');\n      if (!token && refresh) {\n        const newTokenReponse = await refreshToken(refresh);\n        const newToken = newTokenReponse.data;\n        Cookie.set('EMR_token', newToken.access_token, { expires: 3/24 });\n      }\n      fetchProfile();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  useEffect(() => {\n    checkRefresh();\n  });\n  \n  return (\n    <div className=\"app\">\n      <Router>\n        <Switch>\n          <Route path=\"/login\" component={LoginPage} />\n          <Route path=\"/verify-email\" component={VerifyPage} />\n\n          <Route path=\"/admin\" component={AdminLayout} />\n          <Route path=\"/physician\" component={PhysicianLayout} />\n          <Route path=\"/receptionist\" component={ReceptionistLayout} />\n\n          <Redirect to=\"/login\" />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import axios from 'axios';\nimport { message } from 'antd';\nimport Cookie from 'js-cookie';\nimport * as AuthService from 'services/auth/auth.service';\nimport jwtDecode from 'jwt-decode';\nimport { API_URL } from 'constant/apiUrl';\n\nexport default function setupInterceptor() {\n  axios.interceptors.request.use((config) => {\n\n    if (config.method === 'delete') {\n      message.loading('Đang thực hiện');\n    }\n\n    try {\n      const token = Cookie.get('EMR_token');\n      if (token && jwtDecode(token)) {\n        config.headers['Authorization'] = `Bearer ${token}`;\n      }\n    } catch (error) {\n      console.log({ error });\n    }\n    return config;\n  }, (error) => Promise.reject(error));\n\n  axios.interceptors.response.use(((res) => {\n    switch (res.config.method) {\n      case \"post\":\n        if (res.data.id) {\n          // Check if new object created because login is also a post request\n          message.success({\n            content: \"Thao tác thành công\"\n          });\n        }\n\n        break;\n      case \"put\":\n      case \"patch\":\n        message.success({\n          content: \"Cập nhật thành công\"\n        });\n        break;\n      case \"delete\":\n        message.destroy();\n        message.success({\n          content: \"Xóa thành công\"\n        });\n        break;\n      default:\n      // Do nothing\n    }\n    return res;\n  }), async (error) => {\n    const originalRequest = error.config;\n\n    if (error.response.status === 401 && !originalRequest._retry && originalRequest.url !== `${API_URL}/auth/refresh-token/`) {\n      Cookie.remove(\"EMR_token\");\n\n      originalRequest._retry = true;\n\n      let refreshToken = Cookie.get('EMR_refresh');\n\n      if (refreshToken && refreshToken.length > 0) {\n        try {\n          const refreshResponse = await AuthService.refreshToken(refreshToken);\n          const newToken = refreshResponse.data.access_token;\n          Cookie.set('EMR_token', newToken);\n\n          const config = error.config;\n          config.headers['Authorization'] = `Bearer ${newToken}`;\n\n          return new Promise((resolve, reject) => {\n            return axios.request(config)\n              .then(res => resolve(res))\n              .catch(error => reject(error))\n          })\n        } catch (error) {\n          Cookie.remove(\"EMR_refresh\");\n          return Promise.reject(error);\n        }\n      }\n    } else {\n      // Do not show error alert on veirfy email page because it already have its own error messages\n      if (!originalRequest.url.includes('/api/auth/verify-email')) {\n        const errorMessage = error.response?.data.message || \"Unexpected error occurred\";\n        message.error(errorMessage);\n      }\n\n    }\n\n    return Promise.reject(error);\n  })\n}","import * as actionTypes from '../actionTypes';\n\nconst initialState = {\n  loginLoading: false\n}\n\nexport default function authReducer (state = initialState, action) {\n  switch(action.type) {\n    case actionTypes.LOGIN_PENDING:\n      return {\n        ...state,\n        loginLoading: true\n      }\n\n    case actionTypes.LOGIN_SUCCESS:\n      return {\n        ...state,\n        loginLoading: false\n      }\n\n    case actionTypes.LOGIN_FAILURE:\n      return {\n        ...state,\n        loginLoading: false\n      }\n\n    default:\n      return {\n        ...state\n      }\n  }\n}","import * as actionTypes from '../actionTypes';\n\nconst initialState = {\n  user: null,\n  getProfileLoading: false,\n}\n\nexport default function userReducer(state = initialState, action) {\n  switch (action.type) {\n    case actionTypes.GET_PROFILE_PENDING:\n      return {\n        ...state,\n        user: null,\n        getProfileLoading: true\n      }\n    case actionTypes.GET_PROFILE_SUCCESS:\n      return {\n        ...state,\n        user: action.payload,\n        getProfileLoading: false\n      }\n    case actionTypes.GET_PROFILE_FAILURE:\n      return {\n        ...state,\n        user: null,\n        getProfileLoading: false\n      }\n    \n    case actionTypes.LOGOUT:\n      return {\n        ...state,\n        user: null,\n        getProfileLoading: false\n      }\n    default:\n      return { ...state }\n  }\n}","import { combineReducers } from 'redux';\nimport authReducer from './reducers/auth.reducer';\nimport userReducer from './reducers/user.reducer';\n\nconst rootReducer = combineReducers({\n  userState: userReducer,\n  authState: authReducer\n})\n\nexport default rootReducer;","import { createStore, compose, applyMiddleware } from 'redux';\nimport rootReducer from './rootReducer';\nimport thunk from 'redux-thunk';\n\nconst middlewares = [thunk]\n\nconst composeEnhancers =\n  typeof window === 'object' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : compose;\n\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(...middlewares)));\n\nexport default store;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from 'store/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}