{"version":3,"sources":["components/Icons/LoginIcon.jsx","store/actionTypes.js","constant/apiUrl.js","services/auth/auth.service.js","services/user/user.service.js","store/actions/user.action.js","store/actions/auth.action.js","forms/LoginForm/LoginForm.jsx","utils/routing.js","pages/login.jsx","pages/admin/dashboard.jsx","forms/DrugCategoryForm/DrugCategoryForm.jsx","services/admin/drug-category.service.js","constant/formActions.js","pages/common/drug/drug-category.jsx","forms/DrugUnitForm/DrugUnitForm.jsx","services/admin/drug-unit.service.js","pages/common/drug/drug-unit.jsx","services/admin/drug.service.js","forms/DrugForm/DrugForm.jsx","pages/common/drug/drug.jsx","forms/DrugInstructionForm/DrugInstructionForm.jsx","services/admin/drug-instruction.service.js","pages/common/drug/drug-instruction.jsx","forms/DiseaseCategoryForm/DiseaseCategoryForm.jsx","services/admin/disease-category.service.js","pages/common/disease/disease-category.jsx","pages/common/disease/disease.jsx","pages/common/notification/notification.jsx","pages/common/visit/visit.jsx","pages/common/patient/patient.jsx","pages/common/appointment/apointment.jsx","pages/common/service/service.jsx","pages/common/working-hour/working-hour.jsx","pages/common/room/room.jsx","pages/admin/account.jsx","pages/admin/setting.jsx","HOCs/withPrivateRoute.jsx","components/Header.jsx","layouts/AdminLayout/AdminLayout.jsx","App.jsx","utils/interceptor.js","store/reducers/auth.reducer.js","store/reducers/user.reducer.js","store/rootReducer.js","store/store.js","serviceWorker.js","index.jsx"],"names":["LoginIcon","width","height","xmlns","xmlnsXlink","version","id","x","y","viewBox","fill","xmlSpace","cx","cy","r","d","LOGIN_PENDING","LOGIN_SUCCESS","LOGIN_FAILURE","GET_PROFILE_PENDING","GET_PROFILE_SUCCESS","GET_PROFILE_FAILURE","LOGOUT","API_URL","endpointPrefix","login","email","password","url","axios","post","refreshToken","refresh_token","getProfile","get","getProfileSuccess","user","type","actionTypes","payload","getProfileAction","dispatch","a","profileRes","data","console","log","logoutAction","Cookie","remove","LoginForm","history","useHistory","useDispatch","authState","useSelector","state","userState","useEffect","role","redirectPath","getRedirectPath","replace","className","layout","autoComplete","onFinish","values","loginRes","loginData","accessToken","access_token","set","expires","Icon","component","Item","name","placeholder","Password","to","loading","loginLoading","getProfileLoading","block","size","htmlType","LoginPage","props","AdminDashboard","DrugCategoryForm","form","defaultCategory","label","initialValue","autoFocus","getDrugCategoryAPI","search","addDrugCategoryAPI","updateDrugCategoryAPI","put","deleteDrugCategoryAPI","delete","formActions","DrugCategoryPage","useState","modalVisible","setModalVisible","categories","setCategories","fetchingCategories","setFetchingCategories","modalLoading","setModalLoading","action","setAction","selectedCategory","setSelectedCategory","Form","useForm","drugCategoryForm","tableColumns","title","key","render","text","record","index","dataIndex","icon","EditOutlined","onClick","category","onConfirm","handleDelete","okText","okType","cancelText","DeleteOutlined","getDrugCategories","response","handleFormSubmit","validateFields","resetFields","unit","justify","PlusOutlined","rowKey","columns","dataSource","visible","onCancel","confirmLoading","destroyOnClose","afterClose","onOk","DrugUnitForm","defaultUnit","getDrugUnitsAPI","addDrugUnitAPI","updateDrugUnitAPI","deleteDrugUnitAPI","DrugUnitPage","drugUnits","setDrugUnits","fetchingDrugUnits","setFetchingDrugUnits","selectedUnit","setSelectedUnit","drugUnitForm","getDrugUnits","getDrugsAPI","getDrugDetailsAPI","addDrugAPI","code","drug_category","price","drug_unit","updateDrugAPI","deleteDrugAPI","DrugForm","defaultDrug","units","setUnits","drugDetail","setDrugDetail","catLoading","setCatLoading","unitLoading","setUnitLoading","detailLoading","setDetailLoading","catResponse","unitResponse","getDrugDetail","detailResponse","prevCats","findIndex","cat","prevUnits","u","Promise","all","getData","setFieldsValue","spinning","suffix","map","Option","value","DrugPage","drugs","setDrugs","fetchingDrugs","setFetchingDrugs","selectedDrug","setSelectedDrug","drugForm","thousandSeparator","displayType","drug","getDrugs","results","DrugInstructionForm","defaultInstruction","instruction","getDrugInstructionsAPI","addDrugInstructionAPI","updateDrugInstructionAPI","deleteDrugInstructionAPI","DrugInstructionPage","drugInstructions","setDrugInstructions","fetchingDrugInstructions","setFetchingDrugInstructions","selectedInstruction","setSelectedInstruction","drugInstructionForm","ins","getDrugInstructions","DiseaseCategoryForm","getDiseaseCategoryAPI","addDiseaseCategoryAPI","updateDiseaseCategoryAPI","deleteDiseaseCategoryAPI","DiseaseCategoryPage","diseaseCategoryForm","getDiseaseCategories","DiseasePage","NotificationPage","VisitPage","PatientPage","AppointmentPage","ServicePage","WorkingHourPage","RoomPage","AdminAccountPage","AdminSettingPage","withPrivateRoute","Child","roles","token","userRole","includes","isValidRole","length","jwtDecode","error","Header","Layout","CustomHeader","first_name","last_name","ghost","LogoutOutlined","Modal","confirm","ExclamationCircleOutlined","content","Sider","Content","SubMenu","Menu","match","useRouteMatch","location","useLocation","path","mode","style","borderRight","selectedKeys","pathname","DashboardOutlined","MedicineBoxOutlined","BugOutlined","NotificationOutlined","ContainerOutlined","IdcardOutlined","CalendarOutlined","DollarOutlined","ClockCircleOutlined","AppstoreOutlined","UserOutlined","SettingOutlined","padding","margin","minHeight","exact","App","interceptors","request","use","config","method","message","headers","reject","res","success","destroy","originalRequest","status","_retry","AuthService","refreshResponse","newToken","resolve","then","catch","errorMessage","fetchProfile","refresh","newTokenReponse","checkRefresh","AdminLayout","initialState","rootReducer","combineReducers","middlewares","thunk","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","Boolean","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ae709d7e.chunk.js","sourcesContent":["import React from 'react';\n\nconst LoginIcon = () => (\n  <svg width=\"50\" height=\"50\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" version=\"1.1\" id=\"Capa_1\" x=\"0px\" y=\"0px\" viewBox=\"0 0 512.002 512.002\" fill=\"currentColor\" xmlSpace=\"preserve\">\n    <g>\n      <g>\n        <g>\n          <circle cx=\"338\" cy=\"346.001\" r=\"20\" />\n          <path d=\"M238,472.001H80c-22.056,0-40-17.944-40-40v-164c0-22.056,17.944-40,40-40h288c22.056,0,40,17.944,40,40v40     c0,11.046,8.954,20,20,20c11.046,0,20-8.954,20-20v-40c0-44.112-35.888-80-80-80h-24.037v-70.534     c0-64.771-53.832-117.466-120-117.466s-120,52.695-120,117.466v70.534H80c-44.112,0-80,35.888-80,80v164     c0,44.112,35.888,80,80,80h158c11.046,0,20-8.954,20-20S249.046,472.001,238,472.001z M143.963,117.467     c0-42.715,35.888-77.466,80-77.466s80,34.751,80,77.466v70.534h-160V117.467z\" />\n          <path d=\"M503.643,325.739c-8.982-6.431-21.477-4.362-27.904,4.62l-98.581,137.7c-2.692,3.122-6.066,3.796-7.874,3.916     c-1.854,0.123-5.424-0.112-8.567-3.061l-63.708-62.171c-7.906-7.716-20.568-7.559-28.282,0.345     c-7.715,7.905-7.561,20.567,0.345,28.282l63.82,62.281c0.06,0.058,0.119,0.116,0.18,0.173C342.639,506.933,355.41,512,368.55,512     c1.129,0,2.261-0.037,3.393-0.113c14.314-0.954,27.679-7.915,36.666-19.097c0.232-0.29,0.456-0.585,0.673-0.887l98.981-138.26     C514.692,344.662,512.624,332.168,503.643,325.739z\" />\n          <circle cx=\"262\" cy=\"346.001\" r=\"20\" />\n          <circle cx=\"112\" cy=\"346.001\" r=\"20\" />\n          <circle cx=\"187\" cy=\"346.001\" r=\"20\" />\n        </g>\n      </g>\n    </g>\n    <g>\n    </g>\n    <g>\n    </g>\n    <g>\n    </g>\n    <g>\n    </g>\n    <g>\n    </g>\n    <g>\n    </g>\n    <g>\n    </g>\n    <g>\n    </g>\n    <g>\n    </g>\n    <g>\n    </g>\n    <g>\n    </g>\n    <g>\n    </g>\n    <g>\n    </g>\n    <g>\n    </g>\n    <g>\n    </g>\n  </svg>\n)\n\nexport default LoginIcon;","export const LOGIN_PENDING = \"LOGIN_PENDING\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_FAILURE = \"LOGIN_FAILURE\";\n\nexport const GET_PROFILE_PENDING = \"GET_PROFILE_PENDING\";\nexport const GET_PROFILE_SUCCESS = \"GET_PROFILE_SUCCESS\";\nexport const GET_PROFILE_FAILURE = \"GET_PROFILE_FAILURE\";\n\nexport const LOGOUT = \"LOGOUT\";","export const API_URL = 'https://emr-2020.wl.r.appspot.com/api';","import { API_URL } from \"constant/apiUrl\";\nimport axios from 'axios';\n\n\nconst endpointPrefix = `${API_URL}/auth`;\n\n/**\n * Login to system\n * @param email\n * @param password\n */\nexport function login(email, password) {\n  const url = `${endpointPrefix}/login/`;\n  return axios.post(url, {\n    email: email,\n    password: password\n  });\n}\n\n/**\n * This function is used to get new access token from refresh token\n * when current access token is expired\n * @param refreshToken Refresh token from last login\n */\nexport function refreshToken(refreshToken) {\n  const url = `${endpointPrefix}/refresh-token/`;\n  return axios.post(url, {\n    refresh_token: refreshToken\n  });\n}\n","import { API_URL } from \"constant/apiUrl\";\nimport axios from 'axios';\n\nconst endpointPrefix = `${API_URL}/user`;\n\n/**\n* Get user profile\n* @param token Access token\n*/\nexport function getProfile() {\n  const url = `${endpointPrefix}/profile/`;\n  return axios.get(url);\n}","import * as actionTypes from '../actionTypes';\nimport { getProfile } from 'services/user/user.service';\n\nfunction getProfilePending() {\n  return {\n    type: actionTypes.GET_PROFILE_PENDING\n  }\n}\n\nfunction getProfileSuccess(user) {\n  return {\n    type: actionTypes.GET_PROFILE_SUCCESS,\n    payload: user\n  }\n}\n\nfunction getProfileFailure() {\n  return {\n    type: actionTypes.GET_PROFILE_FAILURE\n  }\n}\n\nexport function getProfileAction() {\n  return async dispatch => {\n    try {\n      dispatch(getProfilePending());\n      const profileRes = await getProfile();\n      const user = profileRes.data;\n      dispatch(getProfileSuccess(user));\n    } catch(error) {\n      console.log(error);\n      dispatch(getProfileFailure());\n    }\n  }\n}\n\nexport function removeUserAction() {\n  return {\n    type: actionTypes.LOGOUT\n  }\n}","import * as actionTypes from '../actionTypes';\nimport { login } from 'services/auth/auth.service';\nimport Cookie from 'js-cookie';\nimport { getProfileAction, removeUserAction } from './user.action';\n\nfunction loginPending() {\n  return {\n    type: actionTypes.LOGIN_PENDING\n  }\n}\n\nfunction loginSuccess() {\n  return {\n    type: actionTypes.LOGIN_SUCCESS,\n  }\n}\n\nfunction loginFailure() {\n  return {\n    type: actionTypes.LOGIN_FAILURE\n  }\n}\n\nexport function loginAction(email, password) {\n  return async dispatch => {\n    try {\n      dispatch(loginPending());\n      const loginRes = await login(email, password);\n      const loginData = loginRes.data;\n\n      const accessToken = loginData.access_token;\n      const refreshToken = loginData.refresh_token;\n      Cookie.set('EMR_token', accessToken, { expires: 3 / 24 }); // 3 hours\n      Cookie.set('EMR_refresh', refreshToken, { expires: 7 }); // 7 days\n      dispatch(loginSuccess());\n      dispatch(getProfileAction());\n    } catch (error) {\n      dispatch(loginFailure());\n    }\n  }\n}\n\nexport function logoutAction() {\n  Cookie.remove('EMR_token');\n  Cookie.remove('EMR_refresh');\n\n  return dispatch => {\n    dispatch(removeUserAction());\n  }\n}","import React, { useEffect } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { Form, Input, Button } from 'antd';\nimport Icon from '@ant-design/icons';\nimport LoginIcon from 'components/Icons/LoginIcon';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { loginAction } from 'store/actions/auth.action';\nimport { getRedirectPath } from 'utils/routing';\n\nconst LoginForm = () => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const authState = useSelector(state => state.authState);\n  const userState = useSelector(state => state.userState);\n  const user = userState.user;\n\n  function handleSubmit(values) {\n    dispatch(loginAction(values.email, values.password));\n  }\n\n  useEffect(() => {\n    if (user && user.role) {\n      const redirectPath = getRedirectPath(user.role);\n      console.log(redirectPath);\n      history.replace(redirectPath);\n    }\n  }, [user]);\n\n  return (\n    <Form\n      className=\"login-form\"\n      layout=\"vertical\"\n      autoComplete=\"off\"\n      onFinish={handleSubmit}>\n\n      <div className=\"text-center\">\n\n        <div className=\"login-form__header\">\n          <Icon component={LoginIcon} />\n          <h1 className=\"text-3xl\">Đăng nhập</h1>\n        </div>\n\n      </div>\n\n      <Form.Item name=\"email\">\n        <Input type=\"email\" placeholder=\"Email\" />\n      </Form.Item>\n\n      <Form.Item name=\"password\" className=\"m-0\">\n        <Input.Password placeholder=\"Mật khẩu\" />\n        {/* <Button type=\"link\"> */}\n        {/* </Button> */}\n      </Form.Item>\n      <Link className=\"block mt-2 mb-6\" to=\"/forgot-password\">Quên mật khẩu</Link>\n\n      <Form.Item>\n        <Button loading={authState.loginLoading || userState.getProfileLoading} block type=\"primary\" size=\"large\" htmlType=\"submit\">Đăng nhập</Button>\n      </Form.Item>\n    </Form>\n  )\n}\n\nexport default LoginForm;","export function getRedirectPath(role) {\n  if (!role) return \"/login\";\n\n  switch (role.id) {\n    case 1:\n      return \"/admin\";\n    case 2:\n      return \"/physician\";\n    case 3:\n      return \"/receitionist\";\n    case 4:\n      return \"/patient\";\n    default:\n      return \"\";\n  }\n}","import React from 'react';\nimport LoginForm from 'forms/LoginForm/LoginForm';\n\nconst LoginPage = (props) => {\n  return (\n    <main className=\"login-page\">\n      <LoginForm />\n    </main>\n  )\n}\n\nexport default LoginPage;","import React from 'react';\n\nconst AdminDashboard = () => {\n  return (\n    <div>Admin dashboard</div>\n  )\n}\n\nexport default AdminDashboard;","import React from 'react';\nimport { Form, Input } from 'antd';\n\nconst DrugCategoryForm = props => {\n  const { form, onFinish, defaultCategory } = props;\n\n  return (\n    <Form\n      layout=\"vertical\"\n      form={form}\n      onFinish={onFinish}>\n      <Form.Item label=\"Loại thuốc\" name=\"name\" initialValue={defaultCategory?.name}>\n        <Input autoFocus />\n      </Form.Item>\n    </Form>\n  )\n}\n\nexport default DrugCategoryForm;","import axios from 'axios';\n\nimport { API_URL } from \"constant/apiUrl\";\n\nconst endpointPrefix = `${API_URL}/admin/manage-drug-category`;\n\nexport function getDrugCategoryAPI(search = \"\") {\n  const url = `${endpointPrefix}/?search=${search}`;\n  return axios.get(url);\n}\n\nexport function addDrugCategoryAPI(name) {\n  const url = `${endpointPrefix}/`;\n  return axios.post(url, { name: name });\n}\n\nexport function updateDrugCategoryAPI(id, name) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.put(url, {\n    name: name\n  })\n}\n\nexport function deleteDrugCategoryAPI(id) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.delete(url);\n}","export const formActions = {\n  CREATE: 'CREATE',\n  UPDATE: 'UPDATE'\n}","import React, { useState, useEffect } from 'react';\nimport { Row, Col, Button, Modal, Table, Form, Popconfirm, Space } from 'antd';\nimport { PlusOutlined, EditOutlined, DeleteOutlined } from '@ant-design/icons';\nimport DrugCategoryForm from 'forms/DrugCategoryForm/DrugCategoryForm';\nimport { addDrugCategoryAPI, deleteDrugCategoryAPI, getDrugCategoryAPI, updateDrugCategoryAPI } from 'services/admin/drug-category.service';\nimport { formActions } from 'constant/formActions';\n\nconst DrugCategoryPage = () => {\n\n  const [modalVisible, setModalVisible] = useState(false);\n  const [categories, setCategories] = useState([]);\n  const [fetchingCategories, setFetchingCategories] = useState(false);\n  const [modalLoading, setModalLoading] = useState(false);\n  const [action, setAction] = useState(formActions.CREATE);\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [drugCategoryForm] = Form.useForm();\n\n  const tableColumns = [\n    {\n      title: '#',\n      key: '#',\n      render: (text, record, index) => index + 1\n    },\n    {\n      title: 'Tên',\n      key: 'name',\n      dataIndex: 'name'\n    },\n    {\n      title: 'Hành động',\n      key: 'action',\n      render: (text, record, index) => (\n        <Space size={10}>\n          <Button icon={<EditOutlined />} onClick={() => handleEditClick(record)}></Button>\n          <Popconfirm\n            onConfirm={() => handleDelete(record)} title=\"Bạn có chắc muốn xóa không?\"\n            okText=\"Xóa\"\n            okType=\"danger\"\n            cancelText=\"Hủy bỏ\">\n            <Button icon={<DeleteOutlined />}></Button>\n          </Popconfirm>\n        </Space>\n      )\n    }\n  ]\n\n  function handleOpenModal() {\n    setAction(formActions.CREATE);\n    setModalVisible(true);\n  }\n\n  function handleCloseModal() {\n    setModalVisible(false);\n  }\n\n  async function getDrugCategories() {\n    try {\n      setFetchingCategories(true);\n      const response = await getDrugCategoryAPI();\n      setCategories(response.data);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setFetchingCategories(false);\n    }\n  }\n\n  async function handleFormSubmit() {\n    try {\n      setModalLoading(true);\n      const values = await drugCategoryForm.validateFields();\n      if (action === formActions.CREATE) {\n        await addDrugCategoryAPI(values.name);\n      }\n\n      if (action === formActions.UPDATE) {\n        await updateDrugCategoryAPI(selectedCategory.id, values.name);\n      }\n\n      getDrugCategories();\n\n      setModalVisible(false);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setModalLoading(false);\n      drugCategoryForm.resetFields();\n    }\n  }\n\n  function handleEditClick(category) {\n    setAction(formActions.UPDATE);\n    setSelectedCategory(category);\n    setModalVisible(true);\n  }\n\n  async function handleDelete(unit) {\n    try {\n      await deleteDrugCategoryAPI(unit.id);\n      getDrugCategories();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  function afterClose() {\n    drugCategoryForm.resetFields();\n    setSelectedCategory(null);\n  }\n\n  useEffect(() => {\n    getDrugCategories();\n  }, []);\n\n  return (\n    <>\n      <Row justify=\"space-between\">\n        <Col><h1 className=\"text-xl\">Quản lý loại thuốc</h1></Col>\n        <Col>\n          <Button type=\"primary\" icon={<PlusOutlined />} onClick={handleOpenModal}>Tạo mới</Button>\n        </Col>\n      </Row>\n      <Table\n        rowKey=\"id\"\n        columns={tableColumns}\n        dataSource={categories}\n        \n        loading={fetchingCategories} />\n      <Modal\n        visible={modalVisible}\n        title={action === formActions.CREATE ? 'Thêm loại thuốc' : 'Cập nhật loại thuốc'}\n        onCancel={handleCloseModal}\n        confirmLoading={modalLoading}\n        destroyOnClose={true}\n        afterClose={afterClose}\n        onOk={handleFormSubmit}>\n        <DrugCategoryForm onFinish={handleFormSubmit} form={drugCategoryForm} defaultCategory={selectedCategory} />\n      </Modal>\n    </>\n  )\n}\n\nexport default DrugCategoryPage;","import React from 'react';\nimport { Form, Input } from 'antd';\n\nconst DrugUnitForm = props => {\n  const { form, onFinish, defaultUnit } = props;\n\n  return (\n    <Form\n      layout=\"vertical\"\n      form={form}\n      onFinish={onFinish}>\n      <Form.Item label=\"Đơn vị tính\" name=\"name\" initialValue={defaultUnit?.name}>\n        <Input autoFocus />\n      </Form.Item>\n    </Form>\n  )\n}\n\nexport default DrugUnitForm;","import axios from 'axios';\n\nimport { API_URL } from \"constant/apiUrl\";\n\nconst endpointPrefix = `${API_URL}/admin/manage-drug-unit`;\n\nexport function getDrugUnitsAPI(search = \"\") {\n  const url = `${endpointPrefix}/?search=${search}`;\n  return axios.get(url);\n}\n\nexport function addDrugUnitAPI(name) {\n  const url = `${endpointPrefix}/`;\n  return axios.post(url, { name: name });\n}\n\nexport function updateDrugUnitAPI(id, name) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.put(url, {\n    name: name\n  })\n}\n\nexport function deleteDrugUnitAPI(id) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.delete(url);\n}","import React, { useState, useEffect } from 'react';\nimport { Row, Col, Button, Modal, Table, Form, Popconfirm, Space } from 'antd';\nimport { PlusOutlined, EditOutlined, DeleteOutlined } from '@ant-design/icons';\nimport DrugUnitForm from 'forms/DrugUnitForm/DrugUnitForm';\nimport { getDrugUnitsAPI, addDrugUnitAPI, updateDrugUnitAPI, deleteDrugUnitAPI } from 'services/admin/drug-unit.service';\nimport { formActions } from 'constant/formActions';\n\nconst DrugUnitPage = () => {\n\n  const [modalVisible, setModalVisible] = useState(false);\n  const [drugUnits, setDrugUnits] = useState([]);\n  const [fetchingDrugUnits, setFetchingDrugUnits] = useState(false);\n  const [modalLoading, setModalLoading] = useState(false);\n  const [action, setAction] = useState(formActions.CREATE);\n  const [selectedUnit, setSelectedUnit] = useState(null);\n  const [drugUnitForm] = Form.useForm();\n\n  const tableColumns = [\n    {\n      title: '#',\n      key: '#',\n      render: (text, record, index) => index + 1\n    },\n    {\n      title: 'Đơn vị tính',\n      key: 'name',\n      dataIndex: 'name'\n    },\n    {\n      title: 'Hành động',\n      key: 'action',\n      render: (text, record, index) => (\n        <Space size={10}>\n          <Button icon={<EditOutlined />} onClick={() => handleEditClick(record)}></Button>\n          <Popconfirm\n            onConfirm={() => handleDelete(record)} title=\"Bạn có chắc muốn xóa không?\"\n            okText=\"Xóa\"\n            okType=\"danger\"\n            cancelText=\"Hủy bỏ\">\n            <Button icon={<DeleteOutlined />}></Button>\n          </Popconfirm>\n        </Space>\n      )\n    }\n  ]\n\n  function handleOpenModal() {\n    setAction(formActions.CREATE);\n    setModalVisible(true);\n  }\n\n  function handleCloseModal() {\n    setModalVisible(false);\n  }\n\n  async function getDrugUnits() {\n    try {\n      setFetchingDrugUnits(true);\n      const response = await getDrugUnitsAPI();\n      setDrugUnits(response.data);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setFetchingDrugUnits(false);\n    }\n  }\n\n  async function handleFormSubmit() {\n    try {\n      setModalLoading(true);\n      const values = await drugUnitForm.validateFields();\n      if (action === formActions.CREATE) {\n        await addDrugUnitAPI(values.name);\n      }\n\n      if (action === formActions.UPDATE) {\n        await updateDrugUnitAPI(selectedUnit.id, values.name);\n      }\n\n      getDrugUnits();\n\n      setModalVisible(false);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setModalLoading(false);\n      drugUnitForm.resetFields();\n    }\n  }\n\n  function handleEditClick(unit) {\n    setAction(formActions.UPDATE);\n    setSelectedUnit(unit);\n    setModalVisible(true);\n  }\n\n  async function handleDelete(unit) {\n    try {\n      await deleteDrugUnitAPI(unit.id);\n      getDrugUnits();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  function afterClose() {\n    drugUnitForm.resetFields();\n    setSelectedUnit(null);\n  }\n\n  useEffect(() => {\n    getDrugUnits();\n  }, []);\n\n  return (\n    <>\n      <Row justify=\"space-between\">\n        <Col><h1 className=\"text-xl\">Quản lý đơn vị tính</h1></Col>\n        <Col>\n          <Button type=\"primary\" icon={<PlusOutlined />} onClick={handleOpenModal}>Tạo mới</Button>\n        </Col>\n      </Row>\n      <Table\n        rowKey=\"id\"\n        columns={tableColumns}\n        dataSource={drugUnits}\n        loading={fetchingDrugUnits} />\n      <Modal\n        visible={modalVisible}\n        title={action === formActions.CREATE ? 'Thêm đơn vị tính' : 'Cập nhật đơn vị tính'}\n        onCancel={handleCloseModal}\n        confirmLoading={modalLoading}\n        destroyOnClose={true}\n        afterClose={afterClose}\n        onOk={handleFormSubmit}>\n        <DrugUnitForm onFinish={handleFormSubmit} form={drugUnitForm} defaultUnit={selectedUnit} />\n      </Modal>\n    </>\n  )\n}\n\nexport default DrugUnitPage;","import axios from 'axios';\nimport { API_URL } from 'constant/apiUrl';\n\nconst endpointPrefix = `${API_URL}/admin/manage-drug`;\n\nexport function getDrugsAPI() {\n  const url = `${endpointPrefix}/`;\n  return axios.get(url);\n}\n\nexport function getDrugDetailsAPI(id) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.get(url);\n}\n\nexport function addDrugAPI({ code, name, drug_category, price, drug_unit }) {\n  const url = `${endpointPrefix}/`;\n  return axios.post(url, {\n    code,\n    name,\n    drug_category,\n    price,\n    drug_unit\n  });\n}\n\nexport function updateDrugAPI(id, { code, name, drug_category, price, drug_unit }) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.put(url, {\n    code,\n    name,\n    drug_category,\n    price,\n    drug_unit\n  });\n}\n\nexport function deleteDrugAPI(id) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.delete(url);\n}","import React, { useState, useEffect } from 'react';\nimport { Form, Input, Select, Spin } from 'antd';\nimport { getDrugCategoryAPI } from 'services/admin/drug-category.service';\nimport { getDrugUnitsAPI } from 'services/admin/drug-unit.service';\nimport { getDrugDetailsAPI } from 'services/admin/drug.service';\n\nconst DrugForm = props => {\n  const { form, onFinish, defaultDrug } = props;\n\n  const [categories, setCategories] = useState([]);\n  const [units, setUnits] = useState([]);\n  const [drugDetail, setDrugDetail] = useState(null);\n  const [catLoading, setCatLoading] = useState(false);\n  const [unitLoading, setUnitLoading] = useState(false);\n  const [detailLoading, setDetailLoading] = useState(false);\n\n  async function getDrugCategories() {\n    try {\n      setCatLoading(true);\n      const catResponse = await getDrugCategoryAPI();\n      setCategories(catResponse.data);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setCatLoading(false);\n    }\n  }\n\n  async function getDrugUnits() {\n    try {\n      setUnitLoading(true);\n      const unitResponse = await getDrugUnitsAPI();\n      setUnits(unitResponse.data);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setUnitLoading(false);\n    }\n  }\n\n  async function getDrugDetail(id) {\n    try {\n      setDetailLoading(true);\n      const detailResponse = await getDrugDetailsAPI(id);\n      const drugDetail = detailResponse.data;\n      setDrugDetail(drugDetail);\n      setCategories(prevCats => {\n        const index = prevCats.findIndex(cat => cat.id === defaultDrug.drug_category);\n        if (index > -1) {\n          prevCats[index] = drugDetail.drug_category;\n          return prevCats;\n        } else {\n          return [...[drugDetail.drug_category], ...prevCats];\n        }\n      });\n      setUnits(prevUnits => {\n        const index = prevUnits.findIndex(u => u.id === defaultDrug.drug_unit);\n        if (index > -1) {\n          prevUnits[index] = drugDetail.drug_unit;\n          return prevUnits;\n        } else {\n          return [...[drugDetail.drug_unit], ...prevUnits];\n        }\n      });\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setDetailLoading(false);\n    }\n  }\n\n  async function getData() {\n    if (defaultDrug?.id) {\n      await Promise.all([\n        getDrugDetail(defaultDrug.id),\n        getDrugCategories(),\n        getDrugUnits()\n      ]);\n\n    } else {\n      await Promise.all([\n        getDrugCategories(),\n        getDrugUnits()\n      ])\n    }\n\n  }\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  useEffect(() => {\n    if (drugDetail) {\n      form.setFieldsValue({\n        code: drugDetail.code,\n        name: drugDetail.name,\n        price: drugDetail.price,\n        drug_category: drugDetail.drug_category.id,\n        drug_unit: drugDetail.drug_unit.id\n      });\n    }\n  }, [drugDetail, defaultDrug]);\n\n  return (\n    <Spin spinning={detailLoading}>\n      <Form\n        layout=\"vertical\"\n        form={form}\n        onFinish={onFinish}>\n        <Form.Item label=\"Mã thuốc\" name=\"code\" initialValue={drugDetail?.code}>\n          <Input />\n        </Form.Item>\n\n        <Form.Item label=\"Tên thuốc\" name=\"name\" initialValue={drugDetail?.name}>\n          <Input />\n        </Form.Item>\n\n        <Form.Item label=\"Giá\" name=\"price\" initialValue={drugDetail?.price}>\n          <Input type=\"number\" suffix=\"VNĐ\" />\n        </Form.Item>\n\n        <Form.Item label=\"Loại thuốc\" name=\"drug_category\" initialValue={drugDetail?.drug_category.id}>\n          <Select loading={catLoading}>\n            {\n              categories.map(cat => (\n                <Select.Option key={cat.id} value={cat.id}>{cat.name}</Select.Option>\n              ))\n            }\n          </Select>\n        </Form.Item>\n\n        <Form.Item label=\"Đơn vị tính\" name=\"drug_unit\" initialValue={drugDetail?.drug_unit.id}>\n          <Select loading={unitLoading}>\n            {\n              units.map(cat => (\n                <Select.Option key={cat.id} value={cat.id}>{cat.name}</Select.Option>\n              ))\n            }\n          </Select>\n        </Form.Item>\n      </Form>\n    </Spin>\n  )\n}\n\nexport default DrugForm;","import React, { useState, useEffect } from 'react';\nimport { Row, Col, Button, Modal, Table, Form, Popconfirm, Space } from 'antd';\nimport { PlusOutlined, EditOutlined, DeleteOutlined } from '@ant-design/icons';\nimport DrugForm from 'forms/DrugForm/DrugForm';\nimport { getDrugsAPI, addDrugAPI, updateDrugAPI, deleteDrugAPI } from 'services/admin/drug.service';\nimport { formActions } from 'constant/formActions';\nimport NumberFormat from 'react-number-format';\n\nconst DrugPage = () => {\n\n  const [modalVisible, setModalVisible] = useState(false);\n  const [drugs, setDrugs] = useState();\n  const [fetchingDrugs, setFetchingDrugs] = useState(false);\n  const [modalLoading, setModalLoading] = useState(false);\n  const [action, setAction] = useState(formActions.CREATE);\n  const [selectedDrug, setSelectedDrug] = useState(null);\n  const [drugForm] = Form.useForm();\n\n  const tableColumns = [\n    {\n      title: '#',\n      key: '#',\n      render: (text, record, index) => index + 1\n    },\n    {\n      title: 'Mã thuốc',\n      key: 'code',\n      dataIndex: 'code'\n    },\n    {\n      title: 'Tên thuốc',\n      key: 'name',\n      dataIndex: 'name'\n    },\n    {\n      title: 'Giá',\n      key: 'price',\n      dataIndex: 'price',\n      render: (text, record, index) => (<NumberFormat thousandSeparator=\" \" suffix=\" VNĐ\" value={text} displayType=\"text\" />)\n    },\n    {\n      title: 'Hành động',\n      key: 'action',\n      render: (text, record, index) => (\n        <Space size={10}>\n          <Button icon={<EditOutlined />} onClick={() => handleEditClick(record)}></Button>\n          <Popconfirm\n            onConfirm={() => handleDelete(record)} title=\"Bạn có chắc muốn xóa không?\"\n            okText=\"Xóa\"\n            okType=\"danger\"\n            cancelText=\"Hủy bỏ\">\n            <Button icon={<DeleteOutlined />}></Button>\n          </Popconfirm>\n        </Space>\n      )\n    }\n  ]\n\n  function handleOpenModal() {\n    setAction(formActions.CREATE);\n    setModalVisible(true);\n  }\n\n  function handleCloseModal() {\n    setModalVisible(false);\n  }\n\n  async function getDrugs() {\n    try {\n      setFetchingDrugs(true);\n      const response = await getDrugsAPI();\n      setDrugs(response.data.results);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setFetchingDrugs(false);\n    }\n  }\n\n  async function handleFormSubmit() {\n    try {\n      setModalLoading(true);\n      const values = await drugForm.validateFields();\n      const data = {\n        code: values.code,\n        name: values.name,\n        price: values.price,\n        drug_category: values.drug_category,\n        drug_unit: values.drug_unit\n      }\n      if (action === formActions.CREATE) {\n        await addDrugAPI(data);\n      }\n\n      if (action === formActions.UPDATE) {\n        await updateDrugAPI(selectedDrug.id, data);\n      }\n\n      getDrugs();\n\n      setModalVisible(false);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setModalLoading(false);\n      drugForm.resetFields();\n    }\n  }\n\n  function handleEditClick(drug) {\n    setAction(formActions.UPDATE);\n    setSelectedDrug(drug);\n    setModalVisible(true);\n  }\n\n  async function handleDelete(drug) {\n    try {\n      await deleteDrugAPI(drug.id);\n      getDrugs();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  function afterClose() {\n    drugForm.resetFields();\n    setSelectedDrug(null);\n  }\n\n  useEffect(() => {\n    getDrugs();\n  }, []);\n\n  return (\n    <>\n      <Row justify=\"space-between\">\n        <Col><h1 className=\"text-xl\">Quản lý thuốc</h1></Col>\n        <Col>\n          <Button type=\"primary\" icon={<PlusOutlined />} onClick={handleOpenModal}>Tạo mới</Button>\n        </Col>\n      </Row>\n      <Table\n        rowKey=\"id\"\n        columns={tableColumns}\n        dataSource={drugs}\n        loading={fetchingDrugs} />\n      <Modal\n        visible={modalVisible}\n        title={action === formActions.CREATE ? 'Thêm thuốc' : 'Cập nhật thuốc'}\n        onCancel={handleCloseModal}\n        confirmLoading={modalLoading}\n        destroyOnClose={true}\n        afterClose={afterClose}\n        onOk={handleFormSubmit}>\n        <DrugForm onFinish={handleFormSubmit} form={drugForm} defaultDrug={selectedDrug} />\n      </Modal>\n    </>\n  )\n}\n\nexport default DrugPage;","import React from 'react';\nimport { Form, Input } from 'antd';\n\nconst DrugInstructionForm = props => {\n  const { form, onFinish, defaultInstruction } = props;\n\n  return (\n    <Form\n      layout=\"vertical\"\n      form={form}\n      onFinish={onFinish}>\n      <Form.Item label=\"Hướng dẫn sử dụng\" name=\"instruction\" initialValue={defaultInstruction?.instruction}>\n        <Input autoFocus />\n      </Form.Item>\n    </Form>\n  )\n}\n\nexport default DrugInstructionForm;","import axios from 'axios';\n\nimport { API_URL } from \"constant/apiUrl\";\n\nconst endpointPrefix = `${API_URL}/admin/manage-drug-instruction`;\n\nexport function getDrugInstructionsAPI() {\n  const url = `${endpointPrefix}/`;\n  return axios.get(url);\n}\n\nexport function addDrugInstructionAPI(instruction) {\n  const url = `${endpointPrefix}/`;\n  return axios.post(url, { instruction: instruction });\n}\n\nexport function updateDrugInstructionAPI(id, instruction) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.put(url, {\n    instruction: instruction\n  })\n}\n\nexport function deleteDrugInstructionAPI(id) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.delete(url);\n}","import React, { useState, useEffect } from 'react';\nimport { Row, Col, Button, Modal, Table, Form, Popconfirm, Space } from 'antd';\nimport { PlusOutlined, EditOutlined, DeleteOutlined } from '@ant-design/icons';\nimport DrugInstructionForm from 'forms/DrugInstructionForm/DrugInstructionForm';\nimport { getDrugInstructionsAPI, addDrugInstructionAPI, updateDrugInstructionAPI, deleteDrugInstructionAPI } from 'services/admin/drug-instruction.service';\nimport { formActions } from 'constant/formActions';\n\nconst DrugInstructionPage = () => {\n\n  const [modalVisible, setModalVisible] = useState(false);\n  const [drugInstructions, setDrugInstructions] = useState([]);\n  const [fetchingDrugInstructions, setFetchingDrugInstructions] = useState(false);\n  const [modalLoading, setModalLoading] = useState(false);\n  const [action, setAction] = useState(formActions.CREATE);\n  const [selectedInstruction, setSelectedInstruction] = useState(null);\n  const [drugInstructionForm] = Form.useForm();\n\n  const tableColumns = [\n    {\n      title: '#',\n      key: '#',\n      render: (text, record, index) => index + 1\n    },\n    {\n      title: 'Hướng dẫn sử dụng',\n      key: 'instruction',\n      dataIndex: 'instruction'\n    },\n    {\n      title: 'Hành động',\n      key: 'action',\n      render: (text, record, index) => (\n        <Space size={10}>\n          <Button icon={<EditOutlined />} onClick={() => handleEditClick(record)}></Button>\n          <Popconfirm\n            onConfirm={() => handleDelete(record)} title=\"Bạn có chắc muốn xóa không?\"\n            okText=\"Xóa\"\n            okType=\"danger\"\n            cancelText=\"Hủy bỏ\">\n            <Button icon={<DeleteOutlined />}></Button>\n          </Popconfirm>\n        </Space>\n      )\n    }\n  ]\n\n  function handleOpenModal() {\n    setAction(formActions.CREATE);\n    setModalVisible(true);\n  }\n\n  function handleCloseModal() {\n    setModalVisible(false);\n  }\n\n  async function getDrugInstructions() {\n    try {\n      setFetchingDrugInstructions(true);\n      const response = await getDrugInstructionsAPI();\n      setDrugInstructions(response.data);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setFetchingDrugInstructions(false);\n    }\n  }\n\n  async function handleFormSubmit() {\n    try {\n      setModalLoading(true);\n      const values = await drugInstructionForm.validateFields();\n      if (action === formActions.CREATE) {\n        await addDrugInstructionAPI(values.instruction);\n      }\n\n      if (action === formActions.UPDATE) {\n        await updateDrugInstructionAPI(selectedInstruction.id, values.instruction);\n      }\n\n      getDrugInstructions();\n\n      setModalVisible(false);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setModalLoading(false);\n      drugInstructionForm.resetFields();\n    }\n  }\n\n  function handleEditClick(ins) {\n    setAction(formActions.UPDATE);\n    setSelectedInstruction(ins);\n    setModalVisible(true);\n  }\n\n  async function handleDelete(unit) {\n    try {\n      await deleteDrugInstructionAPI(unit.id);\n      getDrugInstructions();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  function afterClose() {\n    drugInstructionForm.resetFields();\n    setSelectedInstruction(null);\n  }\n\n  useEffect(() => {\n    getDrugInstructions();\n  }, []);\n\n  return (\n    <>\n      <Row justify=\"space-between\">\n        <Col><h1 className=\"text-xl\">Quản lý hướng dẫn sử dụng</h1></Col>\n        <Col>\n          <Button type=\"primary\" icon={<PlusOutlined />} onClick={handleOpenModal}>Tạo mới</Button>\n        </Col>\n      </Row>\n      <Table\n        rowKey=\"id\"\n        columns={tableColumns}\n        dataSource={drugInstructions}\n        loading={fetchingDrugInstructions} />\n      <Modal\n        visible={modalVisible}\n        title={action === formActions.CREATE ? 'Thêm hướng dẫn sử dụng' : 'Cập nhật hướng dẫn sử dụng'}\n        onCancel={handleCloseModal}\n        confirmLoading={modalLoading}\n        destroyOnClose={true}\n        afterClose={afterClose}\n        onOk={handleFormSubmit}>\n        <DrugInstructionForm onFinish={handleFormSubmit} form={drugInstructionForm} defaultInstruction={selectedInstruction} />\n      </Modal>\n    </>\n  )\n}\n\nexport default DrugInstructionPage;","import React from 'react';\nimport { Form, Input } from 'antd';\n\nconst DiseaseCategoryForm = props => {\n  const { form, onFinish, defaultCategory } = props;\n\n  return (\n    <Form\n      layout=\"vertical\"\n      form={form}\n      onFinish={onFinish}>\n      <Form.Item label=\"Loại bệnh\" name=\"name\" initialValue={defaultCategory?.name}>\n        <Input autoFocus />\n      </Form.Item>\n    </Form>\n  )\n}\n\nexport default DiseaseCategoryForm;","import axios from 'axios';\n\nimport { API_URL } from \"constant/apiUrl\";\n\nconst endpointPrefix = `${API_URL}/admin/manage-disease-category`;\n\nexport function getDiseaseCategoryAPI(search = \"\") {\n  const url = `${endpointPrefix}/?search=${search}`;\n  return axios.get(url);\n}\n\nexport function addDiseaseCategoryAPI(name) {\n  const url = `${endpointPrefix}/`;\n  return axios.post(url, { name: name });\n}\n\nexport function updateDiseaseCategoryAPI(id, name) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.put(url, {\n    name: name\n  })\n}\n\nexport function deleteDiseaseCategoryAPI(id) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.delete(url);\n}","import React, { useState, useEffect } from 'react';\nimport { Row, Col, Button, Modal, Table, Form, Popconfirm, Space } from 'antd';\nimport { PlusOutlined, EditOutlined, DeleteOutlined } from '@ant-design/icons';\nimport DiseaseCategoryForm from 'forms/DiseaseCategoryForm/DiseaseCategoryForm';\nimport { addDiseaseCategoryAPI, deleteDiseaseCategoryAPI, getDiseaseCategoryAPI, updateDiseaseCategoryAPI } from 'services/admin/disease-category.service';\nimport { formActions } from 'constant/formActions';\n\nconst DiseaseCategoryPage = () => {\n\n  const [modalVisible, setModalVisible] = useState(false);\n  const [categories, setCategories] = useState([]);\n  const [fetchingCategories, setFetchingCategories] = useState(false);\n  const [modalLoading, setModalLoading] = useState(false);\n  const [action, setAction] = useState(formActions.CREATE);\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [diseaseCategoryForm] = Form.useForm();\n\n  const tableColumns = [\n    {\n      title: '#',\n      key: '#',\n      render: (text, record, index) => index + 1\n    },\n    {\n      title: 'Tên',\n      key: 'name',\n      dataIndex: 'name'\n    },\n    {\n      title: 'Hành động',\n      key: 'action',\n      render: (text, record, index) => (\n        <Space size={10}>\n          <Button icon={<EditOutlined />} onClick={() => handleEditClick(record)}></Button>\n          <Popconfirm\n            onConfirm={() => handleDelete(record)} title=\"Bạn có chắc muốn xóa không?\"\n            okText=\"Xóa\"\n            okType=\"danger\"\n            cancelText=\"Hủy bỏ\">\n            <Button icon={<DeleteOutlined />}></Button>\n          </Popconfirm>\n        </Space>\n      )\n    }\n  ]\n\n  function handleOpenModal() {\n    setAction(formActions.CREATE);\n    setModalVisible(true);\n  }\n\n  function handleCloseModal() {\n    setModalVisible(false);\n  }\n\n  async function getDiseaseCategories() {\n    try {\n      setFetchingCategories(true);\n      const response = await getDiseaseCategoryAPI();\n      setCategories(response.data);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setFetchingCategories(false);\n    }\n  }\n\n  async function handleFormSubmit() {\n    try {\n      setModalLoading(true);\n      const values = await diseaseCategoryForm.validateFields();\n      if (action === formActions.CREATE) {\n        await addDiseaseCategoryAPI(values.name);\n      }\n\n      if (action === formActions.UPDATE) {\n        await updateDiseaseCategoryAPI(selectedCategory.id, values.name);\n      }\n\n      getDiseaseCategories();\n\n      setModalVisible(false);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setModalLoading(false);\n      diseaseCategoryForm.resetFields();\n    }\n  }\n\n  function handleEditClick(category) {\n    setAction(formActions.UPDATE);\n    setSelectedCategory(category);\n    setModalVisible(true);\n  }\n\n  async function handleDelete(unit) {\n    try {\n      await deleteDiseaseCategoryAPI(unit.id);\n      getDiseaseCategories();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  function afterClose() {\n    diseaseCategoryForm.resetFields();\n    setSelectedCategory(null);\n  }\n\n  useEffect(() => {\n    getDiseaseCategories();\n  }, []);\n\n  return (\n    <>\n      <Row justify=\"space-between\">\n        <Col><h1 className=\"text-xl\">Quản lý loại bệnh</h1></Col>\n        <Col>\n          <Button type=\"primary\" icon={<PlusOutlined />} onClick={handleOpenModal}>Tạo mới</Button>\n        </Col>\n      </Row>\n      <Table\n        rowKey=\"id\"\n        columns={tableColumns}\n        dataSource={categories}\n        \n        loading={fetchingCategories} />\n      <Modal\n        visible={modalVisible}\n        title={action === formActions.CREATE ? 'Thêm loại bệnh' : 'Cập nhật loại bệnh'}\n        onCancel={handleCloseModal}\n        confirmLoading={modalLoading}\n        destroyOnClose={true}\n        afterClose={afterClose}\n        onOk={handleFormSubmit}>\n        <DiseaseCategoryForm onFinish={handleFormSubmit} form={diseaseCategoryForm} defaultCategory={selectedCategory} />\n      </Modal>\n    </>\n  )\n}\n\nexport default DiseaseCategoryPage;","import React from 'react';\n\nconst DiseasePage = () => {\n  return (\n    <div>Disease Page</div>\n  )\n}\n\nexport default DiseasePage;","import React from 'react';\n\nconst NotificationPage = () => {\n  return (\n    <div>Notification Page</div>\n  )\n}\n\nexport default NotificationPage;","import React from 'react';\n\nconst VisitPage = () => {\n  return (\n    <div>Visit page</div>\n  )\n}\n\nexport default VisitPage;","import React from 'react';\n\nconst PatientPage = () => {\n  return (\n    <div>Patient page</div>\n  )\n}\n\nexport default PatientPage; ","import React from 'react';\n\nconst AppointmentPage = () => {\n  return (\n    <div>Appointment Page</div>\n  )\n}\n\nexport default AppointmentPage;","import React from 'react';\n\nconst ServicePage = () => {\n  return (\n    <div>Service Page</div>\n  )\n}\n\nexport default ServicePage;","import React from 'react';\n\nconst WorkingHourPage = () => {\n  return (\n    <div>WorkingHour Page</div>\n  )\n}\n\nexport default WorkingHourPage;","import React from 'react';\n\nconst RoomPage = () => {\n  return (\n    <div>RoomPage</div>\n  )\n}\n\nexport default RoomPage;","import React from 'react';\n\nconst AdminAccountPage = () => {\n  return (\n    <div>Account Page</div>\n  )\n}\n\nexport default AdminAccountPage;","import React from 'react';\n\nconst AdminSettingPage = () => {\n  return (\n    <div>Admin setting page</div>\n  )\n}\n\nexport default AdminSettingPage;","import React, { useEffect } from 'react';\nimport Cookie from 'js-cookie';\nimport { Redirect } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { logoutAction } from 'store/actions/auth.action';\nimport jwtDecode from 'jwt-decode';\n\nconst withPrivateRoute = (Child, roles) => {\n  const WrapperComponent = (props) => {\n\n    const dispatch = useDispatch();\n    const token = Cookie.get('EMR_token');\n    const refresh = Cookie.get('EMR_refresh');\n    const user = useSelector((state) => state.userState.user);\n\n    function isValidRole(user) {\n      const userRole = user?.role.name;\n      const isValid = roles.includes(userRole);\n      return isValid;\n    }\n\n    useEffect(() => {\n      if (user && user.role) {\n        if (!isValidRole(user)) {\n          dispatch(logoutAction());\n        }\n      }\n    }, [user]);\n\n    try {\n      if (!token || token.length === 0 || !jwtDecode(token)) {\n        return <Redirect to=\"/login\" />;\n      } else {\n        return <Child {...props} />\n      }\n      \n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  return WrapperComponent;\n}\n\nexport default withPrivateRoute;","import React from 'react';\nimport { Button, Layout, Modal } from 'antd';\nimport {\n  UserOutlined,\n  LogoutOutlined,\n  ExclamationCircleOutlined\n} from '@ant-design/icons';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { logoutAction } from 'store/actions/auth.action';\n\nconst { Header } = Layout;\n\nconst CustomHeader = () => {\n\n  const dispatch = useDispatch();\n  const user = useSelector((state) => state.userState.user);\n\n  function handleLogout() {\n    Modal.confirm({\n      title: \"Đăng xuất\",\n      icon: <ExclamationCircleOutlined />,\n      content: \"Bạn có chắc muốn đăng xuất không?\",\n      onOk() {\n        dispatch(logoutAction());\n      }\n    })\n  }\n\n  return (\n    <Header className=\"header flex items-center\">\n      <div className=\"text-2xl text-white\">EMR</div>\n      <div className=\"ml-auto\"></div>\n      <div className=\"text-white\">{user?.first_name} {user?.last_name} <span className=\"ml-3\">|</span></div>\n      <Button type=\"default\" ghost icon={<LogoutOutlined />} className=\"border-none\" onClick={handleLogout}>Đăng xuất</Button>\n    </Header>\n  )\n}\n\nexport default CustomHeader;","import React from 'react';\nimport { Link, Redirect, Switch, Route, useRouteMatch, useLocation } from 'react-router-dom';\nimport { Layout, Menu } from 'antd';\nimport {\n  UserOutlined,\n  DashboardOutlined,\n  MedicineBoxOutlined,\n  BugOutlined,\n  DollarOutlined,\n  IdcardOutlined,\n  ClockCircleOutlined,\n  AppstoreOutlined,\n  CalendarOutlined,\n  ContainerOutlined,\n  SettingOutlined,\n  NotificationOutlined} from '@ant-design/icons';\nimport AdminDashboard from 'pages/admin/dashboard';\nimport DrugCategoryPage from 'pages/common/drug/drug-category';\nimport DrugUnitPage from 'pages/common/drug/drug-unit';\nimport DrugPage from 'pages/common/drug/drug';\nimport DrugInstructionPage from 'pages/common/drug/drug-instruction';\nimport DiseaseCategory from 'pages/common/disease/disease-category';\nimport DiseasePage from 'pages/common/disease/disease';\nimport NotificationPage from 'pages/common/notification/notification';\nimport VisitPage from 'pages/common/visit/visit';\nimport PatientPage from 'pages/common/patient/patient';\nimport AppointmentPage from 'pages/common/appointment/apointment';\nimport ServicePage from 'pages/common/service/service';\nimport WorkingHourPage from 'pages/common/working-hour/working-hour';\nimport RoomPage from 'pages/common/room/room';\nimport AdminAccountPage from 'pages/admin/account';\nimport AdminSettingPage from 'pages/admin/setting';\nimport withPrivateRoute from 'HOCs/withPrivateRoute';\nimport CustomHeader from 'components/Header';\n\nconst { Sider, Content } = Layout;\nconst { SubMenu } = Menu;\n\nconst AdminLayout = () => {\n  const match = useRouteMatch();\n  const location = useLocation();\n  const path = match.path;\n\n  return (\n    <Layout>\n      <CustomHeader />\n      <Layout>\n        <Sider width={200} className=\"site-layout-background\">\n          <Menu\n            mode=\"inline\"\n            style={{ height: '100%', borderRight: 0 }}\n            selectedKeys={[location.pathname]}\n          >\n            <Menu.Item key=\"/admin/dashboard\" icon={<DashboardOutlined />}>\n              <Link to=\"/admin/dashboard\">Bảng điều khiển</Link>\n            </Menu.Item>\n            <SubMenu key=\"drug\" icon={<MedicineBoxOutlined />} title=\"Quản lý thuốc\">\n              <Menu.Item key=\"/admin/drug/category\">\n                <Link to=\"/admin/drug/category\">Loại thuốc</Link>\n              </Menu.Item>\n              <Menu.Item key=\"/admin/drug/unit\">\n                <Link to=\"/admin/drug/unit\">Đơn vị tính</Link>\n              </Menu.Item>\n              <Menu.Item key=\"/admin/drug\">\n                <Link to=\"/admin/drug\">Thuốc</Link>\n              </Menu.Item>\n              <Menu.Item key=\"/admin/drug/instruction\">\n                <Link to=\"/admin/drug/instruction\">Hướng dẫn sử dụng</Link>\n              </Menu.Item>\n            </SubMenu>\n            <SubMenu key=\"disease\" icon={<BugOutlined />} title=\"Quản lý bệnh\">\n              <Menu.Item key=\"/admin/disease/category\">\n                <Link to=\"/admin/disease/category\">Loại bệnh</Link>\n              </Menu.Item>\n              <Menu.Item key=\"/admin/disease\">\n                <Link to=\"/admin/disease\">Bệnh</Link>\n              </Menu.Item>\n            </SubMenu>\n\n            <Menu.Item key=\"/admin/notification\" icon={<NotificationOutlined />}>\n              <Link to=\"/admin/notification\">Thông báo</Link>\n            </Menu.Item>\n            <Menu.Item key=\"/admin/visit\" icon={<ContainerOutlined />}>\n              <Link to=\"/admin/visit\">Khám chữa bệnh</Link>\n            </Menu.Item>\n            <Menu.Item key=\"/admin/patient\" icon={<IdcardOutlined />}>\n              <Link to=\"/admin/patient\">Bệnh nhân</Link>\n            </Menu.Item>\n            <Menu.Item key=\"/admin/appointment\" icon={<CalendarOutlined />}>\n              <Link to=\"/admin/appointment\">Lịch hẹn</Link>\n            </Menu.Item>\n            <Menu.Item key=\"/admin/service\" icon={<DollarOutlined />}>\n              <Link to=\"/admin/service\">Dịch vụ</Link>\n            </Menu.Item>\n\n            <Menu.Item key=\"/admin/working-hour\" icon={<ClockCircleOutlined />}>\n              <Link to=\"/admin/working-hour\">Giờ làm việc</Link>\n            </Menu.Item>\n            <Menu.Item key=\"/admin/room\" icon={<AppstoreOutlined />}>\n              <Link to=\"/admin/room\">Phòng</Link>\n            </Menu.Item>\n\n            <Menu.Item key=\"/admin/account\" icon={<UserOutlined />}>\n              <Link to=\"/admin/account\">Tài khoản</Link>\n            </Menu.Item>\n            <Menu.Item key=\"/admin/setting\" icon={<SettingOutlined />}>\n              <Link to=\"/admin/setting\">Cài đặt</Link>\n            </Menu.Item>\n          </Menu>\n        </Sider>\n        <Layout style={{ padding: '0 24px 24px' }}>\n          <Content\n            className=\"site-layout-background\"\n            style={{\n              padding: 24,\n              margin: 0,\n              minHeight: 280,\n            }}\n          >\n            <Switch>\n              {/* Dashboard */}\n              <Route path={`${path}/dashboard`}>\n                <AdminDashboard />\n              </Route>\n\n              {/* Drug */}\n              <Route path={`${path}/drug/category`}>\n                <DrugCategoryPage />\n              </Route>\n              <Route path={`${path}/drug/unit`}>\n                <DrugUnitPage />\n              </Route>\n              <Route path={`${path}/drug`} exact>\n                <DrugPage />\n              </Route>\n              <Route path={`${path}/drug/instruction`}>\n                <DrugInstructionPage />\n              </Route>\n\n              {/* Disease */}\n              <Route path={`${path}/disease/category`}>\n                <DiseaseCategory />\n              </Route>\n              <Route path={`${path}/disease`}>\n                <DiseasePage />\n              </Route>\n\n              {/* Notification */}\n              <Route path={`${path}/notification`}>\n                <NotificationPage />\n              </Route>\n\n              {/* Visit */}\n              <Route path={`${path}/visit`}>\n                <VisitPage />\n              </Route>\n\n              {/* Patient */}\n              <Route path={`${path}/patient`}>\n                <PatientPage />\n              </Route>\n\n              {/* Appointment */}\n              <Route path={`${path}/appointment`}>\n                <AppointmentPage />\n              </Route>\n\n              {/* Service */}\n              <Route path={`${path}/service`}>\n                <ServicePage />\n              </Route>\n\n              {/* Service */}\n              <Route path={`${path}/working-hour`}>\n                <WorkingHourPage />\n              </Route>\n\n              {/* Room */}\n              <Route path={`${path}/room`}>\n                <RoomPage />\n              </Route>\n\n              {/* Room */}\n              <Route path={`${path}/account`}>\n                <AdminAccountPage />\n              </Route>\n\n              {/* Room */}\n              <Route path={`${path}/setting`}>\n                <AdminSettingPage />\n              </Route>\n\n              {/* Fallback */}\n              <Redirect to={`/admin/dashboard`} />\n            </Switch>\n          </Content>\n        </Layout>\n      </Layout>\n    </Layout>\n  )\n}\n\nexport default withPrivateRoute(AdminLayout, ['admin']);","import React, { useEffect } from 'react';\nimport { Route, HashRouter as Router, Switch, Redirect  } from 'react-router-dom';\nimport LoginPage from 'pages/login';\nimport Cookie from 'js-cookie';\nimport jwtDecode from 'jwt-decode';\nimport AdminLayout from 'layouts/AdminLayout/AdminLayout';\nimport setupInterceptor from 'utils/interceptor';\nimport { useDispatch } from 'react-redux';\nimport { getProfileAction } from 'store/actions/user.action';\nimport { refreshToken } from 'services/auth/auth.service';\n\n// import \"normalize.css/normalize.css\";\n// import \"@blueprintjs/core/lib/css/blueprint.css\";\n// import \"@blueprintjs/icons/lib/css/blueprint-icons.css\";\nimport 'antd/dist/antd.css';\nimport 'styles/main.scss';\n\nfunction App() {\n\n  setupInterceptor();\n\n  const dispatch = useDispatch();\n\n  function fetchProfile() {\n    try {\n      const token = Cookie.get('EMR_token');\n      if (token && jwtDecode(token)) {\n        dispatch(getProfileAction());\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async function checkRefresh() {\n    try {\n      const token = Cookie.get('EMR_token');\n      const refresh = Cookie.get('EMR_refresh');\n      if (!token && refresh) {\n        const newTokenReponse = await refreshToken(refresh);\n        const newToken = newTokenReponse.data;\n        Cookie.set('EMR_token', newToken.access_token, { expires: 3/24 });\n      }\n      fetchProfile();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  useEffect(() => {\n    checkRefresh();\n  });\n  \n  return (\n    <div className=\"app\">\n      <Router>\n        <Switch>\n          <Route path=\"/login\">\n            <LoginPage />\n          </Route>\n\n          <Route path=\"/admin\" component={AdminLayout} />\n\n          <Redirect to=\"/login\" />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import axios from 'axios';\nimport { message } from 'antd';\nimport Cookie from 'js-cookie';\nimport * as AuthService from 'services/auth/auth.service';\nimport jwtDecode from 'jwt-decode';\nimport { API_URL } from 'constant/apiUrl';\n\nexport default function setupInterceptor() {\n  axios.interceptors.request.use((config) => {\n\n    if (config.method === 'delete') {\n      message.loading('Đang thực hiện');\n    }\n\n    try {\n      const token = Cookie.get('EMR_token');\n      if (token && jwtDecode(token)) {\n        config.headers['Authorization'] = `Bearer ${token}`;\n      }\n    } catch (error) {\n      console.log(error);\n    }\n    return config;\n  }, (error) => Promise.reject(error));\n\n  axios.interceptors.response.use(((res) => {\n    switch (res.config.method) {\n      case \"post\":\n        console.log(res.data);\n        if (res.data.id) {\n          // Check if new object created because login is also a post request\n          message.success({\n            content: \"Tạo thành công\"\n          });\n        }\n\n        break;\n      case \"put\":\n      case \"patch\":\n        message.success({\n          content: \"Cập nhật thành công\"\n        });\n        break;\n      case \"delete\":\n        message.destroy();\n        message.success({\n          content: \"Xóa thành công\"\n        });\n        break;\n    }\n    return res;\n  }), async (error) => {\n    const originalRequest = error.config;\n\n    if (error.response.status === 401 && !originalRequest._retry && originalRequest.url !== `${API_URL}/auth/refresh-token/`) {\n      Cookie.remove(\"EMR_token\");\n\n      originalRequest._retry = true;\n\n      let refreshToken = Cookie.get('EMR_refresh');\n\n      if (refreshToken && refreshToken.length > 0) {\n        try {\n          const refreshResponse = await AuthService.refreshToken(refreshToken);\n          const newToken = refreshResponse.data.access_token;\n          Cookie.set('EMR_token', newToken);\n\n          const config = error.config;\n          config.headers['Authorization'] = `Bearer ${newToken}`;\n\n          return new Promise((resolve, reject) => {\n            return axios.request(config)\n              .then(res => resolve(res))\n              .catch(error => reject(error))\n          })\n        } catch (error) {\n          Cookie.remove(\"EMR_refresh\");\n          return Promise.reject(error);\n        }\n      }\n    } else {\n      const errorMessage = error.response?.data.message || \"Unexpected error occurred\";\n      message.error(errorMessage);\n    }\n\n    return Promise.reject(error);\n  })\n}","import * as actionTypes from '../actionTypes';\n\nconst initialState = {\n  loginLoading: false\n}\n\nexport default function authReducer (state = initialState, action) {\n  switch(action.type) {\n    case actionTypes.LOGIN_PENDING:\n      return {\n        ...state,\n        loginLoading: true\n      }\n\n    case actionTypes.LOGIN_SUCCESS:\n      return {\n        ...state,\n        loginLoading: false\n      }\n\n    case actionTypes.LOGIN_FAILURE:\n      return {\n        ...state,\n        loginLoading: false\n      }\n\n    default:\n      return {\n        ...state\n      }\n  }\n}","import * as actionTypes from '../actionTypes';\n\nconst initialState = {\n  user: null,\n  getProfileLoading: false,\n}\n\nexport default function userReducer(state = initialState, action) {\n  switch (action.type) {\n    case actionTypes.GET_PROFILE_PENDING:\n      return {\n        ...state,\n        user: null,\n        getProfileLoading: true\n      }\n    case actionTypes.GET_PROFILE_SUCCESS:\n      return {\n        ...state,\n        user: action.payload,\n        getProfileLoading: false\n      }\n    case actionTypes.GET_PROFILE_FAILURE:\n      return {\n        ...state,\n        user: null,\n        getProfileLoading: false\n      }\n    \n    case actionTypes.LOGOUT:\n      return {\n        ...state,\n        user: null,\n        getProfileLoading: false\n      }\n    default:\n      return { ...state }\n  }\n}","import { combineReducers } from 'redux';\nimport authReducer from './reducers/auth.reducer';\nimport userReducer from './reducers/user.reducer';\n\nconst rootReducer = combineReducers({\n  userState: userReducer,\n  authState: authReducer\n})\n\nexport default rootReducer;","import { createStore, compose, applyMiddleware } from 'redux';\nimport rootReducer from './rootReducer';\nimport thunk from 'redux-thunk';\n\nconst middlewares = [thunk]\n\nconst composeEnhancers =\n  typeof window === 'object' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : compose;\n\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(...middlewares)));\n\nexport default store;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from 'store/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}