{"version":3,"sources":["components/Circle/Circle.module.scss","components/Icons/LoginIcon.jsx","store/actionTypes.js","constant/apiUrl.js","services/auth/auth.service.js","services/user/user.service.js","store/actions/user.action.js","store/actions/auth.action.js","forms/LoginForm/LoginForm.jsx","utils/routing.js","pages/login.jsx","pages/admin/dashboard.jsx","forms/DrugCategoryForm/DrugCategoryForm.jsx","services/admin/drug-category.service.js","constant/formActions.js","utils/string.js","pages/common/drug/drug-category.jsx","store/actions/drug-category.action.js","forms/DrugUnitForm/DrugUnitForm.jsx","services/admin/drug-unit.service.js","pages/common/drug/drug-unit.jsx","forms/DrugRouteForm/DrugRouteForm.jsx","services/admin/drug-route.service.js","pages/common/drug/drug-route.jsx","services/admin/drug.service.js","services/admin/drug-dosage-form.service.js","forms/DrugForm/DrugForm.jsx","pages/common/drug/drug.jsx","forms/DrugInstructionForm/DrugInstructionForm.jsx","services/admin/drug-instruction.service.js","pages/common/drug/drug-instruction.jsx","forms/DiseaseCategoryForm/DiseaseCategoryForm.jsx","services/admin/disease-category.service.js","pages/common/disease/disease-category.jsx","services/admin/disease.service.js","forms/DiseaseForm/DiseaseForm.jsx","pages/common/disease/disease.jsx","pages/common/notification/notification.jsx","services/user/room.service.js","services/admin/room.service.js","services/user/visit.service.js","services/admin/visit.service.js","services/user/emr.service.js","pages/common/visit/visit.jsx","services/user/patient.service.js","pages/common/patient/patient.jsx","pages/common/appointment/apointment.jsx","services/admin/medical-service.service.js","forms/ServiceForm/ServiceForm.jsx","pages/common/service/service.jsx","services/admin/working-hours.service.js","pages/admin/working-hour.jsx","forms/RoomForm/RoomForm.jsx","pages/common/room/room.jsx","services/admin/user.service.js","constant/roles.js","constant/formRules.js","forms/UserForm/UserForm.jsx","components/Circle/Circle.jsx","pages/admin/account.jsx","pages/admin/setting.jsx","HOCs/withPrivateRoute.jsx","components/Header.jsx","forms/DrugDosageFormForm/DrugDosageFormForm.jsx","pages/common/drug/drug-dosage-form.jsx","layouts/AdminLayout/AdminLayout.jsx","utils/image.js","forms/Visit/VisitImagesForm.jsx","constant/quill.js","services/user/medical-service.service.js","services/user/drug-category.service.js","services/user/drug-instruction.service.js","services/user/drug.service.js","components/DiseaseSelect/DiseaseSelect.jsx","pages/common/examination/examination.jsx","store/actions/disease-category.action.js","store/actions/disease.action.js","pages/common/profile/profile.jsx","pages/common/patient/patient-details.jsx","components/EmrDesc/EmrDesc.jsx","pages/common/patient/emr-details.jsx","layouts/PhysicianLayout/PhysicianLayout.jsx","forms/PatientForm/PatientForm.jsx","pages/receptionist/receive.jsx","layouts/ReceptionistLayout/ReceptionistLayout.jsx","components/Icons/EmailIcon.jsx","pages/verify-email.jsx","services/patient/emr.service.js","pages/patient/emr.jsx","pages/patient/patient-emr-details.jsx","layouts/PatientLayout/PatientLayout.jsx","App.jsx","utils/interceptor.js","store/reducers/auth.reducer.js","store/reducers/disease-category.reducer.js","store/reducers/disease.reducer.js","store/reducers/drug-category.reducer.js","store/reducers/user.reducer.js","store/rootReducer.js","store/store.js","serviceWorker.js","index.jsx"],"names":["module","exports","LoginIcon","width","height","xmlns","xmlnsXlink","version","id","x","y","viewBox","fill","xmlSpace","cx","cy","r","d","LOGIN_PENDING","LOGIN_SUCCESS","LOGIN_FAILURE","LOGOUT","CREATE_DRUG_CATEGORY_PENDING","CREATE_DRUG_CATEGORY_SUCCESS","CREATE_DRUG_CATEGORY_FAILURE","FETCH_DRUG_CATEGORIES_PENDING","FETCH_DRUG_CATEGORIES_SUCCESS","FETCH_DRUG_CATEGORIES_FAILURE","FETCH_DRUG_CATEGORY_DETAILS_PENDING","FETCH_DRUG_CATEGORY_DETAILS_SUCCESS","FETCH_DRUG_CATEGORY_DETAILS_FAILURE","UPDATE_DRUG_CATEGORY_PENDING","UPDATE_DRUG_CATEGORY_SUCCESS","UPDATE_DRUG_CATEGORY_FAILURE","DELETE_DRUG_CATEGORY_PENDING","DELETE_DRUG_CATEGORY_SUCCESS","DELETE_DRUG_CATEGORY_FAILURE","GET_PROFILE_PENDING","GET_PROFILE_SUCCESS","GET_PROFILE_FAILURE","FETCH_DISEASE_CATEGORIES_PENDING","FETCH_DISEASE_CATEGORIES_SUCCESS","FETCH_DISEASE_CATEGORIES_FAILURE","FETCH_DISEASES_PENDING","FETCH_DISEASES_SUCCESS","FETCH_DISEASES_FAILURE","API_URL","NODE_URL","ADMIN_DRUG_CATEGORY_URL","USER_DRUG_CATEGORY_URL","endpointPrefix","login","username","password","url","axios","post","includes","refreshToken","refresh_token","verifyEmailAPI","token","get","changePasswordAPI","body","put","getProfile","addBlockChainUserAPI","userId","role","Promise","reject","Error","updateProfile","getProfileSuccess","user","type","actionTypes","payload","getProfileAction","dispatch","a","profileRes","data","console","log","logoutAction","Cookie","remove","LoginForm","history","useHistory","useDispatch","authState","useSelector","state","userState","useEffect","redirectPath","getRedirectPath","replace","className","layout","autoComplete","noValidate","onFinish","values","email","loginRes","loginData","accessToken","access_token","set","expires","Icon","component","Item","name","placeholder","Password","to","loading","loginLoading","getProfileLoading","block","size","htmlType","LoginPage","props","AdminDashboard","DrugCategoryForm","form","defaultCategory","label","initialValue","autoFocus","getDrugCategoryAPI","search","formActions","getQueryString","queryObj","Object","keys","map","key","join","connect","categories","drugCategoryState","drugCategories","createLoading","fetchLoading","updateLoading","deleteLoading","createDrugCategory","fetchDrugCategories","query","endpoint","response","updateDrugCategory","deleteDrugCategory","delete","useState","modalVisible","setModalVisible","action","setAction","selectedCategory","setSelectedCategory","Form","useForm","drugCategoryForm","tableColumns","title","render","text","record","index","dataIndex","icon","EditOutlined","onClick","category","onConfirm","handleDelete","okButtonProps","okText","okType","cancelText","DeleteOutlined","handleFormSubmit","validateFields","indexOf","cut","substr","convertedStr","charAt","toUpperCase","toLowerCase","cat","justify","PlusOutlined","rowKey","columns","dataSource","pagination","visible","onCancel","confirmLoading","destroyOnClose","afterClose","resetFields","onOk","DrugUnitForm","defaultUnit","getDrugUnitsAPI","addDrugUnitAPI","updateDrugUnitAPI","deleteDrugUnitAPI","DrugUnitPage","drugUnits","setDrugUnits","fetchingDrugUnits","setFetchingDrugUnits","modalLoading","setModalLoading","selectedUnit","setSelectedUnit","drugUnitForm","unit","getDrugUnits","DrugRouteForm","defaultRoute","getDrugRouteAPI","addDrugRouteAPI","updateDrugRouteAPI","deleteDrugRouteAPI","DrugRoutePage","routes","setRoutes","fetchingRoutes","setFetchingRoutes","selectedRoute","setSelectedRoute","drugRouteForm","route","getDrugRoutes","getDrugsAPI","params","getDrugDetailsAPI","addDrugAPI","updateDrugAPI","deleteDrugAPI","getDrugDosageFormAPI","addDrugDosageFormAPI","updateDrugDosageFormAPI","deleteDrugDosageFormAPI","DrugForm","defaultDrug","setCategories","units","setUnits","forms","setForms","drugDetail","setDrugDetail","catLoading","setCatLoading","unitLoading","setUnitLoading","routeLoading","setRouteLoading","formLoading","setFormLoading","detailLoading","setDetailLoading","getDrugCategories","catResponse","unitResponse","routeResponse","getDrugDosageForms","formResponse","getDrugDetail","detailResponse","prevCats","findIndex","drug_category","prevUnits","u","drug_unit","prevRoutes","drug_route","prevForms","f","drug_dosage_form","all","getData","setFieldsValue","code","price","strength","spinning","hidden","suffix","value","Option","DrugPage","drugs","setDrugs","fetchingDrugs","setFetchingDrugs","selectedDrug","setSelectedDrug","drugForm","drug","getDrugs","results","DrugInstructionForm","defaultInstruction","instruction","getDrugInstructionsAPI","addDrugInstructionAPI","updateDrugInstructionAPI","deleteDrugInstructionAPI","DrugInstructionPage","drugInstructions","setDrugInstructions","fetchingDrugInstructions","setFetchingDrugInstructions","selectedInstruction","setSelectedInstruction","drugInstructionForm","ins","getDrugInstructions","DiseaseCategoryForm","getDiseaseCategoryAPI","addDiseaseCategoryAPI","updateDiseaseCategoryAPI","deleteDiseaseCategoryAPI","DiseaseCategoryPage","fetchingCategories","setFetchingCategories","diseaseCategoryForm","getDiseaseCategories","getDiseasesAPI","getDiseaseDetailsAPI","addDiseaseAPI","disease_category","updateDiseaseAPI","deleteDiseaseAPI","DiseaseForm","defaultDisease","diseaseDetail","setDiseaseDetail","getDiseaseDetail","DiseasePage","diseases","setDiseases","fetchingDiseases","setFetchingDiseases","selectedDisease","setSelectedDisease","diseaseForm","disease","getDiseases","NotificationPage","getRoomAPI","addRoomAPI","number","Number","updateRoomAPI","deleteRoomAPI","getVisitDataAPI","createVisitAPI","patientId","roomId","room_id","patient_id","deleteVisitAPI","visitId","listEMRAPI","addEMRAPI","emr","getEMRHistoryAPI","emrId","updateEMRAPI","completeEMRAPI","pathname","useLocation","rooms","setRooms","roomLoading","setRoomLoading","visitData","setVisitData","visitLoading","setVisitLoading","createEMRLoading","setCreateEMRLoading","selectedRoom","setSelectedRoom","visitList","filter","visit","createdAt","Date","created_at","today","getDate","getMonth","getFullYear","room","_","patient","first_name","last_name","gender","moment","DOB","format","ken","handlePatientClick","getRooms","adminGetRoomAPI","roomResponse","prevSelected","localStorage","getItem","getVisitData","adminGetVisitDataAPI","visitDataResponse","createEmr","prev","visit_id","resolve","cloneArr","splice","checkExistEMR","historyResponse","existEmr","find","completed_at","emrObj","physician","medical_record","administrative","fullname","dayOfBirth","job","ethnicity","expatriate","address","workplace","object","insurance_expirity","insurance_number","family_member_and_address","phone","checkin_at","previous_diagnose","come_from","present_complaint","ask","pathological_process","self_medical_history","family_medical_history","examination","heartbeat","temperature","blood_pressure","breathing","weight","partials","subclinical_summary","initial_diagnose","processed","diagnose","from_date","to_date","summary","pathological_process_and_clinical_course","valuable_subclinical_summary","primary_disease","sub_disease","treatment_method","patient_status","direction_of_treatment","services","attachments","push","handleChangeRoom","getInitialData","setItem","style","onChange","flex","listAllPatientsAPI","getPatientDetailsAPI","createPatientAPI","path","useRouteMatch","patientData","setPatientData","patientLoading","setPatientLoading","EyeOutlined","listAllPatient","patientResults","AppointmentPage","mode","locale","getServicesAPI","getServiceDetailsAPI","addServiceAPI","updateServiceAPI","deleteServiceAPI","ServiceForm","defaultService","serviceDetail","setServiceDetail","getServiceDetail","ServicePage","setServices","fetchingServices","setFetchingServices","selectedService","setSelectedService","serviceForm","thousandSeparator","displayType","service","getServices","getWorkingHoursAPI","updateWorkingHourAPI","weekday","isClosed","is_closed","WorkingHourPage","workingHours","setWorkingHours","setLoading","checked","handleWorkingHourChange","getWorkingHours","workingHoursResponse","sort","b","wh","RoomForm","defaultRoom","RoomPage","roomForm","getUsersAPI","qs","stringify","getUserDetailsAPI","addUserAPI","role_id","updateUserAPI","deleteUserAPI","blockUserAPI","unblockUserAPI","ROLES","display","ROLES_LIST","requiredRule","message","required","UserForm","defaultUser","userDetail","setUserDetail","getUserDetail","rules","Group","Circle","classes","classnames","styles","circle","color","AdminAccountPage","urlSearchParams","URLSearchParams","currentPageOnURL","page","setPage","users","setUsers","fetchingUsers","setFetchingUsers","selectedUser","setSelectedUser","userForm","is_verified_email","handleBlockUnblock","is_active","danger","LockOutlined","UnlockOutlined","getUsers","addReponse","responseData","defaultCurrent","current","pageSize","total","count","AdminSettingPage","withPrivateRoute","Child","roles","userRole","isValidRole","length","jwtDecode","error","Header","Layout","CustomHeader","avatar","src","backgroundColor","ghost","LogoutOutlined","Modal","confirm","ExclamationCircleOutlined","content","DrugDosageFormForm","defaultDosageForm","DrugDosageFormPage","dosageForms","setDosageForms","fetchingDosageForms","setFetchingDosageForms","selectedDosageForm","setSelectedDosageForm","drugDosageFormForm","dosageForm","Sider","Content","SubMenu","Menu","match","location","borderRight","selectedKeys","DashboardOutlined","MedicineBoxOutlined","BugOutlined","ContainerOutlined","IdcardOutlined","CalendarOutlined","DollarOutlined","ClockCircleOutlined","AppstoreOutlined","UserOutlined","SettingOutlined","padding","margin","minHeight","exact","getBase64","file","reader","FileReader","readAsDataURL","onload","result","onerror","VisitImagesForm","previewVisible","setPreviewVisible","previewImage","setPreviewImage","previewTitle","setPreviewTitle","fileList","setFileList","uploadButton","marginTop","uploadEvent","event","preview","originFileObj","substring","lastIndexOf","listType","headers","Authorization","onPreview","footer","alt","quillToolbar","DiseaseSelect","diseaseCategories","clearable","selectedCat","setSelectedCat","align","gutter","maxWidth","v","Select","diseaseCategoryState","fetchDiseaseCategoryLoading","diseaseState","fetchDiseaseLoading","fetchDiseaseCategory","ADMIN_DISEASE_CATEGORY_URL","USER_DISEASE_CATEGORY_URL","fetchDisease","ADMIN_DISEASE_URL","USER_DISEASE_URL","useParams","setDrugCategories","setEmr","drugLoading","setDrugLoading","finishLoading","setFinishLoading","isSavingEmr","setIsSavingEmr","emrForm","adminGetServicesAPI","servicesResponse","servicesData","adminGetDrugCategoryAPI","drugCategoryResponse","drugCategoriesData","drugCategory","adminGetDrugsAPI","drugResponse","drugData","adminGetDrugInstructionsAPI","drugInsResponse","drugInsData","getEmrDetail","emrList","handleChangeDrugCategory","goBack","emrBody","checkin","success","status","fileListElement","uid","cloneEmr","onBack","initialValues","readOnly","defaultActiveKey","Panel","header","TextArea","rows","dateStr","momentObj","hour","minute","date","month","year","getDateString","getValueFromEvent","e","target","getContent","theme","modules","toolbar","addonBefore","List","fields","add","field","fieldKey","minWidth","MinusCircleOutlined","handleUploadChange","SaveOutlined","handleFinishExamination","FileDoneOutlined","description","showIcon","setUpdateLoading","changePasswordLoading","setChangePasswordLoading","imageUrl","setImageUrl","changePasswordForm","LoadingOutlined","isMoment","method","showUploadList","info","family_member_name","autoSize","minRows","maxRows","family_member_address","Descriptions","PatientDetails","setPatient","EMRs","setEMRs","EMRLoading","setEMRLoading","__","row","Record","Key","getPatientDetails","patientResponse","getPatientEMRs","EMRResponse","colon","EmrDesc","bordered","column","span","dangerouslySetInnerHTML","__html","drugInstruction","s","i","EmrDetailsPage","emrHistory","setEmrHistory","emrLoading","setEmrLoading","selectedTab","setSelectedTab","getEmrHistory","res","updated_at","val","h","TabPane","tab","ProfileOutlined","PatientForm","ReceivePage","isCreatingPatient","setCreatingPatient","isCreatingVisit","setCreatingVisit","patientForm","renderMenu","handleCreateVisit","overlay","overlayStyle","trigger","listAllPatients","handleSubmit","createResponse","extra","Search","EmailIcon","enableBackground","VerifyPage","setSuccess","setError","isValidToken","isValid","test","verifyEmail","listAllEmrs","PatientEmrPage","emrs","setEmrs","getEmrs","PatientEmrDetailsPage","App","interceptors","request","use","config","originalRequest","_retry","AuthService","refreshResponse","newToken","then","catch","errorMessage","fetchProfile","refresh","newTokenReponse","checkRefresh","AdminLayout","PhysicianLayout","ReceptionistLayout","PatientLayout","initialState","detailsLoading","drugCategoryDetails","rootReducer","combineReducers","middlewares","thunk","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","Boolean","hostname","ReactDOM","viVN","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a0c974cb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"circle\":\"Circle_circle__3fC-i\",\"circle--success\":\"Circle_circle--success__1IfvS\"};","import React from 'react';\n\nconst LoginIcon = () => (\n  <svg width=\"50\" height=\"50\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" version=\"1.1\" id=\"Capa_1\" x=\"0px\" y=\"0px\" viewBox=\"0 0 512.002 512.002\" fill=\"currentColor\" xmlSpace=\"preserve\">\n    <g>\n      <g>\n        <g>\n          <circle cx=\"338\" cy=\"346.001\" r=\"20\" />\n          <path d=\"M238,472.001H80c-22.056,0-40-17.944-40-40v-164c0-22.056,17.944-40,40-40h288c22.056,0,40,17.944,40,40v40     c0,11.046,8.954,20,20,20c11.046,0,20-8.954,20-20v-40c0-44.112-35.888-80-80-80h-24.037v-70.534     c0-64.771-53.832-117.466-120-117.466s-120,52.695-120,117.466v70.534H80c-44.112,0-80,35.888-80,80v164     c0,44.112,35.888,80,80,80h158c11.046,0,20-8.954,20-20S249.046,472.001,238,472.001z M143.963,117.467     c0-42.715,35.888-77.466,80-77.466s80,34.751,80,77.466v70.534h-160V117.467z\" />\n          <path d=\"M503.643,325.739c-8.982-6.431-21.477-4.362-27.904,4.62l-98.581,137.7c-2.692,3.122-6.066,3.796-7.874,3.916     c-1.854,0.123-5.424-0.112-8.567-3.061l-63.708-62.171c-7.906-7.716-20.568-7.559-28.282,0.345     c-7.715,7.905-7.561,20.567,0.345,28.282l63.82,62.281c0.06,0.058,0.119,0.116,0.18,0.173C342.639,506.933,355.41,512,368.55,512     c1.129,0,2.261-0.037,3.393-0.113c14.314-0.954,27.679-7.915,36.666-19.097c0.232-0.29,0.456-0.585,0.673-0.887l98.981-138.26     C514.692,344.662,512.624,332.168,503.643,325.739z\" />\n          <circle cx=\"262\" cy=\"346.001\" r=\"20\" />\n          <circle cx=\"112\" cy=\"346.001\" r=\"20\" />\n          <circle cx=\"187\" cy=\"346.001\" r=\"20\" />\n        </g>\n      </g>\n    </g>\n    <g>\n    </g>\n    <g>\n    </g>\n    <g>\n    </g>\n    <g>\n    </g>\n    <g>\n    </g>\n    <g>\n    </g>\n    <g>\n    </g>\n    <g>\n    </g>\n    <g>\n    </g>\n    <g>\n    </g>\n    <g>\n    </g>\n    <g>\n    </g>\n    <g>\n    </g>\n    <g>\n    </g>\n    <g>\n    </g>\n  </svg>\n)\n\nexport default LoginIcon;","/* -------------------- AUTHENTICATION -------------------- */\nexport const LOGIN_PENDING = \"LOGIN_PENDING\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_FAILURE = \"LOGIN_FAILURE\";\n\nexport const LOGOUT = \"LOGOUT\";\n\n/* -------------------- ADMIN -------------------- */\n// Dashboard\nexport const FETCH_DASHBOARD_PENDING = \"FETCH_DASHBOARD_PENDING\";\nexport const FETCH_DASHBOARD_SUCCESS = \"FETCH_DASHBOARD_SUCCESS\";\nexport const FETCH_DASHBOARD_FAILURE = \"FETCH_DASHBOARD_FAILURE\";\n\n// Drug cateogry\nexport const CREATE_DRUG_CATEGORY_PENDING = \"CREATE_DRUG_CATEGORY_PENDING\";\nexport const CREATE_DRUG_CATEGORY_SUCCESS = \"CREATE_DRUG_CATEGORY_SUCCESS\";\nexport const CREATE_DRUG_CATEGORY_FAILURE = \"CREATE_DRUG_CATEGORY_FAILURE\";\n\nexport const FETCH_DRUG_CATEGORIES_PENDING = \"FETCH_DRUG_CATEGORIES_PENDING\";\nexport const FETCH_DRUG_CATEGORIES_SUCCESS = \"FETCH_DRUG_CATEGORIES_SUCCESS\";\nexport const FETCH_DRUG_CATEGORIES_FAILURE = \"FETCH_DRUG_CATEGORIES_FAILURE\";\n\nexport const FETCH_DRUG_CATEGORY_DETAILS_PENDING = \"FETCH_DRUG_CATEGORY_DETAILS_PENDING\";\nexport const FETCH_DRUG_CATEGORY_DETAILS_SUCCESS = \"FETCH_DRUG_CATEGORY_DETAILS_SUCCESS\";\nexport const FETCH_DRUG_CATEGORY_DETAILS_FAILURE = \"FETCH_DRUG_CATEGORY_DETAILS_FAILURE\";\n\nexport const UPDATE_DRUG_CATEGORY_PENDING = \"UPDATE_DRUG_CATEGORY_PENDING\";\nexport const UPDATE_DRUG_CATEGORY_SUCCESS = \"UPDATE_DRUG_CATEGORY_SUCCESS\";\nexport const UPDATE_DRUG_CATEGORY_FAILURE = \"UPDATE_DRUG_CATEGORY_FAILURE\";\n\nexport const DELETE_DRUG_CATEGORY_PENDING = \"DELETE_DRUG_CATEGORY_PENDING\";\nexport const DELETE_DRUG_CATEGORY_SUCCESS = \"DELETE_DRUG_CATEGORY_SUCCESS\";\nexport const DELETE_DRUG_CATEGORY_FAILURE = \"DELETE_DRUG_CATEGORY_FAILURE\";\n\n// Drug unit\nexport const FETCH_DRUG_UNIT_PENDING = \"FETCH_DRUG_UNIT_PENDING\";\nexport const FETCH_DRUG_UNIT_SUCCESS = \"FETCH_DRUG_UNIT_SUCCESS\";\nexport const FETCH_DRUG_UNIT_FAILURE = \"FETCH_DRUG_UNIT_FAILURE\";\n\n// Drug route\nexport const FETCH_DRUG_ROUTE_PENDING = \"FETCH_DRUG_ROUTE_PENDING\";\nexport const FETCH_DRUG_ROUTE_SUCCESS = \"FETCH_DRUG_ROUTE_SUCCESS\";\nexport const FETCH_DRUG_ROUTE_FAILURE = \"FETCH_DRUG_ROUTE_FAILURE\";\n\n// Drug dosage form\nexport const FETCH_DRUG_DOSAGE_FORM_PENDING = \"FETCH_DRUG_DOSAGE_FORM_PENDING\";\nexport const FETCH_DRUG_DOSAGE_FORM_SUCCESS = \"FETCH_DRUG_DOSAGE_FORM_SUCCESS\";\nexport const FETCH_DRUG_DOSAGE_FORM_FAILURE = \"FETCH_DRUG_DOSAGE_FORM_FAILURE\";\n\n// Drug\nexport const FETCH_DRUG_PENDING = \"FETCH_DRUG_PENDING\";\nexport const FETCH_DRUG_SUCCESS = \"FETCH_DRUG_SUCCESS\"\nexport const FETCH_DRUG_FAILURE = \"FETCH_DRUG_FAILURE\";\n\n// Drug instruction\nexport const FETCH_DRUG_INSTRUCTION_PENDING = \"FETCH_DRUG_INSTRUCTION_PENDING\";\nexport const FETCH_DRUG_INSTRUCTION_SUCCESS = \"FETCH_DRUG_INSTRUCTION_SUCCESS\";\nexport const FETCH_DRUG_INSTRUCTION_FAILURE = \"FETCH_DRUG_INSTRUCTION_FAILURE\";\n\n/* -------------------- USER -------------------- */\n// Profile\nexport const GET_PROFILE_PENDING = \"GET_PROFILE_PENDING\";\nexport const GET_PROFILE_SUCCESS = \"GET_PROFILE_SUCCESS\";\nexport const GET_PROFILE_FAILURE = \"GET_PROFILE_FAILURE\";\n\n// Disease category\nexport const FETCH_DISEASE_CATEGORIES_PENDING = \"FETCH_DISEASE_CATEGORIES_PENDING\";\nexport const FETCH_DISEASE_CATEGORIES_SUCCESS = \"FETCH_DISEASE_CATEGORIES_SUCCESS\";\nexport const FETCH_DISEASE_CATEGORIES_FAILURE = \"FETCH_DISEASE_CATEGORIES_FAILURE\";\n\n// Disease\nexport const FETCH_DISEASES_PENDING = \"FETCH_DISEASES_PENDING\";\nexport const FETCH_DISEASES_SUCCESS = \"FETCH_DISEASES_SUCCESS\";\nexport const FETCH_DISEASES_FAILURE = \"FETCH_DISEASES_FAILURE\";\n\n/* -------------------- PATIENT -------------------- */","export const API_URL = 'https://emr-2020.wl.r.appspot.com/api';\nexport const NODE_URL = 'https://api.emr-client.tech';\n\n/* -------------------- AUTHENTICATION -------------------- */\nexport const LOGIN_URL = API_URL + '/auth/login/';\nexport const REFRESH_TOKEN_URL = API_URL + '/auth/refresh-token/';\nexport const CHANGE_PASSWORD_URL = API_URL + '/auth/change-password/';\n\n/* -------------------- ADMIN -------------------- */\nexport const ADMIN_DASHBOARD_URL = '';\n\n// Drug\nexport const ADMIN_DRUG_CATEGORY_URL = API_URL + '/admin/manage-drug-category';\nexport const ADMIN_DRUG_UNIT_URL = API_URL + '/admin/manage-drug-unit';\nexport const ADMIN_DRUG_ROUTE_URL = API_URL + '/admin/manage-drug-route';\nexport const ADMIN_DRUG_DOSAGE_FORM_URL = API_URL + '/admin/manage-drug-dosage-form';\nexport const ADMIN_DRUG_URL = API_URL + '/admin/manage-drug';\nexport const ADMIN_DRUG_INSTRUCTION_URL = API_URL + '/admin/manage-drug-instruction';\n\n// Disease\nexport const ADMIN_DISEASE_CATEGORY_URL = API_URL + '/admin/manage-disease-category';\nexport const ADMIN_DISEASE_URL = API_URL + '/admin/manage-disease';\n\n\n/* -------------------- USER -------------------- */\n// Drug\nexport const USER_DRUG_CATEGORY_URL = API_URL + '/user/drug-category';\nexport const USER_DRUG_UNIT_URL = API_URL + '/user/drug-unit';\nexport const USER_DRUG_ROUTE_URL = API_URL + '/user/drug-route';\nexport const USER_DRUG_DOSAGE_FORM_URL = API_URL + '/user/drug-dosage-form';\nexport const USER_DRUG_URL = API_URL + '/user/drug';\nexport const USER_DRUG_INSTRUCTION_URL = API_URL + '/user/drug-instruction';\n\n// Disease\nexport const USER_DISEASE_CATEGORY_URL = API_URL + '/user/disease-category';\nexport const USER_DISEASE_URL = API_URL + '/user/disease';\n\n/* -------------------- PATIENT -------------------- */","import { API_URL } from \"constant/apiUrl\";\nimport axios from 'axios';\n\n\nconst endpointPrefix = `${API_URL}/auth`;\n\n/**\n * Login to system\n * @param email\n * @param password\n */\nexport function login(username, password) {\n  const url = `${endpointPrefix}/login/`;\n  return axios.post(url, {\n    [username.includes('+84') ? 'phone' : 'email']: username,\n    password: password\n  });\n}\n\n/**\n * This function is used to get new access token from refresh token\n * when current access token is expired\n * @param refreshToken Refresh token from last login\n */\nexport function refreshToken(refreshToken) {\n  const url = `${endpointPrefix}/refresh-token/`;\n  return axios.post(url, {\n    refresh_token: refreshToken\n  });\n}\n\n\nexport function verifyEmailAPI(token) {\n  const url = `${endpointPrefix}/verify-email/${token}/`;\n  return axios.get(url);\n}\n\nexport function changePasswordAPI(body) {\n  const url = `${endpointPrefix}/change-password/`;\n  return axios.put(url, body);\n}","import { API_URL, NODE_URL } from \"constant/apiUrl\";\nimport axios from 'axios';\n\nconst endpointPrefix = `${API_URL}/user`;\n\n/**\n* Get user profile\n* @param token Access token\n*/\nexport function getProfile() {\n  const url = `${endpointPrefix}/profile/`;\n  return axios.get(url);\n}\n\nexport function addBlockChainUserAPI(userId, role = \"user\") {\n  if (role !== \"user\" && role !== \"patient\") return Promise.reject(new Error('Unknown role'));\n  const url = `${NODE_URL}/api/register-${role}`;\n  return axios.post(url, { [`${role}_id`]: userId });\n}\n\nexport function updateProfile(body) {\n  const url = `${endpointPrefix}/profile/`;\n  return axios.put(url, body);\n}","import * as actionTypes from '../actionTypes';\nimport { getProfile } from 'services/user/user.service';\n\nfunction getProfilePending() {\n  return {\n    type: actionTypes.GET_PROFILE_PENDING\n  }\n}\n\nfunction getProfileSuccess(user) {\n  return {\n    type: actionTypes.GET_PROFILE_SUCCESS,\n    payload: user\n  }\n}\n\nfunction getProfileFailure() {\n  return {\n    type: actionTypes.GET_PROFILE_FAILURE\n  }\n}\n\nexport function getProfileAction() {\n  return async dispatch => {\n    try {\n      dispatch(getProfilePending());\n      const profileRes = await getProfile();\n      const user = profileRes.data;\n      dispatch(getProfileSuccess(user));\n    } catch(error) {\n      console.log(error);\n      dispatch(getProfileFailure());\n    }\n  }\n}\n\nexport function removeUserAction() {\n  return {\n    type: actionTypes.LOGOUT\n  }\n}","import * as actionTypes from '../actionTypes';\nimport { login } from 'services/auth/auth.service';\nimport Cookie from 'js-cookie';\nimport { getProfileAction, removeUserAction } from './user.action';\n\nfunction loginPending() {\n  return {\n    type: actionTypes.LOGIN_PENDING\n  }\n}\n\nfunction loginSuccess() {\n  return {\n    type: actionTypes.LOGIN_SUCCESS,\n  }\n}\n\nfunction loginFailure() {\n  return {\n    type: actionTypes.LOGIN_FAILURE\n  }\n}\n\nexport function loginAction(email, password) {\n  return async dispatch => {\n    try {\n      dispatch(loginPending());\n      const loginRes = await login(email, password);\n      const loginData = loginRes.data;\n\n      const accessToken = loginData.access_token;\n      const refreshToken = loginData.refresh_token;\n      Cookie.set('EMR_token', accessToken, { expires: 3 / 24 }); // 3 hours\n      Cookie.set('EMR_refresh', refreshToken, { expires: 7 }); // 7 days\n      dispatch(loginSuccess());\n      dispatch(getProfileAction());\n    } catch (error) {\n      dispatch(loginFailure());\n    }\n  }\n}\n\nexport function logoutAction() {\n  Cookie.remove('EMR_token');\n  Cookie.remove('EMR_refresh');\n\n  return dispatch => {\n    dispatch(removeUserAction());\n  }\n}","import React, { useEffect } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { Form, Input, Button } from 'antd';\nimport Icon from '@ant-design/icons';\nimport LoginIcon from 'components/Icons/LoginIcon';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { loginAction } from 'store/actions/auth.action';\nimport { getRedirectPath } from 'utils/routing';\n\nconst LoginForm = () => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const authState = useSelector(state => state.authState);\n  const userState = useSelector(state => state.userState);\n  const user = userState.user;\n\n  function handleSubmit(values) {\n    dispatch(loginAction(values.email, values.password));\n  }\n\n  useEffect(() => {\n    if (user && user.role) {\n      const redirectPath = getRedirectPath(user.role);\n      console.log(redirectPath);\n      history.replace(redirectPath);\n    }\n  }, [user, history]);\n\n  return (\n    <Form\n      className=\"auth\"\n      layout=\"vertical\"\n      autoComplete=\"off\"\n      noValidate\n      onFinish={handleSubmit}>\n\n      <div className=\"auth__header text-center\">\n        <Icon component={LoginIcon} />\n        <h1 className=\"text-3xl\">Đăng nhập</h1>\n      </div>\n\n      <Form.Item name=\"email\">\n        <Input type=\"email\" placeholder=\"Email\" />\n      </Form.Item>\n\n      <Form.Item name=\"password\" className=\"m-0\">\n        <Input.Password placeholder=\"Mật khẩu\" />\n        {/* <Button type=\"link\"> */}\n        {/* </Button> */}\n      </Form.Item>\n      <Link className=\"block mt-2 mb-6\" to=\"/forgot-password\">Quên mật khẩu</Link>\n\n      <Form.Item>\n        <Button loading={authState.loginLoading || userState.getProfileLoading} block type=\"primary\" size=\"large\" htmlType=\"submit\">Đăng nhập</Button>\n      </Form.Item>\n    </Form>\n  )\n}\n\nexport default LoginForm;","export function getRedirectPath(role) {\n  if (!role) return \"/login\";\n\n  switch (role.id) {\n    case 1:\n      return \"/admin\";\n    case 2:\n      return \"/physician\";\n    case 3:\n      return \"/receptionist\";\n    case 4:\n      return \"/patient\";\n    default:\n      return \"\";\n  }\n}","import React from 'react';\nimport LoginForm from 'forms/LoginForm/LoginForm';\n\nconst LoginPage = (props) => {\n  return (\n    <main className=\"login-page\">\n      <LoginForm />\n    </main>\n  )\n}\n\nexport default LoginPage;","import React from 'react';\n\nconst AdminDashboard = () => {\n  return (\n    <div>Admin dashboard</div>\n  )\n}\n\nexport default AdminDashboard;","import React from 'react';\nimport { Form, Input } from 'antd';\n\nconst DrugCategoryForm = props => {\n  const { form, onFinish, defaultCategory } = props;\n\n  return (\n    <Form\n      layout=\"vertical\"\n      form={form}\n      onFinish={onFinish}>\n      <Form.Item label=\"Loại thuốc\" name=\"name\" initialValue={defaultCategory?.name}>\n        <Input autoFocus />\n      </Form.Item>\n    </Form>\n  )\n}\n\nexport default DrugCategoryForm;","import axios from 'axios';\n\nimport { API_URL } from \"constant/apiUrl\";\n\nconst endpointPrefix = `${API_URL}/admin/manage-drug-category`;\n\nexport function getDrugCategoryAPI(search = \"\") {\n  const url = `${endpointPrefix}/?search=${search}`;\n  return axios.get(url);\n}\n\nexport function addDrugCategoryAPI(name) {\n  const url = `${endpointPrefix}/`;\n  return axios.post(url, { name: name });\n}\n\nexport function updateDrugCategoryAPI(id, name) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.put(url, {\n    name: name\n  })\n}\n\nexport function deleteDrugCategoryAPI(id) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.delete(url);\n}","export const formActions = {\n  CREATE: 'CREATE',\n  UPDATE: 'UPDATE'\n}","export function getQueryString(queryObj) {\n  if (!queryObj) return \"\";\n  return Object.keys(queryObj).map(key => `${key}=${queryObj[key]}`).join('&');\n}","import React, { useState, useEffect } from 'react';\nimport { Row, Col, Button, Modal, Table, Form, Popconfirm, Space } from 'antd';\nimport { PlusOutlined, EditOutlined, DeleteOutlined } from '@ant-design/icons';\nimport DrugCategoryForm from 'forms/DrugCategoryForm/DrugCategoryForm';\nimport { addDrugCategoryAPI, deleteDrugCategoryAPI, getDrugCategoryAPI, updateDrugCategoryAPI } from 'services/admin/drug-category.service';\nimport { formActions } from 'constant/formActions';\nimport { connect } from 'react-redux';\n\n// Redux\nimport { createDrugCategory, fetchDrugCategories, updateDrugCategory, deleteDrugCategory } from 'store/actions/drug-category.action';\n\nconst DrugCategoryPage = props => {\n\n  const {\n    categories,\n    createDrugCategory,\n    fetchDrugCategories,\n    updateDrugCategory,\n    deleteDrugCategory,\n    createLoading,\n    fetchLoading,\n    updateLoading,\n    deleteLoading\n  } = props;\n  const [modalVisible, setModalVisible] = useState(false);\n  const [action, setAction] = useState(formActions.CREATE);\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [drugCategoryForm] = Form.useForm();\n\n  useEffect(() => {\n    console.log(deleteLoading);\n  }, [deleteLoading]);\n\n  const tableColumns = [\n    {\n      title: '#',\n      key: '#',\n      render: (text, record, index) => index + 1\n    },\n    {\n      title: 'Tên',\n      key: 'name',\n      dataIndex: 'name'\n    },\n    {\n      title: 'Hành động',\n      key: 'action',\n      render: (text, record, index) => (\n        <Space size={10}>\n          <Button icon={<EditOutlined />} onClick={() => handleEditClick(record)}></Button>\n          <Popconfirm\n            onConfirm={async () => await handleDelete(record)} title=\"Bạn có chắc muốn xóa không?\"\n            okButtonProps={{loading: deleteLoading}}\n            okText=\"Xóa\"\n            okType=\"danger\"\n            cancelText=\"Hủy bỏ\">\n            <Button icon={<DeleteOutlined />}></Button>\n          </Popconfirm>\n        </Space>\n      )\n    }\n  ]\n\n  function handleOpenModal() {\n    setAction(formActions.CREATE);\n    setModalVisible(true);\n  }\n\n  function handleCloseModal() {\n    setModalVisible(false);\n  }\n\n  async function handleFormSubmit() {\n    try {\n      const values = await drugCategoryForm.validateFields();\n      const name = values.name;\n      const index = name.indexOf(\". \");\n      let cut = name.substr(index > -1 ? index + 2 : 0);\n      const indexOfNhom = cut.indexOf(\"Nhóm\");\n      if (indexOfNhom === -1) {\n        cut = \"Nhóm \" + cut;\n      }\n      const convertedStr = cut.charAt(0).toUpperCase() + cut.substr(1).toLowerCase();\n      if (action === formActions.CREATE) {\n        // await addDrugCategoryAPI(convertedStr);\n        await createDrugCategory({ name: convertedStr });\n      }\n\n      if (action === formActions.UPDATE) {\n        // await updateDrugCategoryAPI(selectedCategory.id, convertedStr);\n        await updateDrugCategory(selectedCategory.id, { name: convertedStr });\n      }\n\n      // getDrugCategories();\n      \n\n      setModalVisible(false);\n      await fetchDrugCategories(\"admin\");\n      \n    } catch (error) {\n      console.log(error);\n      setModalVisible(false);\n    }\n  }\n\n  function handleEditClick(category) {\n    setAction(formActions.UPDATE);\n    setSelectedCategory(category);\n    setModalVisible(true);\n  }\n\n  async function handleDelete(cat) {\n    try {\n      // await deleteDrugCategoryAPI(unit.id);\n      await deleteDrugCategory(cat.id)\n      await fetchDrugCategories(\"admin\");\n      // getDrugCategories();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  function afterClose() {\n    drugCategoryForm.resetFields();\n    setSelectedCategory(null);\n  }\n\n  useEffect(() => {\n    fetchDrugCategories(\"admin\");\n  }, []);\n\n  return (\n    <>\n      <Row justify=\"space-between\">\n        <Col><h1 className=\"text-xl\">Quản lý nhóm thuốc</h1></Col>\n        <Col>\n          <Button type=\"primary\" icon={<PlusOutlined />} onClick={handleOpenModal}>Tạo mới</Button>\n        </Col>\n      </Row>\n      <Table\n        rowKey=\"id\"\n        columns={tableColumns}\n        dataSource={categories}\n        pagination={false}\n        loading={fetchLoading} />\n      <Modal\n        visible={modalVisible}\n        title={action === formActions.CREATE ? 'Thêm nhóm thuốc' : 'Cập nhật nhóm thuốc'}\n        onCancel={handleCloseModal}\n        confirmLoading={(action === formActions.UPDATE && updateLoading) || (action === formActions.CREATE && createLoading)}\n        destroyOnClose={true}\n        afterClose={afterClose}\n        onOk={handleFormSubmit}>\n        <DrugCategoryForm onFinish={handleFormSubmit} form={drugCategoryForm} defaultCategory={selectedCategory} />\n      </Modal>\n    </>\n  )\n}\n\nconst mapStateToProps = state => ({\n  categories: state.drugCategoryState.drugCategories,\n  createLoading: state.drugCategoryState.createLoading,\n  fetchLoading: state.drugCategoryState.fetchLoading,\n  updateLoading: state.drugCategoryState.updateLoading,\n  deleteLoading: state.drugCategoryState.deleteLoading\n})\n\nconst mapDispatchToProps = dispatch => ({\n  createDrugCategory: (body) => dispatch(createDrugCategory(body)),\n  fetchDrugCategories: (role, query) => dispatch(fetchDrugCategories(role, query)),\n  updateDrugCategory: (id, body) => dispatch(updateDrugCategory(id, body)),\n  deleteDrugCategory: (id) => dispatch(deleteDrugCategory(id))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DrugCategoryPage);","import * as actionTypes from '../actionTypes';\nimport axios from 'axios';\nimport { ADMIN_DRUG_CATEGORY_URL, USER_DRUG_CATEGORY_URL } from 'constant/apiUrl';\nimport { getQueryString } from 'utils/string';\n\n// Create drug category\nfunction createDrugCategoryPending() {\n  return {\n    type: actionTypes.CREATE_DRUG_CATEGORY_PENDING\n  }\n}\n\nfunction createDrugCategorySuccess() {\n  return {\n    type: actionTypes.CREATE_DRUG_CATEGORY_SUCCESS,\n  }\n}\n\nfunction createDrugCategoryFailure() {\n  return {\n    type: actionTypes.CREATE_DRUG_CATEGORY_FAILURE\n  }\n}\n\n// Fetch drug categories\nfunction fetchDrugCategoriesPending() {\n  return {\n    type: actionTypes.FETCH_DRUG_CATEGORIES_PENDING\n  }\n}\n\nfunction fetchDrugCategoriesSuccess(data) {\n  return {\n    type: actionTypes.FETCH_DRUG_CATEGORIES_SUCCESS,\n    payload: data\n  }\n}\n\nfunction fetchDrugCategoriesFailure() {\n  return {\n    type: actionTypes.FETCH_DRUG_CATEGORIES_FAILURE\n  }\n}\n\n// Fetch drug category details\nfunction fetchDrugCategoryDetailsPending() {\n  return {\n    type: actionTypes.FETCH_DRUG_CATEGORY_DETAILS_PENDING\n  }\n}\n\nfunction fetchDrugCategoryDetailsSuccess(data) {\n  return {\n    type: actionTypes.FETCH_DRUG_CATEGORY_DETAILS_SUCCESS,\n    payload: data\n  }\n}\n\nfunction fetchDrugCategoryDetailsFailure() {\n  return {\n    type: actionTypes.FETCH_DRUG_CATEGORY_DETAILS_FAILURE\n  }\n}\n\n// Update drug category\nfunction updateDrugCategoryPending() {\n  return {\n    type: actionTypes.UPDATE_DRUG_CATEGORY_PENDING\n  }\n}\n\nfunction updateDrugCategorySuccess() {\n  return {\n    type: actionTypes.UPDATE_DRUG_CATEGORY_SUCCESS\n  }\n}\n\nfunction updateDrugCategoryFailure() {\n  return {\n    type: actionTypes.UPDATE_DRUG_CATEGORY_FAILURE\n  }\n}\n\n// Delete drug category\nfunction deleteDrugCategoryPending() {\n  return {\n    type: actionTypes.DELETE_DRUG_CATEGORY_PENDING\n  }\n}\n\nfunction deleteDrugCategorySuccess() {\n  return {\n    type: actionTypes.DELETE_DRUG_CATEGORY_SUCCESS\n  }\n}\n\nfunction deleteDrugCategoryFailure() {\n  return {\n    type: actionTypes.DELETE_DRUG_CATEGORY_FAILURE\n  }\n}\n\n\n/**\n * -----------------------------------------------------\n * Exported functions\n * -----------------------------------------------------\n */\nexport function createDrugCategory(body) {\n  let endpoint = ADMIN_DRUG_CATEGORY_URL + '/';\n\n  return async dispatch => {\n    try {\n      dispatch(createDrugCategoryPending());\n      await axios.post(endpoint, body);\n      dispatch(createDrugCategorySuccess());\n    } catch(error) {\n      dispatch(createDrugCategoryFailure());\n    }\n  }\n}\n\n\nexport function fetchDrugCategories(role, query) {\n  let endpoint;\n  if (role === \"admin\") {\n    endpoint = ADMIN_DRUG_CATEGORY_URL + '/';\n  } else {\n    endpoint = USER_DRUG_CATEGORY_URL + '/';\n  }\n\n  if (query) {\n    endpoint += getQueryString(query);\n  }\n\n  return async dispatch => {\n    try {\n      dispatch(fetchDrugCategoriesPending());\n      const response = await axios.get(endpoint);\n      dispatch(fetchDrugCategoriesSuccess(response.data));\n    } catch(error) {\n      dispatch(fetchDrugCategoriesFailure());\n    }\n  }\n}\n\nexport function fetchDrugCategoryDetails(role, id, query) {\n  let endpoint;\n  if (role === \"admin\") {\n    endpoint = ADMIN_DRUG_CATEGORY_URL + `/${id}/`;\n  } else {\n    endpoint = USER_DRUG_CATEGORY_URL + `/${id}/`;\n  }\n\n  if (query) {\n    endpoint += getQueryString(query);\n  }\n\n  return async dispatch => {\n    try {\n      dispatch(fetchDrugCategoryDetailsPending());\n      const response = await axios.get(endpoint);\n      dispatch(fetchDrugCategoryDetailsSuccess(response.data));\n    } catch(error) {\n      dispatch(fetchDrugCategoryDetailsFailure());\n    }\n  }\n}\n\nexport function updateDrugCategory(id, body) {\n  let endpoint = ADMIN_DRUG_CATEGORY_URL + `/${id}/`;\n  return async dispatch => {\n    try {\n      dispatch(updateDrugCategoryPending());\n      await axios.put(endpoint, body);\n      dispatch(updateDrugCategorySuccess());\n    } catch {\n      dispatch(updateDrugCategoryFailure());\n    }\n  }\n}\n\nexport function deleteDrugCategory(id) {\n  let endpoint = ADMIN_DRUG_CATEGORY_URL + `/${id}/`;\n  return async dispatch => {\n    try {\n      dispatch(deleteDrugCategoryPending());\n      await axios.delete(endpoint);\n      return dispatch(deleteDrugCategorySuccess());\n    } catch {\n      return dispatch(deleteDrugCategoryFailure());\n    }\n  }\n}","import React from 'react';\nimport { Form, Input } from 'antd';\n\nconst DrugUnitForm = props => {\n  const { form, onFinish, defaultUnit } = props;\n\n  return (\n    <Form\n      layout=\"vertical\"\n      form={form}\n      onFinish={onFinish}>\n      <Form.Item label=\"Đơn vị tính\" name=\"name\" initialValue={defaultUnit?.name}>\n        <Input autoFocus />\n      </Form.Item>\n    </Form>\n  )\n}\n\nexport default DrugUnitForm;","import axios from 'axios';\n\nimport { API_URL } from \"constant/apiUrl\";\n\nconst endpointPrefix = `${API_URL}/admin/manage-drug-unit`;\n\nexport function getDrugUnitsAPI(search = \"\") {\n  const url = `${endpointPrefix}/?search=${search}`;\n  return axios.get(url);\n}\n\nexport function addDrugUnitAPI(name) {\n  const url = `${endpointPrefix}/`;\n  return axios.post(url, { name: name });\n}\n\nexport function updateDrugUnitAPI(id, name) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.put(url, {\n    name: name\n  })\n}\n\nexport function deleteDrugUnitAPI(id) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.delete(url);\n}","import React, { useState, useEffect } from 'react';\nimport { Row, Col, Button, Modal, Table, Form, Popconfirm, Space } from 'antd';\nimport { PlusOutlined, EditOutlined, DeleteOutlined } from '@ant-design/icons';\nimport DrugUnitForm from 'forms/DrugUnitForm/DrugUnitForm';\nimport { getDrugUnitsAPI, addDrugUnitAPI, updateDrugUnitAPI, deleteDrugUnitAPI } from 'services/admin/drug-unit.service';\nimport { formActions } from 'constant/formActions';\n\nconst DrugUnitPage = () => {\n\n  const [modalVisible, setModalVisible] = useState(false);\n  const [drugUnits, setDrugUnits] = useState([]);\n  const [fetchingDrugUnits, setFetchingDrugUnits] = useState(false);\n  const [modalLoading, setModalLoading] = useState(false);\n  const [action, setAction] = useState(formActions.CREATE);\n  const [selectedUnit, setSelectedUnit] = useState(null);\n  const [drugUnitForm] = Form.useForm();\n\n  const tableColumns = [\n    {\n      title: '#',\n      key: '#',\n      render: (text, record, index) => index + 1\n    },\n    {\n      title: 'Đơn vị tính',\n      key: 'name',\n      dataIndex: 'name'\n    },\n    {\n      title: 'Hành động',\n      key: 'action',\n      render: (text, record, index) => (\n        <Space size={10}>\n          <Button icon={<EditOutlined />} onClick={() => handleEditClick(record)}></Button>\n          <Popconfirm\n            onConfirm={() => handleDelete(record)} title=\"Bạn có chắc muốn xóa không?\"\n            okText=\"Xóa\"\n            okType=\"danger\"\n            cancelText=\"Hủy bỏ\">\n            <Button icon={<DeleteOutlined />}></Button>\n          </Popconfirm>\n        </Space>\n      )\n    }\n  ]\n\n  function handleOpenModal() {\n    setAction(formActions.CREATE);\n    setModalVisible(true);\n  }\n\n  function handleCloseModal() {\n    setModalVisible(false);\n  }\n\n  async function getDrugUnits() {\n    try {\n      setFetchingDrugUnits(true);\n      const response = await getDrugUnitsAPI();\n      setDrugUnits(response.data);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setFetchingDrugUnits(false);\n    }\n  }\n\n  async function handleFormSubmit() {\n    try {\n      setModalLoading(true);\n      const values = await drugUnitForm.validateFields();\n      if (action === formActions.CREATE) {\n        await addDrugUnitAPI(values.name);\n      }\n\n      if (action === formActions.UPDATE) {\n        await updateDrugUnitAPI(selectedUnit.id, values.name);\n      }\n\n      getDrugUnits();\n\n      setModalVisible(false);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setModalLoading(false);\n    }\n  }\n\n  function handleEditClick(unit) {\n    setAction(formActions.UPDATE);\n    setSelectedUnit(unit);\n    setModalVisible(true);\n  }\n\n  async function handleDelete(unit) {\n    try {\n      await deleteDrugUnitAPI(unit.id);\n      getDrugUnits();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  function afterClose() {\n    drugUnitForm.resetFields();\n    setSelectedUnit(null);\n  }\n\n  useEffect(() => {\n    getDrugUnits();\n  }, []);\n\n  return (\n    <>\n      <Row justify=\"space-between\">\n        <Col><h1 className=\"text-xl\">Quản lý đơn vị tính</h1></Col>\n        <Col>\n          <Button type=\"primary\" icon={<PlusOutlined />} onClick={handleOpenModal}>Tạo mới</Button>\n        </Col>\n      </Row>\n      <Table\n        rowKey=\"id\"\n        columns={tableColumns}\n        dataSource={drugUnits}\n        loading={fetchingDrugUnits}\n        pagination={false} />\n      <Modal\n        visible={modalVisible}\n        title={action === formActions.CREATE ? 'Thêm đơn vị tính' : 'Cập nhật đơn vị tính'}\n        onCancel={handleCloseModal}\n        confirmLoading={modalLoading}\n        destroyOnClose={true}\n        afterClose={afterClose}\n        onOk={handleFormSubmit}>\n        <DrugUnitForm onFinish={handleFormSubmit} form={drugUnitForm} defaultUnit={selectedUnit} />\n      </Modal>\n    </>\n  )\n}\n\nexport default DrugUnitPage;","import React from 'react';\nimport { Form, Input } from 'antd';\n\nconst DrugRouteForm = props => {\n  const { form, onFinish, defaultRoute } = props;\n\n  return (\n    <Form\n      layout=\"vertical\"\n      form={form}\n      onFinish={onFinish}>\n      <Form.Item label=\"Đường dùng thuốc\" name=\"name\" initialValue={defaultRoute?.name}>\n        <Input autoFocus />\n      </Form.Item>\n    </Form>\n  )\n}\n\nexport default DrugRouteForm;","import axios from 'axios';\n\nimport { API_URL } from \"constant/apiUrl\";\n\nconst endpointPrefix = `${API_URL}/admin/manage-drug-route`;\n\nexport function getDrugRouteAPI(search = \"\") {\n  const url = `${endpointPrefix}/?search=${search}`;\n  return axios.get(url);\n}\n\nexport function addDrugRouteAPI(name) {\n  const url = `${endpointPrefix}/`;\n  return axios.post(url, { name: name });\n}\n\nexport function updateDrugRouteAPI(id, name) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.put(url, {\n    name: name\n  })\n}\n\nexport function deleteDrugRouteAPI(id) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.delete(url);\n}","import React, { useState, useEffect } from 'react';\nimport { Row, Col, Button, Modal, Table, Form, Popconfirm, Space } from 'antd';\nimport { PlusOutlined, EditOutlined, DeleteOutlined } from '@ant-design/icons';\nimport DrugRouteForm from 'forms/DrugRouteForm/DrugRouteForm';\nimport { addDrugRouteAPI, deleteDrugRouteAPI, getDrugRouteAPI, updateDrugRouteAPI } from 'services/admin/drug-route.service';\nimport { formActions } from 'constant/formActions';\n\nconst DrugRoutePage = () => {\n\n  const [modalVisible, setModalVisible] = useState(false);\n  const [routes, setRoutes] = useState([]);\n  const [fetchingRoutes, setFetchingRoutes] = useState(false);\n  const [modalLoading, setModalLoading] = useState(false);\n  const [action, setAction] = useState(formActions.CREATE);\n  const [selectedRoute, setSelectedRoute] = useState(null);\n  const [drugRouteForm] = Form.useForm();\n\n  const tableColumns = [\n    {\n      title: '#',\n      key: '#',\n      render: (text, record, index) => index + 1\n    },\n    {\n      title: 'Tên',\n      key: 'name',\n      dataIndex: 'name'\n    },\n    {\n      title: 'Hành động',\n      key: 'action',\n      render: (text, record, index) => (\n        <Space size={10}>\n          <Button icon={<EditOutlined />} onClick={() => handleEditClick(record)}></Button>\n          <Popconfirm\n            onConfirm={() => handleDelete(record)} title=\"Bạn có chắc muốn xóa không?\"\n            okText=\"Xóa\"\n            okType=\"danger\"\n            cancelText=\"Hủy bỏ\">\n            <Button icon={<DeleteOutlined />}></Button>\n          </Popconfirm>\n        </Space>\n      )\n    }\n  ]\n\n  function handleOpenModal() {\n    setAction(formActions.CREATE);\n    setModalVisible(true);\n  }\n\n  function handleCloseModal() {\n    setModalVisible(false);\n  }\n\n  async function getDrugRoutes() {\n    try {\n      setFetchingRoutes(true);\n      const response = await getDrugRouteAPI();\n      setRoutes(response.data);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setFetchingRoutes(false);\n    }\n  }\n\n  async function handleFormSubmit() {\n    try {\n      setModalLoading(true);\n      const values = await drugRouteForm.validateFields();\n      if (action === formActions.CREATE) {\n        await addDrugRouteAPI(values.name);\n      }\n\n      if (action === formActions.UPDATE) {\n        await updateDrugRouteAPI(selectedRoute.id, values.name);\n      }\n\n      getDrugRoutes();\n\n      setModalVisible(false);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setModalLoading(false);\n    }\n  }\n\n  function handleEditClick(route) {\n    setAction(formActions.UPDATE);\n    setSelectedRoute(route);\n    setModalVisible(true);\n  }\n\n  async function handleDelete(unit) {\n    try {\n      await deleteDrugRouteAPI(unit.id);\n      getDrugRoutes();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  function afterClose() {\n    drugRouteForm.resetFields();\n    setSelectedRoute(null);\n  }\n\n  useEffect(() => {\n    getDrugRoutes();\n  }, []);\n\n  return (\n    <>\n      <Row justify=\"space-between\">\n        <Col><h1 className=\"text-xl\">Quản lý đường dùng thuốc</h1></Col>\n        <Col>\n          <Button type=\"primary\" icon={<PlusOutlined />} onClick={handleOpenModal}>Tạo mới</Button>\n        </Col>\n      </Row>\n      <Table\n        rowKey=\"id\"\n        columns={tableColumns}\n        dataSource={routes}\n        pagination={false}\n        loading={fetchingRoutes} />\n      <Modal\n        visible={modalVisible}\n        title={action === formActions.CREATE ? 'Thêm đường dùng thuốc' : 'Cập nhật đường dùng thuốc'}\n        onCancel={handleCloseModal}\n        confirmLoading={modalLoading}\n        destroyOnClose={true}\n        afterClose={afterClose}\n        onOk={handleFormSubmit}>\n        <DrugRouteForm onFinish={handleFormSubmit} form={drugRouteForm} defaultRoute={selectedRoute} />\n      </Modal>\n    </>\n  )\n}\n\nexport default DrugRoutePage;","import axios from 'axios';\nimport { API_URL } from 'constant/apiUrl';\nimport { getQueryString } from 'utils/string';\n\nconst endpointPrefix = `${API_URL}/admin/manage-drug`;\n\nexport function getDrugsAPI(params) {\n  const url = `${endpointPrefix}/`;\n\n  if (params) {\n    return axios.get(`${url}?${getQueryString(params)}`);\n  }\n  return axios.get(url);\n}\n\nexport function getDrugDetailsAPI(id) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.get(url);\n}\n\nexport function addDrugAPI(body) {\n  const url = `${endpointPrefix}/`;\n  return axios.post(url, body);\n}\n\nexport function updateDrugAPI(id, body) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.put(url, body);\n}\n\nexport function deleteDrugAPI(id) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.delete(url);\n}","import axios from 'axios';\n\nimport { API_URL } from \"constant/apiUrl\";\n\nconst endpointPrefix = `${API_URL}/admin/manage-drug-dosage-form`;\n\nexport function getDrugDosageFormAPI(search = \"\") {\n  const url = `${endpointPrefix}/?search=${search}`;\n  return axios.get(url);\n}\n\nexport function addDrugDosageFormAPI(name) {\n  const url = `${endpointPrefix}/`;\n  return axios.post(url, { name: name });\n}\n\nexport function updateDrugDosageFormAPI(id, name) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.put(url, {\n    name: name\n  })\n}\n\nexport function deleteDrugDosageFormAPI(id) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.delete(url);\n}","import React, { useState, useEffect } from 'react';\nimport { Form, Input, Select, Spin } from 'antd';\nimport { getDrugCategoryAPI } from 'services/admin/drug-category.service';\nimport { getDrugUnitsAPI } from 'services/admin/drug-unit.service';\nimport { getDrugDetailsAPI } from 'services/admin/drug.service';\nimport { getDrugRouteAPI } from 'services/admin/drug-route.service';\nimport { getDrugDosageFormAPI } from 'services/admin/drug-dosage-form.service';\n\nconst DrugForm = props => {\n  const { form, onFinish, defaultDrug } = props;\n\n  const [categories, setCategories] = useState([]);\n  const [units, setUnits] = useState([]);\n  const [routes, setRoutes] = useState([]);\n  const [forms, setForms] = useState([]);\n  const [drugDetail, setDrugDetail] = useState(null);\n\n  const [catLoading, setCatLoading] = useState(false);\n  const [unitLoading, setUnitLoading] = useState(false);\n  const [routeLoading, setRouteLoading] = useState(false);\n  const [formLoading, setFormLoading] = useState(false);\n  const [detailLoading, setDetailLoading] = useState(false);\n\n  async function getDrugCategories() {\n    try {\n      setCatLoading(true);\n      const catResponse = await getDrugCategoryAPI();\n      setCategories(catResponse.data);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setCatLoading(false);\n    }\n  }\n\n  async function getDrugUnits() {\n    try {\n      setUnitLoading(true);\n      const unitResponse = await getDrugUnitsAPI();\n      setUnits(unitResponse.data);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setUnitLoading(false);\n    }\n  }\n\n  async function getDrugRoutes() {\n    try {\n      setRouteLoading(true);\n      const routeResponse = await getDrugRouteAPI();\n      setRoutes(routeResponse.data);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setRouteLoading(false);\n    }\n  }\n\n  async function getDrugDosageForms() {\n    try {\n      setFormLoading(true);\n      const formResponse = await getDrugDosageFormAPI();\n      setForms(formResponse.data);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setFormLoading(false);\n    }\n  }\n\n\n\n  async function getDrugDetail(id) {\n    try {\n      setDetailLoading(true);\n      const detailResponse = await getDrugDetailsAPI(id);\n      const drugDetail = detailResponse.data;\n      setDrugDetail(drugDetail);\n      setCategories(prevCats => {\n        const index = prevCats.findIndex(cat => cat.id === defaultDrug.drug_category.id);\n        if (index > -1) {\n          prevCats[index] = drugDetail.drug_category;\n          return prevCats;\n        } else {\n          return [...[drugDetail.drug_category], ...prevCats];\n        }\n      });\n      setUnits(prevUnits => {\n        const index = prevUnits.findIndex(u => u.id === defaultDrug.drug_unit.id);\n        if (index > -1) {\n          prevUnits[index] = drugDetail.drug_unit;\n          return prevUnits;\n        } else {\n          return [...[drugDetail.drug_unit], ...prevUnits];\n        }\n      });\n      setRoutes(prevRoutes => {\n        const index = prevRoutes.findIndex(r => r.id === defaultDrug.drug_route.id);\n        if (index > -1) {\n          prevRoutes[index] = drugDetail.drug_route;\n          return prevRoutes;\n        } else {\n          return [...[drugDetail.drug_route], ...prevRoutes];\n        }\n      });\n      setForms(prevForms => {\n        const index = prevForms.findIndex(f => f.id === defaultDrug.drug_dosage_form.id);\n        if (index > -1) {\n          prevForms[index] = drugDetail.drug_dosage_form;\n          return prevForms;\n        } else {\n          return [...[drugDetail.drug_dosage_form], ...prevForms];\n        }\n      });\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setDetailLoading(false);\n    }\n  }\n\n  async function getData() {\n    if (defaultDrug?.id) {\n      await Promise.all([\n        getDrugDetail(defaultDrug.id),\n        getDrugCategories(),\n        getDrugUnits(),\n        getDrugRoutes(),\n        getDrugDosageForms()\n      ]);\n\n    } else {\n      await Promise.all([\n        getDrugCategories(),\n        getDrugUnits(),\n        getDrugRoutes(),\n        getDrugDosageForms()\n      ])\n    }\n  }\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  useEffect(() => {\n    if (drugDetail) {\n      form.setFieldsValue({\n        code: drugDetail.code,\n        name: drugDetail.name,\n        price: drugDetail.price || 0,\n        drug_category: drugDetail.drug_category.id,\n        drug_unit: drugDetail.drug_unit.id,\n        drug_dosage_form: drugDetail.drug_dosage_form.id,\n        drug_route: drugDetail.drug_route.id,\n        strength: drugDetail.strength\n      });\n    }\n  }, [drugDetail, defaultDrug, form]);\n\n  return (\n    <Spin spinning={detailLoading}>\n      <Form\n        layout=\"vertical\"\n        form={form}\n        onFinish={onFinish}>\n        <Form.Item label=\"Mã thuốc\" name=\"code\" initialValue={drugDetail?.code}>\n          <Input />\n        </Form.Item>\n\n        <Form.Item label=\"Tên thuốc\" name=\"name\" initialValue={drugDetail?.name}>\n          <Input />\n        </Form.Item>\n\n        <Form.Item label=\"Giá\" name=\"price\" initialValue={0} hidden>\n          <Input type=\"number\" suffix=\"VNĐ\" value={0} />\n        </Form.Item>\n\n        <Form.Item label=\"Nhóm thuốc\" name=\"drug_category\" initialValue={drugDetail?.drug_category.id}>\n          <Select loading={catLoading}>\n            {\n              categories.map(cat => (\n                <Select.Option key={cat.id} value={cat.id}>{cat.name}</Select.Option>\n              ))\n            }\n          </Select>\n        </Form.Item>\n\n        <Form.Item label=\"Đơn vị tính\" name=\"drug_unit\" initialValue={drugDetail?.drug_unit.id}>\n          <Select loading={unitLoading}>\n            {\n              units.map(cat => (\n                <Select.Option key={cat.id} value={cat.id}>{cat.name}</Select.Option>\n              ))\n            }\n          </Select>\n        </Form.Item>\n\n        <Form.Item label=\"Đường dùng\" name=\"drug_route\" initialValue={drugDetail?.drug_route.id}>\n          <Select loading={routeLoading}>\n            {\n              routes.map(route => (\n                <Select.Option key={route.id} value={route.id}>{route.name}</Select.Option>\n              ))\n            }\n          </Select>\n        </Form.Item>\n        <Form.Item label=\"Dạng bào chế\" name=\"drug_dosage_form\" initialValue={drugDetail?.drug_dosage_form.id}>\n          <Select loading={formLoading}>\n            {\n              forms.map(f => (\n                <Select.Option key={f.id} value={f.id}>{f.name}</Select.Option>\n              ))\n            }\n          </Select>\n        </Form.Item>\n        <Form.Item label=\"Hàm lượng/nồng độ\" name=\"strength\" initialValue={drugDetail?.strength}>\n          <Input />\n        </Form.Item>\n      </Form>\n    </Spin>\n  )\n}\n\nexport default DrugForm;","import React, { useState, useEffect } from 'react';\nimport { Row, Col, Button, Modal, Table, Form, Popconfirm, Space } from 'antd';\nimport { PlusOutlined, EditOutlined, DeleteOutlined } from '@ant-design/icons';\nimport DrugForm from 'forms/DrugForm/DrugForm';\nimport { getDrugsAPI, addDrugAPI, updateDrugAPI, deleteDrugAPI } from 'services/admin/drug.service';\nimport { formActions } from 'constant/formActions';\nimport NumberFormat from 'react-number-format';\n\nconst DrugPage = () => {\n\n  const [modalVisible, setModalVisible] = useState(false);\n  const [drugs, setDrugs] = useState();\n  const [fetchingDrugs, setFetchingDrugs] = useState(false);\n  const [modalLoading, setModalLoading] = useState(false);\n  const [action, setAction] = useState(formActions.CREATE);\n  const [selectedDrug, setSelectedDrug] = useState(null);\n  const [drugForm] = Form.useForm();\n\n  const tableColumns = [\n    {\n      title: '#',\n      key: '#',\n      render: (text, record, index) => index + 1\n    },\n    {\n      title: 'Mã thuốc',\n      key: 'code',\n      dataIndex: 'code'\n    },\n    {\n      title: 'Tên thuốc',\n      key: 'name',\n      dataIndex: 'name'\n    },\n    {\n      title: 'Hàm lượng/nồng độ',\n      key: 'strength',\n      dataIndex: 'strength'\n    },\n    {\n      title: 'Hành động',\n      key: 'action',\n      render: (text, record, index) => (\n        <Space size={10}>\n          <Button icon={<EditOutlined />} onClick={() => handleEditClick(record)}></Button>\n          <Popconfirm\n            onConfirm={() => handleDelete(record)} title=\"Bạn có chắc muốn xóa không?\"\n            okText=\"Xóa\"\n            okType=\"danger\"\n            cancelText=\"Hủy bỏ\">\n            <Button icon={<DeleteOutlined />}></Button>\n          </Popconfirm>\n        </Space>\n      )\n    }\n  ]\n\n  function handleOpenModal() {\n    setAction(formActions.CREATE);\n    setModalVisible(true);\n  }\n\n  function handleCloseModal() {\n    setModalVisible(false);\n  }\n\n  async function getDrugs() {\n    try {\n      setFetchingDrugs(true);\n      const response = await getDrugsAPI();\n      setDrugs(response.data.results);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setFetchingDrugs(false);\n    }\n  }\n\n  async function handleFormSubmit() {\n    try {\n      setModalLoading(true);\n      const values = await drugForm.validateFields();\n      console.log(values);\n      const data = {\n        code: values.code,\n        name: values.name,\n        price: values.price,\n        drug_category: values.drug_category,\n        drug_unit: values.drug_unit,\n        drug_route: values.drug_route,\n        drug_dosage_form: values.drug_dosage_form,\n        strength: values.strength\n      }\n      if (action === formActions.CREATE) {\n        await addDrugAPI(values);\n      }\n\n      if (action === formActions.UPDATE) {\n        await updateDrugAPI(selectedDrug.id, values);\n      }\n\n      getDrugs();\n\n      setModalVisible(false);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setModalLoading(false);\n    }\n  }\n\n  function handleEditClick(drug) {\n    setAction(formActions.UPDATE);\n    setSelectedDrug(drug);\n    setModalVisible(true);\n  }\n\n  async function handleDelete(drug) {\n    try {\n      await deleteDrugAPI(drug.id);\n      getDrugs();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  function afterClose() {\n    drugForm.resetFields();\n    setSelectedDrug(null);\n  }\n\n  useEffect(() => {\n    getDrugs();\n  }, []);\n\n  return (\n    <>\n      <Row justify=\"space-between\">\n        <Col><h1 className=\"text-xl\">Quản lý thuốc</h1></Col>\n        <Col>\n          <Button type=\"primary\" icon={<PlusOutlined />} onClick={handleOpenModal}>Tạo mới</Button>\n        </Col>\n      </Row>\n      <Table\n        rowKey=\"id\"\n        columns={tableColumns}\n        dataSource={drugs}\n        loading={fetchingDrugs}\n        pagination={false} />\n      <Modal\n        visible={modalVisible}\n        title={action === formActions.CREATE ? 'Thêm thuốc' : 'Cập nhật thuốc'}\n        onCancel={handleCloseModal}\n        confirmLoading={modalLoading}\n        destroyOnClose={true}\n        afterClose={afterClose}\n        onOk={handleFormSubmit}>\n        <DrugForm onFinish={handleFormSubmit} form={drugForm} defaultDrug={selectedDrug} />\n      </Modal>\n    </>\n  )\n}\n\nexport default DrugPage;","import React from 'react';\nimport { Form, Input } from 'antd';\n\nconst DrugInstructionForm = props => {\n  const { form, onFinish, defaultInstruction } = props;\n\n  return (\n    <Form\n      layout=\"vertical\"\n      form={form}\n      onFinish={onFinish}>\n      <Form.Item label=\"Hướng dẫn sử dụng\" name=\"instruction\" initialValue={defaultInstruction?.instruction}>\n        <Input autoFocus />\n      </Form.Item>\n    </Form>\n  )\n}\n\nexport default DrugInstructionForm;","import axios from 'axios';\n\nimport { API_URL } from \"constant/apiUrl\";\n\nconst endpointPrefix = `${API_URL}/admin/manage-drug-instruction`;\n\nexport function getDrugInstructionsAPI() {\n  const url = `${endpointPrefix}/`;\n  return axios.get(url);\n}\n\nexport function addDrugInstructionAPI(instruction) {\n  const url = `${endpointPrefix}/`;\n  return axios.post(url, { instruction: instruction });\n}\n\nexport function updateDrugInstructionAPI(id, instruction) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.put(url, {\n    instruction: instruction\n  })\n}\n\nexport function deleteDrugInstructionAPI(id) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.delete(url);\n}","import React, { useState, useEffect } from 'react';\nimport { Row, Col, Button, Modal, Table, Form, Popconfirm, Space } from 'antd';\nimport { PlusOutlined, EditOutlined, DeleteOutlined } from '@ant-design/icons';\nimport DrugInstructionForm from 'forms/DrugInstructionForm/DrugInstructionForm';\nimport { getDrugInstructionsAPI, addDrugInstructionAPI, updateDrugInstructionAPI, deleteDrugInstructionAPI } from 'services/admin/drug-instruction.service';\nimport { formActions } from 'constant/formActions';\n\nconst DrugInstructionPage = () => {\n\n  const [modalVisible, setModalVisible] = useState(false);\n  const [drugInstructions, setDrugInstructions] = useState([]);\n  const [fetchingDrugInstructions, setFetchingDrugInstructions] = useState(false);\n  const [modalLoading, setModalLoading] = useState(false);\n  const [action, setAction] = useState(formActions.CREATE);\n  const [selectedInstruction, setSelectedInstruction] = useState(null);\n  const [drugInstructionForm] = Form.useForm();\n\n  const tableColumns = [\n    {\n      title: '#',\n      key: '#',\n      render: (text, record, index) => index + 1\n    },\n    {\n      title: 'Hướng dẫn sử dụng',\n      key: 'instruction',\n      dataIndex: 'instruction'\n    },\n    {\n      title: 'Hành động',\n      key: 'action',\n      render: (text, record, index) => (\n        <Space size={10}>\n          <Button icon={<EditOutlined />} onClick={() => handleEditClick(record)}></Button>\n          <Popconfirm\n            onConfirm={() => handleDelete(record)} title=\"Bạn có chắc muốn xóa không?\"\n            okText=\"Xóa\"\n            okType=\"danger\"\n            cancelText=\"Hủy bỏ\">\n            <Button icon={<DeleteOutlined />}></Button>\n          </Popconfirm>\n        </Space>\n      )\n    }\n  ]\n\n  function handleOpenModal() {\n    setAction(formActions.CREATE);\n    setModalVisible(true);\n  }\n\n  function handleCloseModal() {\n    setModalVisible(false);\n  }\n\n  async function getDrugInstructions() {\n    try {\n      setFetchingDrugInstructions(true);\n      const response = await getDrugInstructionsAPI();\n      setDrugInstructions(response.data);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setFetchingDrugInstructions(false);\n    }\n  }\n\n  async function handleFormSubmit() {\n    try {\n      setModalLoading(true);\n      const values = await drugInstructionForm.validateFields();\n      if (action === formActions.CREATE) {\n        await addDrugInstructionAPI(values.instruction);\n      }\n\n      if (action === formActions.UPDATE) {\n        await updateDrugInstructionAPI(selectedInstruction.id, values.instruction);\n      }\n\n      getDrugInstructions();\n\n      setModalVisible(false);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setModalLoading(false);\n    }\n  }\n\n  function handleEditClick(ins) {\n    setAction(formActions.UPDATE);\n    setSelectedInstruction(ins);\n    setModalVisible(true);\n  }\n\n  async function handleDelete(unit) {\n    try {\n      await deleteDrugInstructionAPI(unit.id);\n      getDrugInstructions();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  function afterClose() {\n    drugInstructionForm.resetFields();\n    setSelectedInstruction(null);\n  }\n\n  useEffect(() => {\n    getDrugInstructions();\n  }, []);\n\n  return (\n    <>\n      <Row justify=\"space-between\">\n        <Col><h1 className=\"text-xl\">Quản lý hướng dẫn sử dụng</h1></Col>\n        <Col>\n          <Button type=\"primary\" icon={<PlusOutlined />} onClick={handleOpenModal}>Tạo mới</Button>\n        </Col>\n      </Row>\n      <Table\n        rowKey=\"id\"\n        columns={tableColumns}\n        dataSource={drugInstructions}\n        loading={fetchingDrugInstructions}\n        pagination={false} />\n      <Modal\n        visible={modalVisible}\n        title={action === formActions.CREATE ? 'Thêm hướng dẫn sử dụng' : 'Cập nhật hướng dẫn sử dụng'}\n        onCancel={handleCloseModal}\n        confirmLoading={modalLoading}\n        destroyOnClose={true}\n        afterClose={afterClose}\n        onOk={handleFormSubmit}>\n        <DrugInstructionForm onFinish={handleFormSubmit} form={drugInstructionForm} defaultInstruction={selectedInstruction} />\n      </Modal>\n    </>\n  )\n}\n\nexport default DrugInstructionPage;","import React from 'react';\nimport { Form, Input } from 'antd';\n\nconst DiseaseCategoryForm = props => {\n  const { form, onFinish, defaultCategory } = props;\n\n  return (\n    <Form\n      layout=\"vertical\"\n      form={form}\n      onFinish={onFinish}>\n      <Form.Item label=\"Loại bệnh\" name=\"name\" initialValue={defaultCategory?.name}>\n        <Input autoFocus />\n      </Form.Item>\n    </Form>\n  )\n}\n\nexport default DiseaseCategoryForm;","import axios from 'axios';\n\nimport { API_URL } from \"constant/apiUrl\";\n\nconst endpointPrefix = `${API_URL}/admin/manage-disease-category`;\n\nexport function getDiseaseCategoryAPI(search = \"\") {\n  const url = `${endpointPrefix}/?search=${search}`;\n  return axios.get(url);\n}\n\nexport function addDiseaseCategoryAPI(name) {\n  const url = `${endpointPrefix}/`;\n  return axios.post(url, { name: name });\n}\n\nexport function updateDiseaseCategoryAPI(id, name) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.put(url, {\n    name: name\n  })\n}\n\nexport function deleteDiseaseCategoryAPI(id) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.delete(url);\n}","import React, { useState, useEffect } from 'react';\nimport { Row, Col, Button, Modal, Table, Form, Popconfirm, Space } from 'antd';\nimport { PlusOutlined, EditOutlined, DeleteOutlined } from '@ant-design/icons';\nimport DiseaseCategoryForm from 'forms/DiseaseCategoryForm/DiseaseCategoryForm';\nimport { addDiseaseCategoryAPI, deleteDiseaseCategoryAPI, getDiseaseCategoryAPI, updateDiseaseCategoryAPI } from 'services/admin/disease-category.service';\nimport { formActions } from 'constant/formActions';\n\nconst DiseaseCategoryPage = () => {\n\n  const [modalVisible, setModalVisible] = useState(false);\n  const [categories, setCategories] = useState([]);\n  const [fetchingCategories, setFetchingCategories] = useState(false);\n  const [modalLoading, setModalLoading] = useState(false);\n  const [action, setAction] = useState(formActions.CREATE);\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [diseaseCategoryForm] = Form.useForm();\n\n  const tableColumns = [\n    {\n      title: '#',\n      key: '#',\n      render: (text, record, index) => index + 1\n    },\n    {\n      title: 'Tên',\n      key: 'name',\n      dataIndex: 'name'\n    },\n    {\n      title: 'Hành động',\n      key: 'action',\n      render: (text, record, index) => (\n        <Space size={10}>\n          <Button icon={<EditOutlined />} onClick={() => handleEditClick(record)}></Button>\n          <Popconfirm\n            onConfirm={() => handleDelete(record)} title=\"Bạn có chắc muốn xóa không?\"\n            okText=\"Xóa\"\n            okType=\"danger\"\n            cancelText=\"Hủy bỏ\">\n            <Button icon={<DeleteOutlined />}></Button>\n          </Popconfirm>\n        </Space>\n      )\n    }\n  ]\n\n  function handleOpenModal() {\n    setAction(formActions.CREATE);\n    setModalVisible(true);\n  }\n\n  function handleCloseModal() {\n    setModalVisible(false);\n  }\n\n  async function getDiseaseCategories() {\n    try {\n      setFetchingCategories(true);\n      const response = await getDiseaseCategoryAPI();\n      setCategories(response.data);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setFetchingCategories(false);\n    }\n  }\n\n  async function handleFormSubmit() {\n    try {\n      setModalLoading(true);\n      const values = await diseaseCategoryForm.validateFields();\n      if (action === formActions.CREATE) {\n        await addDiseaseCategoryAPI(values.name);\n      }\n\n      if (action === formActions.UPDATE) {\n        await updateDiseaseCategoryAPI(selectedCategory.id, values.name);\n      }\n\n      getDiseaseCategories();\n\n      setModalVisible(false);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setModalLoading(false);\n    }\n  }\n\n  function handleEditClick(category) {\n    setAction(formActions.UPDATE);\n    setSelectedCategory(category);\n    setModalVisible(true);\n  }\n\n  async function handleDelete(unit) {\n    try {\n      await deleteDiseaseCategoryAPI(unit.id);\n      getDiseaseCategories();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  function afterClose() {\n    diseaseCategoryForm.resetFields();\n    setSelectedCategory(null);\n  }\n\n  useEffect(() => {\n    getDiseaseCategories();\n  }, []);\n\n  return (\n    <>\n      <Row justify=\"space-between\">\n        <Col><h1 className=\"text-xl\">Quản lý nhóm bệnh</h1></Col>\n        <Col>\n          <Button type=\"primary\" icon={<PlusOutlined />} onClick={handleOpenModal}>Tạo mới</Button>\n        </Col>\n      </Row>\n      <Table\n        rowKey=\"id\"\n        columns={tableColumns}\n        dataSource={categories}\n        pagination={false}\n        loading={fetchingCategories} />\n      <Modal\n        visible={modalVisible}\n        title={action === formActions.CREATE ? 'Thêm loại bệnh' : 'Cập nhật loại bệnh'}\n        onCancel={handleCloseModal}\n        confirmLoading={modalLoading}\n        destroyOnClose={true}\n        afterClose={afterClose}\n        onOk={handleFormSubmit}>\n        <DiseaseCategoryForm onFinish={handleFormSubmit} form={diseaseCategoryForm} defaultCategory={selectedCategory} />\n      </Modal>\n    </>\n  )\n}\n\nexport default DiseaseCategoryPage;","import axios from 'axios';\nimport { API_URL } from 'constant/apiUrl';\n\nconst endpointPrefix = `${API_URL}/admin/manage-disease`;\n\nexport function getDiseasesAPI() {\n  const url = `${endpointPrefix}/`;\n  return axios.get(url);\n}\n\nexport function getDiseaseDetailsAPI(id) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.get(url);\n}\n\nexport function addDiseaseAPI({ code, name, disease_category }) {\n  const url = `${endpointPrefix}/`;\n  return axios.post(url, {\n    code,\n    name,\n    disease_category\n  });\n}\n\nexport function updateDiseaseAPI(id, { code, name, disease_category }) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.put(url, {\n    code,\n    name,\n    disease_category\n  });\n}\n\nexport function deleteDiseaseAPI(id) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.delete(url);\n}","import React, { useState, useEffect } from 'react';\nimport { Form, Input, Select, Spin } from 'antd';\nimport { getDiseaseCategoryAPI } from 'services/admin/disease-category.service';\nimport { getDiseaseDetailsAPI } from 'services/admin/disease.service';\n\nconst DiseaseForm = props => {\n  const { form, onFinish, defaultDisease } = props;\n\n  const [categories, setCategories] = useState([]);\n  const [diseaseDetail, setDiseaseDetail] = useState(null);\n  const [catLoading, setCatLoading] = useState(false);\n  const [detailLoading, setDetailLoading] = useState(false);\n\n  async function getDiseaseCategories() {\n    try {\n      setCatLoading(true);\n      const catResponse = await getDiseaseCategoryAPI();\n      setCategories(catResponse.data);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setCatLoading(false);\n    }\n  }\n\n  async function getDiseaseDetail(id) {\n    try {\n      setDetailLoading(true);\n      const detailResponse = await getDiseaseDetailsAPI(id);\n      const diseaseDetail = detailResponse.data;\n      setDiseaseDetail(diseaseDetail);\n      setCategories(prevCats => {\n        const index = prevCats.findIndex(cat => cat.id === defaultDisease.disease_category);\n        if (index > -1) {\n          prevCats[index] = diseaseDetail.disease_category;\n          return prevCats;\n        } else {\n          return [...[diseaseDetail.disease_category], ...prevCats];\n        }\n      });\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setDetailLoading(false);\n    }\n  }\n\n  async function getData() {\n    if (defaultDisease?.id) {\n      await Promise.all([\n        getDiseaseDetail(defaultDisease.id),\n        getDiseaseCategories(),\n      ]);\n\n    } else {\n      await Promise.all([\n        getDiseaseCategories(),\n      ])\n    }\n\n  }\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  useEffect(() => {\n    if (diseaseDetail) {\n      form.setFieldsValue({\n        code: diseaseDetail.code,\n        name: diseaseDetail.name,\n        disease_category: diseaseDetail.disease_category.id,\n      });\n    }\n  }, [diseaseDetail, defaultDisease, form]);\n\n  return (\n    <Spin spinning={detailLoading}>\n      <Form\n        layout=\"vertical\"\n        form={form}\n        onFinish={onFinish}>\n        <Form.Item label=\"Mã bệnh\" name=\"code\" initialValue={diseaseDetail?.code}>\n          <Input />\n        </Form.Item>\n\n        <Form.Item label=\"Tên bệnh\" name=\"name\" initialValue={diseaseDetail?.name}>\n          <Input />\n        </Form.Item>\n\n        <Form.Item label=\"Loại bệnh\" name=\"disease_category\" initialValue={diseaseDetail?.disease_category.id}>\n          <Select loading={catLoading}>\n            {\n              categories.map(cat => (\n                <Select.Option key={cat.id} value={cat.id}>{cat.name}</Select.Option>\n              ))\n            }\n          </Select>\n        </Form.Item>\n      </Form>\n    </Spin>\n  )\n}\n\nexport default DiseaseForm;","import React, { useState, useEffect } from 'react';\nimport { Row, Col, Button, Modal, Table, Form, Popconfirm, Space } from 'antd';\nimport { PlusOutlined, EditOutlined, DeleteOutlined } from '@ant-design/icons';\nimport DiseaseForm from 'forms/DiseaseForm/DiseaseForm';\nimport { getDiseasesAPI, addDiseaseAPI, updateDiseaseAPI, deleteDiseaseAPI } from 'services/admin/disease.service';\nimport { formActions } from 'constant/formActions';\n\nconst DiseasePage = () => {\n\n  const [modalVisible, setModalVisible] = useState(false);\n  const [diseases, setDiseases] = useState();\n  const [fetchingDiseases, setFetchingDiseases] = useState(false);\n  const [modalLoading, setModalLoading] = useState(false);\n  const [action, setAction] = useState(formActions.CREATE);\n  const [selectedDisease, setSelectedDisease] = useState(null);\n  const [diseaseForm] = Form.useForm();\n\n  const tableColumns = [\n    {\n      title: '#',\n      key: '#',\n      render: (text, record, index) => index + 1\n    },\n    {\n      title: 'Mã bệnh',\n      key: 'code',\n      dataIndex: 'code'\n    },\n    {\n      title: 'Tên bệnh',\n      key: 'name',\n      dataIndex: 'name'\n    },\n    {\n      title: 'Hành động',\n      key: 'action',\n      render: (text, record, index) => (\n        <Space size={10}>\n          <Button icon={<EditOutlined />} onClick={() => handleEditClick(record)}></Button>\n          <Popconfirm\n            onConfirm={() => handleDelete(record)} title=\"Bạn có chắc muốn xóa không?\"\n            okText=\"Xóa\"\n            okType=\"danger\"\n            cancelText=\"Hủy bỏ\">\n            <Button icon={<DeleteOutlined />}></Button>\n          </Popconfirm>\n        </Space>\n      )\n    }\n  ]\n\n  function handleOpenModal() {\n    setAction(formActions.CREATE);\n    setModalVisible(true);\n  }\n\n  function handleCloseModal() {\n    setModalVisible(false);\n  }\n\n  async function getDiseases() {\n    try {\n      setFetchingDiseases(true);\n      const response = await getDiseasesAPI();\n      setDiseases(response.data.results);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setFetchingDiseases(false);\n    }\n  }\n\n  async function handleFormSubmit() {\n    try {\n      setModalLoading(true);\n      const values = await diseaseForm.validateFields();\n      const data = {\n        code: values.code,\n        name: values.name,\n        disease_category: values.disease_category,\n      }\n      if (action === formActions.CREATE) {\n        await addDiseaseAPI(data);\n      }\n\n      if (action === formActions.UPDATE) {\n        await updateDiseaseAPI(selectedDisease.id, data);\n      }\n\n      getDiseases();\n\n      setModalVisible(false);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setModalLoading(false);\n    }\n  }\n\n  function handleEditClick(disease) {\n    setAction(formActions.UPDATE);\n    setSelectedDisease(disease);\n    setModalVisible(true);\n  }\n\n  async function handleDelete(disease) {\n    try {\n      await deleteDiseaseAPI(disease.id);\n      getDiseases();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  function afterClose() {\n    diseaseForm.resetFields();\n    setSelectedDisease(null);\n  }\n\n  useEffect(() => {\n    getDiseases();\n  }, []);\n\n  return (\n    <>\n      <Row justify=\"space-between\">\n        <Col><h1 className=\"text-xl\">Quản lý bệnh</h1></Col>\n        <Col>\n          <Button type=\"primary\" icon={<PlusOutlined />} onClick={handleOpenModal}>Tạo mới</Button>\n        </Col>\n      </Row>\n      <Table\n        rowKey=\"id\"\n        columns={tableColumns}\n        dataSource={diseases}\n        loading={fetchingDiseases} />\n      <Modal\n        visible={modalVisible}\n        title={action === formActions.CREATE ? 'Thêm bệnh' : 'Cập nhật bệnh'}\n        onCancel={handleCloseModal}\n        confirmLoading={modalLoading}\n        destroyOnClose={true}\n        afterClose={afterClose}\n        onOk={handleFormSubmit}>\n        <DiseaseForm onFinish={handleFormSubmit} form={diseaseForm} defaultDisease={selectedDisease} />\n      </Modal>\n    </>\n  )\n}\n\nexport default DiseasePage;","import React from 'react';\n\nconst NotificationPage = () => {\n  return (\n    <div>Notification Page</div>\n  )\n}\n\nexport default NotificationPage;","import axios from 'axios';\n\nimport { API_URL } from \"constant/apiUrl\";\n\nconst endpointPrefix = `${API_URL}/user/room`;\n\nexport function getRoomAPI() {\n  const url = `${endpointPrefix}/`;\n  return axios.get(url);\n}\n\nexport function getRoomDetailsAPI(roomId) {\n  const url = `${endpointPrefix}/${roomId}/`;\n  return axios.get(url);\n}","import axios from 'axios';\n\nimport { API_URL } from \"constant/apiUrl\";\n\nconst endpointPrefix = `${API_URL}/admin/manage-room`;\n\nexport function getRoomAPI() {\n  const url = `${endpointPrefix}/`;\n  return axios.get(url);\n}\n\nexport function addRoomAPI({ number, name }) {\n  const url = `${endpointPrefix}/`;\n  return axios.post(url, { number: Number(number), name });\n}\n\nexport function updateRoomAPI(id, { name, number }) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.put(url, {\n    number: Number(number),\n    name\n  })\n}\n\nexport function deleteRoomAPI(id) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.delete(url);\n}","import axios from 'axios';\nimport { API_URL } from 'constant/apiUrl';\nimport { getQueryString } from 'utils/string';\n\nconst endpointPrefix = `${API_URL}/user/visit`;\n\nexport function getVisitDataAPI(query) {\n  const url = `${endpointPrefix}/`;\n  if (query) {\n    return axios.get(`${url}?${getQueryString(query)}`);\n  }\n  return axios.get(url);\n}\n\nexport function createVisitAPI({ patientId, roomId }) {\n  const url = `${endpointPrefix}/`;\n  return axios.post(url, {\n    room_id: roomId,\n    patient_id: patientId\n  })\n}\n\nexport function deleteVisitAPI(visitId) {\n  const url = `${endpointPrefix}/${visitId}/`;\n  return axios.delete(url);\n}","import axios from 'axios';\nimport { API_URL } from 'constant/apiUrl';\nimport { getQueryString } from 'utils/string';\n\nconst endpointPrefix = `${API_URL}/admin/manage-visit`;\n\nexport function getVisitDataAPI(query) {\n  const url = `${endpointPrefix}/`;\n  if (query) {\n    return axios.get(`${url}?${getQueryString(query)}`);\n  }\n  return axios.get(url);\n}\n\nexport function createVisitAPI({ patientId, roomId }) {\n  const url = `${endpointPrefix}/`;\n  return axios.post(url, {\n    room_id: roomId,\n    patient_id: patientId\n  })\n}","import axios from 'axios';\nimport { NODE_URL } from 'constant/apiUrl';\nimport { getQueryString } from 'utils/string';\n\nconst endpointPrefix = `${NODE_URL}/api`;\n\nexport function listEMRAPI(query) {\n  const url = `${endpointPrefix}/physician/emrs/`;\n  if (query) {\n    return axios.get(`${url}?${getQueryString(query)}`);\n  }\n\n  return axios.get(url);\n}\n\nexport function addEMRAPI(emr) {\n  const url = `${endpointPrefix}/physician/emrs/`;\n  return axios.post(url, emr);\n}\n\nexport function getEMRHistoryAPI(emrId) {\n  const url = `${endpointPrefix}/physician/emrs/${emrId}`;\n  return axios.get(url);\n}\n\nexport function updateEMRAPI(emrId, body) {\n  const url = `${endpointPrefix}/physician/emrs/${emrId}`;\n  return axios.put(url, body);\n}\n\nexport function completeEMRAPI(emrId) {\n  const url = `${endpointPrefix}/physician/emrs/${emrId}/complete`;\n  return axios.get(url);\n}","import React, { useState, useEffect } from 'react';\nimport { Row, Col, Select, Empty, Table, Button } from 'antd';\nimport { connect } from 'react-redux';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { removeDuplicates } from 'utils/array';\nimport moment from 'moment';\n\n// APIs\nimport { getRoomAPI } from 'services/user/room.service';\nimport { getRoomAPI as adminGetRoomAPI } from 'services/admin/room.service';\nimport { getVisitDataAPI } from 'services/user/visit.service';\nimport { getVisitDataAPI as adminGetVisitDataAPI } from 'services/admin/visit.service';\nimport { addEMRAPI, getEMRHistoryAPI } from 'services/user/emr.service';\n\n\nconst VisitPage = props => {\n  const user = props.user;\n  const { pathname } = useLocation();\n\n  const history = useHistory();\n  const [rooms, setRooms] = useState([]);\n  const [roomLoading, setRoomLoading] = useState(false);\n  const [visitData, setVisitData] = useState(null);\n  const [visitLoading, setVisitLoading] = useState(false);\n  const [createEMRLoading, setCreateEMRLoading] = useState([]);\n\n  const [selectedRoom, setSelectedRoom] = useState(\"\");\n\n  const visitList = visitData?.results.filter(visit => {\n    const createdAt = new Date(visit.created_at);\n    const today = new Date();\n    const isToday = createdAt.getDate() === today.getDate() &&\n      createdAt.getMonth() === today.getMonth() &&\n      createdAt.getFullYear() === today.getFullYear();\n    return (isToday && visit.room.id === selectedRoom)\n  });\n\n  const tableColumns = [\n    {\n      title: 'Số thứ tự',\n      key: '#',\n      dataIndex: 'visit_number'\n    },\n    {\n      title: 'Họ và tên',\n      key: 'fullname',\n      render: (_, record) => record.patient.first_name + \" \" + record.patient.last_name\n    },\n    {\n      title: 'Giới tính',\n      key: 'gender',\n      render: (_, record) => record.patient.gender\n    },\n    {\n      title: 'Ngày sinh',\n      key: 'DOB',\n      render: (_, record) => moment(record.patient.DOB).format('DD/MM/YYYY')\n    },\n    {\n      ken: 'action',\n      render: (_, record) => <Button onClick={() => handlePatientClick(record)} loading={createEMRLoading.includes(record.id)}>Khám bệnh</Button>\n    }\n  ]\n\n  async function getRooms() {\n    try {\n      setRoomLoading(true);\n      let roomResponse;\n      if (user.role.name === \"admin\") {\n        roomResponse = await adminGetRoomAPI();\n      } else if (user.role.name === \"physician\" || user?.role?.name === \"receptionist\") {\n        roomResponse = await getRoomAPI();\n      }\n      setRooms(roomResponse.data);\n\n      const prevSelected = localStorage.getItem(\"selectedRoom\");\n      if (prevSelected) {\n        setSelectedRoom(prevSelected);\n        getVisitData(prevSelected);\n      }\n\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setRoomLoading(false);\n    }\n  }\n\n  async function getVisitData(roomId) {\n    try {\n      let visitDataResponse;\n      setVisitLoading(true);\n      if (user.role.name === \"admin\") {\n        visitDataResponse = await adminGetVisitDataAPI({ room_id: roomId });\n      } else {\n        visitDataResponse = await getVisitDataAPI({ room_id: roomId })\n      }\n      const visitData = visitDataResponse.data;\n      setVisitData(visitData);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setVisitLoading(false);\n    }\n  }\n\n  async function getInitialData() {\n    await Promise.all([\n      getRooms(),\n    ]);\n  }\n\n  useEffect(() => {\n    if (user) {\n      getInitialData();\n    }\n  }, [user]);\n\n  useEffect(() => {\n    if (selectedRoom) {\n      localStorage.setItem(\"selectedRoom\", selectedRoom);\n    }\n  }, [selectedRoom])\n\n  async function createEmr(emr) {\n    try {\n      setCreateEMRLoading(prev => [...prev, ...[emr.visit_id]]);\n      const response = await addEMRAPI(emr);\n      return Promise.resolve(response);\n    } catch (error) {\n      console.log(error);\n      return Promise.reject(error);\n    } finally {\n      setCreateEMRLoading(prev => {\n        const cloneArr = [...prev];\n        cloneArr.splice(cloneArr.indexOf(emr.visit_id), 1);\n        return cloneArr\n      });\n    }\n  }\n\n  async function checkExistEMR(emrId) {\n    try {\n      setCreateEMRLoading(prev => [...prev, ...[emrId]]);\n      const historyResponse = await getEMRHistoryAPI(emrId);\n      const data = historyResponse.data.data;\n      const existEmr = data.find(emr => emr.id === emrId && emr.completed_at === null);\n      return !!(existEmr);\n    } catch (error) {\n\n    } finally {\n      setCreateEMRLoading(prev => {\n        const cloneArr = [...prev];\n        cloneArr.splice(cloneArr.indexOf(emrId), 1);\n        return cloneArr\n      });\n    }\n  }\n\n  async function handlePatientClick(visit) {\n    const { patient } = visit;\n    const existVisit = await checkExistEMR(visit.id);\n\n    if (!existVisit) {\n\n      const emrObj = {\n        visit_id: visit.id,\n        patient: visit.patient,\n        physician: user,\n        room: visit.room,\n        medical_record: {\n          administrative: {\n            fullname: null,\n            dayOfBirth: null,\n            gender: null,\n            job: null,\n            ethnicity: null,\n            expatriate: null,\n            address: null,\n            workplace: null,\n            object: null,\n            insurance_expirity: null,\n            insurance_number: null,\n            family_member_and_address: null,\n            phone: null,\n            checkin_at: null,\n            previous_diagnose: null,\n            come_from: null\n          },\n          present_complaint: null,\n          ask: {\n            pathological_process: null,\n            self_medical_history: null,\n            family_medical_history: null\n          },\n          examination: {\n            heartbeat: null,\n            temperature: null,\n            blood_pressure: null,\n            breathing: null,\n            weight: null,\n            body: null,\n            partials: null,\n            subclinical_summary: null,\n            initial_diagnose: null,\n            drugs: null,\n            processed: null,\n            diagnose: null,\n            from_date: null,\n            to_date: null,\n          },\n          summary: {\n            pathological_process_and_clinical_course: null,\n            valuable_subclinical_summary: null,\n            primary_disease: null,\n            sub_disease: null,\n            treatment_method: null,\n            patient_status: null,\n            direction_of_treatment: null,\n            services: null,\n            attachments: []\n          }\n        }\n      }\n\n      try {\n          await createEmr(emrObj);\n          history.push(`${pathname}/${visit.id}`);\n        } catch(error) {\n          console.log(error);\n        }\n      } else {\n        history.push(`${pathname}/${visit.id}`);\n    }\n  }\n\n  function handleChangeRoom(value) {\n    setSelectedRoom(value);\n    getVisitData(value);\n  }\n\n  return (\n    <>\n      <Row className=\"flex-no-wrap\">\n        <Col style={{ width: 350 }} className=\"flex-shrink-0\">\n          <div className=\"mb-5\">\n            <h3 className=\"text-xl\">Khoa</h3>\n            <Select loading={roomLoading} style={{ width: '100%' }} value={selectedRoom} onChange={handleChangeRoom}>\n              {\n                rooms.map(room => (\n                  <Select.Option key={room.id} value={room.id} onChange={handleChangeRoom}>{room.name}</Select.Option>\n                ))\n              }\n            </Select>\n          </div>\n        </Col>\n        <Col flex=\"0 0 45px\"></Col>\n        <Col flex={1}>\n          <h3 className=\"text-xl\">Bệnh nhân đang chờ khám</h3>\n          <Table dataSource={visitList} columns={tableColumns} rowKey=\"id\" loading={visitLoading} pagination={false} />\n        </Col>\n      </Row>\n    </>\n  )\n}\n\nconst mapStateToProps = state => ({\n  user: state.userState.user\n})\n\nexport default connect(mapStateToProps)(VisitPage);","import axios from 'axios';\nimport { API_URL } from 'constant/apiUrl';\n\nconst endpointPrefix = `${API_URL}/user/patient`;\n\nexport function listAllPatientsAPI(search = \"\") {\n  const url = `${endpointPrefix}/?search=${search}`;\n  return axios.get(url);\n}\n\nexport function getPatientDetailsAPI(patientId) {\n  const url = `${endpointPrefix}/${patientId}/`;\n  return axios.get(url);\n}\n\nexport function createPatientAPI(body) {\n  const url = `${endpointPrefix}/`;\n  return axios.post(url, body)\n}\n\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { PageHeader, Table, Space, Button } from 'antd';\nimport { EyeOutlined } from '@ant-design/icons';\nimport { Link, useRouteMatch } from 'react-router-dom';\nimport moment from 'moment';\n\n// API\nimport { listAllPatientsAPI } from 'services/user/patient.service';\n\nconst PatientPage = props => {\n  const { user } = props;\n  const { path } = useRouteMatch();\n\n  const [patientData, setPatientData] = useState(null);\n  const [patientLoading, setPatientLoading] = useState(false);\n\n  const tableColumns = [\n    {\n      title: '#',\n      key: '#',\n      render: (text, record, index) => index + 1\n    },\n    {\n      title: 'Họ và tên',\n      key: 'fullname',\n      render: (text, record) => record.first_name + \" \" + record.last_name\n    },\n    {\n      title: 'Giới tính',\n      key: 'gender',\n      dataIndex: 'gender'\n    },\n    {\n      title: 'Ngày sinh',\n      key: 'DOB',\n      render: (text, record) => moment(record.DOB).format('DD/MM/YYYY')\n    },\n    {\n      title: 'Địa chỉ',\n      key: 'address',\n      render: (text, record) => record.address || <i className=\"text-gray-500\">Đang cập nhật...</i>\n    },\n    {\n      title: 'Hành động',\n      key: 'action',\n      render: (text, record) => (\n        <Space>\n          <Link to={`${path}/${record.id}`}>\n            <Button icon={<EyeOutlined />}>Xem chi tiết</Button>\n          </Link>\n        </Space>\n      )\n    }\n  ]\n\n  async function listAllPatient() {\n    try {\n      setPatientLoading(true);\n      const patientResults = await listAllPatientsAPI();\n      const patientData = patientResults.data;\n      setPatientData(patientData);\n    } catch (error) {\n\n    } finally {\n      setPatientLoading(false);\n    }\n  }\n\n  async function getInitialData() {\n    await Promise.all([\n      listAllPatient()\n    ])\n  }\n\n  useEffect(() => {\n    getInitialData()\n  }, []);\n\n  return (\n    <>\n      <PageHeader title=\"Bệnh nhân\" />\n      <Table columns={tableColumns} dataSource={patientData?.results} loading={patientLoading} rowKey=\"id\" />\n    </>\n  )\n}\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.userState.user\n  }\n}\n\nexport default connect(mapStateToProps)(PatientPage); ","import React from 'react';\nimport { Calendar, PageHeader, Row, Col } from 'antd';\n\nconst AppointmentPage = () => {\n  return (\n    <>\n      <h3 className=\"text-xl\">Lịch hẹn</h3>\n      <Row>\n        <Col flex=\"1\">\n          <Calendar mode=\"month\" locale=\"vi\" />\n        </Col>\n\n        <Col flex=\"0 0 300px\">\n\n        </Col>\n      </Row>\n    </>\n  )\n}\n\nexport default AppointmentPage;","import axios from 'axios';\n\nimport { API_URL } from \"constant/apiUrl\";\n\nconst endpointPrefix = `${API_URL}/admin/manage-service`;\n\nexport function getServicesAPI(search = \"\") {\n  const url = `${endpointPrefix}/?search=${search}`;\n  return axios.get(url);\n}\n\nexport function getServiceDetailsAPI(id) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.get(url);\n}\n\nexport function addServiceAPI({ name, price }) {\n  const url = `${endpointPrefix}/`;\n  return axios.post(url, { name, price: Number(price) });\n}\n\nexport function updateServiceAPI(id, { name, price }) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.put(url, {\n    name,\n    price: Number(price)\n  })\n}\n\nexport function deleteServiceAPI(id) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.delete(url);\n}","import React, { useState, useEffect } from 'react';\nimport { Form, Input, Spin } from 'antd';\nimport { getServiceDetailsAPI } from 'services/admin/medical-service.service';\n\nconst ServiceForm = props => {\n  const { form, onFinish, defaultService } = props;\n\n  const [serviceDetail, setServiceDetail] = useState(null);\n  const [detailLoading, setDetailLoading] = useState(false);\n\n  async function getServiceDetail(id) {\n    try {\n      setDetailLoading(true);\n      const detailResponse = await getServiceDetailsAPI(id);\n      const serviceDetail = detailResponse.data;\n      setServiceDetail(serviceDetail);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setDetailLoading(false);\n    }\n  }\n\n  async function getData() {\n    if (defaultService?.id) {\n      await Promise.all([\n        getServiceDetail(defaultService.id),\n      ]);\n    }\n  }\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  useEffect(() => {\n    if (serviceDetail) {\n      form.setFieldsValue({\n        name: serviceDetail.name,\n        price: serviceDetail.price,\n      });\n    }\n  }, [serviceDetail, defaultService, form]);\n\n  return (\n    <Spin spinning={detailLoading}>\n      <Form\n        layout=\"vertical\"\n        form={form}\n        onFinish={onFinish}>\n\n        <Form.Item label=\"Tên dịch vụ\" name=\"name\" initialValue={serviceDetail?.name}>\n          <Input />\n        </Form.Item>\n\n        <Form.Item label=\"Giá\" name=\"price\" initialValue={serviceDetail?.price}>\n          <Input type=\"number\" suffix=\"VNĐ\" />\n        </Form.Item>\n      </Form>\n    </Spin>\n  )\n}\n\nexport default ServiceForm;","import React, { useState, useEffect } from 'react';\nimport { Row, Col, Button, Modal, Table, Form, Popconfirm, Space } from 'antd';\nimport { PlusOutlined, EditOutlined, DeleteOutlined } from '@ant-design/icons';\nimport ServiceForm from 'forms/ServiceForm/ServiceForm';\nimport { getServicesAPI, addServiceAPI, updateServiceAPI, deleteServiceAPI } from 'services/admin/medical-service.service';\nimport { formActions } from 'constant/formActions';\nimport NumberFormat from 'react-number-format';\n\nconst ServicePage = () => {\n\n  const [modalVisible, setModalVisible] = useState(false);\n  const [services, setServices] = useState();\n  const [fetchingServices, setFetchingServices] = useState(false);\n  const [modalLoading, setModalLoading] = useState(false);\n  const [action, setAction] = useState(formActions.CREATE);\n  const [selectedService, setSelectedService] = useState(null);\n  const [serviceForm] = Form.useForm();\n\n  const tableColumns = [\n    {\n      title: '#',\n      key: '#',\n      render: (text, record, index) => index + 1\n    },\n    {\n      title: 'Tên dịch vụ',\n      key: 'name',\n      dataIndex: 'name'\n    },\n    {\n      title: 'Giá',\n      key: 'price',\n      dataIndex: 'price',\n      render: (text, record, index) => (<NumberFormat thousandSeparator=\" \" suffix=\" VNĐ\" value={text} displayType=\"text\" />)\n    },\n    {\n      title: 'Hành động',\n      key: 'action',\n      render: (text, record, index) => (\n        <Space size={10}>\n          <Button icon={<EditOutlined />} onClick={() => handleEditClick(record)}></Button>\n          <Popconfirm\n            onConfirm={() => handleDelete(record)} title=\"Bạn có chắc muốn xóa không?\"\n            okText=\"Xóa\"\n            okType=\"danger\"\n            cancelText=\"Hủy bỏ\">\n            <Button icon={<DeleteOutlined />}></Button>\n          </Popconfirm>\n        </Space>\n      )\n    }\n  ]\n\n  function handleOpenModal() {\n    setAction(formActions.CREATE);\n    setModalVisible(true);\n  }\n\n  function handleCloseModal() {\n    setModalVisible(false);\n  }\n\n  async function getServices() {\n    try {\n      setFetchingServices(true);\n      const response = await getServicesAPI();\n      setServices(response.data);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setFetchingServices(false);\n    }\n  }\n\n  async function handleFormSubmit() {\n    try {\n      setModalLoading(true);\n      const values = await serviceForm.validateFields();\n      const data = {\n        name: values.name,\n        price: values.price,\n      }\n      if (action === formActions.CREATE) {\n        await addServiceAPI(data);\n      }\n\n      if (action === formActions.UPDATE) {\n        await updateServiceAPI(selectedService.id, data);\n      }\n\n      getServices();\n\n      setModalVisible(false);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setModalLoading(false);\n    }\n  }\n\n  function handleEditClick(service) {\n    setAction(formActions.UPDATE);\n    setSelectedService(service);\n    setModalVisible(true);\n  }\n\n  async function handleDelete(service) {\n    try {\n      await deleteServiceAPI(service.id);\n      getServices();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  function afterClose() {\n    serviceForm.resetFields();\n    setSelectedService(null);\n  }\n\n  useEffect(() => {\n    getServices();\n  }, []);\n\n  return (\n    <>\n      <Row justify=\"space-between\">\n        <Col><h1 className=\"text-xl\">Quản lý thuốc</h1></Col>\n        <Col>\n          <Button type=\"primary\" icon={<PlusOutlined />} onClick={handleOpenModal}>Tạo mới</Button>\n        </Col>\n      </Row>\n      <Table\n        rowKey=\"id\"\n        columns={tableColumns}\n        dataSource={services}\n        loading={fetchingServices} />\n      <Modal\n        visible={modalVisible}\n        title={action === formActions.CREATE ? 'Thêm thuốc' : 'Cập nhật thuốc'}\n        onCancel={handleCloseModal}\n        confirmLoading={modalLoading}\n        destroyOnClose={true}\n        afterClose={afterClose}\n        onOk={handleFormSubmit}>\n        <ServiceForm onFinish={handleFormSubmit} form={serviceForm} defaultService={selectedService} />\n      </Modal>\n    </>\n  )\n}\n\nexport default ServicePage;","import axios from 'axios';\nimport { API_URL } from 'constant/apiUrl';\n\nconst endpointPrefix = `${API_URL}/admin/manage-working-hours`;\n\nexport function getWorkingHoursAPI() {\n  const url = `${endpointPrefix}/`;\n  return axios.get(url);\n}\n\nexport function updateWorkingHourAPI(id, { weekday, isClosed }) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.put(url, {\n    weekday: weekday,\n    is_closed: isClosed\n  })\n}","import React, { useState, useEffect } from 'react';\nimport { Table, Switch } from 'antd';\nimport { getWorkingHoursAPI, updateWorkingHourAPI } from 'services/admin/working-hours.service';\n\nconst WorkingHourPage = () => {\n\n  const [workingHours, setWorkingHours] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const tableColumns = [\n    {\n      title: 'Ngày',\n      key: 'weekday',\n      dataIndex: 'weekday'\n    },\n    {\n      title: 'Đóng cửa',\n      key: 'is_closed',\n      render: (text, record) => (\n        <Switch\n          checked={record.is_closed}\n          onChange={() => handleWorkingHourChange(record)} />\n      )\n    }\n  ]\n\n  async function getWorkingHours() {\n    try {\n      setLoading(true);\n      const workingHoursResponse = await getWorkingHoursAPI();\n      setWorkingHours(workingHoursResponse.data.sort((a, b) => {\n        if (a.id < b.id) {\n          return -1\n        } else {\n          return 1\n        }\n      }));\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  async function handleWorkingHourChange(wh) {\n    try {\n      setLoading(true);\n      await updateWorkingHourAPI(wh.id, {\n        weekday: wh.weekday,\n        isClosed: !wh.is_closed\n      });\n      getWorkingHours();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  useEffect(() => {\n    getWorkingHours();\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"text-xl\">Quản lý giờ làm việc</h1>\n      <div style={{width: 400}}>\n      <Table\n        rowKey=\"weekday\"\n        dataSource={workingHours}\n        columns={tableColumns}\n        loading={loading}\n        pagination={false} />\n      </div>\n      \n    </>\n  )\n}\n\nexport default WorkingHourPage;","import React from 'react';\nimport { Form, Input } from 'antd';\n\nconst RoomForm = props => {\n  const { form, onFinish, defaultRoom } = props;\n\n  return (\n    <Form\n      layout=\"vertical\"\n      form={form}\n      onFinish={onFinish}>\n      <Form.Item label=\"Mã\" name=\"number\" initialValue={defaultRoom?.number}>\n        <Input type=\"number\" autoFocus />\n      </Form.Item>\n      <Form.Item label=\"Tên khoa\" name=\"name\" initialValue={defaultRoom?.name}>\n        <Input />\n      </Form.Item>\n    </Form>\n  )\n}\n\nexport default RoomForm;","import React, { useState, useEffect } from 'react';\nimport { Row, Col, Button, Modal, Table, Form, Popconfirm, Space } from 'antd';\nimport { PlusOutlined, EditOutlined, DeleteOutlined } from '@ant-design/icons';\nimport RoomForm from 'forms/RoomForm/RoomForm';\nimport { addRoomAPI, deleteRoomAPI, getRoomAPI, updateRoomAPI } from 'services/admin/room.service';\nimport { formActions } from 'constant/formActions';\n\nconst RoomPage = () => {\n\n  const [modalVisible, setModalVisible] = useState(false);\n  const [rooms, setCategories] = useState([]);\n  const [fetchingCategories, setFetchingCategories] = useState(false);\n  const [modalLoading, setModalLoading] = useState(false);\n  const [action, setAction] = useState(formActions.CREATE);\n  const [selectedRoom, setSelectedRoom] = useState(null);\n  const [roomForm] = Form.useForm();\n\n  const tableColumns = [\n    {\n      title: 'Mã khoa',\n      key: 'number',\n      dataIndex: 'number',\n      width: '150px'\n    },\n    {\n      title: 'Tên',\n      key: 'name',\n      dataIndex: 'name'\n    },\n    {\n      title: 'Hành động',\n      key: 'action',\n      width: '150px',\n      render: (text, record, index) => (\n        <Space size={10}>\n          <Button icon={<EditOutlined />} onClick={() => handleEditClick(record)}></Button>\n          <Popconfirm\n            onConfirm={() => handleDelete(record)} title=\"Bạn có chắc muốn xóa không?\"\n            okText=\"Xóa\"\n            okType=\"danger\"\n            cancelText=\"Hủy bỏ\">\n            <Button icon={<DeleteOutlined />}></Button>\n          </Popconfirm>\n        </Space>\n      )\n    }\n  ]\n\n  function handleOpenModal() {\n    setAction(formActions.CREATE);\n    setModalVisible(true);\n  }\n\n  function handleCloseModal() {\n    setModalVisible(false);\n  }\n\n  async function getRooms() {\n    try {\n      setFetchingCategories(true);\n      const response = await getRoomAPI();\n      setCategories(response.data);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setFetchingCategories(false);\n    }\n  }\n\n  async function handleFormSubmit() {\n    try {\n      setModalLoading(true);\n      const values = await roomForm.validateFields();\n      if (action === formActions.CREATE) {\n        await addRoomAPI(values);\n      }\n\n      if (action === formActions.UPDATE) {\n        await updateRoomAPI(selectedRoom.id, values);\n      }\n\n      getRooms();\n\n      setModalVisible(false);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setModalLoading(false);\n    }\n  }\n\n  function handleEditClick(room) {\n    setAction(formActions.UPDATE);\n    setSelectedRoom(room);\n    setModalVisible(true);\n  }\n\n  async function handleDelete(unit) {\n    try {\n      await deleteRoomAPI(unit.id);\n      getRooms();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  function afterClose() {\n    roomForm.resetFields();\n    setSelectedRoom(null);\n  }\n\n  useEffect(() => {\n    getRooms();\n  }, []);\n\n  return (\n    <>\n      <Row justify=\"space-between\">\n        <Col><h1 className=\"text-xl\">Quản lý khoa</h1></Col>\n        <Col>\n          <Button type=\"primary\" icon={<PlusOutlined />} onClick={handleOpenModal}>Tạo mới</Button>\n        </Col>\n      </Row>\n      <Table\n        rowKey=\"id\"\n        columns={tableColumns}\n        dataSource={rooms}\n        \n        loading={fetchingCategories} />\n      <Modal\n        visible={modalVisible}\n        title={action === formActions.CREATE ? 'Thêm khoa' : 'Cập nhật khoa'}\n        onCancel={handleCloseModal}\n        confirmLoading={modalLoading}\n        destroyOnClose={true}\n        afterClose={afterClose}\n        onOk={handleFormSubmit}>\n        <RoomForm onFinish={handleFormSubmit} form={roomForm} defaultRoom={selectedRoom} />\n      </Modal>\n    </>\n  )\n}\n\nexport default RoomPage;","import axios from 'axios';\nimport { API_URL } from 'constant/apiUrl';\nimport qs from 'qs';\n\nconst endpointPrefix = `${API_URL}/admin/manage-user`;\n\nexport function getUsersAPI(query) {\n  const url = `${endpointPrefix}/?${qs.stringify(query)}`;\n  return axios.get(url);\n}\n\nexport function getUserDetailsAPI(id) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.get(url);\n}\n\nexport function addUserAPI({ email, password, first_name, last_name, phone, DOB, gender, role_id }) {\n  const url = `${endpointPrefix}/`;\n  return axios.post(url, {\n    email,\n    password,\n    first_name,\n    last_name,\n    phone,\n    DOB: DOB.format('yyyy-MM-DD'),\n    gender,\n    role_id\n  });\n}\n\nexport function updateUserAPI(id, { email, password, first_name, last_name, phone, DOB, gender, role_id }) {\n  const url = `${endpointPrefix}/${id}/`;\n  if (password) {\n    return axios.put(url, {\n      email,\n      password,\n      first_name,\n      last_name,\n      phone,\n      DOB: DOB.format('yyyy-MM-DD'),\n      gender,\n      role_id\n    })\n  }\n\n  return axios.put(url, {\n    email,\n    first_name,\n    last_name,\n    phone,\n    DOB: DOB.format('yyyy-MM-DD'),\n    gender,\n    role_id\n  })\n}\n\nexport function deleteUserAPI(id) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.delete(url);\n}\n\nexport function blockUserAPI(userId) {\n  const url = `${endpointPrefix}/${userId}/block/`;\n  return axios.get(url);\n}\n\nexport function unblockUserAPI(userId) {\n  const url = `${endpointPrefix}/${userId}/unblock/`;\n  return axios.get(url);\n}","export const ROLES = {\n  \"1\": {\n    name: \"admin\",\n    display: \"Quản trị viên\"\n  },\n  \"2\": {\n    name: \"physician\",\n    display: \"Bác sĩ\"\n  },\n  \"3\": {\n    name: \"receptionist\",\n    display: \"Lễ tân\"\n  },\n  \"4\": {\n    name: \"patient\",\n    display: \"Bệnh nhân\"\n  }\n}\n\nexport const ROLES_LIST = [1, 2, 3, 4];","export const requiredRule = (message = \"Vui lòng điền vào trường này\") => {\n  return {\n    required: true,\n    message: message\n  }\n}","import React, { useState, useEffect } from 'react';\nimport { Form, Input, Select, Spin, Row, Col, DatePicker, Radio } from 'antd';\nimport { getUserDetailsAPI } from 'services/admin/user.service';\nimport { ROLES, ROLES_LIST } from 'constant/roles';\nimport moment from 'moment';\nimport { requiredRule } from 'constant/formRules';\n\nconst UserForm = props => {\n  const { form, onFinish, defaultUser } = props;\n  const [userDetail, setUserDetail] = useState(null);\n  const [detailLoading, setDetailLoading] = useState(false);\n\n  async function getUserDetail(id) {\n    try {\n      setDetailLoading(true);\n      const detailResponse = await getUserDetailsAPI(id);\n      const userDetail = detailResponse.data;\n      setUserDetail(userDetail);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setDetailLoading(false);\n    }\n  }\n\n  async function getData() {\n    if (defaultUser?.id) {\n      await Promise.all([\n        getUserDetail(defaultUser.id),\n      ]);\n    }\n  }\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  useEffect(() => {\n    if (userDetail) {\n      form.setFieldsValue({\n        email: userDetail.email,\n        first_name: userDetail.first_name,\n        last_name: userDetail.last_name,\n        phone: userDetail.phone,\n        DOB: moment(userDetail.DOB),\n        gender: userDetail.gender,\n        role_id: userDetail.role.id\n      });\n    }\n  }, [userDetail, defaultUser, form]);\n\n  return (\n    <Spin spinning={detailLoading}>\n      <Form\n        layout=\"vertical\"\n        form={form}\n        autoComplete=\"off\"\n        onFinish={onFinish}>\n        <Form.Item label=\"Email\" name=\"email\" initialValue={userDetail?.email} rules={[\n          {\n            required: !userDetail || (userDetail && userDetail.role.id != 4),\n            message: \"Vui lòng điền vào trường này\"\n          }\n        ]}>\n          <Input type=\"email\" />\n        </Form.Item>\n\n        <Form.Item label=\"Mật khẩu\" name=\"password\" rules={[\n          {\n            required: !userDetail?.id,\n            message: \"Vui lòng điền vào trường này\"\n          }\n        ]}>\n          <Input.Password autoComplete=\"new-password\" placeholder={userDetail ? \"Nhập mật khẩu mới\" : \"\"} />\n        </Form.Item>\n\n        <Row>\n          <Col flex={1}>\n            <Form.Item label=\"Họ\" name=\"first_name\" rules={[requiredRule()]}>\n              <Input />\n            </Form.Item>\n          </Col>\n          <div style={{ width: 20 }}></div>\n          <Col flex={1}>\n            <Form.Item label=\"Tên\" name=\"last_name\" rules={[requiredRule()]}>\n              <Input />\n            </Form.Item>\n          </Col>\n        </Row>\n\n        <Form.Item label=\"Điện thoại\" name=\"phone\" initialValue={userDetail?.phone} rules={[requiredRule()]}>\n          <Input type=\"tel\" />\n        </Form.Item>\n\n        <Row>\n          <Col>\n            <Form.Item label=\"Ngày sinh\" name=\"DOB\" rules={[requiredRule()]}>\n              <DatePicker placeholder=\"Chọn ngày\" />\n            </Form.Item>\n          </Col>\n          <div style={{ width: 15 }}></div>\n          <Col flex={1}>\n            <Form.Item label=\"Giới tính\" name=\"gender\" rules={[requiredRule()]}>\n              <Radio.Group>\n                <Radio value=\"Nam\">Nam</Radio>\n                <Radio value=\"Nữ\">Nữ</Radio>\n                <Radio value=\"Khác\">Khác</Radio>\n              </Radio.Group>\n            </Form.Item>\n          </Col>\n        </Row>\n\n\n        <Form.Item label=\"Vai trò\" name=\"role_id\" initialValue={userDetail?.role_id} rules={[requiredRule()]}>\n          <Select>\n            {\n              ROLES_LIST.map(role_id => (\n                <Select.Option key={role_id} value={role_id}>{ROLES[role_id].display}</Select.Option>\n              ))\n            }\n          </Select>\n        </Form.Item>\n      </Form>\n    </Spin>\n  )\n}\n\nexport default UserForm;","import React from 'react';\nimport classnames from 'classnames';\nimport styles from './Circle.module.scss';\n\nconst Circle = props => {\n\n  const classes = classnames(\n    styles.circle,\n    { [styles['circle--success']]: props.color === 'success' }\n  )\n\n  return (\n    <div className={classes}></div>\n  )\n}\n\nexport default Circle;","import React, { useState, useEffect } from 'react';\nimport { Row, Col, Button, Modal, Table, Form, Popconfirm, Space } from 'antd';\nimport { PlusOutlined, LockOutlined, UnlockOutlined, EditOutlined, DeleteOutlined, EyeOutlined } from '@ant-design/icons';\nimport UserForm from 'forms/UserForm/UserForm';\nimport { formActions } from 'constant/formActions';\nimport NumberFormat from 'react-number-format';\nimport { ROLES } from 'constant/roles';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport Circle from 'components/Circle/Circle';\n\n// APIs\nimport { getUsersAPI, addUserAPI, updateUserAPI, deleteUserAPI, blockUserAPI, unblockUserAPI } from 'services/admin/user.service';\nimport { addBlockChainUserAPI } from 'services/user/user.service';\n\n\nconst AdminAccountPage = () => {\n\n  const history = useHistory();\n  const { pathname, search } = useLocation();\n  const urlSearchParams = new URLSearchParams(search);\n  const currentPageOnURL = Number(urlSearchParams.get('page'));\n  const [page, setPage] = useState(currentPageOnURL || 1);\n  const [modalVisible, setModalVisible] = useState(false);\n  const [users, setUsers] = useState();\n  const [fetchingUsers, setFetchingUsers] = useState(false);\n  const [modalLoading, setModalLoading] = useState(false);\n  const [action, setAction] = useState(formActions.CREATE);\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [userForm] = Form.useForm();\n\n  const tableColumns = [\n    {\n      title: '#',\n      key: '#',\n      render: (text, record, index) => index + 1\n    },\n    {\n      title: 'Họ và tên',\n      key: 'fullname',\n      render: (text, record) => record.first_name + \" \" + record.last_name\n    },\n    {\n      title: 'Email',\n      key: 'email',\n      dataIndex: 'email',\n      render: (text, record) => (\n        <Space>\n          <Circle color={record.is_verified_email ? 'success' : ''} />\n          <span>{record.email}</span>\n        </Space>\n      )\n    },\n    // {\n    //   title: 'Điện thoại',\n    //   key: 'phone',\n    //   dataIndex: 'phone',\n    //   render: (text, record) => (\n    //     <Space>\n    //       <Circle color={record.is_verified_phone ? 'success' : ''} />\n    //       <span>{record.phone}</span>\n    //     </Space>\n    //   )\n    // },\n    {\n      title: 'Vai trò',\n      key: 'role',\n      render: (text, record) => <span>{ROLES[record.role.id].display}</span>\n    },\n    {\n      title: 'Hành động', key: 'action', render: (text, record) => {\n        return (\n          <Space size={10}>\n            <Button icon={<EyeOutlined />} onClick={() => handleViewClick(record)}></Button>\n            <Button icon={<EditOutlined />} onClick={() => handleEditClick(record)}></Button>\n            <Popconfirm\n              onConfirm={() => handleDelete(record)}\n              title=\"Bạn có chắc muốn xóa không?\"\n              okText=\"Xóa\"\n              okType=\"danger\"\n              cancelText=\"Hủy bỏ\">\n              <Button icon={<DeleteOutlined />}></Button>\n            </Popconfirm>\n            {\n              <Popconfirm\n                onConfirm={() => handleBlockUnblock(record)}\n                title={`Bạn có chắc muốn ${record.is_active ? 'khóa' : 'mở khóa'} tài khoản này không?`}\n                okText={record.is_active ? \"Khóa\" : \"Mở khóa\"}\n                okType={record.is_active ? \"danger\" : \"primary\"}\n                cancelText=\"Hủy bỏ\">\n                {\n                  record.is_active ?\n                    <Button danger type=\"link\" icon={<LockOutlined />}>Khóa</Button>\n                    :\n                    <Button type=\"link\" icon={<UnlockOutlined />}>Mở khóa</Button>\n                }\n              </Popconfirm>\n            }\n          </Space>\n        )\n      }\n    }\n  ]\n\n  function handleOpenModal() {\n    setAction(formActions.CREATE);\n    setModalVisible(true);\n  }\n\n  function handleCloseModal() {\n    setModalVisible(false);\n  }\n\n  async function getUsers(page) {\n    try {\n      setFetchingUsers(true);\n      const response = await getUsersAPI({ page: page });\n      setUsers(response.data);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setFetchingUsers(false);\n    }\n  }\n\n  async function handleFormSubmit() {\n    try {\n      setModalLoading(true);\n      const values = await userForm.validateFields();\n\n      if (action === formActions.CREATE) {\n        const addReponse = await addUserAPI(values);\n        const responseData = addReponse.data;\n        const userId = responseData.id;\n        await addBlockChainUserAPI(userId, \"user\");\n        // await addBlockChainUserAPI(\"af6e0eb2-639b-471d-8394-74b0dfce3395\", \"user\");\n      }\n\n      if (action === formActions.UPDATE) {\n        if (!values.password) {\n          delete values.password;\n        }\n        await updateUserAPI(selectedUser.id, values);\n      }\n\n      getUsers(page);\n\n      setModalVisible(false);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setModalLoading(false);\n    }\n  }\n\n  async function handleBlockUnblock(user) {\n    try {\n      setFetchingUsers(true);\n      if (user.is_active) {\n        await blockUserAPI(user.id);\n      } else {\n        await unblockUserAPI(user.id);\n      }\n      getUsers();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  function handleViewClick(user) {\n\n  }\n\n  function handleEditClick(user) {\n    setAction(formActions.UPDATE);\n    setSelectedUser(user);\n    setModalVisible(true);\n  }\n\n  async function handleDelete(user) {\n    try {\n      await deleteUserAPI(user.id);\n      getUsers(page);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  function afterClose() {\n    userForm.resetFields();\n    setSelectedUser(null);\n  }\n\n  function handlePaginationChange(page) {\n    getUsers(page);\n    setPage(page);\n    history.push({\n      pathname: pathname,\n      search: `page=${page}`\n    })\n  }\n\n  useEffect(() => {\n    getUsers(page);\n  }, []);\n\n  return (\n    <>\n      <Row justify=\"space-between\">\n        <Col><h1 className=\"text-xl\">Quản lý tài khoản</h1></Col>\n        <Col>\n          <Button type=\"primary\" icon={<PlusOutlined />} onClick={handleOpenModal}>Tạo mới</Button>\n        </Col>\n      </Row>\n      <Table\n        rowKey=\"id\"\n        columns={tableColumns}\n        dataSource={users?.results}\n        pagination={{\n          defaultCurrent: page,\n          current: page,\n          pageSize: 10,\n          total: users?.count,\n          onChange: handlePaginationChange\n        }}\n        loading={fetchingUsers} />\n      <Modal\n        visible={modalVisible}\n        title={action === formActions.CREATE ? 'Thêm tài khoản' : 'Cập nhật tài khoản'}\n        onCancel={handleCloseModal}\n        confirmLoading={modalLoading}\n        destroyOnClose={true}\n        afterClose={afterClose}\n        onOk={handleFormSubmit}>\n        <UserForm onFinish={handleFormSubmit} form={userForm} defaultUser={selectedUser} />\n      </Modal>\n    </>\n  )\n}\n\nexport default AdminAccountPage;","import React from 'react';\n\nconst AdminSettingPage = () => {\n  return (\n    <div>Admin setting page</div>\n  )\n}\n\nexport default AdminSettingPage;","import React, { useEffect } from 'react';\nimport Cookie from 'js-cookie';\nimport { Redirect } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { logoutAction } from 'store/actions/auth.action';\nimport jwtDecode from 'jwt-decode';\n\nconst withPrivateRoute = (Child, roles) => {\n  const WrapperComponent = (props) => {\n\n    const dispatch = useDispatch();\n    const token = Cookie.get('EMR_token');\n    const user = useSelector((state) => state.userState.user);\n\n    function isValidRole(user) {\n      const userRole = user?.role.name;\n      const isValid = roles.includes(userRole);\n      return isValid;\n    }\n\n    useEffect(() => {\n      if (user && user.role) {\n        if (!isValidRole(user)) {\n          dispatch(logoutAction());\n        }\n      }\n    }, [user, dispatch]);\n\n    try {\n      if (!token || token.length === 0 || !jwtDecode(token)) {\n        return <Redirect to=\"/login\" />;\n      } else {\n        return <Child {...props} />\n      }\n      \n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  return WrapperComponent;\n}\n\nexport default withPrivateRoute;","import React from 'react';\nimport { Button, Layout, Modal, Spin, Space, Avatar } from 'antd';\nimport {\n  LogoutOutlined,\n  ExclamationCircleOutlined\n} from '@ant-design/icons';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { logoutAction } from 'store/actions/auth.action';\nimport { ROLES } from 'constant/roles';\n\nconst { Header } = Layout;\n\nconst CustomHeader = () => {\n\n  const dispatch = useDispatch();\n  const user = useSelector((state) => state.userState.user);\n\n  function handleLogout() {\n    Modal.confirm({\n      title: \"Đăng xuất\",\n      icon: <ExclamationCircleOutlined />,\n      content: \"Bạn có chắc muốn đăng xuất không?\",\n      onOk() {\n        dispatch(logoutAction());\n      }\n    })\n  }\n\n  return (\n    <Header className=\"header flex items-center\">\n      <div className=\"text-2xl text-white\">EMR</div>\n      <div className=\"ml-auto\"></div>\n      <div className=\"text-white\">\n        {\n          user ?\n            <Space>\n              {\n                user.avatar ?\n                  <Avatar src={user.avatar} />\n                  :\n                  <Avatar style={{ backgroundColor: '#1890ff' }}>{user.last_name.charAt(0)}</Avatar>\n              }\n              <span>{ user.first_name } { user.last_name } ({ ROLES[user.role.id].display })</span>\n            </Space>\n            :\n            \"Đang tải...\"\n        }\n\n        <span className=\"ml-3\">|</span>\n      </div>\n      <Button type=\"default\" ghost icon={<LogoutOutlined />} className=\"border-none\" onClick={handleLogout}>Đăng xuất</Button>\n    </Header>\n  )\n}\n\nexport default CustomHeader;","import React from 'react';\nimport { Form, Input } from 'antd';\n\nconst DrugDosageFormForm = props => {\n  const { form, onFinish, defaultDosageForm } = props;\n\n  return (\n    <Form\n      layout=\"vertical\"\n      form={form}\n      onFinish={onFinish}>\n      <Form.Item label=\"Dạng bào chế\" name=\"name\" initialValue={defaultDosageForm?.name}>\n        <Input autoFocus />\n      </Form.Item>\n    </Form>\n  )\n}\n\nexport default DrugDosageFormForm;","import React, { useState, useEffect } from 'react';\nimport { Row, Col, Button, Modal, Table, Form, Popconfirm, Space } from 'antd';\nimport { PlusOutlined, EditOutlined, DeleteOutlined } from '@ant-design/icons';\nimport DrugDosageFormForm from 'forms/DrugDosageFormForm/DrugDosageFormForm';\nimport { addDrugDosageFormAPI, deleteDrugDosageFormAPI, getDrugDosageFormAPI, updateDrugDosageFormAPI } from 'services/admin/drug-dosage-form.service';\nimport { formActions } from 'constant/formActions';\n\nconst DrugDosageFormPage = () => {\n\n  const [modalVisible, setModalVisible] = useState(false);\n  const [dosageForms, setDosageForms] = useState([]);\n  const [fetchingDosageForms, setFetchingDosageForms] = useState(false);\n  const [modalLoading, setModalLoading] = useState(false);\n  const [action, setAction] = useState(formActions.CREATE);\n  const [selectedDosageForm, setSelectedDosageForm] = useState(null);\n  const [drugDosageFormForm] = Form.useForm();\n\n  const tableColumns = [\n    {\n      title: '#',\n      key: '#',\n      render: (text, record, index) => index + 1\n    },\n    {\n      title: 'Tên',\n      key: 'name',\n      dataIndex: 'name'\n    },\n    {\n      title: 'Hành động',\n      key: 'action',\n      render: (text, record, index) => (\n        <Space size={10}>\n          <Button icon={<EditOutlined />} onClick={() => handleEditClick(record)}></Button>\n          <Popconfirm\n            onConfirm={() => handleDelete(record)} title=\"Bạn có chắc muốn xóa không?\"\n            okText=\"Xóa\"\n            okType=\"danger\"\n            cancelText=\"Hủy bỏ\">\n            <Button icon={<DeleteOutlined />}></Button>\n          </Popconfirm>\n        </Space>\n      )\n    }\n  ]\n\n  function handleOpenModal() {\n    setAction(formActions.CREATE);\n    setModalVisible(true);\n  }\n\n  function handleCloseModal() {\n    setModalVisible(false);\n  }\n\n  async function getDrugDosageForms() {\n    try {\n      setFetchingDosageForms(true);\n      const response = await getDrugDosageFormAPI();\n      setDosageForms(response.data);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setFetchingDosageForms(false);\n    }\n  }\n\n  async function handleFormSubmit() {\n    try {\n      setModalLoading(true);\n      const values = await drugDosageFormForm.validateFields();\n      if (action === formActions.CREATE) {\n        await addDrugDosageFormAPI(values.name);\n      }\n\n      if (action === formActions.UPDATE) {\n        await updateDrugDosageFormAPI(selectedDosageForm.id, values.name);\n      }\n\n      getDrugDosageForms();\n\n      setModalVisible(false);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setModalLoading(false);\n    }\n  }\n\n  function handleEditClick(dosageForm) {\n    setAction(formActions.UPDATE);\n    setSelectedDosageForm(dosageForm);\n    setModalVisible(true);\n  }\n\n  async function handleDelete(unit) {\n    try {\n      await deleteDrugDosageFormAPI(unit.id);\n      getDrugDosageForms();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  function afterClose() {\n    drugDosageFormForm.resetFields();\n    setSelectedDosageForm(null);\n  }\n\n  useEffect(() => {\n    getDrugDosageForms();\n  }, []);\n\n  return (\n    <>\n      <Row justify=\"space-between\">\n        <Col><h1 className=\"text-xl\">Quản lý đường dùng thuốc</h1></Col>\n        <Col>\n          <Button type=\"primary\" icon={<PlusOutlined />} onClick={handleOpenModal}>Tạo mới</Button>\n        </Col>\n      </Row>\n      <Table\n        rowKey=\"id\"\n        columns={tableColumns}\n        dataSource={dosageForms}\n        pagination={false}\n        loading={fetchingDosageForms} />\n      <Modal\n        visible={modalVisible}\n        title={action === formActions.CREATE ? 'Thêm đường dùng thuốc' : 'Cập nhật đường dùng thuốc'}\n        onCancel={handleCloseModal}\n        confirmLoading={modalLoading}\n        destroyOnClose={true}\n        afterClose={afterClose}\n        onOk={handleFormSubmit}>\n        <DrugDosageFormForm onFinish={handleFormSubmit} form={drugDosageFormForm} defaultDosageForm={selectedDosageForm} />\n      </Modal>\n    </>\n  )\n}\n\nexport default DrugDosageFormPage;","import React from 'react';\nimport { Link, Redirect, Switch, Route, useRouteMatch, useLocation } from 'react-router-dom';\nimport { Layout, Menu } from 'antd';\nimport {\n  UserOutlined,\n  DashboardOutlined,\n  MedicineBoxOutlined,\n  BugOutlined,\n  DollarOutlined,\n  IdcardOutlined,\n  ClockCircleOutlined,\n  AppstoreOutlined,\n  CalendarOutlined,\n  ContainerOutlined,\n  SettingOutlined,\n  NotificationOutlined} from '@ant-design/icons';\nimport AdminDashboard from 'pages/admin/dashboard';\nimport DrugCategoryPage from 'pages/common/drug/drug-category';\nimport DrugUnitPage from 'pages/common/drug/drug-unit';\nimport DrugRoutePage from 'pages/common/drug/drug-route';\nimport DrugPage from 'pages/common/drug/drug';\nimport DrugInstructionPage from 'pages/common/drug/drug-instruction';\nimport DiseaseCategory from 'pages/common/disease/disease-category';\nimport DiseasePage from 'pages/common/disease/disease';\nimport NotificationPage from 'pages/common/notification/notification';\nimport VisitPage from 'pages/common/visit/visit';\nimport PatientPage from 'pages/common/patient/patient';\nimport AppointmentPage from 'pages/common/appointment/apointment';\nimport ServicePage from 'pages/common/service/service';\nimport WorkingHourPage from 'pages/admin/working-hour';\nimport RoomPage from 'pages/common/room/room';\nimport AdminAccountPage from 'pages/admin/account';\nimport AdminSettingPage from 'pages/admin/setting';\nimport withPrivateRoute from 'HOCs/withPrivateRoute';\nimport CustomHeader from 'components/Header';\nimport DrugDosageFormPage from 'pages/common/drug/drug-dosage-form';\n\nconst { Sider, Content } = Layout;\nconst { SubMenu } = Menu;\n\nconst AdminLayout = () => {\n  const match = useRouteMatch();\n  const location = useLocation();\n  const path = match.path;\n\n  return (\n    <Layout>\n      <CustomHeader />\n      <Layout>\n        <Sider width={200} className=\"site-layout-background\">\n          <Menu\n            mode=\"inline\"\n            style={{ height: '100%', borderRight: 0 }}\n            selectedKeys={[location.pathname]}\n          >\n            <Menu.Item key=\"/admin/dashboard\" icon={<DashboardOutlined />}>\n              <Link to=\"/admin/dashboard\">Bảng điều khiển</Link>\n            </Menu.Item>\n            <SubMenu key=\"drug\" icon={<MedicineBoxOutlined />} title=\"Quản lý thuốc\">\n              <Menu.Item key=\"/admin/drug/category\">\n                <Link to=\"/admin/drug/category\">Loại thuốc</Link>\n              </Menu.Item>\n              <Menu.Item key=\"/admin/drug/unit\">\n                <Link to=\"/admin/drug/unit\">Đơn vị tính</Link>\n              </Menu.Item>\n              <Menu.Item key=\"/admin/drug/route\">\n                <Link to=\"/admin/drug/route\">Đường dùng</Link>\n              </Menu.Item>\n              <Menu.Item key=\"/admin/drug/dosage-form\">\n                <Link to=\"/admin/drug/dosage-form\">Dạng bào chế</Link>\n              </Menu.Item>\n              <Menu.Item key=\"/admin/drug\">\n                <Link to=\"/admin/drug\">Thuốc</Link>\n              </Menu.Item>\n              <Menu.Item key=\"/admin/drug/instruction\">\n                <Link to=\"/admin/drug/instruction\">Hướng dẫn sử dụng</Link>\n              </Menu.Item>\n            </SubMenu>\n            <SubMenu key=\"disease\" icon={<BugOutlined />} title=\"Quản lý bệnh\">\n              <Menu.Item key=\"/admin/disease/category\">\n                <Link to=\"/admin/disease/category\">Nhóm bệnh</Link>\n              </Menu.Item>\n              <Menu.Item key=\"/admin/disease\">\n                <Link to=\"/admin/disease\">Bệnh</Link>\n              </Menu.Item>\n            </SubMenu>\n\n            {/* <Menu.Item key=\"/admin/notification\" icon={<NotificationOutlined />}>\n              <Link to=\"/admin/notification\">Thông báo</Link>\n            </Menu.Item> */}\n            <Menu.Item key=\"/admin/visit\" icon={<ContainerOutlined />}>\n              <Link to=\"/admin/visit\">Nhóm bệnh</Link>\n            </Menu.Item>\n            <Menu.Item key=\"/admin/patient\" icon={<IdcardOutlined />}>\n              <Link to=\"/admin/patient\">Bệnh nhân</Link>\n            </Menu.Item>\n            <Menu.Item key=\"/admin/appointment\" icon={<CalendarOutlined />}>\n              <Link to=\"/admin/appointment\">Lịch hẹn</Link>\n            </Menu.Item>\n            <Menu.Item key=\"/admin/service\" icon={<DollarOutlined />}>\n              <Link to=\"/admin/service\">Dịch vụ</Link>\n            </Menu.Item>\n\n            <Menu.Item key=\"/admin/working-hour\" icon={<ClockCircleOutlined />}>\n              <Link to=\"/admin/working-hour\">Giờ làm việc</Link>\n            </Menu.Item>\n            <Menu.Item key=\"/admin/room\" icon={<AppstoreOutlined />}>\n              <Link to=\"/admin/room\">Khoa</Link>\n            </Menu.Item>\n\n            <Menu.Item key=\"/admin/account\" icon={<UserOutlined />}>\n              <Link to=\"/admin/account\">Tài khoản</Link>\n            </Menu.Item>\n            <Menu.Item key=\"/admin/setting\" icon={<SettingOutlined />}>\n              <Link to=\"/admin/setting\">Cài đặt</Link>\n            </Menu.Item>\n          </Menu>\n        </Sider>\n        <Layout style={{ padding: '0 24px 24px' }}>\n          <Content\n            className=\"site-layout-background\"\n            style={{\n              padding: 24,\n              margin: 0,\n              minHeight: 280,\n            }}\n          >\n            <Switch>\n              {/* Dashboard */}\n              <Route path={`${path}/dashboard`}>\n                <AdminDashboard />\n              </Route>\n\n              {/* Drug */}\n              <Route path={`${path}/drug/category`}>\n                <DrugCategoryPage />\n              </Route>\n              <Route path={`${path}/drug/unit`}>\n                <DrugUnitPage />\n              </Route>\n              <Route path={`${path}/drug/route`}>\n                <DrugRoutePage />\n              </Route>\n              <Route path={`${path}/drug/dosage-form`}>\n                <DrugDosageFormPage />\n              </Route>\n              <Route path={`${path}/drug`} exact>\n                <DrugPage />\n              </Route>\n              <Route path={`${path}/drug/instruction`}>\n                <DrugInstructionPage />\n              </Route>\n\n              {/* Disease */}\n              <Route path={`${path}/disease/category`}>\n                <DiseaseCategory />\n              </Route>\n              <Route path={`${path}/disease`}>\n                <DiseasePage />\n              </Route>\n\n              {/* Notification */}\n              <Route path={`${path}/notification`}>\n                <NotificationPage />\n              </Route>\n\n              {/* Visit */}\n              <Route path={`${path}/visit`}>\n                <VisitPage />\n              </Route>\n\n              {/* Patient */}\n              <Route path={`${path}/patient`}>\n                <PatientPage />\n              </Route>\n\n              {/* Appointment */}\n              <Route path={`${path}/appointment`}>\n                <AppointmentPage />\n              </Route>\n\n              {/* Service */}\n              <Route path={`${path}/service`}>\n                <ServicePage />\n              </Route>\n\n              {/* Service */}\n              <Route path={`${path}/working-hour`}>\n                <WorkingHourPage />\n              </Route>\n\n              {/* Room */}\n              <Route path={`${path}/room`}>\n                <RoomPage />\n              </Route>\n\n              {/* Room */}\n              <Route path={`${path}/account`}>\n                <AdminAccountPage />\n              </Route>\n\n              {/* Room */}\n              <Route path={`${path}/setting`}>\n                <AdminSettingPage />\n              </Route>\n\n              {/* Fallback */}\n              <Redirect to={`/admin/dashboard`} />\n            </Switch>\n          </Content>\n        </Layout>\n      </Layout>\n    </Layout>\n  )\n}\n\nexport default withPrivateRoute(AdminLayout, ['admin']);","export function getBase64(file) {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = () => resolve(reader.result);\n    reader.onerror = error => reject(error);\n  });\n}","import React, { useState } from 'react';\nimport { Upload, Modal } from 'antd';\nimport { PlusOutlined } from '@ant-design/icons';\nimport { API_URL } from 'constant/apiUrl';\nimport Cookie from 'js-cookie';\nimport { getBase64 } from 'utils/image';\n\n// APIs\n// import { removeImageAPI } from 'services/user/emr.service';\n\nconst VisitImagesForm = props => {\n\n  const { emrId } = props;\n\n  const [previewVisible, setPreviewVisible] = useState(false);\n  const [previewImage, setPreviewImage] = useState('');\n  const [previewTitle, setPreviewTitle] = useState('');\n  const [fileList, setFileList] = useState([...props.fileList]);\n  const token = Cookie.get('EMR_token');\n\n  const uploadButton = (\n    <div>\n      <PlusOutlined />\n      <div style={{ marginTop: 8 }}>Tải lên</div>\n    </div>\n  );\n\n  async function handleChange(uploadEvent) {\n    const { event, file, fileList } = uploadEvent;\n    setFileList(fileList);\n    props.onChange(uploadEvent);\n  }\n\n  async function handlePreview(file) {\n    if (!file.url && !file.preview) {\n      file.preview = await getBase64(file.originFileObj);\n    }\n\n    setPreviewImage(file.url || file.preview);\n    setPreviewVisible(true);\n    setPreviewTitle(file.name || file.url.substring(file.url.lastIndexOf('/') + 1),);\n  }\n\n  function handleCancel() {\n    setPreviewVisible(false);\n  }\n\n  return (\n    <>\n      <Upload\n        onChange={handleChange}\n        listType=\"picture-card\"\n        fileList={fileList}\n        action={`${API_URL}/user/emr/image/`}\n        name=\"image\"\n        headers={{ Authorization: `Bearer ${token}` }}\n        onPreview={handlePreview}>\n        {uploadButton}\n      </Upload>\n      <Modal\n        visible={previewVisible}\n        title={previewTitle}\n        footer={null}\n        onCancel={handleCancel}>\n        <img src={previewImage} alt=\"\" style={{ width: '100%' }} />\n      </Modal>\n    </>\n  )\n}\n\nexport default VisitImagesForm;","export const quillToolbar = [\n  ['bold', 'italic', 'underline', 'strike'],        // toggled buttons\n  ['blockquote', 'code-block'],\n\n  [{ 'header': 1 }, { 'header': 2 }],               // custom button values\n  [{ 'list': 'ordered'}, { 'list': 'bullet' }],\n  [{ 'script': 'sub'}, { 'script': 'super' }],      // superscript/subscript\n  [{ 'indent': '-1'}, { 'indent': '+1' }],          // outdent/indent\n  [{ 'direction': 'rtl' }],                         // text direction\n\n  [{ 'size': ['small', false, 'large', 'huge'] }],  // custom dropdown\n  [{ 'header': [1, 2, 3, 4, 5, 6, false] }],\n\n  [{ 'color': [] }, { 'background': [] }],          // dropdown with defaults from theme\n  [{ 'font': [] }],\n  [{ 'align': [] }],\n\n  ['clean']                                         // remove formatting button\n];","import axios from 'axios';\n\nimport { API_URL } from \"constant/apiUrl\";\n\nconst endpointPrefix = `${API_URL}/user/service`;\n\nexport function getServicesAPI(search = \"\") {\n  const url = `${endpointPrefix}/?search=${search}`;\n  return axios.get(url);\n}\n\nexport function getServiceDetailsAPI(id) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.get(url);\n}","import axios from 'axios';\n\nimport { API_URL } from \"constant/apiUrl\";\n\nconst endpointPrefix = `${API_URL}/user/drug-category`;\n\nexport function getDrugCategoryAPI(search = \"\") {\n  const url = `${endpointPrefix}/?search=${search}`;\n  return axios.get(url);\n}","import axios from 'axios';\n\nimport { API_URL } from \"constant/apiUrl\";\n\nconst endpointPrefix = `${API_URL}/user/drug-instruction`;\n\nexport function getDrugInstructionsAPI() {\n  const url = `${endpointPrefix}/`;\n  return axios.get(url);\n}","import axios from 'axios';\nimport { API_URL } from 'constant/apiUrl';\nimport { getQueryString } from 'utils/string';\n\nconst endpointPrefix = `${API_URL}/user/drug`;\n\nexport function getDrugsAPI(params) {\n  const url = `${endpointPrefix}/`;\n\n  if (params) {\n    return axios.get(`${url}?${getQueryString(params)}`);\n  }\n  return axios.get(url);\n}\n\nexport function getDrugDetailsAPI(id) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.get(url);\n}","import React, { useState } from 'react';\nimport { Form, Select, Row, Col, Button } from 'antd';\nimport { DeleteOutlined } from '@ant-design/icons';\n\nconst DiseaseSelect = ({ value = { category: null, disease: null }, onChange, ...props }) => {\n\n  const { label, diseaseCategories, diseases, clearable } = props;\n  const [selectedCat, setSelectedCat] = useState('');\n\n  function handleCatChange(id) {\n    setSelectedCat(id);\n    onChange({ ...value, category: id })\n  }\n\n  function handleChange(v) {\n    onChange({ ...value, disease: v });\n  }\n\n  return (\n    <Row align=\"middle\" gutter={15} className=\"flex-no-wrap\">\n      {\n        label &&\n        <Col flex=\"0 0 150px\">{label}</Col>\n      }\n      <Col flex=\"0 0 300px\" style={{ maxWidth: 300 }}>\n        <Select placeholder=\"Nhóm bệnh\" onChange={handleCatChange} value={value.category}>\n          {\n            diseaseCategories.map(cat => {\n              return <Select.Option key={cat.id} value={cat.id}>{cat.name}</Select.Option>\n            })\n          }\n        </Select>\n      </Col>\n      <Col flex=\"1 1 auto\">\n        <Select placeholder=\"Bệnh\" onChange={handleChange} value={value.disease}>\n          {\n            diseases?.filter(d => selectedCat === '' || d.disease_category === selectedCat).map(d => {\n              return <Select.Option key={d.id} value={d.name}>{d.name}</Select.Option>\n            })\n          }\n        </Select>\n      </Col>\n      {\n        clearable &&\n        <Col>\n          <Button icon={<DeleteOutlined />} onClick={() => onChange({ category: null, disease: null })}></Button>\n        </Col>\n      }\n    </Row>\n  )\n}\n\nexport default DiseaseSelect;","import React, { useState, useEffect } from 'react';\nimport {\n  Collapse,\n  PageHeader,\n  message,\n  Divider,\n  Button,\n  Row,\n  Col,\n  Space,\n  Spin,\n  Form,\n  Input,\n  DatePicker,\n  Select,\n  Radio,\n  Tabs,\n  Alert,\n  BackTop\n} from 'antd';\nimport moment from 'moment';\nimport { connect } from 'react-redux';\nimport { useHistory, useParams } from 'react-router-dom';\nimport VisitImagesForm from 'forms/Visit/VisitImagesForm';\nimport { FileDoneOutlined, SaveOutlined, MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\nimport ReactQuill from 'react-quill';\nimport { quillToolbar } from 'constant/quill';\n\n// APIs\nimport { getServicesAPI } from 'services/user/medical-service.service';\nimport { getDrugCategoryAPI } from 'services/user/drug-category.service';\nimport { getDrugInstructionsAPI } from 'services/user/drug-instruction.service';\nimport { getServicesAPI as adminGetServicesAPI } from 'services/admin/medical-service.service';\nimport { getDrugCategoryAPI as adminGetDrugCategoryAPI } from 'services/admin/drug-category.service';\nimport { getDrugInstructionsAPI as adminGetDrugInstructionsAPI } from 'services/admin/drug-instruction.service';\nimport { getEMRHistoryAPI, updateEMRAPI, completeEMRAPI } from 'services/user/emr.service';\nimport { deleteVisitAPI } from 'services/user/visit.service';\nimport { getDrugsAPI as adminGetDrugsAPI } from 'services/admin/drug.service';\nimport { getDrugsAPI } from 'services/user/drug.service';\nimport { fetchDiseaseCategory } from 'store/actions/disease-category.action';\nimport { fetchDisease } from 'store/actions/disease.action';\nimport DiseaseSelect from 'components/DiseaseSelect/DiseaseSelect';\n\nconst { Option } = Select;\nconst { useForm } = Form;\n\nconst ExaminationPage = props => {\n\n  const {\n    user,\n    diseaseCategories,\n    diseases,\n    fetchDiseaseCategory,\n    fetchDisease,\n  } = props;\n\n  const history = useHistory();\n  const params = useParams();\n\n  const [services, setServices] = useState([]);\n  const [drugCategories, setDrugCategories] = useState([]);\n  const [drugs, setDrugs] = useState([]);\n  const [drugInstructions, setDrugInstructions] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [emr, setEmr] = useState(null);\n\n  const [drugLoading, setDrugLoading] = useState(false);\n  const [finishLoading, setFinishLoading] = useState(false);\n  const [isSavingEmr, setIsSavingEmr] = useState(false);\n\n  const [emrForm] = useForm();\n\n  async function getServices() {\n    try {\n      let servicesResponse;\n      if (user.role.name === \"admin\") {\n        servicesResponse = await adminGetServicesAPI();\n      } else {\n        servicesResponse = await getServicesAPI()\n      }\n      const servicesData = servicesResponse.data;\n      setServices(servicesData);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async function getDrugCategories() {\n    try {\n      let drugCategoryResponse;\n      if (user.role.name === \"admin\") {\n        drugCategoryResponse = await adminGetDrugCategoryAPI();\n      } else {\n        drugCategoryResponse = await getDrugCategoryAPI()\n      }\n      const drugCategoriesData = drugCategoryResponse.data;\n      setDrugCategories(drugCategoriesData);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async function getDrugs(drugCategory) {\n    try {\n      setDrugLoading(true);\n      let drugResponse;\n      if (user.role.name === \"admin\") {\n        drugResponse = await adminGetDrugsAPI({ drug_category: drugCategory });\n      } else {\n        drugResponse = await getDrugsAPI({ drug_category: drugCategory })\n      }\n      const drugData = drugResponse.data;\n      setDrugs(drugData);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setDrugLoading(false);\n    }\n  }\n\n  async function getDrugInstructions() {\n    try {\n      let drugInsResponse;\n      if (user.role.name === \"admin\") {\n        drugInsResponse = await adminGetDrugInstructionsAPI();\n      } else {\n        drugInsResponse = await getDrugInstructionsAPI()\n      }\n      const drugInsData = drugInsResponse.data;\n      setDrugInstructions(drugInsData);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async function getEmrDetail(emrId) {\n    try {\n      setLoading(true);\n      const emrList = await getEMRHistoryAPI(emrId);\n      const data = emrList.data.data;\n      if (data[0]) {\n        setEmr(data[0]);\n      }\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  async function getInitialData() {\n    const emr = params.emr;\n    await Promise.all([\n      getEmrDetail(emr),\n      getServices(),\n      getDrugCategories(),\n      getDrugInstructions(),\n      fetchDisease(),\n      fetchDiseaseCategory()\n    ]);\n  }\n\n  useEffect(() => {\n    if (user) {\n      getInitialData();\n    }\n  }, [user]);\n\n  async function handleChangeDrugCategory(category) {\n    await getDrugs(category);\n  }\n\n  async function handleFinishExamination(visitId) {\n    try {\n      setFinishLoading(true);\n      const completeResponse = await completeEMRAPI(visitId);\n      const deleteResponse = await deleteVisitAPI(visitId);\n      history.goBack();\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setFinishLoading(false);\n    }\n  }\n\n  async function handleSaveEmr() {\n\n    const values = await emrForm.validateFields();\n\n    // return console.log(values);\n\n    const emrBody = {\n      patient: emr.patient,\n      physician: user,\n      room: emr.room,\n      medical_record: {\n        administrative: {\n          fullname: values.fullname || null,\n          dayOfBirth: values.dayOfBirth?.format('DD/MM/YYYY') || null,\n          gender: values.gender || null,\n          job: values.job || null,\n          ethnicity: values.ethnicity || null,\n          expatriate: values.expatriate || null,\n          address: values.address || null,\n          workplace: values.workplace || null,\n          object: values.object || null,\n          insurance_expirity: values.insurance_expirity?.format('DD/MM/YYYY') || null,\n          insurance_number: values.insurance_number || null,\n          family_member_and_address: values.family_member_and_address || null,\n          phone: values.phone || null,\n          checkin_at: values.checkin || null,\n          previous_diagnose: values.previous_diagnose || null,\n          come_from: values.come_from || null\n        },\n        present_complaint: values.present_complaint || null,\n        ask: {\n          pathological_process: values.pathological_process || null,\n          self_medical_history: values.self_medical_history || null,\n          family_medical_history: values.family_medical_history || null\n        },\n        examination: {\n          heartbeat: values.heartbeat || null,\n          temperature: values.temperature || null,\n          blood_pressure: values.blood_pressure || null,\n          breathing: values.breathing || null,\n          weight: values.weight || null,\n          body: values.body || null,\n          partials: values.partials || null,\n          subclinical_summary: values.subclinical_summary || null,\n          initial_diagnose: {\n            category: values.initial_diagnose.category || null,\n            disease: values.initial_diagnose.disease || null,\n          },\n          drugs: values.drugs || null,\n          processed: values.processed || null,\n          diagnose: {\n            category: values.diagnose.category || null,\n            disease: values.diagnose.disease || null\n          },\n          from_date: values.from_date?.format('DD/MM/YYYY') || null,\n          to_date: values.to_date?.format('DD/MM/YYYY') || null,\n        },\n        summary: {\n          pathological_process_and_clinical_course: values.pathological_process_and_clinical_course || null,\n          valuable_subclinical_summary: values.valuable_subclinical_summary || null,\n          primary_disease: {\n            category: values.primary_disease.category || null,\n            disease: values.primary_disease.disease || null\n          },\n          sub_disease: {\n            category: values.sub_disease.category || null,\n            disease: values.sub_disease.disease || null\n          },\n          treatment_method: values.treatment_method || null,\n          patient_status: values.patient_status || null,\n          direction_of_treatment: values.direction_of_treatment || null,\n          services: values.services || null,\n          attachments: emr.medical_record.summary.attachments || null\n        }\n      }\n    }\n    try {\n      setIsSavingEmr(true);\n      await updateEMRAPI(emr.id, emrBody);\n      message.success(\"Lưu bệnh án thành công\");\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setIsSavingEmr(false);\n    }\n\n\n  }\n\n  async function handleUploadChange({ event, file, fileList }, emrId) {\n    console.log(\"change\");\n\n    if (file && file.status === \"done\") {\n\n      try {\n\n        // Upload image\n        const response = file.response;\n        const fileListElement = { uid: response.url, id: response.url, url: response.url };\n        const cloneEmr = { ...emr };\n        cloneEmr.medical_record.summary.attachments = [...cloneEmr.medical_record.summary.attachments, ...[fileListElement]];\n        const updateRes = await updateEMRAPI(emrId, cloneEmr);\n        setEmr(cloneEmr);\n        message.success({ content: \"Lưu thành công\" });\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    if (file && file.status === \"removed\") {\n      try {\n        const cloneEmr = { ...emr };\n        cloneEmr.medical_record.summary.attachments = fileList;\n        const updateRes = await updateEMRAPI(emrId, cloneEmr);\n        setEmr(cloneEmr);\n        message.success({ content: \"Lưu thành công\" });\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  }\n\n  // useEffect(() => {\n  //   console.log(emr);\n  // }, [emr]);\n\n  function getDateString(dateStr) {\n    let result = \"\";\n    const momentObj = moment(dateStr);\n    result = `${momentObj.hour()} giờ ${momentObj.minute()} phút ngày ${momentObj.date()} tháng ${momentObj.month()} năm ${momentObj.year()}`;\n    return result;\n  }\n\n  function getTodayString() {\n    const now = new Date();\n    return `Ngày ${now.getDate()} tháng ${now.getMonth() + 1}, năm ${now.getFullYear()}`\n  }\n\n  return (\n    <>\n      <PageHeader title=\"Bệnh án ngoại trú\" onBack={() => history.goBack()} />\n      {\n        emr ?\n          emr.completed_at === null ?\n            <>\n              <Spin spinning={isSavingEmr}>\n                <Form layout=\"vertical\" form={emrForm} initialValues={\n                  { drugs: emr.medical_record.examination.drugs },\n                  { services: emr.medical_record.summary.services }\n                }>\n\n                  <Row gutter={15}>\n                    {/* <Col flex={1}>\n                    <Form.Item label=\"Sở y tế\" name=\"health_service_dept\">\n                      <Input />\n                    </Form.Item>\n                  </Col> */}\n                    {/* <Col flex={1}>\n                    <Form.Item label=\"Bệnh viện\" name=\"hospital\">\n                      <Input />\n                    </Form.Item>\n                  </Col> */}\n                    <Col flex={1}>\n                      <Form.Item label=\"Khoa\" name=\"room\" initialValue={emr.room.name}>\n                        <Input readOnly />\n                      </Form.Item>\n                    </Col>\n                  </Row>\n\n                  <Collapse defaultActiveKey={[\"administrative\", \"present-complaint\", \"ask\", \"examination\", \"summary\"]}>\n                    <Collapse.Panel header={<strong className=\"uppercase\">i. Hành chính</strong>} key=\"administrative\">\n                      <Row gutter={15}>\n                        <Col flex=\"0 0 33.33%\">\n                          <Form.Item label=\"1. Họ và tên\" name=\"fullname\" initialValue={(emr.patient.first_name + \" \" + emr.patient.last_name).toUpperCase()}>\n                            <Input />\n                          </Form.Item>\n                        </Col>\n                        <Col flex=\"0 0 33.33%\">\n                          <Form.Item label=\"2. Sinh ngày\" name=\"dayOfBirth\" initialValue={moment(emr.patient.DOB)}>\n                            <DatePicker format=\"DD/MM/YYYY\" style={{ width: '100%' }} />\n                          </Form.Item>\n                        </Col>\n                        <Col flex=\"0 0 33.33%\">\n                          <Form.Item label=\"3. Giới tính\" name=\"gender\" initialValue={emr.patient.gender}>\n                            <Select>\n                              <Select.Option value=\"Nam\">Nam</Select.Option>\n                              <Select.Option value=\"Nữ\">Nữ</Select.Option>\n                            </Select>\n                          </Form.Item>\n                        </Col>\n                      </Row>\n                      <Row gutter={15}>\n                        <Col flex=\"0 0 33.33%\">\n                          <Form.Item label=\"4. Nghề nghiệp\" name=\"job\">\n                            <Input />\n                          </Form.Item>\n                        </Col>\n                        <Col flex=\"0 0 33.33%\">\n                          <Form.Item label=\"5. Dân tộc\" name=\"ethnicity\">\n                            <Input />\n                          </Form.Item>\n                        </Col>\n                        <Col flex=\"0 0 33.33%\">\n                          <Form.Item label=\"6. Ngoại kiều\" name=\"expatriate\">\n                            <Input />\n                          </Form.Item>\n                        </Col>\n                      </Row>\n\n                      <Form.Item label=\"7. Địa chỉ\" name=\"address\">\n                        <Input />\n                      </Form.Item>\n\n                      <Row gutter={15}>\n                        <Col flex=\"0 0 50%\">\n                          <Form.Item label=\"8. Nơi làm việc\" name=\"workplace\">\n                            <Input />\n                          </Form.Item>\n                        </Col>\n                        <Col>\n                          <Form.Item label=\"9. Đối tượng\" name=\"object\">\n                            <Radio.Group>\n                              <Radio value=\"BHYT\">1. BHYT</Radio>\n                              <Radio value=\"Thu phí\">2. Thu phí</Radio>\n                              <Radio value=\"Miễn phí\">3. Miễn phí</Radio>\n                              <Radio value=\"Khác\">4. Khác</Radio>\n                            </Radio.Group>\n                          </Form.Item>\n                        </Col>\n                      </Row>\n\n                      <Row gutter={15}>\n                        <Col flex=\"0 0 50%\">\n                          <Form.Item label=\"10. Giá trị BHYT\" name=\"insurance_expirity\">\n                            <DatePicker style={{ width: '100%' }} format=\"DD/MM/YYYY\" />\n                          </Form.Item>\n                        </Col>\n                        <Col flex=\"0 0 50%\">\n                          <Form.Item label=\"Số thẻ BHYT\" name=\"insurance_number\">\n                            <Input />\n                          </Form.Item>\n                        </Col>\n                      </Row>\n\n                      <Row gutter={15}>\n                        <Col flex=\"0 0 50%\">\n                          <Form.Item label=\"11. Họ tên, địa chỉ người nhà khi cần báo tin\" name=\"family_member_and_address\">\n                            <Input.TextArea rows={2} />\n                          </Form.Item>\n                        </Col>\n                        <Col flex=\"0 0 50%\">\n                          <Form.Item label=\"Điện thoại\" initialValue={emr.patient.phone} name=\"phone\">\n                            <Input />\n                          </Form.Item>\n                        </Col>\n                      </Row>\n\n\n                      <Form.Item label=\"12. Đến khám bệnh lúc\" initialValue={getDateString(emr.created_at)} name=\"checkin\">\n                        <Input readOnly />\n                      </Form.Item>\n\n                      <Row gutter={15}>\n                        <Col flex={1}>\n                          <Form.Item label=\"13. Chẩn đoán của nơi giới thiệu\" name=\"previous_diagnose\" initialValue={emr.medical_record.administrative.previous_diagnose}>\n                            <Input />\n                          </Form.Item>\n                        </Col>\n                        <Col>\n                          <Form.Item label=\"Nơi giới thiệu\" name=\"come_from\" initialValue={emr.medical_record.administrative.come_from}>\n                            <Radio.Group>\n                              <Radio value=\"Y tế\">1. Y tế</Radio>\n                              <Radio value=\"Tự đến\">2. Tự đến</Radio>\n                            </Radio.Group>\n                          </Form.Item>\n                        </Col>\n                      </Row>\n\n                    </Collapse.Panel>\n                    <Collapse.Panel header={<strong className=\"uppercase\">II. Lý do vào viện</strong>} key=\"present-complaint\">\n                      <Form.Item label=\"Lý do vào viện\" name=\"present_complaint\" initialValue={emr.medical_record.present_complaint}>\n                        <Input />\n                      </Form.Item>\n                    </Collapse.Panel>\n                    <Collapse.Panel header={<strong className=\"uppercase\">iii. hỏi bệnh</strong>} key=\"ask\">\n                      <Form.Item label=\"1. Quá trình bệnh lý\" name=\"pathological_process\" initialValue={emr.medical_record.ask.pathological_process} getValueFromEvent={e => e.target.getContent()}>\n                        {/* <Input.TextArea autoSize={{ minRows: 3, maxRows: 7 }} /> */}\n                        <ReactQuill theme=\"snow\" modules={{ toolbar: quillToolbar }} />\n                      </Form.Item>\n                      <Form.Item label=\"2. Tiền sử bệnh\" name=\"self_medical_history\" className=\"mb-3\" initialValue={emr.medical_record.ask.self_medical_history}>\n                        <Input placeholder=\"Bản thân\" />\n                      </Form.Item>\n                      <Form.Item name=\"family_medical_history\" initialValue={emr.medical_record.ask.family_medical_history}>\n                        <Input placeholder=\"Gia đình\" />\n                      </Form.Item>\n                    </Collapse.Panel>\n                    <Collapse.Panel header={<strong className=\"uppercase\">iv. khám bệnh</strong>} key=\"examination\">\n                      <Row gutter={15} className=\"flex-no-wrap\">\n                        <Col flex={1}>\n                          <Form.Item label=\"1. Toàn thân\" name=\"body\" initialValue={emr.medical_record.examination.body}>\n                            <ReactQuill theme=\"snow\" modules={{ toolbar: quillToolbar }} />\n                          </Form.Item>\n                        </Col>\n                        <Col flex=\"0 0 auto\">\n                          <Form.Item label=\"Dấu hiệu sinh tồn\">\n                            {/* <div className=\"border border-solid border-gray-400 p-2\"> */}\n                            <Form.Item className=\"mb-2\" name=\"heartbeat\" initialValue={emr.medical_record.examination.heartbeat}>\n                              <Input addonBefore={<div style={{ width: 80 }}>Mạch</div>} suffix=\"lần/ph\" />\n                            </Form.Item>\n                            <Form.Item className=\"mb-2\" name=\"temperature\" initialValue={emr.medical_record.examination.temperature}>\n                              <Input addonBefore={<div style={{ width: 80 }}>Nhiệt độ</div>} suffix=\"°C\" />\n                            </Form.Item>\n                            <Form.Item className=\"mb-2\" name=\"blood_pressure\" initialValue={emr.medical_record.examination.blood_pressure}>\n                              <Input addonBefore={<div style={{ width: 80 }}>Huyết áp</div>} suffix=\"mmHg\" />\n                            </Form.Item>\n                            <Form.Item className=\"mb-2\" name=\"breathing\" initialValue={emr.medical_record.examination.breathing}>\n                              <Input addonBefore={<div style={{ width: 80 }}>Nhịp thở</div>} suffix=\"lần/ph\" />\n                            </Form.Item>\n                            <Form.Item className=\"mb-0\" name=\"weight\" initialValue={emr.medical_record.examination.weight}>\n                              <Input addonBefore={<div style={{ width: 80 }}>Câng nặng</div>} suffix=\"kg\" />\n                            </Form.Item>\n                            {/* </div> */}\n                          </Form.Item>\n                        </Col>\n                      </Row>\n\n                      <Form.Item label=\"2. Các bộ phận\" name=\"partials\" initialValue={emr.medical_record.examination.partials}>\n                        <ReactQuill theme=\"snow\" modules={{ toolbar: quillToolbar }} />\n                      </Form.Item>\n\n                      <Form.Item label=\"3. Tóm tắt kết quả cận lâm sàng\" name=\"subclinical_summary\" initialValue={emr.medical_record.examination.subclinical_summary}>\n                        <ReactQuill theme=\"snow\" modules={{ toolbar: quillToolbar }} />\n                      </Form.Item>\n\n                      <Form.Item label=\"4. Chẩn đoán ban đầu\" name=\"initial_diagnose\" initialValue={emr.medical_record.examination.initial_diagnose}>\n                        <DiseaseSelect diseaseCategories={diseaseCategories} diseases={diseases} />\n                      </Form.Item>\n\n                      <div className=\"mb-3\">5. Đã xử lý (thuốc, chăm sóc)</div>\n\n                      <Form.List name=\"drugs\">\n                        {(fields, { add, remove }) => (\n                          <>\n                            {\n                              fields.map((field, index) => (\n                                <Row gutter={15} key={field.key} align=\"middle\">\n                                  <Col>{index + 1}</Col>\n                                  <Col flex=\"0 0 220px\">\n                                    <Form.Item\n                                      {...field}\n                                      label=\"Nhóm thuốc\"\n                                      name={[field.name, 'drugCategory']}\n                                      fieldKey={[field.fieldKey, 'drugCategory']}\n                                      rules={[{ required: true, message: \"Trường này là bắt buộc\" }]}>\n                                      <Select onChange={handleChangeDrugCategory}>\n                                        {\n                                          drugCategories.map(cat => (\n                                            <Option key={cat.id} value={cat.id}>{cat.name}</Option>\n                                          ))\n                                        }\n                                      </Select>\n                                    </Form.Item>\n                                  </Col>\n                                  <Col flex=\"1 0 220px\">\n                                    <Form.Item\n                                      {...field}\n                                      label=\"Thuốc\"\n                                      name={[field.name, 'drug']}\n                                      fieldKey={[field.fieldKey, 'drug']}\n                                      rules={[{ required: true, message: \"Trường này là bắt buộc\" }]}>\n                                      <Select loading={drugLoading}>\n                                        {\n                                          drugs.map(drug => (\n                                            <Option key={drug.id} value={`${drug.name} ${drug.strength}`}>{drug.name} {drug.strength}</Option>\n                                          ))\n                                        }\n                                      </Select>\n                                    </Form.Item>\n                                  </Col>\n                                  <Col flex=\"0 0 120px\">\n                                    <Form.Item\n                                      {...field}\n                                      name={[field.name, 'drugInstruction']}\n                                      fieldKey={[field.fieldKey, 'drugInstruction']}\n                                      rules={[{ required: true, message: \"Trường này là bắt buộc\" }]}\n                                      label=\"Cách dùng\"\n                                      style={{ minWidth: 200 }}>\n                                      <Select>\n                                        {\n                                          drugInstructions.map(ins => (\n                                            <Option key={ins.id} value={ins.instruction}>{ins.instruction}</Option>\n                                          ))\n                                        }\n                                      </Select>\n                                    </Form.Item>\n                                  </Col>\n                                  {/* </Row> */}\n                                  {/* <Row gutter={15}> */}\n                                  {/* <Col flex=\"0 0 80px\">\n                                <Form.Item\n                                  {...field}\n                                  name={[field.name, 'numberOfDays']}\n                                  fieldKey={[field.fieldKey, 'numberOfDays']}\n                                  rules={[{ required: true, message: \"Trường này là bắt buộc\" }]}\n                                  label=\"Số ngày\">\n                                  <Input type=\"number\" />\n                                </Form.Item>\n                              </Col>\n                              <Col flex=\"0 0 80px\">\n                                <Form.Item label=\"Sáng\" name={[field.name, 'morning']}>\n                                  <Input type=\"number\" />\n                                </Form.Item>\n                              </Col>\n                              <Col flex=\"0 0 80px\">\n                                <Form.Item label=\"Trưa\" name={[field.name, 'afternoon']}>\n                                  <Input type=\"number\" />\n                                </Form.Item>\n                              </Col>\n                              <Col flex=\"0 0 80px\">\n                                <Form.Item label=\"Chiều\" name={[field.name, 'evening']}>\n                                  <Input type=\"number\" />\n                                </Form.Item>\n                              </Col>\n                              <Col flex=\"0 0 80px\">\n                                <Form.Item label=\"Tối\" name={[field.name, 'night']}>\n                                  <Input type=\"number\" />\n                                </Form.Item>\n                              </Col> */}\n                                  <Col flex=\"0 0 80px\">\n                                    <Form.Item\n                                      {...field}\n                                      label=\"Số lượng\"\n                                      name={[field.name, 'total']}\n                                      fieldKey={[field.fieldKey, 'total']}>\n                                      <Input type=\"number\" />\n                                    </Form.Item>\n                                  </Col>\n                                  <Col>\n                                    <MinusCircleOutlined onClick={() => remove(field.name)} />\n                                  </Col>\n                                </Row>\n                              ))\n\n                            }\n                            <Form.Item>\n                              <Button type=\"dashed\" block onClick={() => add()} icon={<PlusOutlined />}>Thêm thuốc</Button>\n                            </Form.Item>\n                          </>\n                        )}\n                      </Form.List>\n\n                      <Form.Item name=\"processed\" initialValue={emr.medical_record.examination.processed}>\n                        <ReactQuill theme=\"snow\" modules={{ toolbar: quillToolbar }} />\n                      </Form.Item>\n\n                      <Form.Item label=\"6. Chẩn đoán khi ra viện\" name=\"diagnose\" initialValue={emr.medical_record.examination.diagnose}>\n                        <DiseaseSelect diseaseCategories={diseaseCategories} diseases={diseases} />\n                      </Form.Item>\n\n                      <Row gutter={15}>\n                        <Col>\n                          <Form.Item label=\"7. Điều trị ngoại trú từ ngày\" initialValue={moment(emr.created_at)} name=\"from_date\">\n                            <DatePicker format=\"DD/MM/YYYY\" />\n                          </Form.Item>\n                        </Col>\n                        <Col>\n                          <Form.Item label=\"Đến ngày\" name=\"to_date\" initialValue={moment(emr.medical_record.examination.to_date || new Date(), \"DD/MM/YYYY\")}>\n                            <DatePicker format=\"DD/MM/YYYY\" />\n                          </Form.Item>\n                        </Col>\n                      </Row>\n                    </Collapse.Panel>\n                    <Collapse.Panel header={<strong className=\"uppercase\">tổng kết bệnh án</strong>} key=\"summary\">\n                      <Form.Item label=\"1. Quá trình bệnh lý và diễn biến lâm sàng\" name=\"pathological_process_and_clinical_course\" initialValue={emr.medical_record.summary.pathological_process_and_clinical_course}>\n                        <ReactQuill theme=\"snow\" modules={{ toolbar: quillToolbar }} />\n                      </Form.Item>\n\n                      <Form.Item label=\"2. Tóm tắt kết quả xét nghiệm cận lâm sàng có giá trị chẩn đoán\" name=\"valuable_subclinical_summary\" initialValue={emr.medical_record.summary.valuable_subclinical_summary}>\n                        <ReactQuill theme=\"snow\" modules={{ toolbar: quillToolbar }} />\n                      </Form.Item>\n\n                      <Form.Item label=\"3. Chẩn đoán khi ra viện\" className=\"mb-3\">\n                        <Form.Item name=\"primary_disease\" initialValue={emr.medical_record.summary.primary_disease}>\n                          <DiseaseSelect label=\"Bệnh chính\" diseaseCategories={diseaseCategories} diseases={diseases} />\n                        </Form.Item>\n                        <Form.Item name=\"sub_disease\" initialValue={emr.medical_record.summary.sub_disease}>\n                          <DiseaseSelect label=\"Bệnh phụ (nếu có)\" diseaseCategories={diseaseCategories} diseases={diseases} clearable />\n                        </Form.Item>\n                      </Form.Item>\n\n\n\n                      <Form.Item label=\"4. Phương pháp điều trị\" name=\"treatment_method\" initialValue={emr.medical_record.summary.treatment_method}>\n                        <ReactQuill theme=\"snow\" modules={{ toolbar: quillToolbar }} />\n                      </Form.Item>\n\n                      <Form.Item label=\"5. Tình trạng người bệnh ra viện\" name=\"patient_status\" initialValue={emr.medical_record.summary.patient_status}>\n                        <ReactQuill theme=\"snow\" modules={{ toolbar: quillToolbar }} />\n                      </Form.Item>\n\n                      <Form.Item label=\"6. Hướng điều trị và các chế độ tiếp theo\" name=\"direction_of_treatment\" initialValue={emr.medical_record.summary.direction_of_treatment}>\n                        <ReactQuill theme=\"snow\" modules={{ toolbar: quillToolbar }} />\n                      </Form.Item>\n\n\n\n                      <Row gutter={15} className=\"mb-5\">\n                        <Col flex=\"0 0 50%\">\n                          <div className=\"mb-3\">Chỉ định dịch vụ</div>\n                          <Form.List name=\"services\">\n                            {\n                              (fields, { add, remove }) => (\n                                <>\n                                  {\n                                    fields.map((field, index) => (\n                                      <Row gutter={15} key={field.key} align=\"middle\" className=\"mb-5\">\n                                        <Col>{index + 1}</Col>\n                                        <Col flex={1}>\n                                          <Form.Item {...field} name={[field.name, 'name']} fieldKey={[field.fieldKey, 'name']} style={{ margin: 0 }} rules={[{ required: true, message: \"Trường này là bắt buộc\" }]}>\n                                            <Select placeholder=\"Chọn dịch vụ\">\n                                              {\n                                                services.map((service, index) => (\n                                                  <Option value={service.name} key={service.id}>\n                                                    {service.name}\n                                                  </Option>\n                                                ))\n                                              }\n                                            </Select>\n                                          </Form.Item>\n                                        </Col>\n                                        <Col>\n                                          <MinusCircleOutlined onClick={() => remove(field.name)} />\n                                        </Col>\n                                      </Row>\n                                    ))\n                                  }\n                                  <Form.Item>\n                                    <Button type=\"dashed\" block onClick={() => add()} icon={<PlusOutlined />}>Thêm dịch vụ</Button>\n                                  </Form.Item>\n                                </>\n                              )\n                            }\n                          </Form.List>\n                        </Col>\n                        <Col flex=\"0 0 50%\">\n                          <div className=\"mb-3\">Tệp đính kèm</div>\n                          <VisitImagesForm onChange={(e) => handleUploadChange(e, emr.id)} fileList={emr.medical_record.summary.attachments || []} />\n                        </Col>\n                      </Row>\n                    </Collapse.Panel>\n                  </Collapse>\n\n                  <Divider />\n\n\n                  <div className=\"text-right\">\n                    <Space>\n                      {/* <Button danger type=\"default\" size=\"large\" icon={<DeleteOutlined />}>Hủy đơn</Button> */}\n                      <Button type=\"default\" size=\"large\" onClick={handleSaveEmr} icon={<SaveOutlined />}>Lưu lại</Button>\n                      <Button type=\"primary\" size=\"large\" onClick={() => handleFinishExamination(emr.id)} loading={finishLoading} icon={<FileDoneOutlined />}>Kết thúc khám</Button>\n                    </Space>\n                  </div>\n                </Form>\n              </Spin>\n            </>\n            :\n            <Alert message=\"Lỗi\" description={`Bệnh án này đã đóng vào ${moment(emr.created_at).format(\"DD/MM/YYYY HH:mm:ss\")}`} type=\"error\" showIcon />\n          :\n          loading ?\n            <div className=\"py-10 text-center\"><Spin spinning={loading} /></div>\n            :\n            <Alert message=\"Lỗi\" description=\"Không tìm thấy bệnh án\" type=\"error\" showIcon />\n      }\n    </>\n  )\n}\n\nconst mapStateToProps = state => ({\n  user: state.userState.user,\n  diseaseCategories: state.diseaseCategoryState.diseaseCategories,\n  fetchDiseaseCategoryLoading: state.diseaseCategoryState.fetchLoading,\n  diseases: state.diseaseState.diseases,\n  fetchDiseaseLoading: state.diseaseState.fetchLoading\n})\n\nconst mapDispatchToProps = dispatch => ({\n  fetchDiseaseCategory: (role, query) => dispatch(fetchDiseaseCategory(role, query)),\n  fetchDisease: (role, query) => dispatch(fetchDisease(role, query))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ExaminationPage);","import * as actionTypes from '../actionTypes';\nimport axios from 'axios';\nimport {\n  ADMIN_DISEASE_CATEGORY_URL,\n  USER_DISEASE_CATEGORY_URL,\n} from 'constant/apiUrl';\nimport { getQueryString } from 'utils/string';\n\nfunction createDiseaseCategoryPending() {\n  return {\n    \n  }\n}\n\nfunction createDiseaseCategorySuccess() {\n  return {\n    \n  }\n}\n\nfunction createDiseaseCategoryFailure() {\n  return {\n    \n  }\n}\n\nfunction fetchDiseaseCategoryPending() {\n  return {\n    type: actionTypes.FETCH_DISEASE_CATEGORIES_PENDING\n  }\n}\n\nfunction fetchDiseaseCategorySuccess(data) {\n  return {\n    type: actionTypes.FETCH_DISEASE_CATEGORIES_SUCCESS,\n    payload: data\n  }\n}\n\nfunction fetchDiseaseCategoryFailure() {\n  return {\n    type: actionTypes.FETCH_DISEASE_CATEGORIES_FAILURE\n  }\n}\n\nfunction fetchDiseaseCategoryDetailsPending() {\n  return {\n    \n  }\n}\n\nfunction fetchDiseaseCategoryDetailsSuccess(data) {\n  return {\n    \n  }\n}\n\nfunction fetchDiseaseCategoryDetailsFailure() {\n  return {\n    \n  }\n}\n\nfunction updateDiseaseCategoryPending() {\n  return {\n    \n  }\n}\nfunction updateDiseaseCategorySuccess() {\n  return {\n    \n  }\n}\nfunction updateDiseaseCategoryFailure() {\n  return {\n    \n  }\n}\nfunction deleteDiseaseCategoryPending() {\n  return {\n    \n  }\n}\n\nfunction deleteDiseaseCategorySuccess() {\n  return {\n    \n }\n}\n\nfunction deleteDiseaseCategoryFailure() {\n  return {\n   \n  }\n}\n\n\n\nexport function createDiseaseCategory() {\n  \n  return async dispatch => {\n    try {\n      dispatch()\n\n      return dispatch()\n    } catch (error) {\n      return dispatch()\n    }\n  }\n}\nexport function fetchDiseaseCategory(role, query) {\n  let endpoint = \"\";\n  if (role === \"admin\") {\n    endpoint = ADMIN_DISEASE_CATEGORY_URL + \"/\";\n  } else {\n    endpoint = USER_DISEASE_CATEGORY_URL + \"/\";\n  }\n\n  if (query) {\n    endpoint += getQueryString(query);\n  }\n\n  return async dispatch => {\n    try {\n      dispatch(fetchDiseaseCategoryPending());\n      const response = await axios.get(endpoint);\n      return dispatch(fetchDiseaseCategorySuccess(response.data));\n    } catch (error) {\n      return dispatch(fetchDiseaseCategoryFailure());\n    }\n  }\n}\nexport function fetchDiseaseCategoryDetails() {\n  \n  return async dispatch => {\n    try {\n      return dispatch()\n\n      dispatch()\n    } catch (error) {\n      return dispatch()\n    }\n  }\n}\nexport function updateDiseaseCategory() {\n  \n  return async dispatch => {\n    try {\n      dispatch()\n\n      return dispatch()\n    } catch (error) {\n      return dispatch()\n    }\n  }\n}\nexport function deleteDiseaseCategory() {\n  \n  return async dispatch => {\n    try {\n      dispatch()\n\n      return dispatch()\n    } catch (error) {\n      return dispatch()\n    }\n  }\n}","import * as actionTypes from '../actionTypes';\nimport axios from 'axios';\nimport {\n  ADMIN_DISEASE_URL,\n  USER_DISEASE_URL,\n} from 'constant/apiUrl';\nimport { getQueryString } from 'utils/string';\n\nfunction createDiseasePending() {\n  return {\n    \n  }\n}\n\nfunction createDiseaseSuccess() {\n  return {\n    \n  }\n}\n\nfunction createDiseaseFailure() {\n  return {\n    \n  }\n}\n\nfunction fetchDiseasePending() {\n  return {\n    type: actionTypes.FETCH_DISEASES_PENDING\n  }\n}\n\nfunction fetchDiseaseSuccess(data) {\n  return {\n    type: actionTypes.FETCH_DISEASES_SUCCESS,\n    payload: data\n  }\n}\n\nfunction fetchDiseaseFailure() {\n  return {\n    type: actionTypes.FETCH_DISEASES_FAILURE\n  }\n}\n\nfunction fetchDiseaseDetailsPending() {\n  return {\n    \n  }\n}\n\nfunction fetchDiseaseDetailsSuccess(data) {\n  return {\n    \n  }\n}\n\nfunction fetchDiseaseDetailsFailure() {\n  return {\n    \n  }\n}\n\nfunction updateDiseasePending() {\n  return {\n    \n  }\n}\nfunction updateDiseaseSuccess() {\n  return {\n    \n  }\n}\nfunction updateDiseaseFailure() {\n  return {\n    \n  }\n}\nfunction deleteDiseasePending() {\n  return {\n    \n  }\n}\n\nfunction deleteDiseaseSuccess() {\n  return {\n    \n }\n}\n\nfunction deleteDiseaseFailure() {\n  return {\n   \n  }\n}\n\n\n\nexport function createDisease() {\n  \n  return async dispatch => {\n    try {\n      dispatch()\n\n      return dispatch()\n    } catch (error) {\n      return dispatch()\n    }\n  }\n}\nexport function fetchDisease(role, query) {\n  let endpoint = \"\";\n  if (role === \"admin\") {\n    endpoint = ADMIN_DISEASE_URL + \"/\";\n  } else {\n    endpoint = USER_DISEASE_URL + \"/\";\n  }\n\n  if (query) {\n    endpoint += getQueryString(query);\n  }\n\n  return async dispatch => {\n    try {\n      dispatch(fetchDiseasePending());\n      const response = await axios.get(endpoint);\n      return dispatch(fetchDiseaseSuccess(response.data));\n    } catch (error) {\n      return dispatch(fetchDiseaseFailure());\n    }\n  }\n}\nexport function fetchDiseaseDetails() {\n  \n  return async dispatch => {\n    try {\n      return dispatch()\n\n      dispatch()\n    } catch (error) {\n      return dispatch()\n    }\n  }\n}\nexport function updateDisease() {\n  \n  return async dispatch => {\n    try {\n      dispatch()\n\n      return dispatch()\n    } catch (error) {\n      return dispatch()\n    }\n  }\n}\nexport function deleteDisease() {\n  \n  return async dispatch => {\n    try {\n      dispatch()\n\n      return dispatch()\n    } catch (error) {\n      return dispatch()\n    }\n  }\n}","import { Avatar, Row, Col, Spin, Upload, Form, Input, Select, DatePicker, Button, message } from 'antd';\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { LoadingOutlined, PlusOutlined } from '@ant-design/icons';\nimport { getBase64 } from 'utils/image';\nimport { API_URL } from 'constant/apiUrl';\nimport Cookie from 'js-cookie';\nimport moment from 'moment';\n\n\n// APIs\nimport { updateProfile } from 'services/user/user.service';\nimport { changePasswordAPI } from 'services/auth/auth.service';\n\nconst { Item, useForm } = Form;\n\nconst ProfilePage = props => {\n  const { user } = props;\n  const token = Cookie.get('EMR_token');\n\n  const [loading, setLoading] = useState(false);\n  const [updateLoading, setUpdateLoading] = useState(false);\n  const [changePasswordLoading, setChangePasswordLoading] = useState(false);\n  const [imageUrl, setImageUrl] = useState(user?.avatar);\n\n  const [changePasswordForm] = useForm();\n\n  useEffect(() => {\n    if (user && user.avatar) {\n      setImageUrl(user.avatar);\n    }\n  }, [user]);\n\n  const uploadButton = (\n    <div>\n      {loading ? <LoadingOutlined /> : <PlusOutlined />}\n      <div style={{ marginTop: 8 }}>Upload</div>\n    </div>\n  )\n\n  function handleChange(info) {\n    if (info.file.status === 'uploading') {\n      setLoading(true);\n      return;\n    }\n    if (info.file.status === 'done') {\n      setImageUrl(info.file.response.avatar);\n      setLoading(false);\n    }\n  };\n\n  async function handleSaveProfile(values) {\n    if (moment.isMoment(values.DOB)) {\n      values.DOB = values.DOB.format('YYYY-MM-DD');\n    }\n\n    try {\n      setUpdateLoading(true);\n      await updateProfile(values);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setUpdateLoading(false);\n    }\n  }\n\n  async function handleChangePassword(values) {\n    try {\n      setChangePasswordLoading(true);\n      await changePasswordAPI(values);\n      message.success(\"Đổi mật khẩu thành công\");\n      changePasswordForm.resetFields();\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setChangePasswordLoading(false);\n    }\n  }\n\n  return !user ? <Spin spinning={true} /> : (\n    <>\n      <Row gutter={60}>\n        <Col flex=\"0 0 50%\">\n          <h3 className=\"text-xl mb-3\">Hồ sơ cá nhân</h3>\n          <Upload\n            name=\"image\"\n            action={`${API_URL}/user/profile/avatar/`}\n            headers={{ Authorization: `Bearer ${token}` }}\n            method=\"PATCH\"\n            listType=\"picture-card\"\n            className=\"avatar-uploader\"\n            showUploadList={false}\n\n            onChange={handleChange} >\n            {imageUrl ? <img src={imageUrl} alt=\"avatar\" style={{ width: '100%' }} /> : uploadButton}\n          </Upload>\n\n          <Spin spinning={updateLoading}>\n            <Form layout=\"vertical\" onFinish={handleSaveProfile}>\n              <Row gutter={15}>\n                <Col flex=\"0 0 50%\">\n                  <Item label=\"Họ\" name=\"first_name\" initialValue={user.first_name}>\n                    <Input />\n                  </Item>\n                </Col>\n                <Col flex=\"0 0 50%\">\n                  <Item label=\"Tên\" name=\"last_name\" initialValue={user.last_name}>\n                    <Input />\n                  </Item>\n                </Col>\n              </Row>\n              <Row gutter={15}>\n                <Col flex=\"0 0 50%\">\n                  <Item label=\"Giới tính\" name=\"gender\" initialValue={user.gender}>\n                    <Select>\n                      <Select.Option value=\"Nam\">Nam</Select.Option>\n                      <Select.Option value=\"Nữ\">Nữ</Select.Option>\n                      <Select.Option value=\"Khác\">Khác</Select.Option>\n                    </Select>\n                  </Item>\n                </Col>\n                <Col flex=\"0 0 50%\">\n                  <Item label=\"Ngày sinh\" name=\"DOB\" initialValue={moment(user.DOB)}>\n                    <DatePicker style={{ width: '100%' }} format=\"DD/MM/YYYY\" />\n                  </Item>\n                </Col>\n              </Row>\n              <Row gutter={15}>\n                <Col flex=\"0 0 50%\">\n                  <Item label=\"Địa chỉ email\">\n                    <Input value={user.email} readOnly />\n                  </Item>\n                </Col>\n                <Col flex=\"0 0 50%\">\n                  <Item label=\"Điện thoại\" name=\"phone\" initialValue={user.phone}>\n                    <Input />\n                  </Item>\n                </Col>\n              </Row>\n              <Row gutter={15}>\n                <Col flex=\"0 0 50%\">\n                  <Item label=\"Nghề nghiệp\" name=\"job\" initialValue={user.job}>\n                    <Input />\n                  </Item>\n                </Col>\n                <Col flex=\"0 0 50%\">\n                  <Item label=\"Nơi làm việc\" name=\"workplace\" initialValue={user.workplace}>\n                    <Input />\n                  </Item>\n                </Col>\n              </Row>\n              <Row gutter={15}>\n                <Col flex=\"0 0 50%\">\n                  <Item label=\"Dân tộc\" name=\"ethnicity\" initialValue={user.ethnicity}>\n                    <Input />\n                  </Item>\n                </Col>\n                <Col flex=\"0 0 50%\">\n                  <Item label=\"Ngoại kiều\" name=\"expatriate\" initialValue={user.expatriate}>\n                    <Input />\n                  </Item>\n                </Col>\n              </Row>\n\n              <Form.Item label=\"Họ và tên người nhà\" name=\"family_member_name\" initialValue={user.family_member_name}>\n                <Input />\n              </Form.Item>\n\n              <Form.Item label=\"Địa chỉ\" name=\"address\" initialValue={user.address}>\n                <Input.TextArea autoSize={{ minRows: 2, maxRows: 4 }} />\n              </Form.Item>\n\n              <Form.Item label=\"Địa chỉ người nhà\" name=\"family_member_address\" initialValue={user.family_member_address}>\n                <Input.TextArea autoSize={{ minRows: 2, maxRows: 4 }} />\n              </Form.Item>\n\n              <Button type=\"primary\" htmlType=\"submit\">Cập nhật</Button>\n            </Form>\n          </Spin>\n\n        </Col>\n        <Col flex=\"0 0 50%\">\n          <h3 className=\"text-xl mb-3\">Đổi mật khẩu</h3>\n\n          <Spin spinning={changePasswordLoading}>\n            <Form layout=\"vertical\" onFinish={handleChangePassword} autoComplete=\"new-password\" form={changePasswordForm}>\n              <Item label=\"Mật khẩu cũ\" name=\"old_password\">\n                <Input.Password />\n              </Item>\n\n              <Item label=\"Mật khẩu mới\" name=\"new_password\">\n                <Input.Password />\n              </Item>\n\n              <Item label=\"Nhập lại mật khẩu mới\" name=\"confirm_password\">\n                <Input.Password />\n              </Item>\n\n              <Button type=\"primary\" htmlType=\"submit\">Đổi mật khẩu</Button>\n            </Form>\n          </Spin>\n\n        </Col>\n      </Row>\n\n    </>\n  )\n}\n\nconst mapStateToProps = state => ({\n  user: state.userState.user\n})\n\nexport default connect(mapStateToProps)(ProfilePage);","import React, { useState, useEffect } from 'react';\nimport { PageHeader, Descriptions, Spin, Table, Space, Button } from 'antd';\nimport { Link, useHistory, useRouteMatch } from 'react-router-dom';\nimport moment from 'moment';\nimport { EyeOutlined } from '@ant-design/icons';\n\n// APIs\nimport { getPatientDetailsAPI } from 'services/user/patient.service';\nimport { listEMRAPI } from 'services/user/emr.service';\nimport Circle from 'components/Circle/Circle';\n\nconst { Item } = Descriptions;\n\nconst PatientDetails = props => {\n\n  const { goBack } = useHistory();\n  const { params, url } = useRouteMatch();\n  const patientId = params.patientId;\n\n  const [patient, setPatient] = useState(null);\n  const [patientLoading, setPatientLoading] = useState(false);\n  const [EMRs, setEMRs] = useState(null);\n  const [EMRLoading, setEMRLoading] = useState(false);\n\n  const tableColumns = [\n    {\n      title: '#',\n      key: '#',\n      render: (_, __, index) => index + 1\n    },\n    {\n      title: 'Ngày khám bệnh',\n      key: 'date',\n      render: (_, row) => moment(row.Record.created_at).format(\"DD/MM/YYYY\")\n    },\n    {\n      title: 'Bác sĩ khám bệnh',\n      key: 'physician',\n      render: (_, row) => row.Record.physician.first_name + \" \" + row.Record.physician.last_name\n    },\n    {\n      title: 'Khoa khám',\n      key: 'room',\n      render: (_, row) => \"Khoa \" + row.Record.room.name\n    },\n    {\n      title: 'Trạng thái',\n      key: 'status',\n      render: (_, row) => <div className=\"flex items-center\">\n        <Circle color={row.Record.completed_at !== null ? 'success' : ''} />\n        <span className=\"ml-2\">{row.Record.completed_at !== null ? ' Đã đóng' : ' Chưa đóng'}</span>\n      </div>\n    },\n    {\n      title: 'Hành động',\n      key: 'actions',\n      render: (_, row) => <Space>\n        <Link to={`${url}/${row.Key}`}>\n          <Button icon={<EyeOutlined />}>Xem</Button>\n        </Link>\n\n      </Space>\n    }\n  ]\n\n  async function getPatientDetails(patientId) {\n    try {\n      setPatientLoading(true);\n      const patientResponse = await getPatientDetailsAPI(patientId);\n      setPatient(patientResponse.data);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setPatientLoading(false);\n    }\n  }\n\n  async function getPatientEMRs(patientId) {\n    try {\n      setEMRLoading(true);\n      const EMRResponse = await listEMRAPI({ patient_id: patientId });\n      setEMRs(EMRResponse.data.data);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setEMRLoading(false);\n    }\n  }\n\n  async function getInitialData() {\n    await Promise.all([\n      getPatientDetails(patientId),\n      getPatientEMRs(patientId)\n    ])\n  }\n\n  useEffect(() => {\n    getInitialData();\n  }, []);\n\n  return (\n    <>\n      <PageHeader onBack={goBack} title={patient ? patient.first_name + \" \" + patient.last_name : \"Chi tiết bệnh nhân\"} />\n\n      <Spin spinning={patientLoading}>\n        <Descriptions title=\"Thông tin cá nhân\" colon>\n          <Item label=\"Họ và tên\">{patient ? patient.first_name + \" \" + patient.last_name : \"Đang tải...\"}</Item>\n          <Item label=\"Giới tính\">{patient?.gender || \"Đang tải\"}</Item>\n          <Item label=\"Ngày sinh\">{patient ? moment(patient.DOB).format(\"DD/MM/YYYY\") : \"Đang tải\"}</Item>\n          <Item label=\"Điện thoại\">{patient?.phone || \"Đang tải\"}</Item>\n          <Item label=\"Địa chỉ\">{patient?.address || \"Đang cập nhật\"}</Item>\n        </Descriptions>\n      </Spin>\n\n      <div className=\"ant-descriptions-title mb-3\">Lịch sử khám bệnh</div>\n      <Table rowKey=\"id\" dataSource={EMRs} loading={EMRLoading} columns={tableColumns} />\n\n    </>\n  )\n}\n\nexport default PatientDetails;","import { Descriptions } from 'antd';\nimport React from 'react';\n\nconst { Item } = Descriptions;\n\nconst EmrDesc = props => {\n  const { emr } = props;\n  const {\n    medical_record: {\n      administrative: {\n        fullname,\n        dayOfBirth,\n        gender,\n        job,\n        ethnicity,\n        expatriate,\n        address,\n        workplace,\n        object,\n        insurance_expirity,\n        insurance_number,\n        family_member_name,\n        family_member_address,\n        phone,\n        checkin_at,\n        previous_diagnose,\n        come_from\n      },\n      present_complaint,\n      ask: {\n        pathological_process,\n        self_medical_history,\n        family_medical_history\n      },\n      examination: {\n        heartbeat,\n        temperature,\n        blood_pressure,\n        breathing,\n        weight,\n        body,\n        partials,\n        subclinical_summary,\n        initial_diagnose,\n        drugs,\n        processed,\n        diagnose,\n        from_date,\n        to_date\n      },\n      summary: {\n        pathological_process_and_clinical_course,\n        valuable_subclinical_summary,\n        primary_disease,\n        sub_disease,\n        treatment_method,\n        patient_status,\n        direction_of_treatment,\n        services,\n        attachments\n      }\n    }\n  } = emr;\n\n  return (\n    <div>\n      <div className=\"mb-2\">Khoa: Khoa {emr.room.name}</div>\n      <Descriptions title=\"I. Hành chính\" size=\"middle\" bordered column={2} className=\"mb-5\">\n        <Item label=\"1. Họ và tên\">{fullname}</Item>\n        <Item label=\"2. Ngày sinh\">{dayOfBirth}</Item>\n        <Item label=\"3. Giới tính\">{gender}</Item>\n        <Item label=\"4. Nghề nghiệp\">{job}</Item>\n        <Item label=\"5. Dân tộc\">{ethnicity}</Item>\n        <Item label=\"6. Ngoại kiều\">{expatriate}</Item>\n        <Item label=\"7. Địa chỉ\" span={2}>{address}</Item>\n        <Item label=\"8. Nơi làm việc\">{workplace}</Item>\n        <Item label=\"9. Đối tượng\">{object}</Item>\n        <Item label=\"10. BHYT giá trị đến ngày\">{insurance_expirity}</Item>\n        <Item label=\"Số thẻ BHYT\">{insurance_number}</Item>\n        <Item label=\"11. Họ tên, địa chỉ người nhà khi cần báo tin\" span={2}>{family_member_name}, {family_member_address}</Item>\n        <Item label=\"Điện thoại số\">{phone}</Item>\n        <Item label=\"12. Đến khám bệnh lúc\">{checkin_at}</Item>\n        <Item label=\"13. Chẩn đoán của nơi giới thiệu\">{previous_diagnose} ({come_from})</Item>\n      </Descriptions>\n      <Descriptions title=\"II. Lý do vào viện\" bordered size=\"middle\" className=\"mb-5\">\n        <Item label=\"Lý do vào viện\">{present_complaint}</Item>\n      </Descriptions>\n\n      <Descriptions title=\"III. Hỏi bệnh\" bordered layout=\"vertical\" column={2} className=\"mb-5\">\n        <Item label=\"1. Quá trình bệnh lý\" span={2}>\n          <div dangerouslySetInnerHTML={{ __html: pathological_process }} className=\"whitespace-pre-line\"></div>\n        </Item>\n        <Item label=\"2. Tiền sử bệnh bản thân\">{self_medical_history}</Item>\n        <Item label=\"Gia đình\">{family_medical_history}</Item>\n      </Descriptions>\n\n      <Descriptions title=\"IV. Khám bệnh\" bordered column={2} layout=\"vertical\" className=\"mb-5\">\n        <Item label=\"1. Toàn thân\" className=\"align-baseline\">\n          <div dangerouslySetInnerHTML={{ __html: body }} className=\"whitespace-pre-line\"></div>\n        </Item>\n        <Item label=\"Dấu hiệu sinh tồn\">\n          <div>Mạch: {heartbeat} <i className=\"ml-auto\">lần/ph</i></div>\n          <div>Nhiệt độ: {temperature} <i className=\"ml-auto\">°C</i></div>\n          <div>Huyết áp: {blood_pressure} <i className=\"ml-auto\">mmHg</i></div>\n          <div>Nhịp thở: {breathing} <i className=\"ml-auto\">lần/ph</i></div>\n          <div>Cân nặng: {weight} <i className=\"ml-auto\">kg</i></div>\n        </Item>\n        <Item label=\"2. Các bộ phận\" span={2} className=\"align-baseline\">\n          <div dangerouslySetInnerHTML={{ __html: partials }} className=\"whitespace-pre-line\"></div>\n        </Item>\n        <Item label=\"3. Tóm tắt kết quả cận lâm sàng\" span={2}>\n          <div dangerouslySetInnerHTML={{ __html: subclinical_summary }} className=\"whitespace-pre-line\"></div>\n        </Item>\n        <Item label=\"4. Chẩn đoán ban đầu\" span={2}>{initial_diagnose}</Item>\n        <Item label=\"5. Thuốc\">\n          {\n            drugs?.map((d, index) => {\n              return <div key={index}>{d.drug} x {d.total} ({d.drugInstruction})</div>\n            })\n          }\n        </Item>\n        <Item label=\"Đã xử lý\">\n          <div dangerouslySetInnerHTML={{ __html: processed }} className=\"whitespace-pre-line\"></div>\n        </Item>\n        <Item label=\"6. Chẩn đoán khi ra viện\" span={2}>{diagnose}</Item>\n        <Item label=\"7. Điều trị ngoại trú\">Từ ngày {from_date} đến ngày {to_date}</Item>\n      </Descriptions>\n\n      <Descriptions title=\"Tổng kết bệnh án\" bordered layout=\"vertical\" column={2}>\n        <Item label=\"1. Quá trình bệnh lý và diễn biến lâm sàng\" span={2}>\n          <div dangerouslySetInnerHTML={{ __html: pathological_process_and_clinical_course }} className=\"whitespace-pre-line\"></div>\n        </Item>\n        <Item label=\"2. Tóm tắt kết quả xét nghiệm cận lâm sàng có giá trị chẩn đoán\" span={2}>\n          <div dangerouslySetInnerHTML={{ __html: valuable_subclinical_summary }} className=\"whitespace-pre-line\"></div>\n        </Item>\n        <Item label=\"3. Chẩn đoán ra viện\" span={2}>\n          <div>Bệnh chính: {primary_disease}</div>\n          <div>Bệnh kèm theo (nếu có): {sub_disease}</div>\n        </Item>\n        <Item label=\"4. Phương pháp điều trị\" span={2}>\n          <div dangerouslySetInnerHTML={{ __html: treatment_method }} className=\"whitespace-pre-line\"></div>\n        </Item>\n        <Item label=\"5. Tình trạng người bệnh ra viện\">\n          <div dangerouslySetInnerHTML={{ __html: patient_status }} className=\"whitespace-pre-line\"></div>\n        </Item>\n        <Item label=\"6. Hướng điều trị và các chế độ tiếp theo\">\n          <div dangerouslySetInnerHTML={{ __html: direction_of_treatment }} className=\"whitespace-pre-line\"></div>\n        </Item>\n        <Item label=\"Dịch vụ\">\n          {\n            services?.map((s, i) => (\n              <div key={i}>{s.name || s.id}</div>\n            ))\n          }\n        </Item>\n        <Item label=\"Tệp đính kèm\">\n          {\n            attachments?.map((a, i) => (\n              <img src={a.url} key={i} style={{width: 200}} />\n            ))\n          }\n        </Item>\n      </Descriptions>\n    </div>\n  )\n}\n\nexport default EmrDesc;","import { Empty, PageHeader, Spin, Tabs } from 'antd';\nimport EmrDesc from 'components/EmrDesc/EmrDesc';\nimport React, { useState, useEffect } from 'react';\nimport { useHistory, useRouteMatch } from 'react-router-dom';\nimport { getEMRHistoryAPI } from 'services/user/emr.service';\n\nconst EmrDetailsPage = props => {\n\n  const { goBack } = useHistory();\n  const { params } = useRouteMatch();\n\n  const [emrHistory, setEmrHistory] = useState([]);\n  const [emrLoading, setEmrLoading] = useState(false);\n  const [selectedTab, setSelectedTab] = useState(\"\");\n\n  async function getEmrHistory(emrId) {\n    try {\n      setEmrLoading(true);\n      const res = await getEMRHistoryAPI(emrId);\n      const data = res.data.data;\n      setEmrHistory(data);\n      setSelectedTab(data.completed_at || data.updated_at || data.created_at);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setEmrLoading(false);\n    }\n  }\n\n  async function getInitialData() {\n    const emrId = params.emrId;\n    return await Promise.all([\n      getEmrHistory(emrId)\n    ])\n  }\n\n  useEffect(() => {\n    getInitialData();\n  }, []);\n\n  return (\n    <div className=\"bg-white p-3\">\n      <PageHeader onBack={goBack} title=\"Chi tiết bệnh án\" />\n      {\n        emrLoading ? <Spin spinning={true} /> :\n          emrHistory.length > 0 ?\n            <Tabs defaultActiveKey={selectedTab} onChange={(val) => setSelectedTab(val)}>\n              {\n                emrHistory.map(h => {\n                  return <Tabs.TabPane key={h.completed_at || h.updated_at || h.created_at} tab={h.completed_at || h.updated_at || h.created_at}>\n                    <EmrDesc emr={h} />\n                  </Tabs.TabPane>\n                })\n              }\n            </Tabs>\n            :\n            <Empty />\n      }\n    </div>\n  )\n}\n\nexport default EmrDetailsPage;","import React from 'react';\nimport { Link, Redirect, Switch, Route, useRouteMatch, useLocation } from 'react-router-dom';\nimport { Layout, Menu } from 'antd';\nimport {\n  IdcardOutlined,\n  CalendarOutlined,\n  ContainerOutlined,\n  ProfileOutlined,\n  NotificationOutlined} from '@ant-design/icons';\nimport NotificationPage from 'pages/common/notification/notification';\nimport VisitPage from 'pages/common/visit/visit';\nimport PatientPage from 'pages/common/patient/patient';\nimport AppointmentPage from 'pages/common/appointment/apointment';\nimport withPrivateRoute from 'HOCs/withPrivateRoute';\nimport CustomHeader from 'components/Header';\nimport ExaminationPage from 'pages/common/examination/examination';\nimport ProfilePage from 'pages/common/profile/profile';\nimport PatientDetails from 'pages/common/patient/patient-details';\nimport EmrDetailsPage from 'pages/common/patient/emr-details';\n\nconst { Sider, Content } = Layout;\n\nconst PhysicianLayout = () => {\n  const match = useRouteMatch();\n  const location = useLocation();\n  const path = match.path;\n\n  return (\n    <Layout>\n      <CustomHeader />\n      <Layout>\n        <Sider width={200} className=\"site-layout-background\">\n          <Menu\n            mode=\"inline\"\n            style={{ height: '100%', borderRight: 0 }}\n            selectedKeys={[location.pathname]}\n          >\n            <Menu.Item key=\"/physician/visit\" icon={<ContainerOutlined />}>\n              <Link to=\"/physician/visit\">Khám bệnh</Link>\n            </Menu.Item>\n            <Menu.Item key=\"/physician/patient\" icon={<IdcardOutlined />}>\n              <Link to=\"/physician/patient\">Bệnh nhân</Link>\n            </Menu.Item>\n            <Menu.Item key=\"/physician/appointment\" icon={<CalendarOutlined />}>\n              <Link to=\"/physician/appointment\">Lịch hẹn</Link>\n            </Menu.Item>\n            <Menu.Item key=\"/physician/profile\" icon={<ProfileOutlined />}>\n              <Link to=\"/physician/profile\">Hồ sơ</Link>\n            </Menu.Item>\n          </Menu>\n        </Sider>\n        <Layout style={{ padding: '0 24px 24px' }}>\n          <Content\n            className=\"site-layout-background\"\n            style={{\n              padding: 24,\n              margin: 0,\n              minHeight: 280,\n            }}\n          >\n            <Switch>\n\n              {/* Visit */}\n              <Route path={`${path}/visit`} exact>\n                <VisitPage />\n              </Route>\n\n              <Route path={`${path}/visit/:emr`}>\n                <ExaminationPage />\n              </Route>\n\n              {/* Patient */}\n              <Route path={`${path}/patient`} exact>\n                <PatientPage />\n              </Route>\n              \n              <Route path={`${path}/patient/:patientId`} exact>\n                <PatientDetails />\n              </Route>\n\n              <Route path={`${path}/patient/:patientId/:emrId`}>\n                <EmrDetailsPage />\n              </Route>\n\n              {/* Appointment */}\n              <Route path={`${path}/appointment`}>\n                <AppointmentPage />\n              </Route>\n\n              <Route path={`${path}/profile`}>\n                <ProfilePage />\n              </Route>\n\n              {/* Fallback */}\n              <Redirect to={`/physician/visit`} />\n            </Switch>\n          </Content>\n        </Layout>\n      </Layout>\n    </Layout>\n  )\n}\n\nexport default withPrivateRoute(PhysicianLayout, ['physician']);","import React from 'react';\nimport { Form, Input, Row, Col, DatePicker, Radio } from 'antd';\nimport { requiredRule } from 'constant/formRules';\n\nconst PatientForm = props => {\n  const { form, onFinish } = props;\n\n  return (\n    <Form\n      layout=\"vertical\"\n      onFinish={onFinish}\n      form={form}>\n      <Row>\n        <Col flex={1}>\n          <Form.Item label=\"Họ\" name=\"first_name\" rules={[requiredRule()]}>\n            <Input autoFocus />\n          </Form.Item>\n        </Col>\n        <Col flex=\"0 0 15px\"></Col>\n        <Col flex={1}>\n          <Form.Item label=\"Tên\" name=\"last_name\" rules={[requiredRule()]}>\n            <Input />\n          </Form.Item>\n        </Col>\n      </Row>\n      <Form.Item name=\"phone\" label=\"Số điện thoại\" rules={[requiredRule()]}>\n        <Input />\n      </Form.Item>\n      <Row>\n        <Col>\n          <Form.Item name=\"DOB\" label=\"Ngày sinh\" rules={[requiredRule()]}>\n            <DatePicker placeholder=\"Chọn ngày\" />\n          </Form.Item>\n\n        </Col>\n        <Col flex=\"0 0 15px\"></Col>\n        <Col flex={1}>\n          <Form.Item name=\"gender\" label=\"Giới tính\" rules={[requiredRule()]}>\n            <Radio.Group>\n              <Radio value=\"Nam\">Nam</Radio>\n              <Radio value=\"Nữ\">Nữ</Radio>\n              <Radio value=\"Khác\">Khác</Radio>\n            </Radio.Group>\n          </Form.Item>\n        </Col>\n      </Row>\n\n      <Row gutter={15}>\n        <Col flex=\"0 0 50%\">\n          <Form.Item name=\"job\" label=\"Nghề nghiệp\">\n            <Input />\n          </Form.Item>\n        </Col>\n        <Col flex=\"0 0 50%\">\n          <Form.Item name=\"workplace\" label=\"Nơi làm việc\">\n            <Input />\n          </Form.Item>\n        </Col>\n      </Row>\n\n      <Row gutter={15}>\n        <Col flex=\"0 0 50%\">\n          <Form.Item name=\"ethnicity\" label=\"Dân tộc\">\n            <Input />\n          </Form.Item>\n        </Col>\n        <Col flex=\"0 0 50%\">\n          <Form.Item name=\"expatriate\" label=\"Ngoại kiều\">\n            <Input />\n          </Form.Item>\n        </Col>\n      </Row>\n\n      <Form.Item label=\"Họ và tên người nhà\" name=\"family_member_name\">\n        <Input />\n      </Form.Item>\n\n      <Form.Item label=\"Địa chỉ\" name=\"address\">\n        <Input.TextArea autoSize={{ minRows: 2 }} />\n      </Form.Item>\n\n      <Form.Item label=\"Địa chỉ người nhà\" name=\"family_member_address\">\n        <Input.TextArea autoSize={{ minRows: 2 }} />\n      </Form.Item>\n\n    </Form>\n  )\n}\n\nexport default PatientForm;","import React, { useState, useEffect } from 'react';\nimport { Input, Table, Form, PageHeader, Button, Modal, Menu, Dropdown, message } from 'antd';\nimport { PlusOutlined } from '@ant-design/icons';\nimport PatientForm from 'forms/PatientForm/PatientForm';\n\n// APIs\nimport { getRoomAPI } from 'services/user/room.service';\nimport { createVisitAPI } from 'services/user/visit.service';\nimport { listAllPatientsAPI, createPatientAPI } from 'services/user/patient.service';\nimport { addBlockChainUserAPI } from 'services/user/user.service';\n\nconst ReceivePage = props => {\n\n  const [patientData, setPatientData] = useState(null);\n  const [patientLoading, setPatientLoading] = useState(false);\n  const [rooms, setRooms] = useState(null);\n  const [roomLoading, setRoomLoading] = useState(false);\n  const [roomModalVisible, setRoomModalVisible] = useState(false);\n  const [isCreatingPatient, setCreatingPatient] = useState(false);\n  const [modalVisible, setModalVisible] = useState(false);\n  const [isCreatingVisit, setCreatingVisit] = useState(false);\n  const [patientForm] = Form.useForm();\n\n  function renderMenu(patient) {\n    return (\n      <Menu>\n        {\n          rooms?.map(room => (\n            <Menu.Item key={room.id} onClick={() => handleCreateVisit(patient, room)}>Khoa {room.name}</Menu.Item>\n          ))\n        }\n      </Menu>\n    )\n  }\n\n  const tableColumns = [\n    {\n      title: '#',\n      key: 'index',\n      render: (text, record, index) => index + 1\n    },\n    {\n      title: 'Họ và tên',\n      key: 'fullname',\n      render: (text, { first_name, last_name }) => first_name + ' ' + last_name\n    },\n    {\n      title: 'Giới tính',\n      key: 'gender',\n      dataIndex: 'gender'\n    },\n    {\n      title: 'Ngày sinh',\n      key: 'DOB',\n      dataIndex: 'DOB'\n    },\n    {\n      title: 'Điện thoại',\n      key: 'phone',\n      dataIndex: 'phone'\n    },\n    {\n      title: 'Hành động',\n      key: 'action',\n      render: (text, record) => (\n        <Dropdown overlay={renderMenu(record)} overlayStyle={{ minWidth: 200 }} trigger=\"click\">\n          <Button>Tiếp nhận</Button>\n        </Dropdown>\n      )\n    }\n  ]\n\n\n  //\n  // Load initial data\n  //\n  async function listAllPatients(search) {\n    try {\n      setPatientLoading(true);\n      const patientResponse = await listAllPatientsAPI(search);\n      setPatientData(patientResponse.data);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setPatientLoading(false);\n    }\n  }\n\n  async function getRooms() {\n    try {\n      setRoomLoading(true);\n      const roomResponse = await getRoomAPI();\n      setRooms(roomResponse.data);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setRoomLoading(false);\n    }\n  }\n\n  async function getInitialData() {\n    await Promise.all([\n      listAllPatients(),\n      getRooms()\n    ])\n  }\n\n  useEffect(() => {\n    getInitialData();\n  }, []);\n\n  //\n  // Component functions\n  //\n  function handleAddClick() {\n    setModalVisible(true);\n  }\n\n  function handleCloseModal() {\n    setModalVisible(false);\n  }\n\n  function handleSearch(values) {\n    listAllPatients(values.search);\n  }\n\n  async function handleSubmit() {\n    try {\n      setCreatingPatient(true);\n      const values = await patientForm.validateFields();\n      values.DOB = values.DOB.format('YYYY-MM-DD');\n      const createResponse = await createPatientAPI(values);\n      const userId = createResponse.data.id;\n      await addBlockChainUserAPI(userId, \"patient\");\n      message.success(\"Tạo bệnh nhân thành công\");\n      setModalVisible(false);\n      await listAllPatients();\n      // await addBlockChainUserAPI(\"4f31587e-40cc-43a9-a3bf-a7e5fa731955\", \"patient\");\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setCreatingPatient(false);\n    }\n  }\n\n  async function handleCreateVisit(patient, room) {\n    try {\n      setCreatingVisit(true);\n      await createVisitAPI({ patientId: patient.id, roomId: room.id });\n      message.success(`Đã tiếp nhận bệnh nhân ${patient.first_name} ${patient.last_name} vào ${room.name}`);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setCreatingVisit(false);\n    }\n  }\n\n  return (\n    <>\n      <PageHeader\n        title=\"Tiếp nhận bệnh nhân\"\n        className=\"pl-0\"\n        extra={<Button type=\"primary\" onClick={handleAddClick} icon={<PlusOutlined />}>Bệnh nhân mới</Button>} />\n\n      <Form onFinish={handleSearch}>\n        <Form.Item name=\"search\">\n          <Input.Search size=\"large\" placeholder=\"Tìm kiếm bệnh nhân theo tên/SĐT\" />\n        </Form.Item>\n      </Form>\n      <Table\n        rowKey=\"id\"\n        dataSource={patientData?.results}\n        loading={patientLoading || isCreatingVisit}\n        columns={tableColumns} />\n      <Modal\n        visible={modalVisible}\n        confirmLoading={isCreatingPatient}\n        onCancel={handleCloseModal}\n        onOk={handleSubmit}\n        destroyOnClose={true}\n        title=\"Bệnh nhân mới\">\n        <PatientForm form={patientForm} onFinish={handleSubmit} />\n      </Modal>\n    </>\n  )\n}\n\nexport default ReceivePage;","import React from 'react';\nimport { Link, Redirect, Switch, Route, useRouteMatch, useLocation } from 'react-router-dom';\nimport { Layout, Menu } from 'antd';\nimport {\n  UserOutlined,\n  DashboardOutlined,\n  CalendarOutlined,\n} from '@ant-design/icons';\nimport AppointmentPage from 'pages/common/appointment/apointment';\nimport withPrivateRoute from 'HOCs/withPrivateRoute';\nimport CustomHeader from 'components/Header';\nimport ReceivePage from 'pages/receptionist/receive';\nimport ProfilePage from 'pages/common/profile/profile';\n\nconst { Sider, Content } = Layout;\n\nconst ReceptionistLayout = () => {\n  const match = useRouteMatch();\n  const location = useLocation();\n  const path = match.path;\n\n  return (\n    <Layout>\n      <CustomHeader />\n      <Layout>\n        <Sider width={200} className=\"site-layout-background\">\n          <Menu\n            mode=\"inline\"\n            style={{ height: '100%', borderRight: 0 }}\n            selectedKeys={[location.pathname]}\n          >\n            <Menu.Item key=\"/receptionist/receive\" icon={<DashboardOutlined />}>\n              <Link to=\"/receptionist/receive\">Tiếp nhận bệnh</Link>\n            </Menu.Item>\n            <Menu.Item key=\"/receptionist/appointment\" icon={<CalendarOutlined />}>\n              <Link to=\"/receptionist/appointment\">Lịch hẹn</Link>\n            </Menu.Item>\n\n            <Menu.Item key=\"/receptionist/profile\" icon={<UserOutlined />}>\n              <Link to=\"/receptionist/profile\">Hồ sơ</Link>\n            </Menu.Item>\n          </Menu>\n        </Sider>\n        <Layout style={{ padding: '0 24px 24px' }}>\n          <Content\n            className=\"site-layout-background\"\n            style={{\n              padding: 24,\n              margin: 0,\n              minHeight: 280,\n            }}\n          >\n            <Switch>\n              {/* Dashboard */}\n              <Route path={`${path}/receive`}>\n                <ReceivePage />\n              </Route>\n\n              {/* Appointment */}\n              <Route path={`${path}/appointment`}>\n                <AppointmentPage />\n              </Route>\n\n              <Route path={`${path}/profile`}>\n                <ProfilePage />\n              </Route>\n\n              {/* Fallback */}\n              <Redirect to={`/receptionist/receive`} />\n            </Switch>\n          </Content>\n        </Layout>\n      </Layout>\n    </Layout>\n  )\n}\n\nexport default withPrivateRoute(ReceptionistLayout, ['receptionist']);","import React from 'react';\n\nconst EmailIcon = () => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" id=\"Capa_1\" enableBackground=\"new 0 0 512 512\" height=\"50\" viewBox=\"0 0 512 512\" width=\"50\"><g><g><path d=\"m497 15.243h-482c-8.284 0-15 6.716-15 15v330c0 8.284 6.716 15 15 15h121.019c-.006.505-.019 1.008-.019 1.515 0 66.168 53.832 120 120 120s120-53.832 120-120c0-.506-.013-1.01-.019-1.515h121.019c8.284 0 15-6.716 15-15v-330c0-8.285-6.716-15-15-15zm-43.122 30-197.878 147.792-197.878-147.792zm-197.878 421.514c-49.626 0-90-40.374-90-90s40.374-90 90-90 90 40.374 90 90-40.374 90-90 90zm226-121.514h-110.208c-13.876-50.929-60.527-88.485-115.792-88.485-55.266 0-101.916 37.557-115.792 88.485h-110.208v-283.56l217.024 162.092c2.662 1.988 5.819 2.982 8.976 2.982s6.314-.994 8.976-2.982l217.024-162.092zm-191.606 5.908-49.394 49.393-19.394-19.393c-5.857-5.858-15.355-5.858-21.213 0s-5.858 15.355 0 21.213l30 30c2.929 2.929 6.768 4.394 10.606 4.394s7.678-1.464 10.606-4.394l60-60c5.858-5.858 5.858-15.355 0-21.213-5.856-5.859-15.354-5.859-21.211 0z\" fill=\"currentColor\" /></g></g></svg>\n)\n\nexport default EmailIcon;","import React, { useState, useEffect } from 'react';\nimport EmailIcon from 'components/Icons/EmailIcon';\nimport Icon from '@ant-design/icons';\nimport { Alert, Button, Space, Spin } from 'antd';\nimport { Link, useLocation } from 'react-router-dom';\nimport { verifyEmailAPI } from 'services/auth/auth.service';\n\nconst VerifyPage = (props) => {\n\n  const [loading, setLoading] = useState(false);\n  const [success, setSuccess] = useState(false);\n  const [error, setError] = useState(null);\n  const { search } = useLocation();\n  const urlSearchParams = new URLSearchParams(search);\n  const token = urlSearchParams.get('token');\n\n  function isValidToken(token = \"\") {\n    const isValid = /[A-Za-z0-9-_=]+\\.[A-Za-z0-9-_=]+\\.?[A-Za-z0-9-_.+/=]*/.test(token);\n    console.log(isValid);\n    return isValid;\n  }\n\n  async function verifyEmail(token) {\n    try {\n      setLoading(true);\n      await verifyEmailAPI(token);\n      setSuccess(true);\n    } catch (error) {\n      setError(error);\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  useEffect(() => {\n    if (token && token.length > 0 && isValidToken(token)) {\n      verifyEmail(token);\n    }\n  }, [search, token]);\n\n  return (\n    <main className=\"login-page\">\n      <div className=\"auth\">\n        <div className=\"auth__header text-center\">\n          <Icon component={EmailIcon} />\n          <h1 className=\"text-3xl\">Xác thực email</h1>\n        </div>\n\n        {\n          loading &&\n          <Space align=\"center\" className=\"flex text-center justify-center\">\n            <Spin />\n            <span>Vui lòng đợi</span>\n          </Space>\n        }\n\n        {\n          success &&\n          <Alert\n            showIcon\n            type=\"success\"\n            message=\"Xác thực địa chỉ email thành công\"\n          />\n        }\n\n        {\n          !isValidToken(token) &&\n          <Alert\n            showIcon\n            type=\"error\"\n            message=\"URL không hợp lệ\"\n          />\n        }\n\n        {\n          !!error &&\n          <Alert\n            showIcon\n            type=\"error\"\n            message={error?.response?.data.message || \"Có lỗi khi xác thực email, vui lòng thử lại\"}\n          />\n        }\n\n        <div className=\"text-center mt-5\">\n          <Button type=\"link\">\n            <Link to=\"/\">Về trang chủ</Link>\n          </Button>\n        </div>\n      </div>\n    </main>\n  )\n}\n\nexport default VerifyPage;","import { NODE_URL } from \"constant/apiUrl\";\nimport axios from 'axios';\n\n\nconst endpointPrefix = `${NODE_URL}/api/patient/emrs`;\n\nexport function listAllEmrs() {\n  const url = `${endpointPrefix}/`;\n  return axios.get(url);\n}\n\nexport function getEMRHistoryAPI(emrId) {\n  const url = `${endpointPrefix}/${emrId}`;\n  return axios.get(url);\n}","import { Button, Space, Table } from 'antd';\nimport React, { useState, useEffect } from 'react';\nimport { listAllEmrs } from 'services/patient/emr.service';\nimport moment from 'moment';\nimport Circle from 'components/Circle/Circle';\nimport { Link, useRouteMatch } from 'react-router-dom';\nimport { EyeOutlined } from '@ant-design/icons';\n\nconst PatientEmrPage = props => {\n\n  const { url } = useRouteMatch();\n  const [emrs, setEmrs] = useState(null);\n  const [emrLoading, setEmrLoading] = useState(false);\n\n  const tableColumns = [\n    {\n      title: '#',\n      key: '#',\n      render: (_, __, index) => index + 1\n    },\n    {\n      title: 'Ngày khám bệnh',\n      key: 'date',\n      render: (_, row) => moment(row.Record.created_at).format(\"DD/MM/YYYY\")\n    },\n    {\n      title: 'Bác sĩ khám bệnh',\n      key: 'physician',\n      render: (_, row) => row.Record.physician.first_name + \" \" + row.Record.physician.last_name\n    },\n    {\n      title: 'Khoa khám',\n      key: 'room',\n      render: (_, row) => \"Khoa \" + row.Record.room.name\n    },\n    {\n      title: 'Trạng thái',\n      key: 'status',\n      render: (_, row) => <div className=\"flex items-center\">\n        <Circle color={row.Record.completed_at !== null ? 'success' : ''} />\n        <span className=\"ml-2\">{row.Record.completed_at !== null ? ' Đã đóng' : ' Chưa đóng'}</span>\n      </div>\n    },\n    {\n      title: 'Hành động',\n      key: 'actions',\n      render: (_, row) => <Space>\n        <Link to={`${url}/${row.Key}`}>\n          <Button icon={<EyeOutlined />}>Xem</Button>\n        </Link>\n      </Space>\n    }\n  ]\n\n  async function getEmrs() {\n    try {\n      setEmrLoading(true);\n      const res = await listAllEmrs();\n      const data = res.data.data;\n      setEmrs(data);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setEmrLoading(false);\n    }\n  }\n\n  async function getInitialData() {\n    return await Promise.all([\n      getEmrs()\n    ])\n  }\n\n  useEffect(() => {\n    getInitialData();\n  }, [])\n\n  return (\n    <>\n      <h1 className=\"text-xl\">Lịch sử khám bệnh</h1>\n      <Table rowKey=\"Key\" dataSource={emrs} loading={emrLoading} columns={tableColumns} />\n    </>\n  )\n}\n\nexport default PatientEmrPage;","import { Empty, PageHeader, Spin, Tabs } from 'antd';\nimport EmrDesc from 'components/EmrDesc/EmrDesc';\nimport React, { useState, useEffect } from 'react';\nimport { useHistory, useRouteMatch } from 'react-router-dom';\nimport { getEMRHistoryAPI } from 'services/patient/emr.service';\n\nconst PatientEmrDetailsPage = props => {\n\n  const { goBack } = useHistory();\n  const { params } = useRouteMatch();\n\n  const [emrHistory, setEmrHistory] = useState([]);\n  const [emrLoading, setEmrLoading] = useState(false);\n  const [selectedTab, setSelectedTab] = useState(\"\");\n\n  async function getEmrHistory(emrId) {\n    try {\n      setEmrLoading(true);\n      const res = await getEMRHistoryAPI(emrId);\n      const data = res.data.data;\n      setEmrHistory(data);\n      setSelectedTab(data.completed_at || data.updated_at || data.created_at);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setEmrLoading(false);\n    }\n  }\n\n  async function getInitialData() {\n    const emrId = params.emrId;\n    return await Promise.all([\n      getEmrHistory(emrId)\n    ])\n  }\n\n  useEffect(() => {\n    getInitialData();\n  }, []);\n\n  return (\n    <div className=\"bg-white p-3\">\n      <PageHeader onBack={goBack} title=\"Chi tiết bệnh án\" />\n      {\n        emrLoading ? <Spin spinning={true} /> :\n          emrHistory.length > 0 ?\n            <Tabs defaultActiveKey={selectedTab} onChange={(val) => setSelectedTab(val)}>\n              {\n                emrHistory.map(h => {\n                  return <Tabs.TabPane key={h.completed_at || h.updated_at || h.created_at} tab={h.completed_at || h.updated_at || h.created_at}>\n                    <EmrDesc emr={h} />\n                  </Tabs.TabPane>\n                })\n              }\n            </Tabs>\n            :\n            <Empty />\n      }\n    </div>\n  )\n}\n\nexport default PatientEmrDetailsPage;","import React from 'react';\nimport { Link, Redirect, Switch, Route, useRouteMatch, useLocation } from 'react-router-dom';\nimport { Layout, Menu } from 'antd';\nimport {\n  UserOutlined,\n  DashboardOutlined,\n  CalendarOutlined,\n} from '@ant-design/icons';\nimport withPrivateRoute from 'HOCs/withPrivateRoute';\nimport CustomHeader from 'components/Header';\nimport ProfilePage from 'pages/common/profile/profile';\nimport PatientEmrPage from 'pages/patient/emr';\nimport PatientEmrDetailsPage from 'pages/patient/patient-emr-details';\n\nconst { Sider, Content } = Layout;\n\nconst PatientLayout = () => {\n  const match = useRouteMatch();\n  const location = useLocation();\n  const path = match.path;\n\n  return (\n    <Layout>\n      <CustomHeader />\n      <Layout>\n        <Sider width={200} className=\"site-layout-background\">\n          <Menu\n            mode=\"inline\"\n            style={{ height: '100%', borderRight: 0 }}\n            selectedKeys={[location.pathname]}\n          >\n            <Menu.Item key=\"/patient/emr\" icon={<DashboardOutlined />}>\n              <Link to=\"/patient/emr\">Bệnh án</Link>\n            </Menu.Item>\n\n            <Menu.Item key=\"/patient/profile\" icon={<UserOutlined />}>\n              <Link to=\"/patient/profile\">Hồ sơ</Link>\n            </Menu.Item>\n          </Menu>\n        </Sider>\n        <Layout style={{ padding: '0 24px 24px' }}>\n          <Content\n            className=\"site-layout-background\"\n            style={{\n              padding: 24,\n              margin: 0,\n              minHeight: 280,\n            }}\n          >\n            <Switch>\n              {/* Dashboard */}\n              <Route path={`${path}/emr`} exact>\n                <PatientEmrPage />\n              </Route>\n\n              <Route path={`${path}/emr/:emrId`}>\n                <PatientEmrDetailsPage />\n              </Route>\n\n              <Route path={`${path}/profile`}>\n                <ProfilePage />\n              </Route>\n\n              {/* Fallback */}\n              <Redirect to={`/patient/emr`} />\n            </Switch>\n          </Content>\n        </Layout>\n      </Layout>\n    </Layout>\n  )\n}\n\nexport default withPrivateRoute(PatientLayout, ['patient']);","import React, { useEffect } from 'react';\nimport { Route, HashRouter as Router, Switch, Redirect  } from 'react-router-dom';\nimport LoginPage from 'pages/login';\nimport Cookie from 'js-cookie';\nimport jwtDecode from 'jwt-decode';\nimport AdminLayout from 'layouts/AdminLayout/AdminLayout';\nimport PhysicianLayout from 'layouts/PhysicianLayout/PhysicianLayout';\nimport ReceptionistLayout from 'layouts/ReceptionistLayout/ReceptionistLayout';\nimport setupInterceptor from 'utils/interceptor';\nimport { useDispatch } from 'react-redux';\nimport { getProfileAction } from 'store/actions/user.action';\nimport { refreshToken } from 'services/auth/auth.service';\nimport moment from 'moment';\nimport 'moment/locale/vi';\n\n// import \"normalize.css/normalize.css\";\n// import \"@blueprintjs/core/lib/css/blueprint.css\";\n// import \"@blueprintjs/icons/lib/css/blueprint-icons.css\";\nimport 'antd/dist/antd.css';\nimport 'react-quill/dist/quill.snow.css';\n// import 'react-quill/dist/quill.bubble.css';\n// import 'react-quill/dist/quill.core.css';\nimport 'styles/main.scss';\nimport VerifyPage from 'pages/verify-email';\nimport PatientLayout from 'layouts/PatientLayout/PatientLayout';\n\nmoment.locale('vi');\n\n\nfunction App() {\n\n  setupInterceptor();\n\n  const dispatch = useDispatch();\n\n  function fetchProfile() {\n    try {\n      const token = Cookie.get('EMR_token');\n      if (token && jwtDecode(token)) {\n        dispatch(getProfileAction());\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async function checkRefresh() {\n    try {\n      const token = Cookie.get('EMR_token');\n      const refresh = Cookie.get('EMR_refresh');\n      if (!token && refresh) {\n        const newTokenReponse = await refreshToken(refresh);\n        const newToken = newTokenReponse.data;\n        Cookie.set('EMR_token', newToken.access_token, { expires: 3/24 });\n      }\n      fetchProfile();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  useEffect(() => {\n    checkRefresh();\n  });\n  \n  return (\n    <div className=\"app\">\n      <Router>\n        <Switch>\n          <Route path=\"/login\" component={LoginPage} />\n          <Route path=\"/verify-email\" component={VerifyPage} />\n\n          <Route path=\"/admin\" component={AdminLayout} />\n          <Route path=\"/physician\" component={PhysicianLayout} />\n          <Route path=\"/receptionist\" component={ReceptionistLayout} />\n          <Route path=\"/patient\" component={PatientLayout} />\n\n          <Redirect to=\"/login\" />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import axios from 'axios';\nimport { message } from 'antd';\nimport Cookie from 'js-cookie';\nimport * as AuthService from 'services/auth/auth.service';\nimport jwtDecode from 'jwt-decode';\nimport { API_URL } from 'constant/apiUrl';\n\nexport default function setupInterceptor() {\n  axios.interceptors.request.use((config) => {\n\n    if (config.method === 'delete') {\n      message.loading('Đang thực hiện');\n    }\n\n    try {\n      const token = Cookie.get('EMR_token');\n      if (token && jwtDecode(token)) {\n        config.headers['Authorization'] = `Bearer ${token}`;\n      }\n    } catch (error) {\n      console.log({ error });\n    }\n    return config;\n  }, (error) => Promise.reject(error));\n\n  axios.interceptors.response.use(((res) => {\n    return res;\n  }), async (error) => {\n    const originalRequest = error.config;\n\n    if (error.response.status === 401 && !originalRequest._retry && originalRequest.url !== `${API_URL}/auth/refresh-token/`) {\n      Cookie.remove(\"EMR_token\");\n\n      originalRequest._retry = true;\n\n      let refreshToken = Cookie.get('EMR_refresh');\n\n      if (refreshToken && refreshToken.length > 0) {\n        try {\n          const refreshResponse = await AuthService.refreshToken(refreshToken);\n          const newToken = refreshResponse.data.access_token;\n          Cookie.set('EMR_token', newToken);\n\n          const config = error.config;\n          config.headers['Authorization'] = `Bearer ${newToken}`;\n\n          return new Promise((resolve, reject) => {\n            return axios.request(config)\n              .then(res => resolve(res))\n              .catch(error => reject(error))\n          })\n        } catch (error) {\n          Cookie.remove(\"EMR_refresh\");\n          return Promise.reject(error);\n        }\n      }\n    } else {\n      // Do not show error alert on veirfy email page because it already have its own error messages\n      if (!originalRequest.url.includes('/api/auth/verify-email')) {\n        const errorMessage = error.response?.data.message || \"Unexpected error occurred\";\n        message.error(errorMessage);\n      }\n\n    }\n\n    return Promise.reject(error);\n  })\n}","import * as actionTypes from '../actionTypes';\n\nconst initialState = {\n  loginLoading: false\n}\n\nexport default function authReducer (state = initialState, action) {\n  switch(action.type) {\n    case actionTypes.LOGIN_PENDING:\n      return {\n        ...state,\n        loginLoading: true\n      }\n\n    case actionTypes.LOGIN_SUCCESS:\n      return {\n        ...state,\n        loginLoading: false\n      }\n\n    case actionTypes.LOGIN_FAILURE:\n      return {\n        ...state,\n        loginLoading: false\n      }\n\n    default:\n      return {\n        ...state\n      }\n  }\n}","import * as actionTypes from '../actionTypes';\n\nconst initialState = {\n  diseaseCategories: [],\n  createLoading: false,\n  fetchLoading: false,\n  detailsLoading: false,\n  updateLoading: false,\n  deleteLoading: false\n}\n\nexport default function diseaseCategoryReducer(state = initialState, action) {\n  switch (action.type) {\n    // fetch all\n    case actionTypes.FETCH_DISEASE_CATEGORIES_PENDING:\n      return {\n        ...state,\n        fetchLoading: true\n      }\n    case actionTypes.FETCH_DISEASE_CATEGORIES_SUCCESS:\n      return {\n        ...state,\n        fetchLoading: false,\n        diseaseCategories: action.payload\n      }\n    case actionTypes.FETCH_DISEASE_CATEGORIES_FAILURE:\n      return {\n        ...state,\n        fetchLoading: false,\n      }\n    // Default\n    default:\n      return {\n        ...state\n      }\n  }\n}","import * as actionTypes from '../actionTypes';\n\nconst initialState = {\n  diseases: null,\n  createLoading: false,\n  fetchLoading: false,\n  detailsLoading: false,\n  updateLoading: false,\n  deleteLoading: false\n}\n\nexport default function diseaseReducer(state = initialState, action) {\n  switch (action.type) {\n    // fetch all\n    case actionTypes.FETCH_DISEASES_PENDING:\n      return {\n        ...state,\n        fetchLoading: true\n      }\n    case actionTypes.FETCH_DISEASES_SUCCESS:\n      return {\n        ...state,\n        fetchLoading: false,\n        diseases: action.payload\n      }\n    case actionTypes.FETCH_DISEASES_FAILURE:\n      return {\n        ...state,\n        fetchLoading: false,\n      }\n    // Default\n    default:\n      return {\n        ...state\n      }\n  }\n}","import * as actionTypes from '../actionTypes';\n\nconst initialState = {\n  drugCategories: null,\n  drugCategoryDetails: null,\n  createLoading: false,\n  fetchLoading: false,\n  detailsLoading: false,\n  updateLoading: false,\n  deleteLoading: false\n}\n\nexport default function drugCategoryReducer(state = initialState, action) {\n  switch (action.type) {\n    // Create drug category\n    case actionTypes.CREATE_DRUG_CATEGORY_PENDING:\n      return {\n        ...state,\n        createLoading: true\n      }\n    case actionTypes.CREATE_DRUG_CATEGORY_SUCCESS:\n    case actionTypes.CREATE_DRUG_CATEGORY_FAILURE:\n      return {\n        ...state,\n        createLoading: false\n      }\n    // Drug categories\n    case actionTypes.FETCH_DRUG_CATEGORIES_PENDING:\n      return {\n        ...state,\n        fetchLoading: true,\n      }\n    case actionTypes.FETCH_DRUG_CATEGORIES_SUCCESS:\n      return {\n        ...state,\n        fetchLoading: false,\n        drugCategories: action.payload\n      }\n    case actionTypes.FETCH_DRUG_CATEGORIES_FAILURE:\n      return {\n        ...state,\n        fetchLoading: false,\n      }\n\n    // Drug category details\n    case actionTypes.FETCH_DRUG_CATEGORY_DETAILS_PENDING:\n      return {\n        ...state,\n        detailsLoading: true,\n      }\n    case actionTypes.FETCH_DRUG_CATEGORY_DETAILS_SUCCESS:\n      return {\n        ...state,\n        drugCategoryDetails: action.payload,\n        detailsLoading: false,\n      }\n    case actionTypes.FETCH_DRUG_CATEGORY_DETAILS_FAILURE:\n      return {\n        ...state,\n        detailsLoading: false,\n      }\n    // Update drug category\n    case actionTypes.UPDATE_DRUG_CATEGORY_PENDING:\n      return {\n        ...state,\n        updateLoading: true\n      }\n    case actionTypes.UPDATE_DRUG_CATEGORY_SUCCESS:\n    case actionTypes.UPDATE_DRUG_CATEGORY_FAILURE:\n      return {\n        ...state,\n        updateLoading: false\n      }\n    // Delete drug category\n    case actionTypes.DELETE_DRUG_CATEGORY_PENDING:\n      return {\n        ...state,\n        deleteLoading: true\n      }\n    case actionTypes.DELETE_DRUG_CATEGORY_SUCCESS:\n    case actionTypes.DELETE_DRUG_CATEGORY_FAILURE:\n      return {\n        ...state,\n        deleteLoading: false\n      }\n    default:\n      return {\n        ...state\n      }\n  }\n}","import * as actionTypes from '../actionTypes';\n\nconst initialState = {\n  user: null,\n  getProfileLoading: false,\n}\n\nexport default function userReducer(state = initialState, action) {\n  switch (action.type) {\n    case actionTypes.GET_PROFILE_PENDING:\n      return {\n        ...state,\n        user: null,\n        getProfileLoading: true\n      }\n    case actionTypes.GET_PROFILE_SUCCESS:\n      return {\n        ...state,\n        user: action.payload,\n        getProfileLoading: false\n      }\n    case actionTypes.GET_PROFILE_FAILURE:\n      return {\n        ...state,\n        user: null,\n        getProfileLoading: false\n      }\n    \n    case actionTypes.LOGOUT:\n      return {\n        ...state,\n        user: null,\n        getProfileLoading: false\n      }\n    default:\n      return { ...state }\n  }\n}","import { combineReducers } from 'redux';\nimport authReducer from './reducers/auth.reducer';\nimport diseaseCategoryReducer from './reducers/disease-category.reducer';\nimport diseaseReducer from './reducers/disease.reducer';\nimport drugCategoryReducer from './reducers/drug-category.reducer';\nimport userReducer from './reducers/user.reducer';\n\nconst rootReducer = combineReducers({\n  userState: userReducer,\n  authState: authReducer,\n  drugCategoryState: drugCategoryReducer,\n  diseaseCategoryState: diseaseCategoryReducer,\n  diseaseState: diseaseReducer\n})\n\nexport default rootReducer;","import { createStore, compose, applyMiddleware } from 'redux';\nimport rootReducer from './rootReducer';\nimport thunk from 'redux-thunk';\n\nconst middlewares = [thunk]\n\nconst composeEnhancers =\n  typeof window === 'object' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : compose;\n\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(...middlewares)));\n\nexport default store;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from 'store/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\nimport { ConfigProvider } from 'antd';\nimport viVN from 'antd/lib/locale/vi_VN';\n\nReactDOM.render(\n  <Provider store={store}>\n    <ConfigProvider locale={viVN}>\n      <App />\n    </ConfigProvider>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}