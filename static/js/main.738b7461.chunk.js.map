{"version":3,"sources":["components/Icons/LoginIcon.tsx","forms/LoginForm/LoginForm.tsx","pages/login.tsx","pages/admin/dashboard.tsx","pages/common/drug/drug-category.tsx","pages/common/drug/drug-unit.tsx","pages/common/drug/drug.tsx","pages/common/drug/drug-instruction.tsx","layouts/AdminLayout/AdminLayout.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["LoginIcon","width","height","xmlns","xmlnsXlink","version","id","x","y","viewBox","fill","xmlSpace","cx","cy","r","d","LoginForm","props","history","useHistory","className","layout","autoComplete","onFinish","values","console","log","push","Icon","component","Item","label","name","type","Password","to","block","size","htmlType","LoginPage","AdminDashboard","DrugCategoryPage","DrugUnitPage","DrugPage","DrugInstructionPage","Header","Layout","Sider","Content","SubMenu","Menu","AdminLayout","Divider","path","useRouteMatch","style","backgroundColor","ghost","icon","UserOutlined","LogoutOutlined","mode","borderRight","key","DashboardTwoTone","MedicineBoxTwoTone","title","BugTwoTone","DollarTwoTone","IdcardTwoTone","ClockCircleTwoTone","AppstoreTwoTone","CalendarTwoTone","ContainerTwoTone","SettingTwoTone","padding","margin","minHeight","exact","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.738b7461.chunk.js","sourcesContent":["import React from 'react';\n\nconst LoginIcon = () => (\n  <svg width=\"50\" height=\"50\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" version=\"1.1\" id=\"Capa_1\" x=\"0px\" y=\"0px\" viewBox=\"0 0 512.002 512.002\" fill=\"currentColor\" xmlSpace=\"preserve\">\n    <g>\n      <g>\n        <g>\n          <circle cx=\"338\" cy=\"346.001\" r=\"20\" />\n          <path d=\"M238,472.001H80c-22.056,0-40-17.944-40-40v-164c0-22.056,17.944-40,40-40h288c22.056,0,40,17.944,40,40v40     c0,11.046,8.954,20,20,20c11.046,0,20-8.954,20-20v-40c0-44.112-35.888-80-80-80h-24.037v-70.534     c0-64.771-53.832-117.466-120-117.466s-120,52.695-120,117.466v70.534H80c-44.112,0-80,35.888-80,80v164     c0,44.112,35.888,80,80,80h158c11.046,0,20-8.954,20-20S249.046,472.001,238,472.001z M143.963,117.467     c0-42.715,35.888-77.466,80-77.466s80,34.751,80,77.466v70.534h-160V117.467z\" />\n          <path d=\"M503.643,325.739c-8.982-6.431-21.477-4.362-27.904,4.62l-98.581,137.7c-2.692,3.122-6.066,3.796-7.874,3.916     c-1.854,0.123-5.424-0.112-8.567-3.061l-63.708-62.171c-7.906-7.716-20.568-7.559-28.282,0.345     c-7.715,7.905-7.561,20.567,0.345,28.282l63.82,62.281c0.06,0.058,0.119,0.116,0.18,0.173C342.639,506.933,355.41,512,368.55,512     c1.129,0,2.261-0.037,3.393-0.113c14.314-0.954,27.679-7.915,36.666-19.097c0.232-0.29,0.456-0.585,0.673-0.887l98.981-138.26     C514.692,344.662,512.624,332.168,503.643,325.739z\" />\n          <circle cx=\"262\" cy=\"346.001\" r=\"20\" />\n          <circle cx=\"112\" cy=\"346.001\" r=\"20\" />\n          <circle cx=\"187\" cy=\"346.001\" r=\"20\" />\n        </g>\n      </g>\n    </g>\n    <g>\n    </g>\n    <g>\n    </g>\n    <g>\n    </g>\n    <g>\n    </g>\n    <g>\n    </g>\n    <g>\n    </g>\n    <g>\n    </g>\n    <g>\n    </g>\n    <g>\n    </g>\n    <g>\n    </g>\n    <g>\n    </g>\n    <g>\n    </g>\n    <g>\n    </g>\n    <g>\n    </g>\n    <g>\n    </g>\n  </svg>\n)\n\nexport default LoginIcon;","import React from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { useForm } from 'react-hook-form';\nimport { Form, Input, Button } from 'antd';\nimport Icon from '@ant-design/icons';\nimport LoginIcon from 'components/Icons/LoginIcon';\n\ntype LoginFormProps = {}\n\nconst LoginForm = (props: LoginFormProps) => {\n  const history = useHistory();\n\n  function handleSubmit(values: any) {\n    console.log(values);\n    history.push(\"/admin\");\n  }\n\n  return (\n    <Form\n      className=\"login-form\"\n      layout=\"vertical\"\n      autoComplete=\"off\"\n      onFinish={handleSubmit}>\n\n      <div className=\"text-center\">\n\n        <div className=\"login-form__header\">\n          <Icon component={LoginIcon} />\n          <h1 className=\"text-3xl\">Đăng nhập</h1>\n        </div>\n\n      </div>\n\n      <Form.Item label=\"Email\" name=\"email\">\n        <Input type=\"email\" />\n      </Form.Item>\n\n      <Form.Item label=\"Mật khẩu\" name=\"password\" className=\"m-0\">\n        <Input.Password />\n        {/* <Button type=\"link\"> */}\n        {/* </Button> */}\n      </Form.Item>\n      <Link className=\"block mt-2 mb-6\" to=\"/forgot-password\">Quên mật khẩu</Link>\n\n      <Form.Item>\n        <Button block type=\"primary\" size=\"large\" htmlType=\"submit\">Đăng nhập</Button>\n      </Form.Item>\n    </Form>\n  )\n}\n\nexport default LoginForm;","import React from 'react';\nimport LoginForm from 'forms/LoginForm/LoginForm';\nimport Particles from 'react-tsparticles';\nimport ParticlesLayout from 'layouts/ParticlesLayout/ParticlesLayout';\n\ntype LoginPageProps = {\n\n}\n\nconst LoginPage = (props: LoginPageProps) => {\n  return (\n    // <ParticlesLayout>\n    <main className=\"login-page\">\n      <LoginForm />\n    </main>\n    // </ParticlesLayout>\n  )\n}\n\nexport default LoginPage;","import AdminLayout from 'layouts/AdminLayout/AdminLayout';\nimport React, { ReactNode } from 'react';\n\n\nconst AdminDashboard = () => {\n  return (\n    <div>Admin dashboard</div>\n  )\n}\n\nexport default AdminDashboard;","import React from 'react';\n\nconst DrugCategoryPage = () => {\n  return (\n    <div>Drug category</div>\n  )\n}\n\nexport default DrugCategoryPage;","import React from 'react';\n\nconst DrugUnitPage = () => {\n  return (\n    <div>Drug Unit</div>\n  )\n}\n\nexport default DrugUnitPage;","import React from 'react';\n\nconst DrugPage = () => {\n  return (\n    <div>Drug Page</div>\n  )\n}\n\nexport default DrugPage;","import React from 'react';\n\nconst DrugInstructionPage = () => {\n  return (\n    <div>Drug Instruction</div>\n  )\n}\n\nexport default DrugInstructionPage;","import React, { ReactNode } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { Layout, Menu, Breadcrumb, Button, Space } from 'antd';\nimport { Switch, Route, useRouteMatch } from 'react-router-dom';\nimport {\n  UserOutlined,\n  LogoutOutlined,\n  DashboardTwoTone,\n  MedicineBoxTwoTone,\n  BugTwoTone,\n  DollarTwoTone,\n  IdcardTwoTone,\n  ClockCircleTwoTone,\n  AppstoreTwoTone,\n  CalendarTwoTone,\n  ContainerTwoTone,\n  SettingTwoTone\n} from '@ant-design/icons';\nimport AdminDashboard from 'pages/admin/dashboard';\nimport DrugCategoryPage from 'pages/common/drug/drug-category';\nimport DrugUnitPage from 'pages/common/drug/drug-unit';\nimport DrugPage from 'pages/common/drug/drug';\nimport DrugInstructionPage from 'pages/common/drug/drug-instruction';\n\nconst { Header, Sider, Content } = Layout;\nconst { Item, SubMenu, Divider } = Menu;\n\ntype AdminLayoutProps = {\n  // children: ReactNode\n}\n\nconst AdminLayout = (props: AdminLayoutProps) => {\n  const match = useRouteMatch();\n  const path = match.path;\n  return (\n    <Layout>\n      <Header className=\"header flex items-center\" style={{ backgroundColor: \"#e82938\" }}>\n        <span className=\"text-2xl text-white\">EMR</span>\n        <div className=\"ml-auto\"></div>\n        <Button type=\"default\" ghost icon={<UserOutlined />} className=\"border-none\">Nguyen Van A</Button>\n        <Button type=\"default\" ghost icon={<LogoutOutlined />} className=\"border-none\">Đăng xuất</Button>\n      </Header>\n      <Layout>\n        <Sider width={200} className=\"site-layout-background\">\n          <Menu\n            mode=\"inline\"\n            style={{ height: '100%', borderRight: 0 }}\n          >\n            <Menu.Item key=\"dashboard\" icon={<DashboardTwoTone />}>Bảng điều khiển</Menu.Item>\n            <SubMenu key=\"drug\" icon={<MedicineBoxTwoTone />} title=\"Quản lý thuốc\">\n              <Menu.Item key=\"1\">Loại thuốc</Menu.Item>\n              <Menu.Item key=\"2\">Đơn vị tính</Menu.Item>\n              <Menu.Item key=\"3\">Thuốc</Menu.Item>\n              <Menu.Item key=\"4\">Sử dụng</Menu.Item>\n            </SubMenu>\n            <SubMenu key=\"disease\" icon={<BugTwoTone />} title=\"Quản lý bệnh\">\n              <Menu.Item key=\"5\">Loại bệnh</Menu.Item>\n              <Menu.Item key=\"6\">Bệnh</Menu.Item>\n            </SubMenu>\n            <Menu.Item key=\"service\" icon={<DollarTwoTone />}>Dịch vụ</Menu.Item>\n            <Menu.Item key=\"patient\" icon={<IdcardTwoTone />}>Bệnh nhân</Menu.Item>\n            <Menu.Item key=\"workingHours\" icon={<ClockCircleTwoTone />}>Giờ làm việc</Menu.Item>\n            <Menu.Item key=\"room\" icon={<AppstoreTwoTone />}>Phòng</Menu.Item>\n            <Menu.Item key=\"appointment\" icon={<CalendarTwoTone />}>Lịch hẹn</Menu.Item>\n            <Menu.Item key=\"visit\" icon={<ContainerTwoTone />}>Khám chữa bệnh</Menu.Item>\n            <Menu.Item key=\"setting\" icon={<SettingTwoTone />}>Cài đặt</Menu.Item>\n          </Menu>\n        </Sider>\n        <Layout style={{ padding: '0 24px 24px' }}>\n          <Content\n            className=\"site-layout-background\"\n            style={{\n              padding: 24,\n              margin: 0,\n              minHeight: 280,\n            }}\n          >\n            <Switch>\n              {/* Dashboard */}\n              <Route path={`${path}/dashboard`}>\n                <AdminDashboard />\n              </Route>\n\n              {/* Drug */}\n              <Route path={`${path}/drug/category`}>\n                <DrugCategoryPage />\n              </Route>\n              <Route path={`${path}/drug/unit`}>\n                <DrugUnitPage />\n              </Route>\n              <Route path={`${path}/drug`} exact>\n                <DrugPage />\n              </Route>\n              <Route path={`${path}/drug/instruction`}>\n                <DrugInstructionPage />\n              </Route>\n\n              {/* Fallback */}\n              <Redirect to={`/admin/dashboard`} />\n            </Switch>\n          </Content>\n        </Layout>\n      </Layout>\n    </Layout>\n  )\n}\n\nexport default AdminLayout;","import React from 'react';\nimport { Route, HashRouter as Router, Switch, Redirect } from 'react-router-dom';\nimport LoginPage from 'pages/login';\n\n// import \"normalize.css/normalize.css\";\n// import \"@blueprintjs/core/lib/css/blueprint.css\";\n// import \"@blueprintjs/icons/lib/css/blueprint-icons.css\";\nimport 'antd/dist/antd.css';\nimport 'styles/main.scss';\nimport AdminLayout from 'layouts/AdminLayout/AdminLayout';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Router>\n        <Switch>\n          <Route path=\"/login\">\n            <LoginPage />\n          </Route>\n\n          <Route path=\"/admin\" component={AdminLayout} />\n\n          <Redirect to=\"/login\" />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}