{"version":3,"sources":["components/Circle/Circle.module.scss","components/Icons/LoginIcon.jsx","store/actionTypes.js","constant/apiUrl.js","services/auth/auth.service.js","services/user/user.service.js","store/actions/user.action.js","store/actions/auth.action.js","forms/LoginForm/LoginForm.jsx","utils/routing.js","pages/login.jsx","pages/admin/dashboard.jsx","forms/DrugCategoryForm/DrugCategoryForm.jsx","services/admin/drug-category.service.js","constant/formActions.js","pages/common/drug/drug-category.jsx","forms/DrugUnitForm/DrugUnitForm.jsx","services/admin/drug-unit.service.js","pages/common/drug/drug-unit.jsx","forms/DrugRouteForm/DrugRouteForm.jsx","services/admin/drug-route.service.js","pages/common/drug/drug-route.jsx","utils/string.js","services/admin/drug.service.js","services/admin/drug-dosage-form.service.js","forms/DrugForm/DrugForm.jsx","pages/common/drug/drug.jsx","forms/DrugInstructionForm/DrugInstructionForm.jsx","services/admin/drug-instruction.service.js","pages/common/drug/drug-instruction.jsx","forms/DiseaseCategoryForm/DiseaseCategoryForm.jsx","services/admin/disease-category.service.js","pages/common/disease/disease-category.jsx","services/admin/disease.service.js","forms/DiseaseForm/DiseaseForm.jsx","pages/common/disease/disease.jsx","pages/common/notification/notification.jsx","services/user/room.service.js","services/admin/room.service.js","services/user/visit.service.js","services/admin/visit.service.js","services/user/emr.service.js","pages/common/visit/visit.jsx","services/user/patient.service.js","pages/common/patient/patient.jsx","pages/common/appointment/apointment.jsx","services/admin/medical-service.service.js","forms/ServiceForm/ServiceForm.jsx","pages/common/service/service.jsx","services/admin/working-hours.service.js","pages/admin/working-hour.jsx","forms/RoomForm/RoomForm.jsx","pages/common/room/room.jsx","services/admin/user.service.js","constant/roles.js","constant/formRules.js","forms/UserForm/UserForm.jsx","components/Circle/Circle.jsx","pages/admin/account.jsx","pages/admin/setting.jsx","HOCs/withPrivateRoute.jsx","components/Header.jsx","forms/DrugDosageFormForm/DrugDosageFormForm.jsx","pages/common/drug/drug-dosage-form.jsx","layouts/AdminLayout/AdminLayout.jsx","services/user/disease.service.js","services/user/drug.service.js","forms/Visit/VisitDiseaseForm.jsx","forms/Visit/VisitServiceForm.jsx","forms/Visit/VisitDrugForm.jsx","utils/image.js","forms/Visit/VisitImagesForm.jsx","services/user/disease-category.service.js","services/user/medical-service.service.js","services/user/drug-category.service.js","services/user/drug-instruction.service.js","pages/common/examination/examination.jsx","pages/common/profile/profile.jsx","pages/common/patient/patient-details.jsx","layouts/PhysicianLayout/PhysicianLayout.jsx","forms/PatientForm/PatientForm.jsx","pages/receptionist/receive.jsx","layouts/ReceptionistLayout/ReceptionistLayout.jsx","components/Icons/EmailIcon.jsx","pages/verify-email.jsx","App.jsx","utils/interceptor.js","store/reducers/auth.reducer.js","store/reducers/user.reducer.js","store/rootReducer.js","store/store.js","serviceWorker.js","index.jsx"],"names":["module","exports","LoginIcon","width","height","xmlns","xmlnsXlink","version","id","x","y","viewBox","fill","xmlSpace","cx","cy","r","d","LOGIN_PENDING","LOGIN_SUCCESS","LOGIN_FAILURE","GET_PROFILE_PENDING","GET_PROFILE_SUCCESS","GET_PROFILE_FAILURE","LOGOUT","API_URL","NODE_URL","endpointPrefix","login","email","password","url","axios","post","refreshToken","refresh_token","verifyEmailAPI","token","get","getProfile","addBlockChainUserAPI","userId","role","Promise","reject","Error","getProfileSuccess","user","type","actionTypes","payload","getProfileAction","dispatch","a","profileRes","data","console","log","logoutAction","Cookie","remove","LoginForm","history","useHistory","useDispatch","authState","useSelector","state","userState","useEffect","redirectPath","getRedirectPath","replace","className","layout","autoComplete","onFinish","values","loginRes","loginData","accessToken","access_token","set","expires","Icon","component","Item","name","placeholder","Password","to","loading","loginLoading","getProfileLoading","block","size","htmlType","LoginPage","props","AdminDashboard","DrugCategoryForm","form","defaultCategory","label","initialValue","autoFocus","getDrugCategoryAPI","search","addDrugCategoryAPI","updateDrugCategoryAPI","put","deleteDrugCategoryAPI","delete","formActions","DrugCategoryPage","useState","modalVisible","setModalVisible","categories","setCategories","fetchingCategories","setFetchingCategories","modalLoading","setModalLoading","action","setAction","selectedCategory","setSelectedCategory","Form","useForm","drugCategoryForm","tableColumns","title","key","render","text","record","index","dataIndex","icon","EditOutlined","onClick","category","onConfirm","handleDelete","okText","okType","cancelText","DeleteOutlined","getDrugCategories","response","handleFormSubmit","validateFields","indexOf","cut","substr","convertedStr","charAt","toUpperCase","toLowerCase","unit","justify","PlusOutlined","rowKey","columns","dataSource","pagination","visible","onCancel","confirmLoading","destroyOnClose","afterClose","resetFields","onOk","DrugUnitForm","defaultUnit","getDrugUnitsAPI","addDrugUnitAPI","updateDrugUnitAPI","deleteDrugUnitAPI","DrugUnitPage","drugUnits","setDrugUnits","fetchingDrugUnits","setFetchingDrugUnits","selectedUnit","setSelectedUnit","drugUnitForm","getDrugUnits","DrugRouteForm","defaultRoute","getDrugRouteAPI","addDrugRouteAPI","updateDrugRouteAPI","deleteDrugRouteAPI","DrugRoutePage","routes","setRoutes","fetchingRoutes","setFetchingRoutes","selectedRoute","setSelectedRoute","drugRouteForm","route","getDrugRoutes","getQueryString","queryObj","Object","keys","map","join","getDrugsAPI","params","getDrugDetailsAPI","addDrugAPI","body","updateDrugAPI","deleteDrugAPI","getDrugDosageFormAPI","addDrugDosageFormAPI","updateDrugDosageFormAPI","deleteDrugDosageFormAPI","DrugForm","defaultDrug","units","setUnits","forms","setForms","drugDetail","setDrugDetail","catLoading","setCatLoading","unitLoading","setUnitLoading","routeLoading","setRouteLoading","formLoading","setFormLoading","detailLoading","setDetailLoading","catResponse","unitResponse","routeResponse","getDrugDosageForms","formResponse","getDrugDetail","detailResponse","prevCats","findIndex","cat","drug_category","prevUnits","u","drug_unit","prevRoutes","drug_route","prevForms","f","drug_dosage_form","all","getData","setFieldsValue","code","price","strength","spinning","hidden","suffix","value","Option","DrugPage","drugs","setDrugs","fetchingDrugs","setFetchingDrugs","selectedDrug","setSelectedDrug","drugForm","drug","getDrugs","results","DrugInstructionForm","defaultInstruction","instruction","getDrugInstructionsAPI","addDrugInstructionAPI","updateDrugInstructionAPI","deleteDrugInstructionAPI","DrugInstructionPage","drugInstructions","setDrugInstructions","fetchingDrugInstructions","setFetchingDrugInstructions","selectedInstruction","setSelectedInstruction","drugInstructionForm","ins","getDrugInstructions","DiseaseCategoryForm","getDiseaseCategoryAPI","addDiseaseCategoryAPI","updateDiseaseCategoryAPI","deleteDiseaseCategoryAPI","DiseaseCategoryPage","diseaseCategoryForm","getDiseaseCategories","getDiseasesAPI","getDiseaseDetailsAPI","addDiseaseAPI","disease_category","updateDiseaseAPI","deleteDiseaseAPI","DiseaseForm","defaultDisease","diseaseDetail","setDiseaseDetail","getDiseaseDetail","DiseasePage","diseases","setDiseases","fetchingDiseases","setFetchingDiseases","selectedDisease","setSelectedDisease","diseaseForm","disease","getDiseases","NotificationPage","getRoomAPI","addRoomAPI","number","Number","updateRoomAPI","deleteRoomAPI","getVisitDataAPI","query","createVisitAPI","patientId","roomId","room_id","patient_id","listEMRAPI","addEMRAPI","emr","getEMRHistoryAPI","emrId","updateEMRAPI","connect","pathname","useLocation","rooms","setRooms","roomLoading","setRoomLoading","visitData","setVisitData","visitLoading","setVisitLoading","createEMRLoading","setCreateEMRLoading","selectedRoom","setSelectedRoom","visitList","filter","visit","createdAt","Date","created_at","today","getDate","getMonth","getFullYear","room","_","patient","first_name","last_name","gender","moment","DOB","format","ken","handlePatientClick","includes","getRooms","adminGetRoomAPI","roomResponse","prevSelected","localStorage","getItem","getVisitData","adminGetVisitDataAPI","visitDataResponse","createEmr","prev","visit_id","resolve","cloneArr","splice","checkExistEMR","historyResponse","existEmr","find","completed_at","emrObj","avatar","physician","living_functions","emr_diseases","emr_services","emr_drugs","images","push","handleChangeRoom","getInitialData","setItem","style","onChange","flex","listAllPatientsAPI","getPatientDetailsAPI","createPatientAPI","phone","path","useRouteMatch","patientData","setPatientData","patientLoading","setPatientLoading","address","EyeOutlined","listAllPatient","patientResults","AppointmentPage","mode","locale","getServicesAPI","getServiceDetailsAPI","addServiceAPI","updateServiceAPI","deleteServiceAPI","ServiceForm","defaultService","serviceDetail","setServiceDetail","getServiceDetail","ServicePage","services","setServices","fetchingServices","setFetchingServices","selectedService","setSelectedService","serviceForm","thousandSeparator","displayType","service","getServices","getWorkingHoursAPI","updateWorkingHourAPI","weekday","isClosed","is_closed","WorkingHourPage","workingHours","setWorkingHours","setLoading","checked","handleWorkingHourChange","getWorkingHours","workingHoursResponse","sort","b","wh","RoomForm","defaultRoom","RoomPage","roomForm","getUsersAPI","qs","stringify","getUserDetailsAPI","addUserAPI","role_id","updateUserAPI","deleteUserAPI","blockUserAPI","unblockUserAPI","ROLES","display","ROLES_LIST","requiredRule","message","required","UserForm","defaultUser","userDetail","setUserDetail","getUserDetail","rules","Group","Circle","classes","classnames","styles","circle","color","AdminAccountPage","urlSearchParams","URLSearchParams","currentPageOnURL","page","setPage","users","setUsers","fetchingUsers","setFetchingUsers","selectedUser","setSelectedUser","userForm","is_verified_email","handleBlockUnblock","is_active","danger","LockOutlined","UnlockOutlined","getUsers","addReponse","responseData","defaultCurrent","current","pageSize","total","count","AdminSettingPage","withPrivateRoute","Child","roles","userRole","isValidRole","length","jwtDecode","error","Header","Layout","CustomHeader","src","backgroundColor","ghost","LogoutOutlined","Modal","confirm","ExclamationCircleOutlined","content","DrugDosageFormForm","defaultDosageForm","DrugDosageFormPage","dosageForms","setDosageForms","fetchingDosageForms","setFetchingDosageForms","selectedDosageForm","setSelectedDosageForm","drugDosageFormForm","dosageForm","Sider","Content","SubMenu","Menu","match","location","borderRight","selectedKeys","DashboardOutlined","MedicineBoxOutlined","BugOutlined","NotificationOutlined","ContainerOutlined","IdcardOutlined","CalendarOutlined","DollarOutlined","ClockCircleOutlined","AppstoreOutlined","UserOutlined","SettingOutlined","padding","margin","minHeight","exact","List","Select","getBase64","file","reader","FileReader","readAsDataURL","onload","result","onerror","VisitImagesForm","previewVisible","setPreviewVisible","previewImage","setPreviewImage","previewTitle","setPreviewTitle","fileList","setFileList","uploadButton","marginTop","uploadEvent","event","preview","originFileObj","substring","lastIndexOf","listType","headers","Authorization","onPreview","footer","alt","useParams","setDiseaseCategories","drugCategories","setDrugCategories","setEmr","drugLoading","setDrugLoading","finishLoading","adminGetDiseaseCategoryAPI","diseaseCategoryResponse","diseaseCategoriesData","adminGetServicesAPI","servicesResponse","servicesData","adminGetDrugCategoryAPI","drugCategoryResponse","drugCategoriesData","drugCategory","adminGetDrugsAPI","drugResponse","drugData","adminGetDrugInstructionsAPI","drugInsResponse","drugInsData","getEmrDetail","emrList","handleChangeDrugCategory","visitId","emrBody","medical_record","administrative","fullname","dayOfBirth","job","ethnicity","expatriate","workplace","object","insurance_expirity","insurance_number","family_member_and_address","checkin_at","checkin","previous_diagnose","come_from","present_complaint","ask","pathological_process","self_medical_history","family_medical_history","examination","heartbeat","temperature","blood_pressure","breathing","weight","partials","subclinical_summary","initial_diagnose","processed","diagnose","from_date","to_date","summary","pathological_process_and_clinical_course","valuable_subclinical_summary","primary_disease","sub_disease","treatment_method","patient_status","direction_of_treatment","attachments","status","fileListElement","uid","cloneEmr","success","onBack","goBack","gutter","readOnly","defaultActiveKey","Panel","header","TextArea","rows","dateStr","momentObj","hour","minute","date","month","year","getDateString","autoSize","addonBefore","fields","add","field","align","fieldKey","minWidth","MinusCircleOutlined","e","handleUploadChange","SaveOutlined","handleFinishExamination","FileDoneOutlined","Descriptions","PatientDetails","setPatient","EMRs","setEMRs","EMRLoading","setEMRLoading","getPatientDetails","patientResponse","getPatientEMRs","EMRResponse","colon","ProfileOutlined","PatientForm","ReceivePage","isCreatingPatient","setCreatingPatient","isCreatingVisit","setCreatingVisit","patientForm","renderMenu","handleCreateVisit","overlay","overlayStyle","trigger","listAllPatients","handleSubmit","createResponse","extra","Search","EmailIcon","enableBackground","VerifyPage","setSuccess","setError","isValidToken","isValid","test","verifyEmail","showIcon","App","interceptors","request","use","config","method","res","originalRequest","_retry","AuthService","refreshResponse","newToken","then","catch","errorMessage","fetchProfile","refresh","newTokenReponse","checkRefresh","AdminLayout","PhysicianLayout","ReceptionistLayout","initialState","rootReducer","combineReducers","middlewares","thunk","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","Boolean","hostname","ReactDOM","viVN","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f3553735.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"circle\":\"Circle_circle__3fC-i\",\"circle--success\":\"Circle_circle--success__1IfvS\"};","import React from 'react';\n\nconst LoginIcon = () => (\n  <svg width=\"50\" height=\"50\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" version=\"1.1\" id=\"Capa_1\" x=\"0px\" y=\"0px\" viewBox=\"0 0 512.002 512.002\" fill=\"currentColor\" xmlSpace=\"preserve\">\n    <g>\n      <g>\n        <g>\n          <circle cx=\"338\" cy=\"346.001\" r=\"20\" />\n          <path d=\"M238,472.001H80c-22.056,0-40-17.944-40-40v-164c0-22.056,17.944-40,40-40h288c22.056,0,40,17.944,40,40v40     c0,11.046,8.954,20,20,20c11.046,0,20-8.954,20-20v-40c0-44.112-35.888-80-80-80h-24.037v-70.534     c0-64.771-53.832-117.466-120-117.466s-120,52.695-120,117.466v70.534H80c-44.112,0-80,35.888-80,80v164     c0,44.112,35.888,80,80,80h158c11.046,0,20-8.954,20-20S249.046,472.001,238,472.001z M143.963,117.467     c0-42.715,35.888-77.466,80-77.466s80,34.751,80,77.466v70.534h-160V117.467z\" />\n          <path d=\"M503.643,325.739c-8.982-6.431-21.477-4.362-27.904,4.62l-98.581,137.7c-2.692,3.122-6.066,3.796-7.874,3.916     c-1.854,0.123-5.424-0.112-8.567-3.061l-63.708-62.171c-7.906-7.716-20.568-7.559-28.282,0.345     c-7.715,7.905-7.561,20.567,0.345,28.282l63.82,62.281c0.06,0.058,0.119,0.116,0.18,0.173C342.639,506.933,355.41,512,368.55,512     c1.129,0,2.261-0.037,3.393-0.113c14.314-0.954,27.679-7.915,36.666-19.097c0.232-0.29,0.456-0.585,0.673-0.887l98.981-138.26     C514.692,344.662,512.624,332.168,503.643,325.739z\" />\n          <circle cx=\"262\" cy=\"346.001\" r=\"20\" />\n          <circle cx=\"112\" cy=\"346.001\" r=\"20\" />\n          <circle cx=\"187\" cy=\"346.001\" r=\"20\" />\n        </g>\n      </g>\n    </g>\n    <g>\n    </g>\n    <g>\n    </g>\n    <g>\n    </g>\n    <g>\n    </g>\n    <g>\n    </g>\n    <g>\n    </g>\n    <g>\n    </g>\n    <g>\n    </g>\n    <g>\n    </g>\n    <g>\n    </g>\n    <g>\n    </g>\n    <g>\n    </g>\n    <g>\n    </g>\n    <g>\n    </g>\n    <g>\n    </g>\n  </svg>\n)\n\nexport default LoginIcon;","export const LOGIN_PENDING = \"LOGIN_PENDING\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_FAILURE = \"LOGIN_FAILURE\";\n\nexport const GET_PROFILE_PENDING = \"GET_PROFILE_PENDING\";\nexport const GET_PROFILE_SUCCESS = \"GET_PROFILE_SUCCESS\";\nexport const GET_PROFILE_FAILURE = \"GET_PROFILE_FAILURE\";\n\nexport const LOGOUT = \"LOGOUT\";","export const API_URL = 'https://emr-2020.wl.r.appspot.com/api';\nexport const NODE_URL = 'https://api.emr-client.tech';","import { API_URL } from \"constant/apiUrl\";\nimport axios from 'axios';\n\n\nconst endpointPrefix = `${API_URL}/auth`;\n\n/**\n * Login to system\n * @param email\n * @param password\n */\nexport function login(email, password) {\n  const url = `${endpointPrefix}/login/`;\n  return axios.post(url, {\n    email: email,\n    password: password\n  });\n}\n\n/**\n * This function is used to get new access token from refresh token\n * when current access token is expired\n * @param refreshToken Refresh token from last login\n */\nexport function refreshToken(refreshToken) {\n  const url = `${endpointPrefix}/refresh-token/`;\n  return axios.post(url, {\n    refresh_token: refreshToken\n  });\n}\n\n\nexport function verifyEmailAPI(token) {\n  const url = `${endpointPrefix}/verify-email/${token}/`;\n  return axios.get(url);\n}","import { API_URL, NODE_URL } from \"constant/apiUrl\";\nimport axios from 'axios';\n\nconst endpointPrefix = `${API_URL}/user`;\n\n/**\n* Get user profile\n* @param token Access token\n*/\nexport function getProfile() {\n  const url = `${endpointPrefix}/profile/`;\n  return axios.get(url);\n}\n\nexport function addBlockChainUserAPI(userId, role = \"user\") {\n  if (role !== \"user\" && role !== \"patient\") return Promise.reject(new Error('Unknown role'));\n  const url = `${NODE_URL}/api/register-${role}`;\n  return axios.post(url, { [`${role}_id`]: userId });\n}","import * as actionTypes from '../actionTypes';\nimport { getProfile } from 'services/user/user.service';\n\nfunction getProfilePending() {\n  return {\n    type: actionTypes.GET_PROFILE_PENDING\n  }\n}\n\nfunction getProfileSuccess(user) {\n  return {\n    type: actionTypes.GET_PROFILE_SUCCESS,\n    payload: user\n  }\n}\n\nfunction getProfileFailure() {\n  return {\n    type: actionTypes.GET_PROFILE_FAILURE\n  }\n}\n\nexport function getProfileAction() {\n  return async dispatch => {\n    try {\n      dispatch(getProfilePending());\n      const profileRes = await getProfile();\n      const user = profileRes.data;\n      dispatch(getProfileSuccess(user));\n    } catch(error) {\n      console.log(error);\n      dispatch(getProfileFailure());\n    }\n  }\n}\n\nexport function removeUserAction() {\n  return {\n    type: actionTypes.LOGOUT\n  }\n}","import * as actionTypes from '../actionTypes';\nimport { login } from 'services/auth/auth.service';\nimport Cookie from 'js-cookie';\nimport { getProfileAction, removeUserAction } from './user.action';\n\nfunction loginPending() {\n  return {\n    type: actionTypes.LOGIN_PENDING\n  }\n}\n\nfunction loginSuccess() {\n  return {\n    type: actionTypes.LOGIN_SUCCESS,\n  }\n}\n\nfunction loginFailure() {\n  return {\n    type: actionTypes.LOGIN_FAILURE\n  }\n}\n\nexport function loginAction(email, password) {\n  return async dispatch => {\n    try {\n      dispatch(loginPending());\n      const loginRes = await login(email, password);\n      const loginData = loginRes.data;\n\n      const accessToken = loginData.access_token;\n      const refreshToken = loginData.refresh_token;\n      Cookie.set('EMR_token', accessToken, { expires: 3 / 24 }); // 3 hours\n      Cookie.set('EMR_refresh', refreshToken, { expires: 7 }); // 7 days\n      dispatch(loginSuccess());\n      dispatch(getProfileAction());\n    } catch (error) {\n      dispatch(loginFailure());\n    }\n  }\n}\n\nexport function logoutAction() {\n  Cookie.remove('EMR_token');\n  Cookie.remove('EMR_refresh');\n\n  return dispatch => {\n    dispatch(removeUserAction());\n  }\n}","import React, { useEffect } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { Form, Input, Button } from 'antd';\nimport Icon from '@ant-design/icons';\nimport LoginIcon from 'components/Icons/LoginIcon';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { loginAction } from 'store/actions/auth.action';\nimport { getRedirectPath } from 'utils/routing';\n\nconst LoginForm = () => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const authState = useSelector(state => state.authState);\n  const userState = useSelector(state => state.userState);\n  const user = userState.user;\n\n  function handleSubmit(values) {\n    dispatch(loginAction(values.email, values.password));\n  }\n\n  useEffect(() => {\n    if (user && user.role) {\n      const redirectPath = getRedirectPath(user.role);\n      console.log(redirectPath);\n      history.replace(redirectPath);\n    }\n  }, [user, history]);\n\n  return (\n    <Form\n      className=\"auth\"\n      layout=\"vertical\"\n      autoComplete=\"off\"\n      onFinish={handleSubmit}>\n\n      <div className=\"auth__header text-center\">\n        <Icon component={LoginIcon} />\n        <h1 className=\"text-3xl\">Đăng nhập</h1>\n      </div>\n\n      <Form.Item name=\"email\">\n        <Input type=\"email\" placeholder=\"Email\" />\n      </Form.Item>\n\n      <Form.Item name=\"password\" className=\"m-0\">\n        <Input.Password placeholder=\"Mật khẩu\" />\n        {/* <Button type=\"link\"> */}\n        {/* </Button> */}\n      </Form.Item>\n      <Link className=\"block mt-2 mb-6\" to=\"/forgot-password\">Quên mật khẩu</Link>\n\n      <Form.Item>\n        <Button loading={authState.loginLoading || userState.getProfileLoading} block type=\"primary\" size=\"large\" htmlType=\"submit\">Đăng nhập</Button>\n      </Form.Item>\n    </Form>\n  )\n}\n\nexport default LoginForm;","export function getRedirectPath(role) {\n  if (!role) return \"/login\";\n\n  switch (role.id) {\n    case 1:\n      return \"/admin\";\n    case 2:\n      return \"/physician\";\n    case 3:\n      return \"/receptionist\";\n    case 4:\n      return \"/patient\";\n    default:\n      return \"\";\n  }\n}","import React from 'react';\nimport LoginForm from 'forms/LoginForm/LoginForm';\n\nconst LoginPage = (props) => {\n  return (\n    <main className=\"login-page\">\n      <LoginForm />\n    </main>\n  )\n}\n\nexport default LoginPage;","import React from 'react';\n\nconst AdminDashboard = () => {\n  return (\n    <div>Admin dashboard</div>\n  )\n}\n\nexport default AdminDashboard;","import React from 'react';\nimport { Form, Input } from 'antd';\n\nconst DrugCategoryForm = props => {\n  const { form, onFinish, defaultCategory } = props;\n\n  return (\n    <Form\n      layout=\"vertical\"\n      form={form}\n      onFinish={onFinish}>\n      <Form.Item label=\"Loại thuốc\" name=\"name\" initialValue={defaultCategory?.name}>\n        <Input autoFocus />\n      </Form.Item>\n    </Form>\n  )\n}\n\nexport default DrugCategoryForm;","import axios from 'axios';\n\nimport { API_URL } from \"constant/apiUrl\";\n\nconst endpointPrefix = `${API_URL}/admin/manage-drug-category`;\n\nexport function getDrugCategoryAPI(search = \"\") {\n  const url = `${endpointPrefix}/?search=${search}`;\n  return axios.get(url);\n}\n\nexport function addDrugCategoryAPI(name) {\n  const url = `${endpointPrefix}/`;\n  return axios.post(url, { name: name });\n}\n\nexport function updateDrugCategoryAPI(id, name) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.put(url, {\n    name: name\n  })\n}\n\nexport function deleteDrugCategoryAPI(id) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.delete(url);\n}","export const formActions = {\n  CREATE: 'CREATE',\n  UPDATE: 'UPDATE'\n}","import React, { useState, useEffect } from 'react';\nimport { Row, Col, Button, Modal, Table, Form, Popconfirm, Space } from 'antd';\nimport { PlusOutlined, EditOutlined, DeleteOutlined } from '@ant-design/icons';\nimport DrugCategoryForm from 'forms/DrugCategoryForm/DrugCategoryForm';\nimport { addDrugCategoryAPI, deleteDrugCategoryAPI, getDrugCategoryAPI, updateDrugCategoryAPI } from 'services/admin/drug-category.service';\nimport { formActions } from 'constant/formActions';\n\nconst DrugCategoryPage = () => {\n\n  const [modalVisible, setModalVisible] = useState(false);\n  const [categories, setCategories] = useState([]);\n  const [fetchingCategories, setFetchingCategories] = useState(false);\n  const [modalLoading, setModalLoading] = useState(false);\n  const [action, setAction] = useState(formActions.CREATE);\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [drugCategoryForm] = Form.useForm();\n\n  const tableColumns = [\n    {\n      title: '#',\n      key: '#',\n      render: (text, record, index) => index + 1\n    },\n    {\n      title: 'Tên',\n      key: 'name',\n      dataIndex: 'name'\n    },\n    {\n      title: 'Hành động',\n      key: 'action',\n      render: (text, record, index) => (\n        <Space size={10}>\n          <Button icon={<EditOutlined />} onClick={() => handleEditClick(record)}></Button>\n          <Popconfirm\n            onConfirm={() => handleDelete(record)} title=\"Bạn có chắc muốn xóa không?\"\n            okText=\"Xóa\"\n            okType=\"danger\"\n            cancelText=\"Hủy bỏ\">\n            <Button icon={<DeleteOutlined />}></Button>\n          </Popconfirm>\n        </Space>\n      )\n    }\n  ]\n\n  function handleOpenModal() {\n    setAction(formActions.CREATE);\n    setModalVisible(true);\n  }\n\n  function handleCloseModal() {\n    setModalVisible(false);\n  }\n\n  async function getDrugCategories() {\n    try {\n      setFetchingCategories(true);\n      const response = await getDrugCategoryAPI();\n      setCategories(response.data);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setFetchingCategories(false);\n    }\n  }\n\n  async function handleFormSubmit() {\n    try {\n      setModalLoading(true);\n      const values = await drugCategoryForm.validateFields();\n      const name = values.name;\n      const index = name.indexOf(\". \");\n      let cut = name.substr(index > -1 ? index + 2 : 0);\n      const indexOfNhom = cut.indexOf(\"Nhóm\");\n      if (indexOfNhom === -1) {\n        cut = \"Nhóm \" + cut;\n      }\n      const convertedStr = cut.charAt(0).toUpperCase() + cut.substr(1).toLowerCase();\n      if (action === formActions.CREATE) {\n        await addDrugCategoryAPI(convertedStr);\n      }\n\n      if (action === formActions.UPDATE) {\n        await updateDrugCategoryAPI(selectedCategory.id, convertedStr);\n      }\n\n      getDrugCategories();\n\n      setModalVisible(false);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setModalLoading(false);\n    }\n  }\n\n  function handleEditClick(category) {\n    setAction(formActions.UPDATE);\n    setSelectedCategory(category);\n    setModalVisible(true);\n  }\n\n  async function handleDelete(unit) {\n    try {\n      await deleteDrugCategoryAPI(unit.id);\n      getDrugCategories();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  function afterClose() {\n    drugCategoryForm.resetFields();\n    setSelectedCategory(null);\n  }\n\n  useEffect(() => {\n    getDrugCategories();\n  }, []);\n\n  return (\n    <>\n      <Row justify=\"space-between\">\n        <Col><h1 className=\"text-xl\">Quản lý nhóm thuốc</h1></Col>\n        <Col>\n          <Button type=\"primary\" icon={<PlusOutlined />} onClick={handleOpenModal}>Tạo mới</Button>\n        </Col>\n      </Row>\n      <Table\n        rowKey=\"id\"\n        columns={tableColumns}\n        dataSource={categories}\n        pagination={false}\n        loading={fetchingCategories} />\n      <Modal\n        visible={modalVisible}\n        title={action === formActions.CREATE ? 'Thêm nhóm thuốc' : 'Cập nhật nhóm thuốc'}\n        onCancel={handleCloseModal}\n        confirmLoading={modalLoading}\n        destroyOnClose={true}\n        afterClose={afterClose}\n        onOk={handleFormSubmit}>\n        <DrugCategoryForm onFinish={handleFormSubmit} form={drugCategoryForm} defaultCategory={selectedCategory} />\n      </Modal>\n    </>\n  )\n}\n\nexport default DrugCategoryPage;","import React from 'react';\nimport { Form, Input } from 'antd';\n\nconst DrugUnitForm = props => {\n  const { form, onFinish, defaultUnit } = props;\n\n  return (\n    <Form\n      layout=\"vertical\"\n      form={form}\n      onFinish={onFinish}>\n      <Form.Item label=\"Đơn vị tính\" name=\"name\" initialValue={defaultUnit?.name}>\n        <Input autoFocus />\n      </Form.Item>\n    </Form>\n  )\n}\n\nexport default DrugUnitForm;","import axios from 'axios';\n\nimport { API_URL } from \"constant/apiUrl\";\n\nconst endpointPrefix = `${API_URL}/admin/manage-drug-unit`;\n\nexport function getDrugUnitsAPI(search = \"\") {\n  const url = `${endpointPrefix}/?search=${search}`;\n  return axios.get(url);\n}\n\nexport function addDrugUnitAPI(name) {\n  const url = `${endpointPrefix}/`;\n  return axios.post(url, { name: name });\n}\n\nexport function updateDrugUnitAPI(id, name) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.put(url, {\n    name: name\n  })\n}\n\nexport function deleteDrugUnitAPI(id) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.delete(url);\n}","import React, { useState, useEffect } from 'react';\nimport { Row, Col, Button, Modal, Table, Form, Popconfirm, Space } from 'antd';\nimport { PlusOutlined, EditOutlined, DeleteOutlined } from '@ant-design/icons';\nimport DrugUnitForm from 'forms/DrugUnitForm/DrugUnitForm';\nimport { getDrugUnitsAPI, addDrugUnitAPI, updateDrugUnitAPI, deleteDrugUnitAPI } from 'services/admin/drug-unit.service';\nimport { formActions } from 'constant/formActions';\n\nconst DrugUnitPage = () => {\n\n  const [modalVisible, setModalVisible] = useState(false);\n  const [drugUnits, setDrugUnits] = useState([]);\n  const [fetchingDrugUnits, setFetchingDrugUnits] = useState(false);\n  const [modalLoading, setModalLoading] = useState(false);\n  const [action, setAction] = useState(formActions.CREATE);\n  const [selectedUnit, setSelectedUnit] = useState(null);\n  const [drugUnitForm] = Form.useForm();\n\n  const tableColumns = [\n    {\n      title: '#',\n      key: '#',\n      render: (text, record, index) => index + 1\n    },\n    {\n      title: 'Đơn vị tính',\n      key: 'name',\n      dataIndex: 'name'\n    },\n    {\n      title: 'Hành động',\n      key: 'action',\n      render: (text, record, index) => (\n        <Space size={10}>\n          <Button icon={<EditOutlined />} onClick={() => handleEditClick(record)}></Button>\n          <Popconfirm\n            onConfirm={() => handleDelete(record)} title=\"Bạn có chắc muốn xóa không?\"\n            okText=\"Xóa\"\n            okType=\"danger\"\n            cancelText=\"Hủy bỏ\">\n            <Button icon={<DeleteOutlined />}></Button>\n          </Popconfirm>\n        </Space>\n      )\n    }\n  ]\n\n  function handleOpenModal() {\n    setAction(formActions.CREATE);\n    setModalVisible(true);\n  }\n\n  function handleCloseModal() {\n    setModalVisible(false);\n  }\n\n  async function getDrugUnits() {\n    try {\n      setFetchingDrugUnits(true);\n      const response = await getDrugUnitsAPI();\n      setDrugUnits(response.data);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setFetchingDrugUnits(false);\n    }\n  }\n\n  async function handleFormSubmit() {\n    try {\n      setModalLoading(true);\n      const values = await drugUnitForm.validateFields();\n      if (action === formActions.CREATE) {\n        await addDrugUnitAPI(values.name);\n      }\n\n      if (action === formActions.UPDATE) {\n        await updateDrugUnitAPI(selectedUnit.id, values.name);\n      }\n\n      getDrugUnits();\n\n      setModalVisible(false);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setModalLoading(false);\n    }\n  }\n\n  function handleEditClick(unit) {\n    setAction(formActions.UPDATE);\n    setSelectedUnit(unit);\n    setModalVisible(true);\n  }\n\n  async function handleDelete(unit) {\n    try {\n      await deleteDrugUnitAPI(unit.id);\n      getDrugUnits();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  function afterClose() {\n    drugUnitForm.resetFields();\n    setSelectedUnit(null);\n  }\n\n  useEffect(() => {\n    getDrugUnits();\n  }, []);\n\n  return (\n    <>\n      <Row justify=\"space-between\">\n        <Col><h1 className=\"text-xl\">Quản lý đơn vị tính</h1></Col>\n        <Col>\n          <Button type=\"primary\" icon={<PlusOutlined />} onClick={handleOpenModal}>Tạo mới</Button>\n        </Col>\n      </Row>\n      <Table\n        rowKey=\"id\"\n        columns={tableColumns}\n        dataSource={drugUnits}\n        loading={fetchingDrugUnits}\n        pagination={false} />\n      <Modal\n        visible={modalVisible}\n        title={action === formActions.CREATE ? 'Thêm đơn vị tính' : 'Cập nhật đơn vị tính'}\n        onCancel={handleCloseModal}\n        confirmLoading={modalLoading}\n        destroyOnClose={true}\n        afterClose={afterClose}\n        onOk={handleFormSubmit}>\n        <DrugUnitForm onFinish={handleFormSubmit} form={drugUnitForm} defaultUnit={selectedUnit} />\n      </Modal>\n    </>\n  )\n}\n\nexport default DrugUnitPage;","import React from 'react';\nimport { Form, Input } from 'antd';\n\nconst DrugRouteForm = props => {\n  const { form, onFinish, defaultRoute } = props;\n\n  return (\n    <Form\n      layout=\"vertical\"\n      form={form}\n      onFinish={onFinish}>\n      <Form.Item label=\"Đường dùng thuốc\" name=\"name\" initialValue={defaultRoute?.name}>\n        <Input autoFocus />\n      </Form.Item>\n    </Form>\n  )\n}\n\nexport default DrugRouteForm;","import axios from 'axios';\n\nimport { API_URL } from \"constant/apiUrl\";\n\nconst endpointPrefix = `${API_URL}/admin/manage-drug-route`;\n\nexport function getDrugRouteAPI(search = \"\") {\n  const url = `${endpointPrefix}/?search=${search}`;\n  return axios.get(url);\n}\n\nexport function addDrugRouteAPI(name) {\n  const url = `${endpointPrefix}/`;\n  return axios.post(url, { name: name });\n}\n\nexport function updateDrugRouteAPI(id, name) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.put(url, {\n    name: name\n  })\n}\n\nexport function deleteDrugRouteAPI(id) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.delete(url);\n}","import React, { useState, useEffect } from 'react';\nimport { Row, Col, Button, Modal, Table, Form, Popconfirm, Space } from 'antd';\nimport { PlusOutlined, EditOutlined, DeleteOutlined } from '@ant-design/icons';\nimport DrugRouteForm from 'forms/DrugRouteForm/DrugRouteForm';\nimport { addDrugRouteAPI, deleteDrugRouteAPI, getDrugRouteAPI, updateDrugRouteAPI } from 'services/admin/drug-route.service';\nimport { formActions } from 'constant/formActions';\n\nconst DrugRoutePage = () => {\n\n  const [modalVisible, setModalVisible] = useState(false);\n  const [routes, setRoutes] = useState([]);\n  const [fetchingRoutes, setFetchingRoutes] = useState(false);\n  const [modalLoading, setModalLoading] = useState(false);\n  const [action, setAction] = useState(formActions.CREATE);\n  const [selectedRoute, setSelectedRoute] = useState(null);\n  const [drugRouteForm] = Form.useForm();\n\n  const tableColumns = [\n    {\n      title: '#',\n      key: '#',\n      render: (text, record, index) => index + 1\n    },\n    {\n      title: 'Tên',\n      key: 'name',\n      dataIndex: 'name'\n    },\n    {\n      title: 'Hành động',\n      key: 'action',\n      render: (text, record, index) => (\n        <Space size={10}>\n          <Button icon={<EditOutlined />} onClick={() => handleEditClick(record)}></Button>\n          <Popconfirm\n            onConfirm={() => handleDelete(record)} title=\"Bạn có chắc muốn xóa không?\"\n            okText=\"Xóa\"\n            okType=\"danger\"\n            cancelText=\"Hủy bỏ\">\n            <Button icon={<DeleteOutlined />}></Button>\n          </Popconfirm>\n        </Space>\n      )\n    }\n  ]\n\n  function handleOpenModal() {\n    setAction(formActions.CREATE);\n    setModalVisible(true);\n  }\n\n  function handleCloseModal() {\n    setModalVisible(false);\n  }\n\n  async function getDrugRoutes() {\n    try {\n      setFetchingRoutes(true);\n      const response = await getDrugRouteAPI();\n      setRoutes(response.data);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setFetchingRoutes(false);\n    }\n  }\n\n  async function handleFormSubmit() {\n    try {\n      setModalLoading(true);\n      const values = await drugRouteForm.validateFields();\n      if (action === formActions.CREATE) {\n        await addDrugRouteAPI(values.name);\n      }\n\n      if (action === formActions.UPDATE) {\n        await updateDrugRouteAPI(selectedRoute.id, values.name);\n      }\n\n      getDrugRoutes();\n\n      setModalVisible(false);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setModalLoading(false);\n    }\n  }\n\n  function handleEditClick(route) {\n    setAction(formActions.UPDATE);\n    setSelectedRoute(route);\n    setModalVisible(true);\n  }\n\n  async function handleDelete(unit) {\n    try {\n      await deleteDrugRouteAPI(unit.id);\n      getDrugRoutes();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  function afterClose() {\n    drugRouteForm.resetFields();\n    setSelectedRoute(null);\n  }\n\n  useEffect(() => {\n    getDrugRoutes();\n  }, []);\n\n  return (\n    <>\n      <Row justify=\"space-between\">\n        <Col><h1 className=\"text-xl\">Quản lý đường dùng thuốc</h1></Col>\n        <Col>\n          <Button type=\"primary\" icon={<PlusOutlined />} onClick={handleOpenModal}>Tạo mới</Button>\n        </Col>\n      </Row>\n      <Table\n        rowKey=\"id\"\n        columns={tableColumns}\n        dataSource={routes}\n        pagination={false}\n        loading={fetchingRoutes} />\n      <Modal\n        visible={modalVisible}\n        title={action === formActions.CREATE ? 'Thêm đường dùng thuốc' : 'Cập nhật đường dùng thuốc'}\n        onCancel={handleCloseModal}\n        confirmLoading={modalLoading}\n        destroyOnClose={true}\n        afterClose={afterClose}\n        onOk={handleFormSubmit}>\n        <DrugRouteForm onFinish={handleFormSubmit} form={drugRouteForm} defaultRoute={selectedRoute} />\n      </Modal>\n    </>\n  )\n}\n\nexport default DrugRoutePage;","export function getQueryString(queryObj) {\n  if (!queryObj) return \"\";\n  return Object.keys(queryObj).map(key => `${key}=${queryObj[key]}`).join('&');\n}","import axios from 'axios';\nimport { API_URL } from 'constant/apiUrl';\nimport { getQueryString } from 'utils/string';\n\nconst endpointPrefix = `${API_URL}/admin/manage-drug`;\n\nexport function getDrugsAPI(params) {\n  const url = `${endpointPrefix}/`;\n\n  if (params) {\n    return axios.get(`${url}?${getQueryString(params)}`);\n  }\n  return axios.get(url);\n}\n\nexport function getDrugDetailsAPI(id) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.get(url);\n}\n\nexport function addDrugAPI(body) {\n  const url = `${endpointPrefix}/`;\n  return axios.post(url, body);\n}\n\nexport function updateDrugAPI(id, body) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.put(url, body);\n}\n\nexport function deleteDrugAPI(id) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.delete(url);\n}","import axios from 'axios';\n\nimport { API_URL } from \"constant/apiUrl\";\n\nconst endpointPrefix = `${API_URL}/admin/manage-drug-dosage-form`;\n\nexport function getDrugDosageFormAPI(search = \"\") {\n  const url = `${endpointPrefix}/?search=${search}`;\n  return axios.get(url);\n}\n\nexport function addDrugDosageFormAPI(name) {\n  const url = `${endpointPrefix}/`;\n  return axios.post(url, { name: name });\n}\n\nexport function updateDrugDosageFormAPI(id, name) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.put(url, {\n    name: name\n  })\n}\n\nexport function deleteDrugDosageFormAPI(id) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.delete(url);\n}","import React, { useState, useEffect } from 'react';\nimport { Form, Input, Select, Spin } from 'antd';\nimport { getDrugCategoryAPI } from 'services/admin/drug-category.service';\nimport { getDrugUnitsAPI } from 'services/admin/drug-unit.service';\nimport { getDrugDetailsAPI } from 'services/admin/drug.service';\nimport { getDrugRouteAPI } from 'services/admin/drug-route.service';\nimport { getDrugDosageFormAPI } from 'services/admin/drug-dosage-form.service';\n\nconst DrugForm = props => {\n  const { form, onFinish, defaultDrug } = props;\n\n  const [categories, setCategories] = useState([]);\n  const [units, setUnits] = useState([]);\n  const [routes, setRoutes] = useState([]);\n  const [forms, setForms] = useState([]);\n  const [drugDetail, setDrugDetail] = useState(null);\n\n  const [catLoading, setCatLoading] = useState(false);\n  const [unitLoading, setUnitLoading] = useState(false);\n  const [routeLoading, setRouteLoading] = useState(false);\n  const [formLoading, setFormLoading] = useState(false);\n  const [detailLoading, setDetailLoading] = useState(false);\n\n  async function getDrugCategories() {\n    try {\n      setCatLoading(true);\n      const catResponse = await getDrugCategoryAPI();\n      setCategories(catResponse.data);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setCatLoading(false);\n    }\n  }\n\n  async function getDrugUnits() {\n    try {\n      setUnitLoading(true);\n      const unitResponse = await getDrugUnitsAPI();\n      setUnits(unitResponse.data);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setUnitLoading(false);\n    }\n  }\n\n  async function getDrugRoutes() {\n    try {\n      setRouteLoading(true);\n      const routeResponse = await getDrugRouteAPI();\n      setRoutes(routeResponse.data);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setRouteLoading(false);\n    }\n  }\n\n  async function getDrugDosageForms() {\n    try {\n      setFormLoading(true);\n      const formResponse = await getDrugDosageFormAPI();\n      setForms(formResponse.data);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setFormLoading(false);\n    }\n  }\n\n\n\n  async function getDrugDetail(id) {\n    try {\n      setDetailLoading(true);\n      const detailResponse = await getDrugDetailsAPI(id);\n      const drugDetail = detailResponse.data;\n      setDrugDetail(drugDetail);\n      setCategories(prevCats => {\n        const index = prevCats.findIndex(cat => cat.id === defaultDrug.drug_category.id);\n        if (index > -1) {\n          prevCats[index] = drugDetail.drug_category;\n          return prevCats;\n        } else {\n          return [...[drugDetail.drug_category], ...prevCats];\n        }\n      });\n      setUnits(prevUnits => {\n        const index = prevUnits.findIndex(u => u.id === defaultDrug.drug_unit.id);\n        if (index > -1) {\n          prevUnits[index] = drugDetail.drug_unit;\n          return prevUnits;\n        } else {\n          return [...[drugDetail.drug_unit], ...prevUnits];\n        }\n      });\n      setRoutes(prevRoutes => {\n        const index = prevRoutes.findIndex(r => r.id === defaultDrug.drug_route.id);\n        if (index > -1) {\n          prevRoutes[index] = drugDetail.drug_route;\n          return prevRoutes;\n        } else {\n          return [...[drugDetail.drug_route], ...prevRoutes];\n        }\n      });\n      setForms(prevForms => {\n        const index = prevForms.findIndex(f => f.id === defaultDrug.drug_dosage_form.id);\n        if (index > -1) {\n          prevForms[index] = drugDetail.drug_dosage_form;\n          return prevForms;\n        } else {\n          return [...[drugDetail.drug_dosage_form], ...prevForms];\n        }\n      });\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setDetailLoading(false);\n    }\n  }\n\n  async function getData() {\n    if (defaultDrug?.id) {\n      await Promise.all([\n        getDrugDetail(defaultDrug.id),\n        getDrugCategories(),\n        getDrugUnits(),\n        getDrugRoutes(),\n        getDrugDosageForms()\n      ]);\n\n    } else {\n      await Promise.all([\n        getDrugCategories(),\n        getDrugUnits(),\n        getDrugRoutes(),\n        getDrugDosageForms()\n      ])\n    }\n  }\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  useEffect(() => {\n    if (drugDetail) {\n      form.setFieldsValue({\n        code: drugDetail.code,\n        name: drugDetail.name,\n        price: drugDetail.price || 0,\n        drug_category: drugDetail.drug_category.id,\n        drug_unit: drugDetail.drug_unit.id,\n        drug_dosage_form: drugDetail.drug_dosage_form.id,\n        drug_route: drugDetail.drug_route.id,\n        strength: drugDetail.strength\n      });\n    }\n  }, [drugDetail, defaultDrug, form]);\n\n  return (\n    <Spin spinning={detailLoading}>\n      <Form\n        layout=\"vertical\"\n        form={form}\n        onFinish={onFinish}>\n        <Form.Item label=\"Mã thuốc\" name=\"code\" initialValue={drugDetail?.code}>\n          <Input />\n        </Form.Item>\n\n        <Form.Item label=\"Tên thuốc\" name=\"name\" initialValue={drugDetail?.name}>\n          <Input />\n        </Form.Item>\n\n        <Form.Item label=\"Giá\" name=\"price\" initialValue={0} hidden>\n          <Input type=\"number\" suffix=\"VNĐ\" value={0} />\n        </Form.Item>\n\n        <Form.Item label=\"Nhóm thuốc\" name=\"drug_category\" initialValue={drugDetail?.drug_category.id}>\n          <Select loading={catLoading}>\n            {\n              categories.map(cat => (\n                <Select.Option key={cat.id} value={cat.id}>{cat.name}</Select.Option>\n              ))\n            }\n          </Select>\n        </Form.Item>\n\n        <Form.Item label=\"Đơn vị tính\" name=\"drug_unit\" initialValue={drugDetail?.drug_unit.id}>\n          <Select loading={unitLoading}>\n            {\n              units.map(cat => (\n                <Select.Option key={cat.id} value={cat.id}>{cat.name}</Select.Option>\n              ))\n            }\n          </Select>\n        </Form.Item>\n\n        <Form.Item label=\"Đường dùng\" name=\"drug_route\" initialValue={drugDetail?.drug_route.id}>\n          <Select loading={routeLoading}>\n            {\n              routes.map(route => (\n                <Select.Option key={route.id} value={route.id}>{route.name}</Select.Option>\n              ))\n            }\n          </Select>\n        </Form.Item>\n        <Form.Item label=\"Dạng bào chế\" name=\"drug_dosage_form\" initialValue={drugDetail?.drug_dosage_form.id}>\n          <Select loading={formLoading}>\n            {\n              forms.map(f => (\n                <Select.Option key={f.id} value={f.id}>{f.name}</Select.Option>\n              ))\n            }\n          </Select>\n        </Form.Item>\n        <Form.Item label=\"Hàm lượng/nồng độ\" name=\"strength\" initialValue={drugDetail?.strength}>\n          <Input />\n        </Form.Item>\n      </Form>\n    </Spin>\n  )\n}\n\nexport default DrugForm;","import React, { useState, useEffect } from 'react';\nimport { Row, Col, Button, Modal, Table, Form, Popconfirm, Space } from 'antd';\nimport { PlusOutlined, EditOutlined, DeleteOutlined } from '@ant-design/icons';\nimport DrugForm from 'forms/DrugForm/DrugForm';\nimport { getDrugsAPI, addDrugAPI, updateDrugAPI, deleteDrugAPI } from 'services/admin/drug.service';\nimport { formActions } from 'constant/formActions';\nimport NumberFormat from 'react-number-format';\n\nconst DrugPage = () => {\n\n  const [modalVisible, setModalVisible] = useState(false);\n  const [drugs, setDrugs] = useState();\n  const [fetchingDrugs, setFetchingDrugs] = useState(false);\n  const [modalLoading, setModalLoading] = useState(false);\n  const [action, setAction] = useState(formActions.CREATE);\n  const [selectedDrug, setSelectedDrug] = useState(null);\n  const [drugForm] = Form.useForm();\n\n  const tableColumns = [\n    {\n      title: '#',\n      key: '#',\n      render: (text, record, index) => index + 1\n    },\n    {\n      title: 'Mã thuốc',\n      key: 'code',\n      dataIndex: 'code'\n    },\n    {\n      title: 'Tên thuốc',\n      key: 'name',\n      dataIndex: 'name'\n    },\n    {\n      title: 'Hàm lượng/nồng độ',\n      key: 'strength',\n      dataIndex: 'strength'\n    },\n    {\n      title: 'Hành động',\n      key: 'action',\n      render: (text, record, index) => (\n        <Space size={10}>\n          <Button icon={<EditOutlined />} onClick={() => handleEditClick(record)}></Button>\n          <Popconfirm\n            onConfirm={() => handleDelete(record)} title=\"Bạn có chắc muốn xóa không?\"\n            okText=\"Xóa\"\n            okType=\"danger\"\n            cancelText=\"Hủy bỏ\">\n            <Button icon={<DeleteOutlined />}></Button>\n          </Popconfirm>\n        </Space>\n      )\n    }\n  ]\n\n  function handleOpenModal() {\n    setAction(formActions.CREATE);\n    setModalVisible(true);\n  }\n\n  function handleCloseModal() {\n    setModalVisible(false);\n  }\n\n  async function getDrugs() {\n    try {\n      setFetchingDrugs(true);\n      const response = await getDrugsAPI();\n      setDrugs(response.data.results);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setFetchingDrugs(false);\n    }\n  }\n\n  async function handleFormSubmit() {\n    try {\n      setModalLoading(true);\n      const values = await drugForm.validateFields();\n      console.log(values);\n      const data = {\n        code: values.code,\n        name: values.name,\n        price: values.price,\n        drug_category: values.drug_category,\n        drug_unit: values.drug_unit,\n        drug_route: values.drug_route,\n        drug_dosage_form: values.drug_dosage_form,\n        strength: values.strength\n      }\n      if (action === formActions.CREATE) {\n        await addDrugAPI(values);\n      }\n\n      if (action === formActions.UPDATE) {\n        await updateDrugAPI(selectedDrug.id, values);\n      }\n\n      getDrugs();\n\n      setModalVisible(false);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setModalLoading(false);\n    }\n  }\n\n  function handleEditClick(drug) {\n    setAction(formActions.UPDATE);\n    setSelectedDrug(drug);\n    setModalVisible(true);\n  }\n\n  async function handleDelete(drug) {\n    try {\n      await deleteDrugAPI(drug.id);\n      getDrugs();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  function afterClose() {\n    drugForm.resetFields();\n    setSelectedDrug(null);\n  }\n\n  useEffect(() => {\n    getDrugs();\n  }, []);\n\n  return (\n    <>\n      <Row justify=\"space-between\">\n        <Col><h1 className=\"text-xl\">Quản lý thuốc</h1></Col>\n        <Col>\n          <Button type=\"primary\" icon={<PlusOutlined />} onClick={handleOpenModal}>Tạo mới</Button>\n        </Col>\n      </Row>\n      <Table\n        rowKey=\"id\"\n        columns={tableColumns}\n        dataSource={drugs}\n        loading={fetchingDrugs}\n        pagination={false} />\n      <Modal\n        visible={modalVisible}\n        title={action === formActions.CREATE ? 'Thêm thuốc' : 'Cập nhật thuốc'}\n        onCancel={handleCloseModal}\n        confirmLoading={modalLoading}\n        destroyOnClose={true}\n        afterClose={afterClose}\n        onOk={handleFormSubmit}>\n        <DrugForm onFinish={handleFormSubmit} form={drugForm} defaultDrug={selectedDrug} />\n      </Modal>\n    </>\n  )\n}\n\nexport default DrugPage;","import React from 'react';\nimport { Form, Input } from 'antd';\n\nconst DrugInstructionForm = props => {\n  const { form, onFinish, defaultInstruction } = props;\n\n  return (\n    <Form\n      layout=\"vertical\"\n      form={form}\n      onFinish={onFinish}>\n      <Form.Item label=\"Hướng dẫn sử dụng\" name=\"instruction\" initialValue={defaultInstruction?.instruction}>\n        <Input autoFocus />\n      </Form.Item>\n    </Form>\n  )\n}\n\nexport default DrugInstructionForm;","import axios from 'axios';\n\nimport { API_URL } from \"constant/apiUrl\";\n\nconst endpointPrefix = `${API_URL}/admin/manage-drug-instruction`;\n\nexport function getDrugInstructionsAPI() {\n  const url = `${endpointPrefix}/`;\n  return axios.get(url);\n}\n\nexport function addDrugInstructionAPI(instruction) {\n  const url = `${endpointPrefix}/`;\n  return axios.post(url, { instruction: instruction });\n}\n\nexport function updateDrugInstructionAPI(id, instruction) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.put(url, {\n    instruction: instruction\n  })\n}\n\nexport function deleteDrugInstructionAPI(id) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.delete(url);\n}","import React, { useState, useEffect } from 'react';\nimport { Row, Col, Button, Modal, Table, Form, Popconfirm, Space } from 'antd';\nimport { PlusOutlined, EditOutlined, DeleteOutlined } from '@ant-design/icons';\nimport DrugInstructionForm from 'forms/DrugInstructionForm/DrugInstructionForm';\nimport { getDrugInstructionsAPI, addDrugInstructionAPI, updateDrugInstructionAPI, deleteDrugInstructionAPI } from 'services/admin/drug-instruction.service';\nimport { formActions } from 'constant/formActions';\n\nconst DrugInstructionPage = () => {\n\n  const [modalVisible, setModalVisible] = useState(false);\n  const [drugInstructions, setDrugInstructions] = useState([]);\n  const [fetchingDrugInstructions, setFetchingDrugInstructions] = useState(false);\n  const [modalLoading, setModalLoading] = useState(false);\n  const [action, setAction] = useState(formActions.CREATE);\n  const [selectedInstruction, setSelectedInstruction] = useState(null);\n  const [drugInstructionForm] = Form.useForm();\n\n  const tableColumns = [\n    {\n      title: '#',\n      key: '#',\n      render: (text, record, index) => index + 1\n    },\n    {\n      title: 'Hướng dẫn sử dụng',\n      key: 'instruction',\n      dataIndex: 'instruction'\n    },\n    {\n      title: 'Hành động',\n      key: 'action',\n      render: (text, record, index) => (\n        <Space size={10}>\n          <Button icon={<EditOutlined />} onClick={() => handleEditClick(record)}></Button>\n          <Popconfirm\n            onConfirm={() => handleDelete(record)} title=\"Bạn có chắc muốn xóa không?\"\n            okText=\"Xóa\"\n            okType=\"danger\"\n            cancelText=\"Hủy bỏ\">\n            <Button icon={<DeleteOutlined />}></Button>\n          </Popconfirm>\n        </Space>\n      )\n    }\n  ]\n\n  function handleOpenModal() {\n    setAction(formActions.CREATE);\n    setModalVisible(true);\n  }\n\n  function handleCloseModal() {\n    setModalVisible(false);\n  }\n\n  async function getDrugInstructions() {\n    try {\n      setFetchingDrugInstructions(true);\n      const response = await getDrugInstructionsAPI();\n      setDrugInstructions(response.data);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setFetchingDrugInstructions(false);\n    }\n  }\n\n  async function handleFormSubmit() {\n    try {\n      setModalLoading(true);\n      const values = await drugInstructionForm.validateFields();\n      if (action === formActions.CREATE) {\n        await addDrugInstructionAPI(values.instruction);\n      }\n\n      if (action === formActions.UPDATE) {\n        await updateDrugInstructionAPI(selectedInstruction.id, values.instruction);\n      }\n\n      getDrugInstructions();\n\n      setModalVisible(false);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setModalLoading(false);\n    }\n  }\n\n  function handleEditClick(ins) {\n    setAction(formActions.UPDATE);\n    setSelectedInstruction(ins);\n    setModalVisible(true);\n  }\n\n  async function handleDelete(unit) {\n    try {\n      await deleteDrugInstructionAPI(unit.id);\n      getDrugInstructions();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  function afterClose() {\n    drugInstructionForm.resetFields();\n    setSelectedInstruction(null);\n  }\n\n  useEffect(() => {\n    getDrugInstructions();\n  }, []);\n\n  return (\n    <>\n      <Row justify=\"space-between\">\n        <Col><h1 className=\"text-xl\">Quản lý hướng dẫn sử dụng</h1></Col>\n        <Col>\n          <Button type=\"primary\" icon={<PlusOutlined />} onClick={handleOpenModal}>Tạo mới</Button>\n        </Col>\n      </Row>\n      <Table\n        rowKey=\"id\"\n        columns={tableColumns}\n        dataSource={drugInstructions}\n        loading={fetchingDrugInstructions}\n        pagination={false} />\n      <Modal\n        visible={modalVisible}\n        title={action === formActions.CREATE ? 'Thêm hướng dẫn sử dụng' : 'Cập nhật hướng dẫn sử dụng'}\n        onCancel={handleCloseModal}\n        confirmLoading={modalLoading}\n        destroyOnClose={true}\n        afterClose={afterClose}\n        onOk={handleFormSubmit}>\n        <DrugInstructionForm onFinish={handleFormSubmit} form={drugInstructionForm} defaultInstruction={selectedInstruction} />\n      </Modal>\n    </>\n  )\n}\n\nexport default DrugInstructionPage;","import React from 'react';\nimport { Form, Input } from 'antd';\n\nconst DiseaseCategoryForm = props => {\n  const { form, onFinish, defaultCategory } = props;\n\n  return (\n    <Form\n      layout=\"vertical\"\n      form={form}\n      onFinish={onFinish}>\n      <Form.Item label=\"Loại bệnh\" name=\"name\" initialValue={defaultCategory?.name}>\n        <Input autoFocus />\n      </Form.Item>\n    </Form>\n  )\n}\n\nexport default DiseaseCategoryForm;","import axios from 'axios';\n\nimport { API_URL } from \"constant/apiUrl\";\n\nconst endpointPrefix = `${API_URL}/admin/manage-disease-category`;\n\nexport function getDiseaseCategoryAPI(search = \"\") {\n  const url = `${endpointPrefix}/?search=${search}`;\n  return axios.get(url);\n}\n\nexport function addDiseaseCategoryAPI(name) {\n  const url = `${endpointPrefix}/`;\n  return axios.post(url, { name: name });\n}\n\nexport function updateDiseaseCategoryAPI(id, name) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.put(url, {\n    name: name\n  })\n}\n\nexport function deleteDiseaseCategoryAPI(id) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.delete(url);\n}","import React, { useState, useEffect } from 'react';\nimport { Row, Col, Button, Modal, Table, Form, Popconfirm, Space } from 'antd';\nimport { PlusOutlined, EditOutlined, DeleteOutlined } from '@ant-design/icons';\nimport DiseaseCategoryForm from 'forms/DiseaseCategoryForm/DiseaseCategoryForm';\nimport { addDiseaseCategoryAPI, deleteDiseaseCategoryAPI, getDiseaseCategoryAPI, updateDiseaseCategoryAPI } from 'services/admin/disease-category.service';\nimport { formActions } from 'constant/formActions';\n\nconst DiseaseCategoryPage = () => {\n\n  const [modalVisible, setModalVisible] = useState(false);\n  const [categories, setCategories] = useState([]);\n  const [fetchingCategories, setFetchingCategories] = useState(false);\n  const [modalLoading, setModalLoading] = useState(false);\n  const [action, setAction] = useState(formActions.CREATE);\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [diseaseCategoryForm] = Form.useForm();\n\n  const tableColumns = [\n    {\n      title: '#',\n      key: '#',\n      render: (text, record, index) => index + 1\n    },\n    {\n      title: 'Tên',\n      key: 'name',\n      dataIndex: 'name'\n    },\n    {\n      title: 'Hành động',\n      key: 'action',\n      render: (text, record, index) => (\n        <Space size={10}>\n          <Button icon={<EditOutlined />} onClick={() => handleEditClick(record)}></Button>\n          <Popconfirm\n            onConfirm={() => handleDelete(record)} title=\"Bạn có chắc muốn xóa không?\"\n            okText=\"Xóa\"\n            okType=\"danger\"\n            cancelText=\"Hủy bỏ\">\n            <Button icon={<DeleteOutlined />}></Button>\n          </Popconfirm>\n        </Space>\n      )\n    }\n  ]\n\n  function handleOpenModal() {\n    setAction(formActions.CREATE);\n    setModalVisible(true);\n  }\n\n  function handleCloseModal() {\n    setModalVisible(false);\n  }\n\n  async function getDiseaseCategories() {\n    try {\n      setFetchingCategories(true);\n      const response = await getDiseaseCategoryAPI();\n      setCategories(response.data);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setFetchingCategories(false);\n    }\n  }\n\n  async function handleFormSubmit() {\n    try {\n      setModalLoading(true);\n      const values = await diseaseCategoryForm.validateFields();\n      if (action === formActions.CREATE) {\n        await addDiseaseCategoryAPI(values.name);\n      }\n\n      if (action === formActions.UPDATE) {\n        await updateDiseaseCategoryAPI(selectedCategory.id, values.name);\n      }\n\n      getDiseaseCategories();\n\n      setModalVisible(false);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setModalLoading(false);\n    }\n  }\n\n  function handleEditClick(category) {\n    setAction(formActions.UPDATE);\n    setSelectedCategory(category);\n    setModalVisible(true);\n  }\n\n  async function handleDelete(unit) {\n    try {\n      await deleteDiseaseCategoryAPI(unit.id);\n      getDiseaseCategories();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  function afterClose() {\n    diseaseCategoryForm.resetFields();\n    setSelectedCategory(null);\n  }\n\n  useEffect(() => {\n    getDiseaseCategories();\n  }, []);\n\n  return (\n    <>\n      <Row justify=\"space-between\">\n        <Col><h1 className=\"text-xl\">Quản lý nhóm bệnh</h1></Col>\n        <Col>\n          <Button type=\"primary\" icon={<PlusOutlined />} onClick={handleOpenModal}>Tạo mới</Button>\n        </Col>\n      </Row>\n      <Table\n        rowKey=\"id\"\n        columns={tableColumns}\n        dataSource={categories}\n        pagination={false}\n        loading={fetchingCategories} />\n      <Modal\n        visible={modalVisible}\n        title={action === formActions.CREATE ? 'Thêm loại bệnh' : 'Cập nhật loại bệnh'}\n        onCancel={handleCloseModal}\n        confirmLoading={modalLoading}\n        destroyOnClose={true}\n        afterClose={afterClose}\n        onOk={handleFormSubmit}>\n        <DiseaseCategoryForm onFinish={handleFormSubmit} form={diseaseCategoryForm} defaultCategory={selectedCategory} />\n      </Modal>\n    </>\n  )\n}\n\nexport default DiseaseCategoryPage;","import axios from 'axios';\nimport { API_URL } from 'constant/apiUrl';\n\nconst endpointPrefix = `${API_URL}/admin/manage-disease`;\n\nexport function getDiseasesAPI() {\n  const url = `${endpointPrefix}/`;\n  return axios.get(url);\n}\n\nexport function getDiseaseDetailsAPI(id) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.get(url);\n}\n\nexport function addDiseaseAPI({ code, name, disease_category }) {\n  const url = `${endpointPrefix}/`;\n  return axios.post(url, {\n    code,\n    name,\n    disease_category\n  });\n}\n\nexport function updateDiseaseAPI(id, { code, name, disease_category }) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.put(url, {\n    code,\n    name,\n    disease_category\n  });\n}\n\nexport function deleteDiseaseAPI(id) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.delete(url);\n}","import React, { useState, useEffect } from 'react';\nimport { Form, Input, Select, Spin } from 'antd';\nimport { getDiseaseCategoryAPI } from 'services/admin/disease-category.service';\nimport { getDiseaseDetailsAPI } from 'services/admin/disease.service';\n\nconst DiseaseForm = props => {\n  const { form, onFinish, defaultDisease } = props;\n\n  const [categories, setCategories] = useState([]);\n  const [diseaseDetail, setDiseaseDetail] = useState(null);\n  const [catLoading, setCatLoading] = useState(false);\n  const [detailLoading, setDetailLoading] = useState(false);\n\n  async function getDiseaseCategories() {\n    try {\n      setCatLoading(true);\n      const catResponse = await getDiseaseCategoryAPI();\n      setCategories(catResponse.data);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setCatLoading(false);\n    }\n  }\n\n  async function getDiseaseDetail(id) {\n    try {\n      setDetailLoading(true);\n      const detailResponse = await getDiseaseDetailsAPI(id);\n      const diseaseDetail = detailResponse.data;\n      setDiseaseDetail(diseaseDetail);\n      setCategories(prevCats => {\n        const index = prevCats.findIndex(cat => cat.id === defaultDisease.disease_category);\n        if (index > -1) {\n          prevCats[index] = diseaseDetail.disease_category;\n          return prevCats;\n        } else {\n          return [...[diseaseDetail.disease_category], ...prevCats];\n        }\n      });\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setDetailLoading(false);\n    }\n  }\n\n  async function getData() {\n    if (defaultDisease?.id) {\n      await Promise.all([\n        getDiseaseDetail(defaultDisease.id),\n        getDiseaseCategories(),\n      ]);\n\n    } else {\n      await Promise.all([\n        getDiseaseCategories(),\n      ])\n    }\n\n  }\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  useEffect(() => {\n    if (diseaseDetail) {\n      form.setFieldsValue({\n        code: diseaseDetail.code,\n        name: diseaseDetail.name,\n        disease_category: diseaseDetail.disease_category.id,\n      });\n    }\n  }, [diseaseDetail, defaultDisease, form]);\n\n  return (\n    <Spin spinning={detailLoading}>\n      <Form\n        layout=\"vertical\"\n        form={form}\n        onFinish={onFinish}>\n        <Form.Item label=\"Mã bệnh\" name=\"code\" initialValue={diseaseDetail?.code}>\n          <Input />\n        </Form.Item>\n\n        <Form.Item label=\"Tên bệnh\" name=\"name\" initialValue={diseaseDetail?.name}>\n          <Input />\n        </Form.Item>\n\n        <Form.Item label=\"Loại bệnh\" name=\"disease_category\" initialValue={diseaseDetail?.disease_category.id}>\n          <Select loading={catLoading}>\n            {\n              categories.map(cat => (\n                <Select.Option key={cat.id} value={cat.id}>{cat.name}</Select.Option>\n              ))\n            }\n          </Select>\n        </Form.Item>\n      </Form>\n    </Spin>\n  )\n}\n\nexport default DiseaseForm;","import React, { useState, useEffect } from 'react';\nimport { Row, Col, Button, Modal, Table, Form, Popconfirm, Space } from 'antd';\nimport { PlusOutlined, EditOutlined, DeleteOutlined } from '@ant-design/icons';\nimport DiseaseForm from 'forms/DiseaseForm/DiseaseForm';\nimport { getDiseasesAPI, addDiseaseAPI, updateDiseaseAPI, deleteDiseaseAPI } from 'services/admin/disease.service';\nimport { formActions } from 'constant/formActions';\n\nconst DiseasePage = () => {\n\n  const [modalVisible, setModalVisible] = useState(false);\n  const [diseases, setDiseases] = useState();\n  const [fetchingDiseases, setFetchingDiseases] = useState(false);\n  const [modalLoading, setModalLoading] = useState(false);\n  const [action, setAction] = useState(formActions.CREATE);\n  const [selectedDisease, setSelectedDisease] = useState(null);\n  const [diseaseForm] = Form.useForm();\n\n  const tableColumns = [\n    {\n      title: '#',\n      key: '#',\n      render: (text, record, index) => index + 1\n    },\n    {\n      title: 'Mã bệnh',\n      key: 'code',\n      dataIndex: 'code'\n    },\n    {\n      title: 'Tên bệnh',\n      key: 'name',\n      dataIndex: 'name'\n    },\n    {\n      title: 'Hành động',\n      key: 'action',\n      render: (text, record, index) => (\n        <Space size={10}>\n          <Button icon={<EditOutlined />} onClick={() => handleEditClick(record)}></Button>\n          <Popconfirm\n            onConfirm={() => handleDelete(record)} title=\"Bạn có chắc muốn xóa không?\"\n            okText=\"Xóa\"\n            okType=\"danger\"\n            cancelText=\"Hủy bỏ\">\n            <Button icon={<DeleteOutlined />}></Button>\n          </Popconfirm>\n        </Space>\n      )\n    }\n  ]\n\n  function handleOpenModal() {\n    setAction(formActions.CREATE);\n    setModalVisible(true);\n  }\n\n  function handleCloseModal() {\n    setModalVisible(false);\n  }\n\n  async function getDiseases() {\n    try {\n      setFetchingDiseases(true);\n      const response = await getDiseasesAPI();\n      setDiseases(response.data.results);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setFetchingDiseases(false);\n    }\n  }\n\n  async function handleFormSubmit() {\n    try {\n      setModalLoading(true);\n      const values = await diseaseForm.validateFields();\n      const data = {\n        code: values.code,\n        name: values.name,\n        disease_category: values.disease_category,\n      }\n      if (action === formActions.CREATE) {\n        await addDiseaseAPI(data);\n      }\n\n      if (action === formActions.UPDATE) {\n        await updateDiseaseAPI(selectedDisease.id, data);\n      }\n\n      getDiseases();\n\n      setModalVisible(false);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setModalLoading(false);\n    }\n  }\n\n  function handleEditClick(disease) {\n    setAction(formActions.UPDATE);\n    setSelectedDisease(disease);\n    setModalVisible(true);\n  }\n\n  async function handleDelete(disease) {\n    try {\n      await deleteDiseaseAPI(disease.id);\n      getDiseases();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  function afterClose() {\n    diseaseForm.resetFields();\n    setSelectedDisease(null);\n  }\n\n  useEffect(() => {\n    getDiseases();\n  }, []);\n\n  return (\n    <>\n      <Row justify=\"space-between\">\n        <Col><h1 className=\"text-xl\">Quản lý bệnh</h1></Col>\n        <Col>\n          <Button type=\"primary\" icon={<PlusOutlined />} onClick={handleOpenModal}>Tạo mới</Button>\n        </Col>\n      </Row>\n      <Table\n        rowKey=\"id\"\n        columns={tableColumns}\n        dataSource={diseases}\n        loading={fetchingDiseases} />\n      <Modal\n        visible={modalVisible}\n        title={action === formActions.CREATE ? 'Thêm bệnh' : 'Cập nhật bệnh'}\n        onCancel={handleCloseModal}\n        confirmLoading={modalLoading}\n        destroyOnClose={true}\n        afterClose={afterClose}\n        onOk={handleFormSubmit}>\n        <DiseaseForm onFinish={handleFormSubmit} form={diseaseForm} defaultDisease={selectedDisease} />\n      </Modal>\n    </>\n  )\n}\n\nexport default DiseasePage;","import React from 'react';\n\nconst NotificationPage = () => {\n  return (\n    <div>Notification Page</div>\n  )\n}\n\nexport default NotificationPage;","import axios from 'axios';\n\nimport { API_URL } from \"constant/apiUrl\";\n\nconst endpointPrefix = `${API_URL}/user/room`;\n\nexport function getRoomAPI() {\n  const url = `${endpointPrefix}/`;\n  return axios.get(url);\n}\n\nexport function getRoomDetailsAPI(roomId) {\n  const url = `${endpointPrefix}/${roomId}/`;\n  return axios.get(url);\n}","import axios from 'axios';\n\nimport { API_URL } from \"constant/apiUrl\";\n\nconst endpointPrefix = `${API_URL}/admin/manage-room`;\n\nexport function getRoomAPI() {\n  const url = `${endpointPrefix}/`;\n  return axios.get(url);\n}\n\nexport function addRoomAPI({ number, name }) {\n  const url = `${endpointPrefix}/`;\n  return axios.post(url, { number: Number(number), name });\n}\n\nexport function updateRoomAPI(id, { name, number }) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.put(url, {\n    number: Number(number),\n    name\n  })\n}\n\nexport function deleteRoomAPI(id) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.delete(url);\n}","import axios from 'axios';\nimport { API_URL } from 'constant/apiUrl';\nimport { getQueryString } from 'utils/string';\n\nconst endpointPrefix = `${API_URL}/user/visit`;\n\nexport function getVisitDataAPI(query) {\n  const url = `${endpointPrefix}/`;\n  if (query) {\n    return axios.get(`${url}?${getQueryString(query)}`);\n  }\n  return axios.get(url);\n}\n\nexport function createVisitAPI({ patientId, roomId }) {\n  const url = `${endpointPrefix}/`;\n  return axios.post(url, {\n    room_id: roomId,\n    patient_id: patientId\n  })\n}\n\nexport function deleteVisitAPI(visitId) {\n  const url = `${endpointPrefix}/${visitId}/`;\n  return axios.delete(url);\n}","import axios from 'axios';\nimport { API_URL } from 'constant/apiUrl';\nimport { getQueryString } from 'utils/string';\n\nconst endpointPrefix = `${API_URL}/admin/manage-visit`;\n\nexport function getVisitDataAPI(query) {\n  const url = `${endpointPrefix}/`;\n  if (query) {\n    return axios.get(`${url}?${getQueryString(query)}`);\n  }\n  return axios.get(url);\n}\n\nexport function createVisitAPI({ patientId, roomId }) {\n  const url = `${endpointPrefix}/`;\n  return axios.post(url, {\n    room_id: roomId,\n    patient_id: patientId\n  })\n}","import axios from 'axios';\nimport { NODE_URL } from 'constant/apiUrl';\nimport { getQueryString } from 'utils/string';\n\nconst endpointPrefix = `${NODE_URL}/api`;\n\nexport function listEMRAPI(query) {\n  const url = `${endpointPrefix}/patient/emrs`;\n  if (query) {\n    return axios.get(`${url}?${getQueryString(query)}`);\n  }\n\n  return axios.get(url);\n}\n\nexport function addEMRAPI(emr) {\n  const url = `${endpointPrefix}/physician/emrs/`;\n  return axios.post(url, emr);\n}\n\nexport function getEMRHistoryAPI(emrId) {\n  const url = `${endpointPrefix}/physician/emrs/${emrId}`;\n  return axios.get(url);\n}\n\nexport function updateEMRAPI(emrId, body) {\n  const url = `${endpointPrefix}/physician/emrs/${emrId}`;\n  return axios.put(url, body);\n}\n\nexport function completeEMRAPI(emrId) {\n  const url = `${endpointPrefix}/physician/emrs/${emrId}/complete`;\n  return axios.get(url);\n}","import React, { useState, useEffect } from 'react';\nimport { Row, Col, Select, Empty, Table, Button } from 'antd';\nimport { connect } from 'react-redux';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { removeDuplicates } from 'utils/array';\nimport moment from 'moment';\n\n// APIs\nimport { getRoomAPI } from 'services/user/room.service';\nimport { getRoomAPI as adminGetRoomAPI } from 'services/admin/room.service';\nimport { getVisitDataAPI } from 'services/user/visit.service';\nimport { getVisitDataAPI as adminGetVisitDataAPI } from 'services/admin/visit.service';\nimport { addEMRAPI, getEMRHistoryAPI } from 'services/user/emr.service';\n\n\nconst VisitPage = props => {\n  const user = props.user;\n  const { pathname } = useLocation();\n\n  const history = useHistory();\n  const [rooms, setRooms] = useState([]);\n  const [roomLoading, setRoomLoading] = useState(false);\n  const [visitData, setVisitData] = useState(null);\n  const [visitLoading, setVisitLoading] = useState(false);\n  const [createEMRLoading, setCreateEMRLoading] = useState([]);\n\n  const [selectedRoom, setSelectedRoom] = useState(\"\");\n\n  const visitList = visitData?.results.filter(visit => {\n    const createdAt = new Date(visit.created_at);\n    const today = new Date();\n    const isToday = createdAt.getDate() === today.getDate() &&\n      createdAt.getMonth() === today.getMonth() &&\n      createdAt.getFullYear() === today.getFullYear();\n    return (isToday && visit.room.id === selectedRoom)\n  });\n\n  const tableColumns = [\n    {\n      title: 'Số thứ tự',\n      key: '#',\n      dataIndex: 'visit_number'\n    },\n    {\n      title: 'Họ và tên',\n      key: 'fullname',\n      render: (_, record) => record.patient.first_name + \" \" + record.patient.last_name\n    },\n    {\n      title: 'Giới tính',\n      key: 'gender',\n      render: (_, record) => record.patient.gender\n    },\n    {\n      title: 'Ngày sinh',\n      key: 'DOB',\n      render: (_, record) => moment(record.patient.DOB).format('DD/MM/YYYY')\n    },\n    {\n      ken: 'action',\n      render: (_, record) => <Button onClick={() => handlePatientClick(record)} loading={createEMRLoading.includes(record.id)}>Khám bệnh</Button>\n    }\n  ]\n\n  async function getRooms() {\n    try {\n      setRoomLoading(true);\n      let roomResponse;\n      if (user.role.name === \"admin\") {\n        roomResponse = await adminGetRoomAPI();\n      } else if (user.role.name === \"physician\" || user?.role?.name === \"receptionist\") {\n        roomResponse = await getRoomAPI();\n      }\n      setRooms(roomResponse.data);\n\n      const prevSelected = localStorage.getItem(\"selectedRoom\");\n      if (prevSelected) {\n        setSelectedRoom(prevSelected);\n        getVisitData(prevSelected);\n      }\n\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setRoomLoading(false);\n    }\n  }\n\n  async function getVisitData(roomId) {\n    try {\n      let visitDataResponse;\n      setVisitLoading(true);\n      if (user.role.name === \"admin\") {\n        visitDataResponse = await adminGetVisitDataAPI({ room_id: roomId });\n      } else {\n        visitDataResponse = await getVisitDataAPI({ room_id: roomId })\n      }\n      const visitData = visitDataResponse.data;\n      setVisitData(visitData);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setVisitLoading(false);\n    }\n  }\n\n  async function getInitialData() {\n    await Promise.all([\n      getRooms(),\n    ]);\n  }\n\n  useEffect(() => {\n    if (user) {\n      getInitialData();\n    }\n  }, [user]);\n\n  useEffect(() => {\n    if (selectedRoom) {\n      localStorage.setItem(\"selectedRoom\", selectedRoom);\n    }\n  }, [selectedRoom])\n\n  async function createEmr(emr) {\n    try {\n      setCreateEMRLoading(prev => [...prev, ...[emr.visit_id]]);\n      const response = await addEMRAPI(emr);\n      return Promise.resolve(response);\n    } catch (error) {\n      console.log(error);\n      return Promise.reject(error);\n    } finally {\n      setCreateEMRLoading(prev => {\n        const cloneArr = [...prev];\n        cloneArr.splice(cloneArr.indexOf(emr.visit_id), 1);\n        return cloneArr\n      });\n    }\n  }\n\n  async function checkExistEMR(emrId) {\n    try {\n      setCreateEMRLoading(prev => [...prev, ...[emrId]]);\n      const historyResponse = await getEMRHistoryAPI(emrId);\n      const data = historyResponse.data.data;\n      const existEmr = data.find(emr => emr.id === emrId && emr.completed_at === null);\n      return !!(existEmr);\n    } catch (error) {\n\n    } finally {\n      setCreateEMRLoading(prev => {\n        const cloneArr = [...prev];\n        cloneArr.splice(cloneArr.indexOf(emrId), 1);\n        return cloneArr\n      });\n    }\n  }\n\n  async function handlePatientClick(visit) {\n    const { patient } = visit;\n    const existVisit = await checkExistEMR(visit.id);\n\n    if (!existVisit) {\n\n      const emrObj = {\n        visit_id: visit.id,\n        patient: {\n          id: patient.id,\n          first_name: patient.first_name,\n          last_name: patient.last_name,\n          gender: patient.gender,\n          role: patient.role.name,\n          avatar: patient.avatar,\n          DOB: patient.DOB\n        },\n        physician: {\n          id: user.id,\n          first_name: user.first_name,\n          last_name: user.last_name,\n          gender: user.gender,\n          role: user.role.name,\n          avatar: user.avatar\n        },\n        room: \"\",\n        living_functions: null,\n        emr_diseases: [],\n        emr_services: [],\n        emr_drugs: [],\n        images: []\n      }\n\n      try {\n        await createEmr(emrObj);\n        history.push(`${pathname}/${visit.id}`);\n      } catch (error) {\n        console.log(error);\n      }\n    } else {\n      history.push(`${pathname}/${visit.id}`);\n    }\n  }\n\n  function handleChangeRoom(value) {\n    setSelectedRoom(value);\n    getVisitData(value);\n  }\n\n  return (\n    <>\n      <Row className=\"flex-no-wrap\">\n        <Col style={{ width: 350 }} className=\"flex-shrink-0\">\n          <div className=\"mb-5\">\n            <h3 className=\"text-xl\">Khoa</h3>\n            <Select loading={roomLoading} style={{ width: '100%' }} value={selectedRoom} onChange={handleChangeRoom}>\n              {\n                rooms.map(room => (\n                  <Select.Option key={room.id} value={room.id} onChange={handleChangeRoom}>{room.name}</Select.Option>\n                ))\n              }\n            </Select>\n          </div>\n        </Col>\n        <Col flex=\"0 0 45px\"></Col>\n        <Col flex={1}>\n          <h3 className=\"text-xl\">Bệnh nhân đang chờ khám</h3>\n          <Table dataSource={visitList} columns={tableColumns} rowKey=\"id\" loading={visitLoading} pagination={false} />\n        </Col>\n      </Row>\n    </>\n  )\n}\n\nconst mapStateToProps = state => ({\n  user: state.userState.user\n})\n\nexport default connect(mapStateToProps)(VisitPage);","import axios from 'axios';\nimport { API_URL } from 'constant/apiUrl';\n\nconst endpointPrefix = `${API_URL}/user/patient`;\n\nexport function listAllPatientsAPI(search = \"\") {\n  const url = `${endpointPrefix}/?search=${search}`;\n  return axios.get(url);\n}\n\nexport function getPatientDetailsAPI(patientId) {\n  const url = `${endpointPrefix}/${patientId}/`;\n  return axios.get(url);\n}\n\nexport function createPatientAPI({ first_name, last_name, phone, DOB, gender }) {\n  const url = `${endpointPrefix}/`;\n  return axios.post(url, {\n    first_name,\n    last_name,\n    phone,\n    DOB,\n    gender\n  })\n}\n\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { PageHeader, Table, Space, Button } from 'antd';\nimport { EyeOutlined } from '@ant-design/icons';\nimport { Link, useRouteMatch } from 'react-router-dom';\n\n// API\nimport { listAllPatientsAPI } from 'services/user/patient.service';\n\nconst PatientPage = props => {\n  const { user } = props;\n  const { path } = useRouteMatch();\n\n  const [patientData, setPatientData] = useState(null);\n  const [patientLoading, setPatientLoading] = useState(false);\n\n  const tableColumns = [\n    {\n      title: '#',\n      key: '#',\n      render: (text, record, index) => index + 1\n    },\n    {\n      title: 'Họ và tên',\n      key: 'fullname',\n      render: (text, record) => record.first_name + \" \" + record.last_name\n    },\n    {\n      title: 'Giới tính',\n      key: 'gender',\n      dataIndex: 'gender'\n    },\n    {\n      title: 'Địa chỉ',\n      key: 'address',\n      render: (text, record) => record.address || <i className=\"text-gray-500\">Đang cập nhật...</i>\n    },\n    {\n      title: 'Hành động',\n      key: 'action',\n      render: (text, record) => (\n        <Space>\n          <Link to={`${path}/${record.id}`}>\n            <Button icon={<EyeOutlined />}>Xem chi tiết</Button>\n          </Link>\n        </Space>\n      )\n    }\n  ]\n\n  async function listAllPatient() {\n    try {\n      setPatientLoading(true);\n      const patientResults = await listAllPatientsAPI();\n      const patientData = patientResults.data;\n      setPatientData(patientData);\n    } catch (error) {\n\n    } finally {\n      setPatientLoading(false);\n    }\n  }\n\n  async function getInitialData() {\n    await Promise.all([\n      listAllPatient()\n    ])\n  }\n\n  useEffect(() => {\n    getInitialData()\n  }, []);\n\n  return (\n    <>\n      <PageHeader title=\"Bệnh nhân\" />\n      <Table columns={tableColumns} dataSource={patientData?.results} loading={patientLoading} rowKey=\"id\" />\n    </>\n  )\n}\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.userState.user\n  }\n}\n\nexport default connect(mapStateToProps)(PatientPage); ","import React from 'react';\nimport { Calendar, PageHeader, Row, Col } from 'antd';\n\nconst AppointmentPage = () => {\n  return (\n    <>\n      <h3 className=\"text-xl\">Lịch hẹn</h3>\n      <Row>\n        <Col flex=\"1\">\n          <Calendar mode=\"month\" locale=\"vi\" />\n        </Col>\n\n        <Col flex=\"0 0 300px\">\n\n        </Col>\n      </Row>\n    </>\n  )\n}\n\nexport default AppointmentPage;","import axios from 'axios';\n\nimport { API_URL } from \"constant/apiUrl\";\n\nconst endpointPrefix = `${API_URL}/admin/manage-service`;\n\nexport function getServicesAPI(search = \"\") {\n  const url = `${endpointPrefix}/?search=${search}`;\n  return axios.get(url);\n}\n\nexport function getServiceDetailsAPI(id) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.get(url);\n}\n\nexport function addServiceAPI({ name, price }) {\n  const url = `${endpointPrefix}/`;\n  return axios.post(url, { name, price: Number(price) });\n}\n\nexport function updateServiceAPI(id, { name, price }) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.put(url, {\n    name,\n    price: Number(price)\n  })\n}\n\nexport function deleteServiceAPI(id) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.delete(url);\n}","import React, { useState, useEffect } from 'react';\nimport { Form, Input, Spin } from 'antd';\nimport { getServiceDetailsAPI } from 'services/admin/medical-service.service';\n\nconst ServiceForm = props => {\n  const { form, onFinish, defaultService } = props;\n\n  const [serviceDetail, setServiceDetail] = useState(null);\n  const [detailLoading, setDetailLoading] = useState(false);\n\n  async function getServiceDetail(id) {\n    try {\n      setDetailLoading(true);\n      const detailResponse = await getServiceDetailsAPI(id);\n      const serviceDetail = detailResponse.data;\n      setServiceDetail(serviceDetail);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setDetailLoading(false);\n    }\n  }\n\n  async function getData() {\n    if (defaultService?.id) {\n      await Promise.all([\n        getServiceDetail(defaultService.id),\n      ]);\n    }\n  }\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  useEffect(() => {\n    if (serviceDetail) {\n      form.setFieldsValue({\n        name: serviceDetail.name,\n        price: serviceDetail.price,\n      });\n    }\n  }, [serviceDetail, defaultService, form]);\n\n  return (\n    <Spin spinning={detailLoading}>\n      <Form\n        layout=\"vertical\"\n        form={form}\n        onFinish={onFinish}>\n\n        <Form.Item label=\"Tên dịch vụ\" name=\"name\" initialValue={serviceDetail?.name}>\n          <Input />\n        </Form.Item>\n\n        <Form.Item label=\"Giá\" name=\"price\" initialValue={serviceDetail?.price}>\n          <Input type=\"number\" suffix=\"VNĐ\" />\n        </Form.Item>\n      </Form>\n    </Spin>\n  )\n}\n\nexport default ServiceForm;","import React, { useState, useEffect } from 'react';\nimport { Row, Col, Button, Modal, Table, Form, Popconfirm, Space } from 'antd';\nimport { PlusOutlined, EditOutlined, DeleteOutlined } from '@ant-design/icons';\nimport ServiceForm from 'forms/ServiceForm/ServiceForm';\nimport { getServicesAPI, addServiceAPI, updateServiceAPI, deleteServiceAPI } from 'services/admin/medical-service.service';\nimport { formActions } from 'constant/formActions';\nimport NumberFormat from 'react-number-format';\n\nconst ServicePage = () => {\n\n  const [modalVisible, setModalVisible] = useState(false);\n  const [services, setServices] = useState();\n  const [fetchingServices, setFetchingServices] = useState(false);\n  const [modalLoading, setModalLoading] = useState(false);\n  const [action, setAction] = useState(formActions.CREATE);\n  const [selectedService, setSelectedService] = useState(null);\n  const [serviceForm] = Form.useForm();\n\n  const tableColumns = [\n    {\n      title: '#',\n      key: '#',\n      render: (text, record, index) => index + 1\n    },\n    {\n      title: 'Tên dịch vụ',\n      key: 'name',\n      dataIndex: 'name'\n    },\n    {\n      title: 'Giá',\n      key: 'price',\n      dataIndex: 'price',\n      render: (text, record, index) => (<NumberFormat thousandSeparator=\" \" suffix=\" VNĐ\" value={text} displayType=\"text\" />)\n    },\n    {\n      title: 'Hành động',\n      key: 'action',\n      render: (text, record, index) => (\n        <Space size={10}>\n          <Button icon={<EditOutlined />} onClick={() => handleEditClick(record)}></Button>\n          <Popconfirm\n            onConfirm={() => handleDelete(record)} title=\"Bạn có chắc muốn xóa không?\"\n            okText=\"Xóa\"\n            okType=\"danger\"\n            cancelText=\"Hủy bỏ\">\n            <Button icon={<DeleteOutlined />}></Button>\n          </Popconfirm>\n        </Space>\n      )\n    }\n  ]\n\n  function handleOpenModal() {\n    setAction(formActions.CREATE);\n    setModalVisible(true);\n  }\n\n  function handleCloseModal() {\n    setModalVisible(false);\n  }\n\n  async function getServices() {\n    try {\n      setFetchingServices(true);\n      const response = await getServicesAPI();\n      setServices(response.data);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setFetchingServices(false);\n    }\n  }\n\n  async function handleFormSubmit() {\n    try {\n      setModalLoading(true);\n      const values = await serviceForm.validateFields();\n      const data = {\n        name: values.name,\n        price: values.price,\n      }\n      if (action === formActions.CREATE) {\n        await addServiceAPI(data);\n      }\n\n      if (action === formActions.UPDATE) {\n        await updateServiceAPI(selectedService.id, data);\n      }\n\n      getServices();\n\n      setModalVisible(false);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setModalLoading(false);\n    }\n  }\n\n  function handleEditClick(service) {\n    setAction(formActions.UPDATE);\n    setSelectedService(service);\n    setModalVisible(true);\n  }\n\n  async function handleDelete(service) {\n    try {\n      await deleteServiceAPI(service.id);\n      getServices();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  function afterClose() {\n    serviceForm.resetFields();\n    setSelectedService(null);\n  }\n\n  useEffect(() => {\n    getServices();\n  }, []);\n\n  return (\n    <>\n      <Row justify=\"space-between\">\n        <Col><h1 className=\"text-xl\">Quản lý thuốc</h1></Col>\n        <Col>\n          <Button type=\"primary\" icon={<PlusOutlined />} onClick={handleOpenModal}>Tạo mới</Button>\n        </Col>\n      </Row>\n      <Table\n        rowKey=\"id\"\n        columns={tableColumns}\n        dataSource={services}\n        loading={fetchingServices} />\n      <Modal\n        visible={modalVisible}\n        title={action === formActions.CREATE ? 'Thêm thuốc' : 'Cập nhật thuốc'}\n        onCancel={handleCloseModal}\n        confirmLoading={modalLoading}\n        destroyOnClose={true}\n        afterClose={afterClose}\n        onOk={handleFormSubmit}>\n        <ServiceForm onFinish={handleFormSubmit} form={serviceForm} defaultService={selectedService} />\n      </Modal>\n    </>\n  )\n}\n\nexport default ServicePage;","import axios from 'axios';\nimport { API_URL } from 'constant/apiUrl';\n\nconst endpointPrefix = `${API_URL}/admin/manage-working-hours`;\n\nexport function getWorkingHoursAPI() {\n  const url = `${endpointPrefix}/`;\n  return axios.get(url);\n}\n\nexport function updateWorkingHourAPI(id, { weekday, isClosed }) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.put(url, {\n    weekday: weekday,\n    is_closed: isClosed\n  })\n}","import React, { useState, useEffect } from 'react';\nimport { Table, Switch } from 'antd';\nimport { getWorkingHoursAPI, updateWorkingHourAPI } from 'services/admin/working-hours.service';\n\nconst WorkingHourPage = () => {\n\n  const [workingHours, setWorkingHours] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const tableColumns = [\n    {\n      title: 'Ngày',\n      key: 'weekday',\n      dataIndex: 'weekday'\n    },\n    {\n      title: 'Đóng cửa',\n      key: 'is_closed',\n      render: (text, record) => (\n        <Switch\n          checked={record.is_closed}\n          onChange={() => handleWorkingHourChange(record)} />\n      )\n    }\n  ]\n\n  async function getWorkingHours() {\n    try {\n      setLoading(true);\n      const workingHoursResponse = await getWorkingHoursAPI();\n      setWorkingHours(workingHoursResponse.data.sort((a, b) => {\n        if (a.id < b.id) {\n          return -1\n        } else {\n          return 1\n        }\n      }));\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  async function handleWorkingHourChange(wh) {\n    try {\n      setLoading(true);\n      await updateWorkingHourAPI(wh.id, {\n        weekday: wh.weekday,\n        isClosed: !wh.is_closed\n      });\n      getWorkingHours();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  useEffect(() => {\n    getWorkingHours();\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"text-xl\">Quản lý giờ làm việc</h1>\n      <div style={{width: 400}}>\n      <Table\n        rowKey=\"weekday\"\n        dataSource={workingHours}\n        columns={tableColumns}\n        loading={loading}\n        pagination={false} />\n      </div>\n      \n    </>\n  )\n}\n\nexport default WorkingHourPage;","import React from 'react';\nimport { Form, Input } from 'antd';\n\nconst RoomForm = props => {\n  const { form, onFinish, defaultRoom } = props;\n\n  return (\n    <Form\n      layout=\"vertical\"\n      form={form}\n      onFinish={onFinish}>\n      <Form.Item label=\"Mã\" name=\"number\" initialValue={defaultRoom?.number}>\n        <Input type=\"number\" autoFocus />\n      </Form.Item>\n      <Form.Item label=\"Tên khoa\" name=\"name\" initialValue={defaultRoom?.name}>\n        <Input />\n      </Form.Item>\n    </Form>\n  )\n}\n\nexport default RoomForm;","import React, { useState, useEffect } from 'react';\nimport { Row, Col, Button, Modal, Table, Form, Popconfirm, Space } from 'antd';\nimport { PlusOutlined, EditOutlined, DeleteOutlined } from '@ant-design/icons';\nimport RoomForm from 'forms/RoomForm/RoomForm';\nimport { addRoomAPI, deleteRoomAPI, getRoomAPI, updateRoomAPI } from 'services/admin/room.service';\nimport { formActions } from 'constant/formActions';\n\nconst RoomPage = () => {\n\n  const [modalVisible, setModalVisible] = useState(false);\n  const [rooms, setCategories] = useState([]);\n  const [fetchingCategories, setFetchingCategories] = useState(false);\n  const [modalLoading, setModalLoading] = useState(false);\n  const [action, setAction] = useState(formActions.CREATE);\n  const [selectedRoom, setSelectedRoom] = useState(null);\n  const [roomForm] = Form.useForm();\n\n  const tableColumns = [\n    {\n      title: 'Mã khoa',\n      key: 'number',\n      dataIndex: 'number',\n      width: '150px'\n    },\n    {\n      title: 'Tên',\n      key: 'name',\n      dataIndex: 'name'\n    },\n    {\n      title: 'Hành động',\n      key: 'action',\n      width: '150px',\n      render: (text, record, index) => (\n        <Space size={10}>\n          <Button icon={<EditOutlined />} onClick={() => handleEditClick(record)}></Button>\n          <Popconfirm\n            onConfirm={() => handleDelete(record)} title=\"Bạn có chắc muốn xóa không?\"\n            okText=\"Xóa\"\n            okType=\"danger\"\n            cancelText=\"Hủy bỏ\">\n            <Button icon={<DeleteOutlined />}></Button>\n          </Popconfirm>\n        </Space>\n      )\n    }\n  ]\n\n  function handleOpenModal() {\n    setAction(formActions.CREATE);\n    setModalVisible(true);\n  }\n\n  function handleCloseModal() {\n    setModalVisible(false);\n  }\n\n  async function getRooms() {\n    try {\n      setFetchingCategories(true);\n      const response = await getRoomAPI();\n      setCategories(response.data);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setFetchingCategories(false);\n    }\n  }\n\n  async function handleFormSubmit() {\n    try {\n      setModalLoading(true);\n      const values = await roomForm.validateFields();\n      if (action === formActions.CREATE) {\n        await addRoomAPI(values);\n      }\n\n      if (action === formActions.UPDATE) {\n        await updateRoomAPI(selectedRoom.id, values);\n      }\n\n      getRooms();\n\n      setModalVisible(false);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setModalLoading(false);\n    }\n  }\n\n  function handleEditClick(room) {\n    setAction(formActions.UPDATE);\n    setSelectedRoom(room);\n    setModalVisible(true);\n  }\n\n  async function handleDelete(unit) {\n    try {\n      await deleteRoomAPI(unit.id);\n      getRooms();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  function afterClose() {\n    roomForm.resetFields();\n    setSelectedRoom(null);\n  }\n\n  useEffect(() => {\n    getRooms();\n  }, []);\n\n  return (\n    <>\n      <Row justify=\"space-between\">\n        <Col><h1 className=\"text-xl\">Quản lý khoa</h1></Col>\n        <Col>\n          <Button type=\"primary\" icon={<PlusOutlined />} onClick={handleOpenModal}>Tạo mới</Button>\n        </Col>\n      </Row>\n      <Table\n        rowKey=\"id\"\n        columns={tableColumns}\n        dataSource={rooms}\n        \n        loading={fetchingCategories} />\n      <Modal\n        visible={modalVisible}\n        title={action === formActions.CREATE ? 'Thêm khoa' : 'Cập nhật khoa'}\n        onCancel={handleCloseModal}\n        confirmLoading={modalLoading}\n        destroyOnClose={true}\n        afterClose={afterClose}\n        onOk={handleFormSubmit}>\n        <RoomForm onFinish={handleFormSubmit} form={roomForm} defaultRoom={selectedRoom} />\n      </Modal>\n    </>\n  )\n}\n\nexport default RoomPage;","import axios from 'axios';\nimport { API_URL } from 'constant/apiUrl';\nimport qs from 'qs';\n\nconst endpointPrefix = `${API_URL}/admin/manage-user`;\n\nexport function getUsersAPI(query) {\n  const url = `${endpointPrefix}/?${qs.stringify(query)}`;\n  return axios.get(url);\n}\n\nexport function getUserDetailsAPI(id) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.get(url);\n}\n\nexport function addUserAPI({ email, password, first_name, last_name, phone, DOB, gender, role_id }) {\n  const url = `${endpointPrefix}/`;\n  return axios.post(url, {\n    email,\n    password,\n    first_name,\n    last_name,\n    phone,\n    DOB: DOB.format('yyyy-MM-DD'),\n    gender,\n    role_id\n  });\n}\n\nexport function updateUserAPI(id, { email, password, first_name, last_name, phone, DOB, gender, role_id }) {\n  const url = `${endpointPrefix}/${id}/`;\n  if (password) {\n    return axios.put(url, {\n      email,\n      password,\n      first_name,\n      last_name,\n      phone,\n      DOB: DOB.format('yyyy-MM-DD'),\n      gender,\n      role_id\n    })\n  }\n\n  return axios.put(url, {\n    email,\n    first_name,\n    last_name,\n    phone,\n    DOB: DOB.format('yyyy-MM-DD'),\n    gender,\n    role_id\n  })\n}\n\nexport function deleteUserAPI(id) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.delete(url);\n}\n\nexport function blockUserAPI(userId) {\n  const url = `${endpointPrefix}/${userId}/block/`;\n  return axios.get(url);\n}\n\nexport function unblockUserAPI(userId) {\n  const url = `${endpointPrefix}/${userId}/unblock/`;\n  return axios.get(url);\n}","export const ROLES = {\n  \"1\": {\n    name: \"admin\",\n    display: \"Quản trị viên\"\n  },\n  \"2\": {\n    name: \"physician\",\n    display: \"Bác sĩ\"\n  },\n  \"3\": {\n    name: \"receptionist\",\n    display: \"Lễ tân\"\n  },\n  \"4\": {\n    name: \"patient\",\n    display: \"Bệnh nhân\"\n  }\n}\n\nexport const ROLES_LIST = [1, 2, 3, 4];","export const requiredRule = (message = \"Vui lòng điền vào trường này\") => {\n  return {\n    required: true,\n    message: message\n  }\n}","import React, { useState, useEffect } from 'react';\nimport { Form, Input, Select, Spin, Row, Col, DatePicker, Radio } from 'antd';\nimport { getUserDetailsAPI } from 'services/admin/user.service';\nimport { ROLES, ROLES_LIST } from 'constant/roles';\nimport moment from 'moment';\nimport { requiredRule } from 'constant/formRules';\n\nconst UserForm = props => {\n  const { form, onFinish, defaultUser } = props;\n  const [userDetail, setUserDetail] = useState(null);\n  const [detailLoading, setDetailLoading] = useState(false);\n\n  async function getUserDetail(id) {\n    try {\n      setDetailLoading(true);\n      const detailResponse = await getUserDetailsAPI(id);\n      const userDetail = detailResponse.data;\n      setUserDetail(userDetail);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setDetailLoading(false);\n    }\n  }\n\n  async function getData() {\n    if (defaultUser?.id) {\n      await Promise.all([\n        getUserDetail(defaultUser.id),\n      ]);\n    }\n  }\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  useEffect(() => {\n    if (userDetail) {\n      form.setFieldsValue({\n        email: userDetail.email,\n        first_name: userDetail.first_name,\n        last_name: userDetail.last_name,\n        phone: userDetail.phone,\n        DOB: moment(userDetail.DOB),\n        gender: userDetail.gender,\n        role_id: userDetail.role.id\n      });\n    }\n  }, [userDetail, defaultUser, form]);\n\n  return (\n    <Spin spinning={detailLoading}>\n      <Form\n        layout=\"vertical\"\n        form={form}\n        autoComplete=\"off\"\n        onFinish={onFinish}>\n        <Form.Item label=\"Email\" name=\"email\" initialValue={userDetail?.email} rules={[\n          {\n            required: true,\n            message: \"Vui lòng điền vào trường này\"\n          }\n        ]}>\n          <Input type=\"email\" />\n        </Form.Item>\n\n        <Form.Item label=\"Mật khẩu\" name=\"password\" rules={[\n          {\n            required: !userDetail?.id,\n            message: \"Vui lòng điền vào trường này\"\n          }\n        ]}>\n          <Input.Password autoComplete=\"new-password\" placeholder={userDetail ? \"Nhập mật khẩu mới\" : \"\"} />\n        </Form.Item>\n\n        <Row>\n          <Col flex={1}>\n            <Form.Item label=\"Họ\" name=\"first_name\" rules={[requiredRule()]}>\n              <Input />\n            </Form.Item>\n          </Col>\n          <div style={{ width: 20 }}></div>\n          <Col flex={1}>\n            <Form.Item label=\"Tên\" name=\"last_name\" rules={[requiredRule()]}>\n              <Input />\n            </Form.Item>\n          </Col>\n        </Row>\n\n        <Form.Item label=\"Điện thoại\" name=\"phone\" initialValue={userDetail?.phone} rules={[requiredRule()]}>\n          <Input type=\"tel\" />\n        </Form.Item>\n\n        <Row>\n          <Col>\n            <Form.Item label=\"Ngày sinh\" name=\"DOB\" rules={[requiredRule()]}>\n              <DatePicker placeholder=\"Chọn ngày\" />\n            </Form.Item>\n          </Col>\n          <div style={{ width: 15 }}></div>\n          <Col flex={1}>\n            <Form.Item label=\"Giới tính\" name=\"gender\" rules={[requiredRule()]}>\n              <Radio.Group>\n                <Radio value=\"Nam\">Nam</Radio>\n                <Radio value=\"Nữ\">Nữ</Radio>\n                <Radio value=\"Khác\">Khác</Radio>\n              </Radio.Group>\n            </Form.Item>\n          </Col>\n        </Row>\n\n\n        <Form.Item label=\"Vai trò\" name=\"role_id\" initialValue={userDetail?.role_id} rules={[requiredRule()]}>\n          <Select>\n            {\n              ROLES_LIST.map(role_id => (\n                <Select.Option key={role_id} value={role_id}>{ROLES[role_id].display}</Select.Option>\n              ))\n            }\n          </Select>\n        </Form.Item>\n      </Form>\n    </Spin>\n  )\n}\n\nexport default UserForm;","import React from 'react';\nimport classnames from 'classnames';\nimport styles from './Circle.module.scss';\n\nconst Circle = props => {\n\n  const classes = classnames(\n    styles.circle,\n    { [styles['circle--success']]: props.color === 'success' }\n  )\n\n  return (\n    <div className={classes}></div>\n  )\n}\n\nexport default Circle;","import React, { useState, useEffect } from 'react';\nimport { Row, Col, Button, Modal, Table, Form, Popconfirm, Space } from 'antd';\nimport { PlusOutlined, LockOutlined, UnlockOutlined, EditOutlined, DeleteOutlined, EyeOutlined } from '@ant-design/icons';\nimport UserForm from 'forms/UserForm/UserForm';\nimport { formActions } from 'constant/formActions';\nimport NumberFormat from 'react-number-format';\nimport { ROLES } from 'constant/roles';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport Circle from 'components/Circle/Circle';\n\n// APIs\nimport { getUsersAPI, addUserAPI, updateUserAPI, deleteUserAPI, blockUserAPI, unblockUserAPI } from 'services/admin/user.service';\nimport { addBlockChainUserAPI } from 'services/user/user.service';\n\n\nconst AdminAccountPage = () => {\n\n  const history = useHistory();\n  const { pathname, search } = useLocation();\n  const urlSearchParams = new URLSearchParams(search);\n  const currentPageOnURL = Number(urlSearchParams.get('page'));\n  const [page, setPage] = useState(currentPageOnURL || 1);\n  const [modalVisible, setModalVisible] = useState(false);\n  const [users, setUsers] = useState();\n  const [fetchingUsers, setFetchingUsers] = useState(false);\n  const [modalLoading, setModalLoading] = useState(false);\n  const [action, setAction] = useState(formActions.CREATE);\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [userForm] = Form.useForm();\n\n  const tableColumns = [\n    {\n      title: '#',\n      key: '#',\n      render: (text, record, index) => index + 1\n    },\n    {\n      title: 'Họ và tên',\n      key: 'fullname',\n      render: (text, record) => record.first_name + \" \" + record.last_name\n    },\n    {\n      title: 'Email',\n      key: 'email',\n      dataIndex: 'email',\n      render: (text, record) => (\n        <Space>\n          <Circle color={record.is_verified_email ? 'success' : ''} />\n          <span>{record.email}</span>\n        </Space>\n      )\n    },\n    // {\n    //   title: 'Điện thoại',\n    //   key: 'phone',\n    //   dataIndex: 'phone',\n    //   render: (text, record) => (\n    //     <Space>\n    //       <Circle color={record.is_verified_phone ? 'success' : ''} />\n    //       <span>{record.phone}</span>\n    //     </Space>\n    //   )\n    // },\n    {\n      title: 'Vai trò',\n      key: 'role',\n      render: (text, record) => <span>{ROLES[record.role.id].display}</span>\n    },\n    {\n      title: 'Hành động', key: 'action', render: (text, record) => {\n        return (\n          <Space size={10}>\n            <Button icon={<EyeOutlined />} onClick={() => handleViewClick(record)}></Button>\n            <Button icon={<EditOutlined />} onClick={() => handleEditClick(record)}></Button>\n            <Popconfirm\n              onConfirm={() => handleDelete(record)}\n              title=\"Bạn có chắc muốn xóa không?\"\n              okText=\"Xóa\"\n              okType=\"danger\"\n              cancelText=\"Hủy bỏ\">\n              <Button icon={<DeleteOutlined />}></Button>\n            </Popconfirm>\n            {\n              <Popconfirm\n                onConfirm={() => handleBlockUnblock(record)}\n                title={`Bạn có chắc muốn ${record.is_active ? 'khóa' : 'mở khóa'} tài khoản này không?`}\n                okText={record.is_active ? \"Khóa\" : \"Mở khóa\"}\n                okType={record.is_active ? \"danger\" : \"primary\"}\n                cancelText=\"Hủy bỏ\">\n                {\n                  record.is_active ?\n                    <Button danger type=\"link\" icon={<LockOutlined />}>Khóa</Button>\n                    :\n                    <Button type=\"link\" icon={<UnlockOutlined />}>Mở khóa</Button>\n                }\n              </Popconfirm>\n            }\n          </Space>\n        )\n      }\n    }\n  ]\n\n  function handleOpenModal() {\n    setAction(formActions.CREATE);\n    setModalVisible(true);\n  }\n\n  function handleCloseModal() {\n    setModalVisible(false);\n  }\n\n  async function getUsers(page) {\n    try {\n      setFetchingUsers(true);\n      const response = await getUsersAPI({ page: page });\n      setUsers(response.data);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setFetchingUsers(false);\n    }\n  }\n\n  async function handleFormSubmit() {\n    try {\n      setModalLoading(true);\n      const values = await userForm.validateFields();\n\n      if (action === formActions.CREATE) {\n        const addReponse = await addUserAPI(values);\n        const responseData = addReponse.data;\n        const userId = responseData.id;\n        await addBlockChainUserAPI(userId, \"user\");\n        // await addBlockChainUserAPI(\"af6e0eb2-639b-471d-8394-74b0dfce3395\", \"user\");\n      }\n\n      if (action === formActions.UPDATE) {\n        if (!values.password) {\n          delete values.password;\n        }\n        await updateUserAPI(selectedUser.id, values);\n      }\n\n      getUsers(page);\n\n      setModalVisible(false);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setModalLoading(false);\n    }\n  }\n\n  async function handleBlockUnblock(user) {\n    try {\n      setFetchingUsers(true);\n      if (user.is_active) {\n        await blockUserAPI(user.id);\n      } else {\n        await unblockUserAPI(user.id);\n      }\n      getUsers();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  function handleViewClick(user) {\n\n  }\n\n  function handleEditClick(user) {\n    setAction(formActions.UPDATE);\n    setSelectedUser(user);\n    setModalVisible(true);\n  }\n\n  async function handleDelete(user) {\n    try {\n      await deleteUserAPI(user.id);\n      getUsers(page);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  function afterClose() {\n    userForm.resetFields();\n    setSelectedUser(null);\n  }\n\n  function handlePaginationChange(page) {\n    getUsers(page);\n    setPage(page);\n    history.push({\n      pathname: pathname,\n      search: `page=${page}`\n    })\n  }\n\n  useEffect(() => {\n    getUsers(page);\n  }, []);\n\n  return (\n    <>\n      <Row justify=\"space-between\">\n        <Col><h1 className=\"text-xl\">Quản lý tài khoản</h1></Col>\n        <Col>\n          <Button type=\"primary\" icon={<PlusOutlined />} onClick={handleOpenModal}>Tạo mới</Button>\n        </Col>\n      </Row>\n      <Table\n        rowKey=\"id\"\n        columns={tableColumns}\n        dataSource={users?.results}\n        pagination={{\n          defaultCurrent: page,\n          current: page,\n          pageSize: 10,\n          total: users?.count,\n          onChange: handlePaginationChange\n        }}\n        loading={fetchingUsers} />\n      <Modal\n        visible={modalVisible}\n        title={action === formActions.CREATE ? 'Thêm tài khoản' : 'Cập nhật tài khoản'}\n        onCancel={handleCloseModal}\n        confirmLoading={modalLoading}\n        destroyOnClose={true}\n        afterClose={afterClose}\n        onOk={handleFormSubmit}>\n        <UserForm onFinish={handleFormSubmit} form={userForm} defaultUser={selectedUser} />\n      </Modal>\n    </>\n  )\n}\n\nexport default AdminAccountPage;","import React from 'react';\n\nconst AdminSettingPage = () => {\n  return (\n    <div>Admin setting page</div>\n  )\n}\n\nexport default AdminSettingPage;","import React, { useEffect } from 'react';\nimport Cookie from 'js-cookie';\nimport { Redirect } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { logoutAction } from 'store/actions/auth.action';\nimport jwtDecode from 'jwt-decode';\n\nconst withPrivateRoute = (Child, roles) => {\n  const WrapperComponent = (props) => {\n\n    const dispatch = useDispatch();\n    const token = Cookie.get('EMR_token');\n    const user = useSelector((state) => state.userState.user);\n\n    function isValidRole(user) {\n      const userRole = user?.role.name;\n      const isValid = roles.includes(userRole);\n      return isValid;\n    }\n\n    useEffect(() => {\n      if (user && user.role) {\n        if (!isValidRole(user)) {\n          dispatch(logoutAction());\n        }\n      }\n    }, [user, dispatch]);\n\n    try {\n      if (!token || token.length === 0 || !jwtDecode(token)) {\n        return <Redirect to=\"/login\" />;\n      } else {\n        return <Child {...props} />\n      }\n      \n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  return WrapperComponent;\n}\n\nexport default withPrivateRoute;","import React from 'react';\nimport { Button, Layout, Modal, Spin, Space, Avatar } from 'antd';\nimport {\n  LogoutOutlined,\n  ExclamationCircleOutlined\n} from '@ant-design/icons';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { logoutAction } from 'store/actions/auth.action';\nimport { ROLES } from 'constant/roles';\n\nconst { Header } = Layout;\n\nconst CustomHeader = () => {\n\n  const dispatch = useDispatch();\n  const user = useSelector((state) => state.userState.user);\n\n  function handleLogout() {\n    Modal.confirm({\n      title: \"Đăng xuất\",\n      icon: <ExclamationCircleOutlined />,\n      content: \"Bạn có chắc muốn đăng xuất không?\",\n      onOk() {\n        dispatch(logoutAction());\n      }\n    })\n  }\n\n  return (\n    <Header className=\"header flex items-center\">\n      <div className=\"text-2xl text-white\">EMR</div>\n      <div className=\"ml-auto\"></div>\n      <div className=\"text-white\">\n        {\n          user ?\n            <Space>\n              {\n                user.avatar ?\n                  <Avatar src={user.avatar} />\n                  :\n                  <Avatar style={{ backgroundColor: '#1890ff' }}>{user.last_name.charAt(0)}</Avatar>\n              }\n              <span>{ user.first_name } { user.last_name } ({ ROLES[user.role.id].display })</span>\n            </Space>\n            :\n            \"Đang tải...\"\n        }\n\n        <span className=\"ml-3\">|</span>\n      </div>\n      <Button type=\"default\" ghost icon={<LogoutOutlined />} className=\"border-none\" onClick={handleLogout}>Đăng xuất</Button>\n    </Header>\n  )\n}\n\nexport default CustomHeader;","import React from 'react';\nimport { Form, Input } from 'antd';\n\nconst DrugDosageFormForm = props => {\n  const { form, onFinish, defaultDosageForm } = props;\n\n  return (\n    <Form\n      layout=\"vertical\"\n      form={form}\n      onFinish={onFinish}>\n      <Form.Item label=\"Dạng bào chế\" name=\"name\" initialValue={defaultDosageForm?.name}>\n        <Input autoFocus />\n      </Form.Item>\n    </Form>\n  )\n}\n\nexport default DrugDosageFormForm;","import React, { useState, useEffect } from 'react';\nimport { Row, Col, Button, Modal, Table, Form, Popconfirm, Space } from 'antd';\nimport { PlusOutlined, EditOutlined, DeleteOutlined } from '@ant-design/icons';\nimport DrugDosageFormForm from 'forms/DrugDosageFormForm/DrugDosageFormForm';\nimport { addDrugDosageFormAPI, deleteDrugDosageFormAPI, getDrugDosageFormAPI, updateDrugDosageFormAPI } from 'services/admin/drug-dosage-form.service';\nimport { formActions } from 'constant/formActions';\n\nconst DrugDosageFormPage = () => {\n\n  const [modalVisible, setModalVisible] = useState(false);\n  const [dosageForms, setDosageForms] = useState([]);\n  const [fetchingDosageForms, setFetchingDosageForms] = useState(false);\n  const [modalLoading, setModalLoading] = useState(false);\n  const [action, setAction] = useState(formActions.CREATE);\n  const [selectedDosageForm, setSelectedDosageForm] = useState(null);\n  const [drugDosageFormForm] = Form.useForm();\n\n  const tableColumns = [\n    {\n      title: '#',\n      key: '#',\n      render: (text, record, index) => index + 1\n    },\n    {\n      title: 'Tên',\n      key: 'name',\n      dataIndex: 'name'\n    },\n    {\n      title: 'Hành động',\n      key: 'action',\n      render: (text, record, index) => (\n        <Space size={10}>\n          <Button icon={<EditOutlined />} onClick={() => handleEditClick(record)}></Button>\n          <Popconfirm\n            onConfirm={() => handleDelete(record)} title=\"Bạn có chắc muốn xóa không?\"\n            okText=\"Xóa\"\n            okType=\"danger\"\n            cancelText=\"Hủy bỏ\">\n            <Button icon={<DeleteOutlined />}></Button>\n          </Popconfirm>\n        </Space>\n      )\n    }\n  ]\n\n  function handleOpenModal() {\n    setAction(formActions.CREATE);\n    setModalVisible(true);\n  }\n\n  function handleCloseModal() {\n    setModalVisible(false);\n  }\n\n  async function getDrugDosageForms() {\n    try {\n      setFetchingDosageForms(true);\n      const response = await getDrugDosageFormAPI();\n      setDosageForms(response.data);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setFetchingDosageForms(false);\n    }\n  }\n\n  async function handleFormSubmit() {\n    try {\n      setModalLoading(true);\n      const values = await drugDosageFormForm.validateFields();\n      if (action === formActions.CREATE) {\n        await addDrugDosageFormAPI(values.name);\n      }\n\n      if (action === formActions.UPDATE) {\n        await updateDrugDosageFormAPI(selectedDosageForm.id, values.name);\n      }\n\n      getDrugDosageForms();\n\n      setModalVisible(false);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setModalLoading(false);\n    }\n  }\n\n  function handleEditClick(dosageForm) {\n    setAction(formActions.UPDATE);\n    setSelectedDosageForm(dosageForm);\n    setModalVisible(true);\n  }\n\n  async function handleDelete(unit) {\n    try {\n      await deleteDrugDosageFormAPI(unit.id);\n      getDrugDosageForms();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  function afterClose() {\n    drugDosageFormForm.resetFields();\n    setSelectedDosageForm(null);\n  }\n\n  useEffect(() => {\n    getDrugDosageForms();\n  }, []);\n\n  return (\n    <>\n      <Row justify=\"space-between\">\n        <Col><h1 className=\"text-xl\">Quản lý đường dùng thuốc</h1></Col>\n        <Col>\n          <Button type=\"primary\" icon={<PlusOutlined />} onClick={handleOpenModal}>Tạo mới</Button>\n        </Col>\n      </Row>\n      <Table\n        rowKey=\"id\"\n        columns={tableColumns}\n        dataSource={dosageForms}\n        pagination={false}\n        loading={fetchingDosageForms} />\n      <Modal\n        visible={modalVisible}\n        title={action === formActions.CREATE ? 'Thêm đường dùng thuốc' : 'Cập nhật đường dùng thuốc'}\n        onCancel={handleCloseModal}\n        confirmLoading={modalLoading}\n        destroyOnClose={true}\n        afterClose={afterClose}\n        onOk={handleFormSubmit}>\n        <DrugDosageFormForm onFinish={handleFormSubmit} form={drugDosageFormForm} defaultDosageForm={selectedDosageForm} />\n      </Modal>\n    </>\n  )\n}\n\nexport default DrugDosageFormPage;","import React from 'react';\nimport { Link, Redirect, Switch, Route, useRouteMatch, useLocation } from 'react-router-dom';\nimport { Layout, Menu } from 'antd';\nimport {\n  UserOutlined,\n  DashboardOutlined,\n  MedicineBoxOutlined,\n  BugOutlined,\n  DollarOutlined,\n  IdcardOutlined,\n  ClockCircleOutlined,\n  AppstoreOutlined,\n  CalendarOutlined,\n  ContainerOutlined,\n  SettingOutlined,\n  NotificationOutlined} from '@ant-design/icons';\nimport AdminDashboard from 'pages/admin/dashboard';\nimport DrugCategoryPage from 'pages/common/drug/drug-category';\nimport DrugUnitPage from 'pages/common/drug/drug-unit';\nimport DrugRoutePage from 'pages/common/drug/drug-route';\nimport DrugPage from 'pages/common/drug/drug';\nimport DrugInstructionPage from 'pages/common/drug/drug-instruction';\nimport DiseaseCategory from 'pages/common/disease/disease-category';\nimport DiseasePage from 'pages/common/disease/disease';\nimport NotificationPage from 'pages/common/notification/notification';\nimport VisitPage from 'pages/common/visit/visit';\nimport PatientPage from 'pages/common/patient/patient';\nimport AppointmentPage from 'pages/common/appointment/apointment';\nimport ServicePage from 'pages/common/service/service';\nimport WorkingHourPage from 'pages/admin/working-hour';\nimport RoomPage from 'pages/common/room/room';\nimport AdminAccountPage from 'pages/admin/account';\nimport AdminSettingPage from 'pages/admin/setting';\nimport withPrivateRoute from 'HOCs/withPrivateRoute';\nimport CustomHeader from 'components/Header';\nimport DrugDosageFormPage from 'pages/common/drug/drug-dosage-form';\n\nconst { Sider, Content } = Layout;\nconst { SubMenu } = Menu;\n\nconst AdminLayout = () => {\n  const match = useRouteMatch();\n  const location = useLocation();\n  const path = match.path;\n\n  return (\n    <Layout>\n      <CustomHeader />\n      <Layout>\n        <Sider width={200} className=\"site-layout-background\">\n          <Menu\n            mode=\"inline\"\n            style={{ height: '100%', borderRight: 0 }}\n            selectedKeys={[location.pathname]}\n          >\n            <Menu.Item key=\"/admin/dashboard\" icon={<DashboardOutlined />}>\n              <Link to=\"/admin/dashboard\">Bảng điều khiển</Link>\n            </Menu.Item>\n            <SubMenu key=\"drug\" icon={<MedicineBoxOutlined />} title=\"Quản lý thuốc\">\n              <Menu.Item key=\"/admin/drug/category\">\n                <Link to=\"/admin/drug/category\">Loại thuốc</Link>\n              </Menu.Item>\n              <Menu.Item key=\"/admin/drug/unit\">\n                <Link to=\"/admin/drug/unit\">Đơn vị tính</Link>\n              </Menu.Item>\n              <Menu.Item key=\"/admin/drug/route\">\n                <Link to=\"/admin/drug/route\">Đường dùng</Link>\n              </Menu.Item>\n              <Menu.Item key=\"/admin/drug/dosage-form\">\n                <Link to=\"/admin/drug/dosage-form\">Dạng bào chế</Link>\n              </Menu.Item>\n              <Menu.Item key=\"/admin/drug\">\n                <Link to=\"/admin/drug\">Thuốc</Link>\n              </Menu.Item>\n              <Menu.Item key=\"/admin/drug/instruction\">\n                <Link to=\"/admin/drug/instruction\">Hướng dẫn sử dụng</Link>\n              </Menu.Item>\n            </SubMenu>\n            <SubMenu key=\"disease\" icon={<BugOutlined />} title=\"Quản lý bệnh\">\n              <Menu.Item key=\"/admin/disease/category\">\n                <Link to=\"/admin/disease/category\">Nhóm bệnh</Link>\n              </Menu.Item>\n              <Menu.Item key=\"/admin/disease\">\n                <Link to=\"/admin/disease\">Bệnh</Link>\n              </Menu.Item>\n            </SubMenu>\n\n            <Menu.Item key=\"/admin/notification\" icon={<NotificationOutlined />}>\n              <Link to=\"/admin/notification\">Thông báo</Link>\n            </Menu.Item>\n            <Menu.Item key=\"/admin/visit\" icon={<ContainerOutlined />}>\n              <Link to=\"/admin/visit\">Nhóm bệnh</Link>\n            </Menu.Item>\n            <Menu.Item key=\"/admin/patient\" icon={<IdcardOutlined />}>\n              <Link to=\"/admin/patient\">Bệnh nhân</Link>\n            </Menu.Item>\n            <Menu.Item key=\"/admin/appointment\" icon={<CalendarOutlined />}>\n              <Link to=\"/admin/appointment\">Lịch hẹn</Link>\n            </Menu.Item>\n            <Menu.Item key=\"/admin/service\" icon={<DollarOutlined />}>\n              <Link to=\"/admin/service\">Dịch vụ</Link>\n            </Menu.Item>\n\n            <Menu.Item key=\"/admin/working-hour\" icon={<ClockCircleOutlined />}>\n              <Link to=\"/admin/working-hour\">Giờ làm việc</Link>\n            </Menu.Item>\n            <Menu.Item key=\"/admin/room\" icon={<AppstoreOutlined />}>\n              <Link to=\"/admin/room\">Khoa</Link>\n            </Menu.Item>\n\n            <Menu.Item key=\"/admin/account\" icon={<UserOutlined />}>\n              <Link to=\"/admin/account\">Tài khoản</Link>\n            </Menu.Item>\n            <Menu.Item key=\"/admin/setting\" icon={<SettingOutlined />}>\n              <Link to=\"/admin/setting\">Cài đặt</Link>\n            </Menu.Item>\n          </Menu>\n        </Sider>\n        <Layout style={{ padding: '0 24px 24px' }}>\n          <Content\n            className=\"site-layout-background\"\n            style={{\n              padding: 24,\n              margin: 0,\n              minHeight: 280,\n            }}\n          >\n            <Switch>\n              {/* Dashboard */}\n              <Route path={`${path}/dashboard`}>\n                <AdminDashboard />\n              </Route>\n\n              {/* Drug */}\n              <Route path={`${path}/drug/category`}>\n                <DrugCategoryPage />\n              </Route>\n              <Route path={`${path}/drug/unit`}>\n                <DrugUnitPage />\n              </Route>\n              <Route path={`${path}/drug/route`}>\n                <DrugRoutePage />\n              </Route>\n              <Route path={`${path}/drug/dosage-form`}>\n                <DrugDosageFormPage />\n              </Route>\n              <Route path={`${path}/drug`} exact>\n                <DrugPage />\n              </Route>\n              <Route path={`${path}/drug/instruction`}>\n                <DrugInstructionPage />\n              </Route>\n\n              {/* Disease */}\n              <Route path={`${path}/disease/category`}>\n                <DiseaseCategory />\n              </Route>\n              <Route path={`${path}/disease`}>\n                <DiseasePage />\n              </Route>\n\n              {/* Notification */}\n              <Route path={`${path}/notification`}>\n                <NotificationPage />\n              </Route>\n\n              {/* Visit */}\n              <Route path={`${path}/visit`}>\n                <VisitPage />\n              </Route>\n\n              {/* Patient */}\n              <Route path={`${path}/patient`}>\n                <PatientPage />\n              </Route>\n\n              {/* Appointment */}\n              <Route path={`${path}/appointment`}>\n                <AppointmentPage />\n              </Route>\n\n              {/* Service */}\n              <Route path={`${path}/service`}>\n                <ServicePage />\n              </Route>\n\n              {/* Service */}\n              <Route path={`${path}/working-hour`}>\n                <WorkingHourPage />\n              </Route>\n\n              {/* Room */}\n              <Route path={`${path}/room`}>\n                <RoomPage />\n              </Route>\n\n              {/* Room */}\n              <Route path={`${path}/account`}>\n                <AdminAccountPage />\n              </Route>\n\n              {/* Room */}\n              <Route path={`${path}/setting`}>\n                <AdminSettingPage />\n              </Route>\n\n              {/* Fallback */}\n              <Redirect to={`/admin/dashboard`} />\n            </Switch>\n          </Content>\n        </Layout>\n      </Layout>\n    </Layout>\n  )\n}\n\nexport default withPrivateRoute(AdminLayout, ['admin']);","import axios from 'axios';\nimport { API_URL } from 'constant/apiUrl';\n\nconst endpointPrefix = `${API_URL}/user/disease`;\n\nexport function getDiseasesAPI(categoryId) {\n  const url = `${endpointPrefix}/`;\n  if (categoryId) {\n    return axios.get(`${url}?disease_category=${categoryId}`);\n  }\n  return axios.get(url);\n}\n\nexport function getDiseaseDetailsAPI(id) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.get(url);\n}","import axios from 'axios';\nimport { API_URL } from 'constant/apiUrl';\nimport { getQueryString } from 'utils/string';\n\nconst endpointPrefix = `${API_URL}/user/drug`;\n\nexport function getDrugsAPI(params) {\n  const url = `${endpointPrefix}/`;\n\n  if (params) {\n    return axios.get(`${url}?${getQueryString(params)}`);\n  }\n  return axios.get(url);\n}\n\nexport function getDrugDetailsAPI(id) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.get(url);\n}","import React, { useState, useEffect } from 'react';\nimport { Form, Select, Row, Col, Button } from 'antd';\nimport { getDiseasesAPI } from 'services/user/disease.service';\nimport { getDiseasesAPI as adminGetDiseasesAPI } from 'services/admin/disease.service';\nimport { SaveOutlined, MinusCircleOutlined } from '@ant-design/icons';\n\nconst { Item, List } = Form;\nconst { Option } = Select;\n\nconst VisitDiseaseForm = props => {\n  const { form, categories, user, currentValues, loading } = props;\n  const [localCategories, setLocalCategories] = useState(categories);\n  const [diseases, setDiseases] = useState(null);\n  const [diseaseLoading, setDiseaseLoading] = useState(false);\n\n  async function getDiseasesByCategory(category) {\n    try {\n      setDiseaseLoading(true);\n      setDiseases(null);\n      let diseaseResponse;\n      if (user.role === \"admin\") {\n        diseaseResponse = await adminGetDiseasesAPI(category);\n      } else {\n        diseaseResponse = await getDiseasesAPI(category);\n      }\n      setDiseases(diseaseResponse.data);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setDiseaseLoading(false);\n    }\n  }\n\n  useEffect(() => {\n    setLocalCategories(categories);\n  }, [categories])\n\n  function handleCatSearch(value) {\n    console.log(value);\n\n    if (value) {\n      const filterArr = categories.filter(cat => cat.name.includes(value));\n      console.log(filterArr);\n      setLocalCategories(filterArr);\n    } else {\n      setLocalCategories(categories);\n    }\n  }\n\n  function handleCatChange(value) {\n    if (value) {\n      getDiseasesByCategory(value);\n    }\n  }\n\n  function onFinish(values) {\n    props.onFinish(values);\n  }\n\n  return (\n    <Form form={form} name=\"dynamic_form\" layout=\"vertical\" onFinish={onFinish} initialValues={currentValues}>\n      <List name=\"emr_diseases\">\n        {(fields, { add, remove }) => (\n          <>\n            {\n              fields.map((field, index) => (\n                <Row gutter={15} key={field.key} align=\"middle\" className=\"mb-5\">\n                  <Col>{index + 1}</Col>\n                  <Col flex=\"0 0 300px\">\n                    <Item\n                      {...field}\n                      name={[field.name, 'diseaseCategory']}\n                      fieldKey={[field.fieldKey, 'diseaseCategory']}\n                      rules={[{ required: true, message: \"Trường này là bắt buộc\" }]}\n                      style={{margin: 0}}>\n                      <Select\n                        showSearch onSearch={handleCatSearch}\n                        placeholder=\"Nhóm bệnh\"\n                        onChange={handleCatChange}>\n                        {\n                          localCategories.map(cat => (\n                            <Option key={cat.id} value={cat.id}>{cat.name}</Option>\n                          ))\n                        }\n                      </Select>\n                    </Item>\n                  </Col>\n                  <Col flex={5}>\n                    <Item\n                      {...field}\n                      name={[field.name, 'disease']}\n                      fieldKey={[field.fieldKey, 'disease']}\n                      rules={[{ required: true, message: \"Trường này là bắt buộc\" }]}\n                      style={{margin: 0}}>\n                      <Select loading={diseaseLoading} placeholder=\"Bệnh\">\n                        {\n                          diseases?.results.map(disease => (\n                            <Option key={disease.id} value={disease.name}>{disease.name}</Option>\n                          ))\n                        }\n                      </Select>\n                    </Item>\n                  </Col>\n                  <Col>\n                    <MinusCircleOutlined onClick={() => remove(field.name)} />\n                  </Col>\n                </Row>\n              ))\n            }\n            <Item>\n              <Button type=\"dashed\" block onClick={() => add()}>Thêm bệnh</Button>\n            </Item>\n          </>\n        )\n        }\n      </List>\n\n      <div>\n        <Button loading={loading} htmlType=\"submit\" icon={<SaveOutlined />}>Lưu</Button>\n      </div>\n    </Form>\n  )\n}\n\nexport default VisitDiseaseForm;","import React from 'react';\nimport { Form, Row, Col, Select, Button } from 'antd';\nimport { SaveOutlined, PlusOutlined, MinusCircleOutlined } from '@ant-design/icons';\n\nconst { Item, List } = Form;\nconst { Option } = Select;\n\nconst VisitServiceForm = props => {\n\n  const { services, currentValues, loading } = props;\n\n  function onFinish(values) {\n    values.emr_services = values.emr_services.map(service => services.find(s => s.id === service.id));\n    props.onFinish(values);\n  }\n\n  return (\n    <Form onFinish={onFinish} initialValues={currentValues}>\n      <List name=\"emr_services\">\n        {\n          (fields, { add, remove }) => (\n            <>\n              {\n                fields.map((field, index) => (\n                  <Row gutter={15} key={field.key} align=\"middle\" className=\"mb-5\">\n                    <Col>{index + 1}</Col>\n                    <Col flex={1}>\n                      <Item {...field} name={[field.name, 'id']} fieldKey={[field.fieldKey, 'id']} style={{margin: 0}} rules={[{ required: true, message: \"Trường này là bắt buộc\" }]}>\n                        <Select placeholder=\"Chọn dịch vụ\">\n                          {\n                            services.map((service, index) => (\n                              <Option value={service.id} key={service.id}>\n                                {service.name}\n                              </Option>\n                            ))\n                          }\n                        </Select>\n                      </Item>\n                    </Col>\n                    <Col>\n                          <MinusCircleOutlined onClick={() => remove(field.name)} />\n                    </Col>\n                  </Row>\n                ))\n              }\n              <Item>\n                <Button type=\"dashed\" block onClick={() => add()} icon={<PlusOutlined />}>Thêm dịch vụ</Button>\n              </Item>\n            </>\n          )\n        }\n      </List>\n\n      <div>\n        <Button loading={loading} htmlType=\"submit\" icon={<SaveOutlined />}>Lưu</Button>\n      </div>\n    </Form>\n  )\n}\n\nexport default VisitServiceForm;","import React, { useState, useEffect } from 'react';\nimport { Form, Input, Select, Row, Col, Button } from 'antd';\nimport { getDrugsAPI as adminGetDrugsAPI } from 'services/admin/drug.service';\nimport { getDrugsAPI } from 'services/user/drug.service';\nimport { PlusOutlined, MinusCircleOutlined, SaveOutlined } from '@ant-design/icons';\n\nconst { Item, List, useForm } = Form;\nconst { Option } = Select;\n\nconst VisitDrugForm = props => {\n  const { user, categories, instructions, currentValues, loading } = props;\n\n  const [drugs, setDrugs] = useState([]);\n  const [drugLoading, setDrugLoading] = useState(false);\n  const [form] = useForm();\n\n  async function getDrugsByCategory(category) {\n    try {\n      setDrugLoading(true);\n      let drugResponse;\n      if (user.role === \"admin\") {\n        drugResponse = await adminGetDrugsAPI({ drug_category: category });\n      } else {\n        drugResponse = await getDrugsAPI({ drug_category: category });\n      }\n      setDrugs(drugResponse.data.results);\n    } catch (error) {\n\n    } finally {\n      setDrugLoading(false);\n    }\n  }\n\n  function handleCategoryChange(category) {\n    getDrugsByCategory(category);\n  }\n\n  function handleTotalFocus() {\n    console.log(form.getFieldValue('numberOfDays'));\n    console.log(form.getFieldValue('morning'));\n    console.log(form.getFieldValue('afternoon'));\n    console.log(form.getFieldValue('evening'));\n    console.log(form.getFieldValue('night'));\n  }\n\n  function onFinish(values) {\n    values.emr_drugs = values.emr_drugs.map(drug => {\n      const currentDrug = drugs.find(d => d.name === drug.drug);\n      drug.price = currentDrug.price;\n      return drug;\n    })\n    props.onFinish(values);\n  }\n\n  return (\n    <Form layout=\"vertical\" onFinish={onFinish} form={form} initialValues={currentValues}>\n      <List name=\"emr_drugs\">\n        {(fields, { add, remove }) => (\n          <>\n            {\n              fields.map((field, index) => (\n                <Row gutter={15} key={field.key} align=\"middle\">\n                  <Col>{index + 1}</Col>\n                  <Col flex=\"0 0 220px\">\n                    <Item\n                      {...field}\n                      label=\"Nhóm thuốc\"\n                      name={[field.name, 'drugCategory']}\n                      fieldKey={[field.fieldKey, 'drugCategory']}\n                      rules={[{ required: true, message: \"Trường này là bắt buộc\" }]}>\n                      <Select onChange={handleCategoryChange}>\n                        {\n                          categories.map(cat => (\n                            <Option key={cat.id} value={cat.id}>{cat.name}</Option>\n                          ))\n                        }\n                      </Select>\n                    </Item>\n                  </Col>\n                  <Col flex=\"1 0 220px\">\n                    <Item\n                      {...field}\n                      label=\"Thuốc\"\n                      name={[field.name, 'drug']}\n                      fieldKey={[field.fieldKey, 'drug']}\n                      rules={[{ required: true, message: \"Trường này là bắt buộc\" }]}>\n                      <Select loading={drugLoading}>\n                        {\n                          drugs.map(drug => (\n                            <Option key={drug.id} value={drug.name}>{drug.code}. {drug.name}</Option>\n                          ))\n                        }\n                      </Select>\n                    </Item>\n                  </Col>\n                  <Col flex=\"0 0 120px\">\n                    <Item\n                      {...field}\n                      name={[field.name, 'drugInstruction']}\n                      fieldKey={[field.fieldKey, 'drugInstruction']}\n                      rules={[{ required: true, message: \"Trường này là bắt buộc\" }]}\n                      label=\"Cách dùng\"\n                      style={{ minWidth: 200 }}>\n                      <Select>\n                        {\n                          instructions.map(ins => (\n                            <Option key={ins.id} value={ins.instruction}>{ins.instruction}</Option>\n                          ))\n                        }\n                      </Select>\n                    </Item>\n                  </Col>\n                  {/* </Row> */}\n                  {/* <Row gutter={15}> */}\n                  <Col flex=\"0 0 80px\">\n                    <Item\n                      {...field}\n                      name={[field.name, 'numberOfDays']}\n                      fieldKey={[field.fieldKey, 'numberOfDays']}\n                      rules={[{ required: true, message: \"Trường này là bắt buộc\" }]}\n                      label=\"Số ngày\">\n                      <Input type=\"number\" />\n                    </Item>\n                  </Col>\n                  <Col flex=\"0 0 80px\">\n                    <Item label=\"Sáng\" name={[field.name, 'morning']}>\n                      <Input type=\"number\" />\n                    </Item>\n                  </Col>\n                  <Col flex=\"0 0 80px\">\n                    <Item label=\"Trưa\" name={[field.name, 'afternoon']}>\n                      <Input type=\"number\" />\n                    </Item>\n                  </Col>\n                  <Col flex=\"0 0 80px\">\n                    <Item label=\"Chiều\" name={[field.name, 'evening']}>\n                      <Input type=\"number\" />\n                    </Item>\n                  </Col>\n                  <Col flex=\"0 0 80px\">\n                    <Item label=\"Tối\" name={[field.name, 'night']}>\n                      <Input type=\"number\" />\n                    </Item>\n                  </Col>\n                  <Col flex=\"0 0 80px\">\n                    <Item\n                      {...field}\n                      label=\"Số lượng\"\n                      name={[field.name, 'total']}\n                      fieldKey={[field.fieldKey, 'total']}>\n                      <Input type=\"number\" onFocus={handleTotalFocus} />\n                    </Item>\n                  </Col>\n                  <Col>\n                    <MinusCircleOutlined onClick={() => remove(field.name)} />\n                  </Col>\n                </Row>\n              ))\n\n            }\n            <Item>\n              <Button type=\"dashed\" block onClick={() => add()} icon={<PlusOutlined />}>Thêm đơn thuốc</Button>\n            </Item>\n          </>\n        )}\n      </List>\n\n      <div>\n        <Button loading={loading} htmlType=\"submit\" icon={<SaveOutlined />}>Lưu</Button>\n      </div>\n    </Form>\n  )\n}\n\nexport default VisitDrugForm;","export function getBase64(file) {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = () => resolve(reader.result);\n    reader.onerror = error => reject(error);\n  });\n}","import React, { useState } from 'react';\nimport { Upload, Modal } from 'antd';\nimport { PlusOutlined } from '@ant-design/icons';\nimport { API_URL } from 'constant/apiUrl';\nimport Cookie from 'js-cookie';\nimport { getBase64 } from 'utils/image';\n\n// APIs\n// import { removeImageAPI } from 'services/user/emr.service';\n\nconst VisitImagesForm = props => {\n\n  const { emrId } = props;\n\n  const [previewVisible, setPreviewVisible] = useState(false);\n  const [previewImage, setPreviewImage] = useState('');\n  const [previewTitle, setPreviewTitle] = useState('');\n  const [fileList, setFileList] = useState([...props.fileList]);\n  const token = Cookie.get('EMR_token');\n\n  const uploadButton = (\n    <div>\n      <PlusOutlined />\n      <div style={{ marginTop: 8 }}>Tải lên</div>\n    </div>\n  );\n\n  async function handleChange(uploadEvent) {\n    const { event, file, fileList } = uploadEvent;\n    setFileList(fileList);\n    props.onChange(uploadEvent);\n  }\n\n  async function handlePreview(file) {\n    if (!file.url && !file.preview) {\n      file.preview = await getBase64(file.originFileObj);\n    }\n\n    setPreviewImage(file.url || file.preview);\n    setPreviewVisible(true);\n    setPreviewTitle(file.name || file.url.substring(file.url.lastIndexOf('/') + 1),);\n  }\n\n  function handleCancel() {\n    setPreviewVisible(false);\n  }\n\n  return (\n    <>\n      <Upload\n        onChange={handleChange}\n        listType=\"picture-card\"\n        fileList={fileList}\n        action={`${API_URL}/user/emr/image/`}\n        name=\"image\"\n        headers={{ Authorization: `Bearer ${token}` }}\n        onPreview={handlePreview}>\n        {uploadButton}\n      </Upload>\n      <Modal\n        visible={previewVisible}\n        title={previewTitle}\n        footer={null}\n        onCancel={handleCancel}>\n        <img src={previewImage} alt=\"\" style={{ width: '100%' }} />\n      </Modal>\n    </>\n  )\n}\n\nexport default VisitImagesForm;","import axios from 'axios';\n\nimport { API_URL } from \"constant/apiUrl\";\n\nconst endpointPrefix = `${API_URL}/user/disease-category`;\n\nexport function getDiseaseCategoryAPI(search = \"\") {\n  const url = `${endpointPrefix}/?search=${search}`;\n  return axios.get(url);\n}","import axios from 'axios';\n\nimport { API_URL } from \"constant/apiUrl\";\n\nconst endpointPrefix = `${API_URL}/user/service`;\n\nexport function getServicesAPI(search = \"\") {\n  const url = `${endpointPrefix}/?search=${search}`;\n  return axios.get(url);\n}\n\nexport function getServiceDetailsAPI(id) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.get(url);\n}","import axios from 'axios';\n\nimport { API_URL } from \"constant/apiUrl\";\n\nconst endpointPrefix = `${API_URL}/user/drug-category`;\n\nexport function getDrugCategoryAPI(search = \"\") {\n  const url = `${endpointPrefix}/?search=${search}`;\n  return axios.get(url);\n}","import axios from 'axios';\n\nimport { API_URL } from \"constant/apiUrl\";\n\nconst endpointPrefix = `${API_URL}/user/drug-instruction`;\n\nexport function getDrugInstructionsAPI() {\n  const url = `${endpointPrefix}/`;\n  return axios.get(url);\n}","import React, { useState, useEffect } from 'react';\nimport {\n  Collapse,\n  PageHeader,\n  message,\n  Divider,\n  Button,\n  Row,\n  Col,\n  Space,\n  Spin,\n  Form,\n  Input,\n  DatePicker,\n  Select,\n  Radio,\n  Tabs\n} from 'antd';\nimport moment from 'moment';\nimport { connect } from 'react-redux';\nimport VisitDiseaseForm from 'forms/Visit/VisitDiseaseForm';\nimport VisitServiceForm from 'forms/Visit/VisitServiceForm';\nimport VisitDrugForm from 'forms/Visit/VisitDrugForm';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { removeDuplicates } from 'utils/array';\nimport VisitImagesForm from 'forms/Visit/VisitImagesForm';\nimport { FileDoneOutlined, SaveOutlined, DeleteOutlined, MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\n\n// APIs\nimport { getDiseaseCategoryAPI } from 'services/user/disease-category.service';\nimport { getServicesAPI } from 'services/user/medical-service.service';\nimport { getDrugCategoryAPI } from 'services/user/drug-category.service';\nimport { getDrugInstructionsAPI } from 'services/user/drug-instruction.service';\nimport { getDiseaseCategoryAPI as adminGetDiseaseCategoryAPI } from 'services/admin/disease-category.service';\nimport { getServicesAPI as adminGetServicesAPI } from 'services/admin/medical-service.service';\nimport { getDrugCategoryAPI as adminGetDrugCategoryAPI } from 'services/admin/drug-category.service';\nimport { getDrugInstructionsAPI as adminGetDrugInstructionsAPI } from 'services/admin/drug-instruction.service';\nimport { getEMRHistoryAPI, updateEMRAPI, completeEMRAPI } from 'services/user/emr.service';\nimport { deleteVisitAPI } from 'services/user/visit.service';\nimport { getDrugsAPI as adminGetDrugsAPI } from 'services/admin/drug.service';\nimport { getDrugsAPI } from 'services/user/drug.service';\n\nconst { Option } = Select;\n\nconst ExaminationPage = props => {\n\n  const user = props.user;\n  const history = useHistory();\n  const params = useParams();\n\n  const [diseaseCategories, setDiseaseCategories] = useState([]);\n  const [services, setServices] = useState([]);\n  const [drugCategories, setDrugCategories] = useState([]);\n  const [drugs, setDrugs] = useState([]);\n  const [drugInstructions, setDrugInstructions] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [emr, setEmr] = useState(null);\n\n  const [livingFncLoading, setLivingFncLoading] = useState(false);\n  const [diseaseLoading, setDiseaseLoading] = useState(false);\n  const [serviceLoading, setServiceLoading] = useState(false);\n  const [drugLoading, setDrugLoading] = useState(false);\n  const [finishLoading, setFinishLoading] = useState(false);\n\n  const [listEMR, setListEMR] = useState([]);\n\n  async function getDiseaseCategories() {\n    try {\n      let diseaseCategoryResponse;\n      if (user.role.name === \"admin\") {\n        diseaseCategoryResponse = await adminGetDiseaseCategoryAPI();\n      } else {\n        diseaseCategoryResponse = await getDiseaseCategoryAPI()\n      }\n      const diseaseCategoriesData = diseaseCategoryResponse.data;\n      setDiseaseCategories(diseaseCategoriesData);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async function getServices() {\n    try {\n      let servicesResponse;\n      if (user.role.name === \"admin\") {\n        servicesResponse = await adminGetServicesAPI();\n      } else {\n        servicesResponse = await getServicesAPI()\n      }\n      const servicesData = servicesResponse.data;\n      setServices(servicesData);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async function getDrugCategories() {\n    try {\n      let drugCategoryResponse;\n      if (user.role.name === \"admin\") {\n        drugCategoryResponse = await adminGetDrugCategoryAPI();\n      } else {\n        drugCategoryResponse = await getDrugCategoryAPI()\n      }\n      const drugCategoriesData = drugCategoryResponse.data;\n      setDrugCategories(drugCategoriesData);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async function getDrugs(drugCategory) {\n    try {\n      setDrugLoading(true);\n      let drugResponse;\n      if (user.role.name === \"admin\") {\n        drugResponse = await adminGetDrugsAPI({ drug_category: drugCategory });\n      } else {\n        drugResponse = await getDrugsAPI({ drug_category: drugCategory })\n      }\n      const drugData = drugResponse.data;\n      setDrugs(drugData);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setDrugLoading(false);\n    }\n  }\n\n  async function getDrugInstructions() {\n    try {\n      let drugInsResponse;\n      if (user.role.name === \"admin\") {\n        drugInsResponse = await adminGetDrugInstructionsAPI();\n      } else {\n        drugInsResponse = await getDrugInstructionsAPI()\n      }\n      const drugInsData = drugInsResponse.data;\n      setDrugInstructions(drugInsData);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async function getEmrDetail(emrId) {\n    try {\n      setLoading(true);\n      const emrList = await getEMRHistoryAPI(emrId);\n      const data = emrList.data.data;\n      const emr = data.find(emr => emr.id === emrId && emr.completed_at === null);\n      setEmr(emr);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  async function getInitialData() {\n    const emr = params.emr;\n    await Promise.all([\n      getEmrDetail(emr),\n      getDiseaseCategories(),\n      getServices(),\n      getDrugCategories(),\n      getDrugInstructions()\n    ]);\n  }\n\n  useEffect(() => {\n    if (user) {\n      getInitialData();\n    }\n  }, [user]);\n\n  async function handleChangeDrugCategory(category) {\n    await getDrugs(category);\n  }\n\n  async function handleFinishExamination(visitId) {\n    // try {\n    //   setFinishLoading(true);\n    //   const completeResponse = await completeEMRAPI(visitId);\n    //   const deleteResponse = await deleteVisitAPI(visitId);\n    //   history.goBack();\n    // } catch (error) {\n    //   console.log(error);\n    // } finally {\n    //   setFinishLoading(false);\n    // }\n  }\n\n  async function handleSaveEmr(values) {\n\n    const emrBody = {\n      id: emr.id,\n      patient: emr.patient,\n      physician: user,\n      medical_record: {\n        administrative: {\n          fullname: values.fullname,\n          dayOfBirth: values.dayOfBirth.format('DD/MM/YYYY'),\n          gender: values.gender,\n          job: values.job,\n          ethnicity: values.ethnicity,\n          expatriate: values.expatriate,\n          address: values.address,\n          workplace: values.workplace,\n          object: values.object,\n          insurance_expirity: values.insurance_expirity.format('DD/MM/YYYY'),\n          insurance_number: values.insurance_number,\n          family_member_and_address: values.family_member_and_address,\n          phone: values.phone,\n          checkin_at: values.checkin,\n          previous_diagnose: values.previous_diagnose,\n          come_from: values.come_from\n        },\n        present_complaint: values.present_complaint,\n        ask: {\n          pathological_process: values.pathological_process,\n          self_medical_history: values.self_medical_history,\n          family_medical_history: values.family_medical_history\n        },\n        examination: {\n          heartbeat: values.heartbeat,\n          temperature: values.temperature,\n          blood_pressure: values.blood_pressure,\n          breathing: values.breathing,\n          weight: values.weight,\n          body: values.body,\n          partials: values.partials,\n          subclinical_summary: values.subclinical_summary,\n          initial_diagnose: values.initial_diagnose,\n          drugs: values.drugs,\n          processed: values.processed,\n          diagnose: values.diagnose,\n          from_date: values.from_date.format('DD/MM/YYYY'),\n          to_date: values.to_date.format('DD/MM/YYYY'),\n        },\n        summary: {\n          pathological_process_and_clinical_course: values.pathological_process_and_clinical_course,\n          valuable_subclinical_summary: values.valuable_subclinical_summary,\n          primary_disease: values.primary_disease,\n          sub_disease: values.sub_disease,\n          treatment_method: values.treatment_method,\n          patient_status: values.patient_status,\n          direction_of_treatment: values.direction_of_treatment,\n\n          services: values.services,\n          attachments: emr.images\n        }\n      }\n    }\n\n    console.log(emrBody);\n  }\n\n  async function handleUploadChange({ event, file, fileList }, emrId) {\n\n    if (file && file.status === \"done\") {\n\n      try {\n\n        // Upload image\n        const response = file.response;\n        const fileListElement = { uid: response.url, id: response.url, url: response.url };\n        const cloneEmr = { ...emr };\n        cloneEmr.images = [...cloneEmr.images, ...[fileListElement]];\n        const updateRes = await updateEMRAPI(emrId, cloneEmr);\n        setEmr(cloneEmr);\n        message.success({ content: \"Lưu thành công\" });\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    if (file && file.status === \"removed\") {\n      try {\n        const cloneEmr = { ...emr };\n        cloneEmr.images = fileList;\n        const updateRes = await updateEMRAPI(emrId, cloneEmr);\n        setEmr(cloneEmr);\n        message.success({ content: \"Lưu thành công\" });\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  }\n\n  // useEffect(() => {\n  //   console.log(emr);\n  // }, [emr]);\n\n  function getDateString(dateStr) {\n    let result = \"\";\n    const momentObj = moment(dateStr);\n    result = `${momentObj.hour()} giờ ${momentObj.minute()} phút ngày ${momentObj.date()} tháng ${momentObj.month()} năm ${momentObj.year()}`;\n    return result;\n  }\n\n  function getTodayString() {\n    const now = new Date();\n    return `Ngày ${now.getDate()} tháng ${now.getMonth() + 1}, năm ${now.getFullYear()}`\n  }\n\n  return (\n    <>\n      <PageHeader title=\"Bệnh án ngoại trú\" onBack={() => history.goBack()} />\n      {\n        emr ?\n          <>\n            <Form layout=\"vertical\" onFinish={handleSaveEmr}>\n\n              {/* <Descriptions title=\"Thông tin bệnh nhân\">\n              <Descriptions.Item span={1} label=\"Họ và tên\">\n                {emr.patient.first_name} {emr.patient.last_name} ({emr.patient.gender})\n                    </Descriptions.Item>\n              <Descriptions.Item span={1} label=\"Ngày sinh\">\n                {emr.patient.DOB}\n              </Descriptions.Item>\n            </Descriptions>\n\n            <Descriptions title={`Thông tin khám bệnh (Phòng khám: ${emr.room})`}>\n              <Descriptions.Item span={1} label=\"Ngày vào khám\">{moment(emr.created_at).format(\"DD/MM/YYYY HH:mm:ss\")}</Descriptions.Item>\n              <Descriptions.Item span={1} label=\"Bác sĩ khám bệnh\">\n                {emr.physician.first_name} {emr.physician.last_name}\n              </Descriptions.Item>\n            </Descriptions>\n\n            <Collapse defaultActiveKey={[\"living-function\", \"diseases\", \"services\", \"drugs\", \"images\"]}>\n              <Collapse.Panel header=\"Dấu hiệu sinh tồn\" key=\"living-function\">\n                <VisitLivingFunctionForm\n                  onFinish={(values) => handleSaveLivingFunctions(emr.id, values)}\n                  loading={livingFncLoading}\n                  currentValues={emr.living_functions} />\n              </Collapse.Panel>\n\n              <Collapse.Panel header=\"Bệnh\" key=\"diseases\">\n                <VisitDiseaseForm\n                  categories={diseaseCategories}\n                  user={user}\n                  loading={diseaseLoading}\n                  onFinish={(values) => handleSaveDiseases(emr.id, values)}\n                  currentValues={emr} />\n              </Collapse.Panel>\n              <Collapse.Panel header=\"Chỉ định dịch vụ\" key=\"services\">\n                <VisitServiceForm\n                  user={user}\n                  loading={serviceLoading}\n                  services={services}\n                  onFinish={(values) => handleSaveServices(emr.id, values)}\n                  currentValues={emr} />\n              </Collapse.Panel>\n              <Collapse.Panel header=\"Kê đơn thuốc\" key=\"drugs\">\n                <VisitDrugForm\n                  user={user}\n                  categories={drugCategories}\n                  loading={drugLoading}\n                  instructions={drugInstructions}\n                  onFinish={(values) => handleSaveDrugs(emr.id, values)}\n                  currentValues={emr} />\n              </Collapse.Panel>\n              <Collapse.Panel header=\"Hình ảnh\" key=\"images\">\n                <VisitImagesForm\n                  emrId=\"288e8054-fe90-45da-acb1-62c76a8c102c\"\n                  onChange={(e) => handleUploadChange(e, emr.id)}\n                  fileList={emr.images} />\n              </Collapse.Panel>\n            </Collapse> */}\n\n              <Row gutter={15}>\n                <Col flex={1}>\n                  <Form.Item label=\"Sở y tế\" name=\"health_service_dept\">\n                    <Input />\n                  </Form.Item>\n                </Col>\n                <Col flex={1}>\n                  <Form.Item label=\"Bệnh viện\" name=\"hospital\">\n                    <Input />\n                  </Form.Item>\n                </Col>\n                <Col flex={1}>\n                  <Form.Item label=\"Khoa\" name=\"room\" initialValue={emr.room}>\n                    <Input readOnly />\n                  </Form.Item>\n                </Col>\n              </Row>\n\n              <Collapse defaultActiveKey={[\"administrative\", \"present-complaint\", \"ask\", \"examination\", \"summary\"]}>\n                <Collapse.Panel header={<strong className=\"uppercase\">i. Hành chính</strong>} key=\"administrative\">\n                  <Row gutter={15}>\n                    <Col flex=\"0 0 33.33%\">\n                      <Form.Item label=\"1. Họ và tên\" name=\"fullname\" initialValue={(emr.patient.first_name + \" \" + emr.patient.last_name).toUpperCase()}>\n                        <Input />\n                      </Form.Item>\n                    </Col>\n                    <Col flex=\"0 0 33.33%\">\n                      <Form.Item label=\"2. Sinh ngày\" name=\"dayOfBirth\" initialValue={moment(emr.patient.DOB)}>\n                        <DatePicker format=\"DD/MM/YYYY\" style={{ width: '100%' }} />\n                      </Form.Item>\n                    </Col>\n                    <Col flex=\"0 0 33.33%\">\n                      <Form.Item label=\"3. Giới tính\" name=\"gender\" initialValue={emr.patient.gender}>\n                        <Select>\n                          <Select.Option value=\"Nam\">Nam</Select.Option>\n                          <Select.Option value=\"Nữ\">Nữ</Select.Option>\n                        </Select>\n                      </Form.Item>\n                    </Col>\n                  </Row>\n                  <Row gutter={15}>\n                    <Col flex=\"0 0 33.33%\">\n                      <Form.Item label=\"4. Nghề nghiệp\" name=\"job\">\n                        <Input />\n                      </Form.Item>\n                    </Col>\n                    <Col flex=\"0 0 33.33%\">\n                      <Form.Item label=\"5. Dân tộc\" name=\"ethnicity\">\n                        <Input />\n                      </Form.Item>\n                    </Col>\n                    <Col flex=\"0 0 33.33%\">\n                      <Form.Item label=\"6. Ngoại kiều\" name=\"expatriate\">\n                        <Input />\n                      </Form.Item>\n                    </Col>\n                  </Row>\n\n                  <Form.Item label=\"7. Địa chỉ\" name=\"address\">\n                    <Input />\n                  </Form.Item>\n\n                  <Row gutter={15}>\n                    <Col flex=\"0 0 50%\">\n                      <Form.Item label=\"8. Nơi làm việc\" name=\"workplace\">\n                        <Input />\n                      </Form.Item>\n                    </Col>\n                    <Col>\n                      <Form.Item label=\"9. Đối tượng\" name=\"object\">\n                        <Radio.Group>\n                          <Radio value=\"BHYT\">1. BHYT</Radio>\n                          <Radio value=\"Thu phí\">2. Thu phí</Radio>\n                          <Radio value=\"Miễn phí\">3. Miễn phí</Radio>\n                          <Radio value=\"Khác\">4. Khác</Radio>\n                        </Radio.Group>\n                      </Form.Item>\n                    </Col>\n                  </Row>\n\n                  <Row gutter={15}>\n                    <Col flex=\"0 0 50%\">\n                      <Form.Item label=\"10. Giá trị BHYT\" name=\"insurance_expirity\">\n                        <DatePicker style={{ width: '100%' }} />\n                      </Form.Item>\n                    </Col>\n                    <Col flex=\"0 0 50%\">\n                      <Form.Item label=\"Số thẻ BHYT\" name=\"insurance_number\">\n                        <Input />\n                      </Form.Item>\n                    </Col>\n                  </Row>\n\n                  <Row gutter={15}>\n                    <Col flex=\"0 0 50%\">\n                      <Form.Item label=\"11. Họ tên, địa chỉ người nhà khi cần báo tin\" name=\"family_member_and_address\">\n                        <Input.TextArea rows={2} />\n                      </Form.Item>\n                    </Col>\n                    <Col flex=\"0 0 50%\">\n                      <Form.Item label=\"Điện thoại\" initialValue={emr.patient.phone} name=\"phone\">\n                        <Input />\n                      </Form.Item>\n                    </Col>\n                  </Row>\n\n\n                  <Form.Item label=\"12. Đến khám bệnh lúc\" initialValue={getDateString(emr.created_at)} name=\"checkin\">\n                    <Input readOnly />\n                  </Form.Item>\n\n                  <Row gutter={15}>\n                    <Col flex={1}>\n                      <Form.Item label=\"13. Chẩn đoán của nơi giới thiệu\" name=\"previous_diagnose\">\n                        <Input />\n                      </Form.Item>\n                    </Col>\n                    <Col>\n                      <Form.Item label=\"Nơi giới thiệu\" name=\"come_from\">\n                        <Radio.Group>\n                          <Radio value=\"Y tế\">1. Y tế</Radio>\n                          <Radio value=\"Tự đến\">2. Tự đến</Radio>\n                        </Radio.Group>\n                      </Form.Item>\n                    </Col>\n                  </Row>\n\n                </Collapse.Panel>\n                <Collapse.Panel header={<strong className=\"uppercase\">II. Lý do vào viện</strong>} key=\"present-complaint\">\n                  <Form.Item label=\"Lý do vào viện\" name=\"present_complaint\">\n                    <Input />\n                  </Form.Item>\n                </Collapse.Panel>\n                <Collapse.Panel header={<strong className=\"uppercase\">iii. hỏi bệnh</strong>} key=\"ask\">\n                  <Form.Item label=\"1. Quá trình bệnh lý\" name=\"pathological_process\">\n                    <Input.TextArea rows={3} autoSize={true} />\n                  </Form.Item>\n                  <Form.Item label=\"2. Tiền sử bệnh\" name=\"self_medical_history\" className=\"mb-3\">\n                    <Input placeholder=\"Bản thân\" />\n                  </Form.Item>\n                  <Form.Item name=\"family_medical_history\">\n                    <Input placeholder=\"Gia đình\" />\n                  </Form.Item>\n                </Collapse.Panel>\n                <Collapse.Panel header={<strong className=\"uppercase\">iv. khám bệnh</strong>} key=\"examination\">\n                  <Row gutter={15}>\n                    <Col flex={1}>\n                      <Form.Item label=\"1. Toàn thân\" name=\"body\">\n                        <Input.TextArea rows={7} />\n                      </Form.Item>\n                    </Col>\n                    <Col>\n                      <div className=\"border border-solid border-gray-400 p-2\">\n                        <Form.Item className=\"mb-2\" name=\"heartbeat\">\n                          <Input addonBefore={<div style={{ width: 80 }}>Mạch</div>} suffix=\"lần/ph\" />\n                        </Form.Item>\n                        <Form.Item className=\"mb-2\" name=\"temperature\">\n                          <Input addonBefore={<div style={{ width: 80 }}>Nhiệt độ</div>} suffix=\"°C\" />\n                        </Form.Item>\n                        <Form.Item className=\"mb-2\" name=\"blood_pressure\">\n                          <Input addonBefore={<div style={{ width: 80 }}>Huyết áp</div>} suffix=\"mmHg\" />\n                        </Form.Item>\n                        <Form.Item className=\"mb-2\" name=\"breathing\">\n                          <Input addonBefore={<div style={{ width: 80 }}>Nhịp thở</div>} suffix=\"lần/ph\" />\n                        </Form.Item>\n                        <Form.Item className=\"mb-0\" name=\"weight\">\n                          <Input addonBefore={<div style={{ width: 80 }}>Câng nặng</div>} suffix=\"kg\" />\n                        </Form.Item>\n                      </div>\n                    </Col>\n                  </Row>\n\n                  <Form.Item label=\"2. Các bộ phận\" name=\"partials\">\n                    <Input.TextArea rows={6} />\n                  </Form.Item>\n\n                  <Form.Item label=\"3. Tóm tắt kết quả cận lâm sàng\" name=\"subclinical_summary\">\n                    <Input.TextArea rows={6} />\n                  </Form.Item>\n\n                  <Form.Item label=\"4. Chẩn đoán ban đầu\" name=\"initial_diagnose\">\n                    <Input />\n                  </Form.Item>\n\n                  <div className=\"mb-3\">5. Đã xử lý (thuốc, chăm sóc)</div>\n\n                  <Form.List name=\"drugs\">\n                    {(fields, { add, remove }) => (\n                      <>\n                        {\n                          fields.map((field, index) => (\n                            <Row gutter={15} key={field.key} align=\"middle\">\n                              <Col>{index + 1}</Col>\n                              <Col flex=\"0 0 220px\">\n                                <Form.Item\n                                  {...field}\n                                  label=\"Nhóm thuốc\"\n                                  name={[field.name, 'drugCategory']}\n                                  fieldKey={[field.fieldKey, 'drugCategory']}\n                                  rules={[{ required: true, message: \"Trường này là bắt buộc\" }]}>\n                                  <Select onChange={handleChangeDrugCategory}>\n                                    {\n                                      drugCategories.map(cat => (\n                                        <Option key={cat.id} value={cat.id}>{cat.name}</Option>\n                                      ))\n                                    }\n                                  </Select>\n                                </Form.Item>\n                              </Col>\n                              <Col flex=\"1 0 220px\">\n                                <Form.Item\n                                  {...field}\n                                  label=\"Thuốc\"\n                                  name={[field.name, 'drug']}\n                                  fieldKey={[field.fieldKey, 'drug']}\n                                  rules={[{ required: true, message: \"Trường này là bắt buộc\" }]}>\n                                  <Select loading={drugLoading}>\n                                    {\n                                      drugs.map(drug => (\n                                        <Option key={drug.id} value={drug.name}>{drug.name} {drug.strength}</Option>\n                                      ))\n                                    }\n                                  </Select>\n                                </Form.Item>\n                              </Col>\n                              <Col flex=\"0 0 120px\">\n                                <Form.Item\n                                  {...field}\n                                  name={[field.name, 'drugInstruction']}\n                                  fieldKey={[field.fieldKey, 'drugInstruction']}\n                                  rules={[{ required: true, message: \"Trường này là bắt buộc\" }]}\n                                  label=\"Cách dùng\"\n                                  style={{ minWidth: 200 }}>\n                                  <Select>\n                                    {\n                                      drugInstructions.map(ins => (\n                                        <Option key={ins.id} value={ins.instruction}>{ins.instruction}</Option>\n                                      ))\n                                    }\n                                  </Select>\n                                </Form.Item>\n                              </Col>\n                              {/* </Row> */}\n                              {/* <Row gutter={15}> */}\n                              {/* <Col flex=\"0 0 80px\">\n                                <Form.Item\n                                  {...field}\n                                  name={[field.name, 'numberOfDays']}\n                                  fieldKey={[field.fieldKey, 'numberOfDays']}\n                                  rules={[{ required: true, message: \"Trường này là bắt buộc\" }]}\n                                  label=\"Số ngày\">\n                                  <Input type=\"number\" />\n                                </Form.Item>\n                              </Col>\n                              <Col flex=\"0 0 80px\">\n                                <Form.Item label=\"Sáng\" name={[field.name, 'morning']}>\n                                  <Input type=\"number\" />\n                                </Form.Item>\n                              </Col>\n                              <Col flex=\"0 0 80px\">\n                                <Form.Item label=\"Trưa\" name={[field.name, 'afternoon']}>\n                                  <Input type=\"number\" />\n                                </Form.Item>\n                              </Col>\n                              <Col flex=\"0 0 80px\">\n                                <Form.Item label=\"Chiều\" name={[field.name, 'evening']}>\n                                  <Input type=\"number\" />\n                                </Form.Item>\n                              </Col>\n                              <Col flex=\"0 0 80px\">\n                                <Form.Item label=\"Tối\" name={[field.name, 'night']}>\n                                  <Input type=\"number\" />\n                                </Form.Item>\n                              </Col> */}\n                              <Col flex=\"0 0 80px\">\n                                <Form.Item\n                                  {...field}\n                                  label=\"Số lượng\"\n                                  name={[field.name, 'total']}\n                                  fieldKey={[field.fieldKey, 'total']}>\n                                  <Input type=\"number\" />\n                                </Form.Item>\n                              </Col>\n                              <Col>\n                                <MinusCircleOutlined onClick={() => remove(field.name)} />\n                              </Col>\n                            </Row>\n                          ))\n\n                        }\n                        <Form.Item>\n                          <Button type=\"dashed\" block onClick={() => add()} icon={<PlusOutlined />}>Thêm thuốc</Button>\n                        </Form.Item>\n                      </>\n                    )}\n                  </Form.List>\n\n                  <Form.Item name=\"processed\">\n                    <Input.TextArea rows={6} />\n                  </Form.Item>\n\n                  <Form.Item label=\"6. Chẩn đoán khi ra viện\" name=\"diagnose\">\n                    <Input />\n                  </Form.Item>\n\n                  <Row gutter={15}>\n                    <Col>\n                      <Form.Item label=\"7. Điều trị ngoại trú từ ngày\" initialValue={moment(emr.created_at)} name=\"from_date\">\n                        <DatePicker format=\"DD/MM/YYYY\" />\n                      </Form.Item>\n                    </Col>\n                    <Col>\n                      <Form.Item label=\"Đến ngày\" name=\"to_date\">\n                        <DatePicker format=\"DD/MM/YYYY\" />\n                      </Form.Item>\n                    </Col>\n                  </Row>\n                </Collapse.Panel>\n                <Collapse.Panel header={<strong className=\"uppercase\">tổng kết bệnh án</strong>} key=\"summary\">\n                  <Form.Item label=\"1. Quá trình bệnh lý và diễn biến lâm sàng\" name=\"pathological_process_and_clinical_course\">\n                    <Input.TextArea rows={6} />\n                  </Form.Item>\n\n                  <Form.Item label=\"2. Tóm tắt kết quả xét nghiệm cận lâm sàng có giá trị chẩn đoán\" name=\"valuable_subclinical_summary\">\n                    <Input.TextArea rows={6} />\n                  </Form.Item>\n\n                  <Form.Item label=\"3. Chuẩn đoán ra viện\" className=\"mb-3\" name=\"primary_disease\">\n                    <Input addonBefore=\"Bệnh chính\" />\n                  </Form.Item>\n                  <Form.Item name=\"sub_disease\">\n                    <Input addonBefore=\"Bệnh phụ (nếu có)\" />\n                  </Form.Item>\n\n                  <Form.Item label=\"4. Phương pháp điều trị\" className=\"treatment_method\">\n                    <Input.TextArea rows={6} />\n                  </Form.Item>\n\n                  <Form.Item label=\"5. Tình trạng người bệnh ra viện\" className=\"patient_status\">\n                    <Input.TextArea rows={6} />\n                  </Form.Item>\n\n                  <Form.Item label=\"6. Hướng điều trị và các chế độ tiếp theo\" className=\"direction_of_treatment\">\n                    <Input.TextArea rows={6} />\n                  </Form.Item>\n\n\n\n                  <Row gutter={15} className=\"mb-5\">\n                    <Col flex=\"0 0 50%\">\n                      <div className=\"mb-3\">Chỉ định dịch vụ</div>\n                      <Form.List name=\"services\">\n                        {\n                          (fields, { add, remove }) => (\n                            <>\n                              {\n                                fields.map((field, index) => (\n                                  <Row gutter={15} key={field.key} align=\"middle\" className=\"mb-5\">\n                                    <Col>{index + 1}</Col>\n                                    <Col flex={1}>\n                                      <Form.Item {...field} name={[field.name, 'id']} fieldKey={[field.fieldKey, 'id']} style={{ margin: 0 }} rules={[{ required: true, message: \"Trường này là bắt buộc\" }]}>\n                                        <Select placeholder=\"Chọn dịch vụ\">\n                                          {\n                                            services.map((service, index) => (\n                                              <Option value={service.id} key={service.id}>\n                                                {service.name}\n                                              </Option>\n                                            ))\n                                          }\n                                        </Select>\n                                      </Form.Item>\n                                    </Col>\n                                    <Col>\n                                      <MinusCircleOutlined onClick={() => remove(field.name)} />\n                                    </Col>\n                                  </Row>\n                                ))\n                              }\n                              <Form.Item>\n                                <Button type=\"dashed\" block onClick={() => add()} icon={<PlusOutlined />}>Thêm dịch vụ</Button>\n                              </Form.Item>\n                            </>\n                          )\n                        }\n                      </Form.List>\n                    </Col>\n                    <Col flex=\"0 0 50%\">\n                      <div className=\"mb-3\">Tệp đính kèm</div>\n                      <VisitImagesForm onChange={(e) => handleUploadChange(e, emr.id)} fileList={emr.images || []} />\n                    </Col>\n                  </Row>\n                </Collapse.Panel>\n              </Collapse>\n\n              <Divider />\n\n\n              <div className=\"text-right\">\n                <Space>\n                  <Button danger type=\"default\" size=\"large\" icon={<DeleteOutlined />}>Hủy đơn</Button>\n                  <Button htmlType=\"submit\" type=\"default\" size=\"large\" icon={<SaveOutlined />}>Lưu lại</Button>\n                  <Button type=\"primary\" size=\"large\" onClick={() => handleFinishExamination(emr.id)} loading={finishLoading} icon={<FileDoneOutlined />}>Kết thúc khám</Button>\n                </Space>\n              </div>\n            </Form>\n          </>\n\n          :\n          <div className=\"py-10 text-center\"><Spin spinning={loading} /></div>\n      }\n    </>\n  )\n}\n\nconst mapStateToProps = state => ({\n  user: state.userState.user\n})\n\nexport default connect(mapStateToProps)(ExaminationPage);","import { Avatar, Row, Col } from 'antd';\nimport React from 'react';\nimport { connect } from 'react-redux';\n\nconst ProfilePage = props => {\n  const { user } = props;\n\n  return (\n    <>\n      <Row>\n        <Col flex={1}>\n          <h3 className=\"text-xl\">Hồ sơ cá nhân</h3>\n          <Avatar src={user.avatar} />\n        </Col>\n        <Col flex={1}>\n          <h3 className=\"text-xl\">Đổi mật khẩu</h3>\n        </Col>\n      </Row>\n\n    </>\n  )\n}\n\nconst mapStateToProps = state => ({\n  user: state.userState\n})\n\nexport default connect(mapStateToProps)(ProfilePage);","import React, { useState, useEffect } from 'react';\nimport { PageHeader, Descriptions, Spin, Table } from 'antd';\nimport { useHistory, useRouteMatch } from 'react-router-dom';\nimport moment from 'moment';\n\n// APIs\nimport { getPatientDetailsAPI } from 'services/user/patient.service';\nimport { listEMRAPI } from 'services/user/emr.service';\n\nconst { Item } = Descriptions;\n\nconst PatientDetails = props => {\n\n  const { goBack } = useHistory();\n  const { params } = useRouteMatch();\n  const patientId = params.patientId;\n\n  const [patient, setPatient] = useState(null);\n  const [patientLoading, setPatientLoading] = useState(false);\n  const [EMRs, setEMRs] = useState(null);\n  const [EMRLoading, setEMRLoading] = useState(false);\n\n  const tableColumns = [\n    {\n      title: '#',\n      key: '#',\n      render: (text, record, index) => index + 1\n    },\n    {\n      title: 'Ngày khám',\n      key: 'created_at',\n      render: (text, record) => moment(record.created_at).format('DD/MM/YYYY HH:mm')\n    },\n    {\n      title: 'Giờ kết thúc',\n      key: 'completed_at'\n    },\n    {\n      title: 'Bác sĩ',\n      key: 'physician',\n      render: (text, { physician }) => physician.first_name + \" \" + physician.last_name\n    },\n    {\n      title: 'Chẩn đoán',\n      key: 'diagnose',\n      render: (text, { emr_diseases }) => emr_diseases.map(disease => disease.name).join(\", \")\n    }\n  ]\n\n  async function getPatientDetails(patientId) {\n    try {\n      setPatientLoading(true);\n      const patientResponse = await getPatientDetailsAPI(patientId);\n      setPatient(patientResponse.data);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setPatientLoading(false);\n    }\n  }\n\n  async function getPatientEMRs(patientId) {\n    try {\n      setEMRLoading(true);\n      const EMRResponse = await listEMRAPI({ patient_id: patientId });\n      setEMRs(EMRResponse.data);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setEMRLoading(false);\n    }\n  }\n\n  async function getInitialData() {\n    await Promise.all([\n      getPatientDetails(patientId),\n      getPatientEMRs(patientId)\n    ])\n  }\n\n  useEffect(() => {\n    getInitialData();\n  }, []);\n\n  return (\n    <>\n      <PageHeader onBack={goBack} title={patient ? patient.first_name + \" \" + patient.last_name : \"Chi tiết bệnh nhân\"} />\n\n      <Spin spinning={patientLoading}>\n        <Descriptions title=\"Thông tin cá nhân\" colon>\n          <Item label=\"Họ và tên\">{patient ? patient.first_name + \" \" + patient.last_name : \"Đang tải...\"}</Item>\n          <Item label=\"Giới tính\">{patient?.gender || \"Đang tải\"}</Item>\n          <Item label=\"Ngày sinh\">{patient ? moment(patient.DOB).format(\"DD/MM/YYYY\") : \"Đang tải\"}</Item>\n          <Item label=\"Điện thoại\">{patient?.phone || \"Đang tải\"}</Item>\n          <Item label=\"Địa chỉ\">{patient?.address || \"Đang cập nhật\"}</Item>\n        </Descriptions>\n      </Spin>\n\n      <div className=\"ant-descriptions-title mb-3\">Lịch sử khám bệnh</div>\n      <Table rowKey=\"id\" dataSource={EMRs?.results} loading={EMRLoading} columns={tableColumns} />\n\n    </>\n  )\n}\n\nexport default PatientDetails;","import React from 'react';\nimport { Link, Redirect, Switch, Route, useRouteMatch, useLocation } from 'react-router-dom';\nimport { Layout, Menu } from 'antd';\nimport {\n  IdcardOutlined,\n  CalendarOutlined,\n  ContainerOutlined,\n  ProfileOutlined,\n  NotificationOutlined} from '@ant-design/icons';\nimport NotificationPage from 'pages/common/notification/notification';\nimport VisitPage from 'pages/common/visit/visit';\nimport PatientPage from 'pages/common/patient/patient';\nimport AppointmentPage from 'pages/common/appointment/apointment';\nimport withPrivateRoute from 'HOCs/withPrivateRoute';\nimport CustomHeader from 'components/Header';\nimport ExaminationPage from 'pages/common/examination/examination';\nimport ProfilePage from 'pages/common/profile/profile';\nimport PatientDetails from 'pages/common/patient/patient-details';\n\nconst { Sider, Content } = Layout;\n\nconst PhysicianLayout = () => {\n  const match = useRouteMatch();\n  const location = useLocation();\n  const path = match.path;\n\n  return (\n    <Layout>\n      <CustomHeader />\n      <Layout>\n        <Sider width={200} className=\"site-layout-background\">\n          <Menu\n            mode=\"inline\"\n            style={{ height: '100%', borderRight: 0 }}\n            selectedKeys={[location.pathname]}\n          >\n            <Menu.Item key=\"/physician/visit\" icon={<ContainerOutlined />}>\n              <Link to=\"/physician/visit\">Khám bệnh</Link>\n            </Menu.Item>\n            <Menu.Item key=\"/physician/patient\" icon={<IdcardOutlined />}>\n              <Link to=\"/physician/patient\">Bệnh nhân</Link>\n            </Menu.Item>\n            <Menu.Item key=\"/physician/appointment\" icon={<CalendarOutlined />}>\n              <Link to=\"/physician/appointment\">Lịch hẹn</Link>\n            </Menu.Item>\n            <Menu.Item key=\"/physician/profile\" icon={<ProfileOutlined />}>\n              <Link to=\"/physician/profile\">Hồ sơ</Link>\n            </Menu.Item>\n          </Menu>\n        </Sider>\n        <Layout style={{ padding: '0 24px 24px' }}>\n          <Content\n            className=\"site-layout-background\"\n            style={{\n              padding: 24,\n              margin: 0,\n              minHeight: 280,\n            }}\n          >\n            <Switch>\n\n              {/* Visit */}\n              <Route path={`${path}/visit`} exact>\n                <VisitPage />\n              </Route>\n\n              <Route path={`${path}/visit/:emr`}>\n                <ExaminationPage />\n              </Route>\n\n              {/* Patient */}\n              <Route path={`${path}/patient`} exact>\n                <PatientPage />\n              </Route>\n              \n              <Route path={`${path}/patient/:patientId`}>\n                <PatientDetails />\n              </Route>\n\n              {/* Appointment */}\n              <Route path={`${path}/appointment`}>\n                <AppointmentPage />\n              </Route>\n\n              <Route path={`${path}/profile`}>\n                <ProfilePage />\n              </Route>\n\n              {/* Fallback */}\n              <Redirect to={`/physician/visit`} />\n            </Switch>\n          </Content>\n        </Layout>\n      </Layout>\n    </Layout>\n  )\n}\n\nexport default withPrivateRoute(PhysicianLayout, ['physician']);","import React from 'react';\nimport { Form, Input, Row, Col, DatePicker, Radio } from 'antd';\nimport { requiredRule } from 'constant/formRules';\n\nconst PatientForm = props => {\n  const { form, onFinish } = props;\n\n  return (\n    <Form\n      layout=\"vertical\"\n      onFinish={onFinish}\n      form={form}>\n      <Row>\n        <Col flex={1}>\n          <Form.Item label=\"Họ và tên lót\" name=\"first_name\" rules={[requiredRule()]}>\n            <Input autoFocus />\n          </Form.Item>\n        </Col>\n        <Col flex=\"0 0 15px\"></Col>\n        <Col flex={1}>\n          <Form.Item label=\"Tên\" name=\"last_name\" rules={[requiredRule()]}>\n            <Input />\n          </Form.Item>\n        </Col>\n      </Row>\n      <Form.Item name=\"phone\" label=\"Số điện thoại\" rules={[requiredRule()]}>\n        <Input />\n      </Form.Item>\n      <Row>\n        <Col>\n          <Form.Item name=\"DOB\" label=\"Ngày sinh\" rules={[requiredRule()]}>\n            <DatePicker placeholder=\"Chọn ngày\" />\n          </Form.Item>\n\n        </Col>\n        <Col flex=\"0 0 15px\"></Col>\n        <Col flex={1}>\n          <Form.Item name=\"gender\" label=\"Giới tính\" rules={[requiredRule()]}>\n            <Radio.Group>\n              <Radio value=\"Nam\">Nam</Radio>\n              <Radio value=\"Nữ\">Nữ</Radio>\n              <Radio value=\"Khác\">Khác</Radio>\n            </Radio.Group>\n          </Form.Item>\n        </Col>\n      </Row>\n\n    </Form>\n  )\n}\n\nexport default PatientForm;","import React, { useState, useEffect } from 'react';\nimport { Input, Table, Form, PageHeader, Button, Modal, Menu, Dropdown, message } from 'antd';\nimport { PlusOutlined } from '@ant-design/icons';\nimport PatientForm from 'forms/PatientForm/PatientForm';\n\n// APIs\nimport { getRoomAPI } from 'services/user/room.service';\nimport { createVisitAPI } from 'services/user/visit.service';\nimport { listAllPatientsAPI, createPatientAPI } from 'services/user/patient.service';\nimport { addBlockChainUserAPI } from 'services/user/user.service';\n\nconst ReceivePage = props => {\n\n  const [patientData, setPatientData] = useState(null);\n  const [patientLoading, setPatientLoading] = useState(false);\n  const [rooms, setRooms] = useState(null);\n  const [roomLoading, setRoomLoading] = useState(false);\n  const [roomModalVisible, setRoomModalVisible] = useState(false);\n  const [isCreatingPatient, setCreatingPatient] = useState(false);\n  const [modalVisible, setModalVisible] = useState(false);\n  const [isCreatingVisit, setCreatingVisit] = useState(false);\n  const [patientForm] = Form.useForm();\n\n  function renderMenu(patient) {\n    return (\n      <Menu>\n        {\n          rooms?.map(room => (\n            <Menu.Item key={room.id} onClick={() => handleCreateVisit(patient, room)}>Khoa {room.name}</Menu.Item>\n          ))\n        }\n      </Menu>\n    )\n  }\n\n  const tableColumns = [\n    {\n      title: '#',\n      key: 'index',\n      render: (text, record, index) => index + 1\n    },\n    {\n      title: 'Họ và tên',\n      key: 'fullname',\n      render: (text, { first_name, last_name }) => first_name + ' ' + last_name\n    },\n    {\n      title: 'Giới tính',\n      key: 'gender',\n      dataIndex: 'gender'\n    },\n    {\n      title: 'Ngày sinh',\n      key: 'DOB',\n      dataIndex: 'DOB'\n    },\n    {\n      title: 'Điện thoại',\n      key: 'phone',\n      dataIndex: 'phone'\n    },\n    {\n      title: 'Hành động',\n      key: 'action',\n      render: (text, record) => (\n        <Dropdown overlay={renderMenu(record)} overlayStyle={{ minWidth: 200 }} trigger=\"click\">\n          <Button>Tiếp nhận</Button>\n        </Dropdown>\n      )\n    }\n  ]\n\n\n  //\n  // Load initial data\n  //\n  async function listAllPatients(search) {\n    try {\n      setPatientLoading(true);\n      const patientResponse = await listAllPatientsAPI(search);\n      setPatientData(patientResponse.data);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setPatientLoading(false);\n    }\n  }\n\n  async function getRooms() {\n    try {\n      setRoomLoading(true);\n      const roomResponse = await getRoomAPI();\n      setRooms(roomResponse.data);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setRoomLoading(false);\n    }\n  }\n\n  async function getInitialData() {\n    await Promise.all([\n      listAllPatients(),\n      getRooms()\n    ])\n  }\n\n  useEffect(() => {\n    getInitialData();\n  }, []);\n\n  //\n  // Component functions\n  //\n  function handleAddClick() {\n    setModalVisible(true);\n  }\n\n  function handleCloseModal() {\n    setModalVisible(false);\n  }\n\n  function handleSearch(values) {\n    listAllPatients(values.search);\n  }\n\n  async function handleSubmit() {\n    try {\n      setCreatingPatient(true);\n      const values = await patientForm.validateFields();\n      values.DOB = values.DOB.format('YYYY-MM-DD');\n      const createResponse = await createPatientAPI(values);\n      const userId = createResponse.data.id;\n      await addBlockChainUserAPI(userId, \"patient\");\n      // await addBlockChainUserAPI(\"4f31587e-40cc-43a9-a3bf-a7e5fa731955\", \"patient\");\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setCreatingPatient(false);\n    }\n  }\n\n  async function handleCreateVisit(patient, room) {\n    try {\n      setCreatingVisit(true);\n      await createVisitAPI({ patientId: patient.id, roomId: room.id });\n      message.success(`Đã tiếp nhận bệnh nhân ${patient.first_name} ${patient.last_name} vào ${room.name}`);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setCreatingVisit(false);\n    }\n  }\n\n  return (\n    <>\n      <PageHeader\n        title=\"Tiếp nhận bệnh nhân\"\n        className=\"pl-0\"\n        extra={<Button type=\"primary\" onClick={handleAddClick} icon={<PlusOutlined />}>Bệnh nhân mới</Button>} />\n\n      <Form onFinish={handleSearch}>\n        <Form.Item name=\"search\">\n          <Input.Search size=\"large\" placeholder=\"Tìm kiếm bệnh nhân theo tên/SĐT\" />\n        </Form.Item>\n      </Form>\n      <Table\n        rowKey=\"id\"\n        dataSource={patientData?.results}\n        loading={patientLoading || isCreatingVisit}\n        columns={tableColumns} />\n      <Modal\n        visible={modalVisible}\n        confirmLoading={isCreatingPatient}\n        onCancel={handleCloseModal}\n        onOk={handleSubmit}\n        destroyOnClose={true}\n        title=\"Bệnh nhân mới\">\n        <PatientForm form={patientForm} onFinish={handleSubmit} />\n      </Modal>\n    </>\n  )\n}\n\nexport default ReceivePage;","import React from 'react';\nimport { Link, Redirect, Switch, Route, useRouteMatch, useLocation } from 'react-router-dom';\nimport { Layout, Menu } from 'antd';\nimport {\n  UserOutlined,\n  DashboardOutlined,\n  CalendarOutlined,\n} from '@ant-design/icons';\nimport AppointmentPage from 'pages/common/appointment/apointment';\nimport withPrivateRoute from 'HOCs/withPrivateRoute';\nimport CustomHeader from 'components/Header';\nimport ReceivePage from 'pages/receptionist/receive';\nimport ProfilePage from 'pages/common/profile/profile';\n\nconst { Sider, Content } = Layout;\n\nconst ReceptionistLayout = () => {\n  const match = useRouteMatch();\n  const location = useLocation();\n  const path = match.path;\n\n  return (\n    <Layout>\n      <CustomHeader />\n      <Layout>\n        <Sider width={200} className=\"site-layout-background\">\n          <Menu\n            mode=\"inline\"\n            style={{ height: '100%', borderRight: 0 }}\n            selectedKeys={[location.pathname]}\n          >\n            <Menu.Item key=\"/receptionist/receive\" icon={<DashboardOutlined />}>\n              <Link to=\"/receptionist/receive\">Tiếp đón</Link>\n            </Menu.Item>\n            <Menu.Item key=\"/receptionist/appointment\" icon={<CalendarOutlined />}>\n              <Link to=\"/receptionist/appointment\">Lịch hẹn</Link>\n            </Menu.Item>\n\n            <Menu.Item key=\"/receptionist/profile\" icon={<UserOutlined />}>\n              <Link to=\"/receptionist/profile\">Hồ sơ</Link>\n            </Menu.Item>\n          </Menu>\n        </Sider>\n        <Layout style={{ padding: '0 24px 24px' }}>\n          <Content\n            className=\"site-layout-background\"\n            style={{\n              padding: 24,\n              margin: 0,\n              minHeight: 280,\n            }}\n          >\n            <Switch>\n              {/* Dashboard */}\n              <Route path={`${path}/receive`}>\n                <ReceivePage />\n              </Route>\n\n              {/* Appointment */}\n              <Route path={`${path}/appointment`}>\n                <AppointmentPage />\n              </Route>\n\n              <Route path={`${path}/profile`}>\n                <ProfilePage />\n              </Route>\n\n              {/* Fallback */}\n              <Redirect to={`/receptionist/receive`} />\n            </Switch>\n          </Content>\n        </Layout>\n      </Layout>\n    </Layout>\n  )\n}\n\nexport default withPrivateRoute(ReceptionistLayout, ['receptionist']);","import React from 'react';\n\nconst EmailIcon = () => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" id=\"Capa_1\" enableBackground=\"new 0 0 512 512\" height=\"50\" viewBox=\"0 0 512 512\" width=\"50\"><g><g><path d=\"m497 15.243h-482c-8.284 0-15 6.716-15 15v330c0 8.284 6.716 15 15 15h121.019c-.006.505-.019 1.008-.019 1.515 0 66.168 53.832 120 120 120s120-53.832 120-120c0-.506-.013-1.01-.019-1.515h121.019c8.284 0 15-6.716 15-15v-330c0-8.285-6.716-15-15-15zm-43.122 30-197.878 147.792-197.878-147.792zm-197.878 421.514c-49.626 0-90-40.374-90-90s40.374-90 90-90 90 40.374 90 90-40.374 90-90 90zm226-121.514h-110.208c-13.876-50.929-60.527-88.485-115.792-88.485-55.266 0-101.916 37.557-115.792 88.485h-110.208v-283.56l217.024 162.092c2.662 1.988 5.819 2.982 8.976 2.982s6.314-.994 8.976-2.982l217.024-162.092zm-191.606 5.908-49.394 49.393-19.394-19.393c-5.857-5.858-15.355-5.858-21.213 0s-5.858 15.355 0 21.213l30 30c2.929 2.929 6.768 4.394 10.606 4.394s7.678-1.464 10.606-4.394l60-60c5.858-5.858 5.858-15.355 0-21.213-5.856-5.859-15.354-5.859-21.211 0z\" fill=\"currentColor\" /></g></g></svg>\n)\n\nexport default EmailIcon;","import React, { useState, useEffect } from 'react';\nimport EmailIcon from 'components/Icons/EmailIcon';\nimport Icon from '@ant-design/icons';\nimport { Alert, Button, Space, Spin } from 'antd';\nimport { Link, useLocation } from 'react-router-dom';\nimport { verifyEmailAPI } from 'services/auth/auth.service';\n\nconst VerifyPage = (props) => {\n\n  const [loading, setLoading] = useState(false);\n  const [success, setSuccess] = useState(false);\n  const [error, setError] = useState(null);\n  const { search } = useLocation();\n  const urlSearchParams = new URLSearchParams(search);\n  const token = urlSearchParams.get('token');\n\n  function isValidToken(token = \"\") {\n    const isValid = /[A-Za-z0-9-_=]+\\.[A-Za-z0-9-_=]+\\.?[A-Za-z0-9-_.+/=]*/.test(token);\n    console.log(isValid);\n    return isValid;\n  }\n\n  async function verifyEmail(token) {\n    try {\n      setLoading(true);\n      await verifyEmailAPI(token);\n      setSuccess(true);\n    } catch (error) {\n      setError(error);\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  useEffect(() => {\n    if (token && token.length > 0 && isValidToken(token)) {\n      verifyEmail(token);\n    }\n  }, [search, token]);\n\n  return (\n    <main className=\"login-page\">\n      <div className=\"auth\">\n        <div className=\"auth__header text-center\">\n          <Icon component={EmailIcon} />\n          <h1 className=\"text-3xl\">Xác thực email</h1>\n        </div>\n\n        {\n          loading &&\n          <Space align=\"center\" className=\"flex text-center justify-center\">\n            <Spin />\n            <span>Vui lòng đợi</span>\n          </Space>\n        }\n\n        {\n          success &&\n          <Alert\n            showIcon\n            type=\"success\"\n            message=\"Xác thực địa chỉ email thành công\"\n          />\n        }\n\n        {\n          !isValidToken(token) &&\n          <Alert\n            showIcon\n            type=\"error\"\n            message=\"URL không hợp lệ\"\n          />\n        }\n\n        {\n          !!error &&\n          <Alert\n            showIcon\n            type=\"error\"\n            message={error?.response?.data.message || \"Có lỗi khi xác thực email, vui lòng thử lại\"}\n          />\n        }\n\n        <div className=\"text-center mt-5\">\n          <Button type=\"link\">\n            <Link to=\"/\">Về trang chủ</Link>\n          </Button>\n        </div>\n      </div>\n    </main>\n  )\n}\n\nexport default VerifyPage;","import React, { useEffect } from 'react';\nimport { Route, HashRouter as Router, Switch, Redirect  } from 'react-router-dom';\nimport LoginPage from 'pages/login';\nimport Cookie from 'js-cookie';\nimport jwtDecode from 'jwt-decode';\nimport AdminLayout from 'layouts/AdminLayout/AdminLayout';\nimport PhysicianLayout from 'layouts/PhysicianLayout/PhysicianLayout';\nimport ReceptionistLayout from 'layouts/ReceptionistLayout/ReceptionistLayout';\nimport setupInterceptor from 'utils/interceptor';\nimport { useDispatch } from 'react-redux';\nimport { getProfileAction } from 'store/actions/user.action';\nimport { refreshToken } from 'services/auth/auth.service';\nimport moment from 'moment';\nimport 'moment/locale/vi';\n\n// import \"normalize.css/normalize.css\";\n// import \"@blueprintjs/core/lib/css/blueprint.css\";\n// import \"@blueprintjs/icons/lib/css/blueprint-icons.css\";\nimport 'antd/dist/antd.css';\nimport 'styles/main.scss';\nimport VerifyPage from 'pages/verify-email';\n\nmoment.locale('vi');\n\n\nfunction App() {\n\n  setupInterceptor();\n\n  const dispatch = useDispatch();\n\n  function fetchProfile() {\n    try {\n      const token = Cookie.get('EMR_token');\n      if (token && jwtDecode(token)) {\n        dispatch(getProfileAction());\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async function checkRefresh() {\n    try {\n      const token = Cookie.get('EMR_token');\n      const refresh = Cookie.get('EMR_refresh');\n      if (!token && refresh) {\n        const newTokenReponse = await refreshToken(refresh);\n        const newToken = newTokenReponse.data;\n        Cookie.set('EMR_token', newToken.access_token, { expires: 3/24 });\n      }\n      fetchProfile();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  useEffect(() => {\n    checkRefresh();\n  });\n  \n  return (\n    <div className=\"app\">\n      <Router>\n        <Switch>\n          <Route path=\"/login\" component={LoginPage} />\n          <Route path=\"/verify-email\" component={VerifyPage} />\n\n          <Route path=\"/admin\" component={AdminLayout} />\n          <Route path=\"/physician\" component={PhysicianLayout} />\n          <Route path=\"/receptionist\" component={ReceptionistLayout} />\n\n          <Redirect to=\"/login\" />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import axios from 'axios';\nimport { message } from 'antd';\nimport Cookie from 'js-cookie';\nimport * as AuthService from 'services/auth/auth.service';\nimport jwtDecode from 'jwt-decode';\nimport { API_URL } from 'constant/apiUrl';\n\nexport default function setupInterceptor() {\n  axios.interceptors.request.use((config) => {\n\n    if (config.method === 'delete') {\n      message.loading('Đang thực hiện');\n    }\n\n    try {\n      const token = Cookie.get('EMR_token');\n      if (token && jwtDecode(token)) {\n        config.headers['Authorization'] = `Bearer ${token}`;\n      }\n    } catch (error) {\n      console.log({ error });\n    }\n    return config;\n  }, (error) => Promise.reject(error));\n\n  axios.interceptors.response.use(((res) => {\n    return res;\n  }), async (error) => {\n    const originalRequest = error.config;\n\n    if (error.response.status === 401 && !originalRequest._retry && originalRequest.url !== `${API_URL}/auth/refresh-token/`) {\n      Cookie.remove(\"EMR_token\");\n\n      originalRequest._retry = true;\n\n      let refreshToken = Cookie.get('EMR_refresh');\n\n      if (refreshToken && refreshToken.length > 0) {\n        try {\n          const refreshResponse = await AuthService.refreshToken(refreshToken);\n          const newToken = refreshResponse.data.access_token;\n          Cookie.set('EMR_token', newToken);\n\n          const config = error.config;\n          config.headers['Authorization'] = `Bearer ${newToken}`;\n\n          return new Promise((resolve, reject) => {\n            return axios.request(config)\n              .then(res => resolve(res))\n              .catch(error => reject(error))\n          })\n        } catch (error) {\n          Cookie.remove(\"EMR_refresh\");\n          return Promise.reject(error);\n        }\n      }\n    } else {\n      // Do not show error alert on veirfy email page because it already have its own error messages\n      if (!originalRequest.url.includes('/api/auth/verify-email')) {\n        const errorMessage = error.response?.data.message || \"Unexpected error occurred\";\n        message.error(errorMessage);\n      }\n\n    }\n\n    return Promise.reject(error);\n  })\n}","import * as actionTypes from '../actionTypes';\n\nconst initialState = {\n  loginLoading: false\n}\n\nexport default function authReducer (state = initialState, action) {\n  switch(action.type) {\n    case actionTypes.LOGIN_PENDING:\n      return {\n        ...state,\n        loginLoading: true\n      }\n\n    case actionTypes.LOGIN_SUCCESS:\n      return {\n        ...state,\n        loginLoading: false\n      }\n\n    case actionTypes.LOGIN_FAILURE:\n      return {\n        ...state,\n        loginLoading: false\n      }\n\n    default:\n      return {\n        ...state\n      }\n  }\n}","import * as actionTypes from '../actionTypes';\n\nconst initialState = {\n  user: null,\n  getProfileLoading: false,\n}\n\nexport default function userReducer(state = initialState, action) {\n  switch (action.type) {\n    case actionTypes.GET_PROFILE_PENDING:\n      return {\n        ...state,\n        user: null,\n        getProfileLoading: true\n      }\n    case actionTypes.GET_PROFILE_SUCCESS:\n      return {\n        ...state,\n        user: action.payload,\n        getProfileLoading: false\n      }\n    case actionTypes.GET_PROFILE_FAILURE:\n      return {\n        ...state,\n        user: null,\n        getProfileLoading: false\n      }\n    \n    case actionTypes.LOGOUT:\n      return {\n        ...state,\n        user: null,\n        getProfileLoading: false\n      }\n    default:\n      return { ...state }\n  }\n}","import { combineReducers } from 'redux';\nimport authReducer from './reducers/auth.reducer';\nimport userReducer from './reducers/user.reducer';\n\nconst rootReducer = combineReducers({\n  userState: userReducer,\n  authState: authReducer\n})\n\nexport default rootReducer;","import { createStore, compose, applyMiddleware } from 'redux';\nimport rootReducer from './rootReducer';\nimport thunk from 'redux-thunk';\n\nconst middlewares = [thunk]\n\nconst composeEnhancers =\n  typeof window === 'object' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : compose;\n\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(...middlewares)));\n\nexport default store;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from 'store/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\nimport { ConfigProvider } from 'antd';\nimport viVN from 'antd/lib/locale/vi_VN';\n\nReactDOM.render(\n  <Provider store={store}>\n    <ConfigProvider locale={viVN}>\n      <App />\n    </ConfigProvider>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}