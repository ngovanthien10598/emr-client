{"version":3,"sources":["components/Circle/Circle.module.scss","components/Icons/LoginIcon.jsx","store/actionTypes.js","constant/apiUrl.js","services/auth/auth.service.js","services/user/user.service.js","store/actions/user.action.js","store/actions/auth.action.js","forms/LoginForm/LoginForm.jsx","utils/routing.js","pages/login.jsx","pages/admin/dashboard.jsx","store/actions/dashboard.action.js","forms/DrugCategoryForm/DrugCategoryForm.jsx","services/admin/drug-category.service.js","constant/formActions.js","utils/string.js","pages/common/drug/drug-category.jsx","store/actions/drug-category.action.js","forms/DrugUnitForm/DrugUnitForm.jsx","services/admin/drug-unit.service.js","pages/common/drug/drug-unit.jsx","forms/DrugRouteForm/DrugRouteForm.jsx","services/admin/drug-route.service.js","pages/common/drug/drug-route.jsx","services/admin/drug.service.js","services/admin/drug-dosage-form.service.js","forms/DrugForm/DrugForm.jsx","pages/common/drug/drug.jsx","forms/DrugInstructionForm/DrugInstructionForm.jsx","services/admin/drug-instruction.service.js","pages/common/drug/drug-instruction.jsx","forms/DiseaseCategoryForm/DiseaseCategoryForm.jsx","services/admin/disease-category.service.js","pages/common/disease/disease-category.jsx","services/admin/disease.service.js","forms/DiseaseForm/DiseaseForm.jsx","pages/common/disease/disease.jsx","pages/common/notification/notification.jsx","services/user/room.service.js","services/admin/room.service.js","services/user/visit.service.js","services/admin/visit.service.js","services/user/emr.service.js","pages/common/visit/visit.jsx","services/user/patient.service.js","pages/common/patient/patient.jsx","pages/common/appointment/apointment.jsx","services/admin/medical-service.service.js","forms/ServiceForm/ServiceForm.jsx","pages/common/service/service.jsx","services/admin/working-hours.service.js","pages/admin/working-hour.jsx","forms/RoomForm/RoomForm.jsx","pages/common/room/room.jsx","services/admin/user.service.js","constant/roles.js","constant/formRules.js","forms/UserForm/UserForm.jsx","components/Circle/Circle.jsx","pages/admin/account.jsx","pages/admin/setting.jsx","HOCs/withPrivateRoute.jsx","components/Header.jsx","forms/DrugDosageFormForm/DrugDosageFormForm.jsx","pages/common/drug/drug-dosage-form.jsx","layouts/AdminLayout/AdminLayout.jsx","utils/image.js","forms/Visit/VisitImagesForm.jsx","constant/quill.js","services/user/medical-service.service.js","services/user/drug-category.service.js","services/user/drug-instruction.service.js","services/user/drug.service.js","components/DiseaseSelect/DiseaseSelect.jsx","forms/EMRForm/EMRForm.jsx","pages/common/examination/examination.jsx","store/actions/disease-category.action.js","store/actions/disease.action.js","pages/common/profile/profile.jsx","pages/common/patient/patient-details.jsx","components/EmrDesc/EmrDesc.jsx","pages/common/patient/emr-details.jsx","layouts/PhysicianLayout/PhysicianLayout.jsx","forms/PatientForm/PatientForm.jsx","pages/receptionist/receive.jsx","layouts/ReceptionistLayout/ReceptionistLayout.jsx","components/Icons/EmailIcon.jsx","pages/verify-email.jsx","services/patient/emr.service.js","pages/patient/emr.jsx","pages/patient/patient-emr-details.jsx","layouts/PatientLayout/PatientLayout.jsx","App.jsx","utils/interceptor.js","store/reducers/auth.reducer.js","store/reducers/dashboard.reducer.js","store/reducers/disease-category.reducer.js","store/reducers/disease.reducer.js","store/reducers/drug-category.reducer.js","store/reducers/user.reducer.js","store/rootReducer.js","store/store.js","serviceWorker.js","index.jsx"],"names":["module","exports","LoginIcon","width","height","xmlns","xmlnsXlink","version","id","x","y","viewBox","fill","xmlSpace","cx","cy","r","d","LOGIN_PENDING","LOGIN_SUCCESS","LOGIN_FAILURE","LOGOUT","FETCH_DASHBOARD_PENDING","FETCH_DASHBOARD_SUCCESS","FETCH_DASHBOARD_FAILURE","CREATE_DRUG_CATEGORY_PENDING","CREATE_DRUG_CATEGORY_SUCCESS","CREATE_DRUG_CATEGORY_FAILURE","FETCH_DRUG_CATEGORIES_PENDING","FETCH_DRUG_CATEGORIES_SUCCESS","FETCH_DRUG_CATEGORIES_FAILURE","FETCH_DRUG_CATEGORY_DETAILS_PENDING","FETCH_DRUG_CATEGORY_DETAILS_SUCCESS","FETCH_DRUG_CATEGORY_DETAILS_FAILURE","UPDATE_DRUG_CATEGORY_PENDING","UPDATE_DRUG_CATEGORY_SUCCESS","UPDATE_DRUG_CATEGORY_FAILURE","DELETE_DRUG_CATEGORY_PENDING","DELETE_DRUG_CATEGORY_SUCCESS","DELETE_DRUG_CATEGORY_FAILURE","GET_PROFILE_PENDING","GET_PROFILE_SUCCESS","GET_PROFILE_FAILURE","FETCH_DISEASE_CATEGORIES_PENDING","FETCH_DISEASE_CATEGORIES_SUCCESS","FETCH_DISEASE_CATEGORIES_FAILURE","FETCH_DISEASES_PENDING","FETCH_DISEASES_SUCCESS","FETCH_DISEASES_FAILURE","API_URL","NODE_URL","ADMIN_DRUG_CATEGORY_URL","USER_DRUG_CATEGORY_URL","endpointPrefix","login","username","password","url","axios","post","includes","refreshToken","refresh_token","verifyEmailAPI","token","get","changePasswordAPI","body","put","getProfile","addBlockChainUserAPI","userId","role","Promise","reject","Error","updateProfile","getProfileSuccess","user","type","actionTypes","payload","getProfileAction","dispatch","a","profileRes","data","console","log","logoutAction","Cookie","remove","LoginForm","history","useHistory","useDispatch","authState","useSelector","state","userState","useEffect","redirectPath","getRedirectPath","replace","className","layout","autoComplete","noValidate","onFinish","values","email","loginRes","loginData","accessToken","access_token","set","expires","Icon","component","Item","name","placeholder","Password","loading","loginLoading","getProfileLoading","block","size","htmlType","LoginPage","props","connect","statistic","dashboardState","fetchLoading","fetchDashboard","response","useState","total","completed","unCompleted","result","setResult","years","setYears","selectedYear","setSelectedYear","month","chartData","setChartData","Object","keys","emr","map","key","split","year","unshift","completed_emr","uncompleted_emr","getChartData","gutter","flex","spinning","title","value","valueStyle","color","prefix","ProfileOutlined","FileDoneOutlined","FileExcelOutlined","justify","style","onChange","Option","margin","top","right","bottom","left","padding","tooltip","indexValue","indexBy","DrugCategoryForm","form","defaultCategory","label","initialValue","autoFocus","getDrugCategoryAPI","search","formActions","getQueryString","queryObj","join","categories","drugCategoryState","drugCategories","createLoading","updateLoading","deleteLoading","createDrugCategory","fetchDrugCategories","query","endpoint","updateDrugCategory","deleteDrugCategory","delete","modalVisible","setModalVisible","action","setAction","selectedCategory","setSelectedCategory","Form","useForm","drugCategoryForm","tableColumns","render","text","record","index","dataIndex","icon","EditOutlined","onClick","category","onConfirm","handleDelete","okButtonProps","okText","okType","cancelText","DeleteOutlined","handleFormSubmit","validateFields","indexOf","cut","substr","convertedStr","charAt","toUpperCase","toLowerCase","cat","PlusOutlined","rowKey","columns","dataSource","pagination","visible","onCancel","confirmLoading","destroyOnClose","afterClose","resetFields","onOk","DrugUnitForm","defaultUnit","getDrugUnitsAPI","addDrugUnitAPI","updateDrugUnitAPI","deleteDrugUnitAPI","DrugUnitPage","drugUnits","setDrugUnits","fetchingDrugUnits","setFetchingDrugUnits","modalLoading","setModalLoading","selectedUnit","setSelectedUnit","drugUnitForm","unit","getDrugUnits","DrugRouteForm","defaultRoute","getDrugRouteAPI","addDrugRouteAPI","updateDrugRouteAPI","deleteDrugRouteAPI","DrugRoutePage","routes","setRoutes","fetchingRoutes","setFetchingRoutes","selectedRoute","setSelectedRoute","drugRouteForm","route","getDrugRoutes","getDrugsAPI","params","getDrugDetailsAPI","addDrugAPI","updateDrugAPI","deleteDrugAPI","getDrugDosageFormAPI","addDrugDosageFormAPI","updateDrugDosageFormAPI","deleteDrugDosageFormAPI","DrugForm","defaultDrug","setCategories","units","setUnits","forms","setForms","drugDetail","setDrugDetail","catLoading","setCatLoading","unitLoading","setUnitLoading","routeLoading","setRouteLoading","formLoading","setFormLoading","detailLoading","setDetailLoading","getDrugCategories","catResponse","unitResponse","routeResponse","getDrugDosageForms","formResponse","getDrugDetail","detailResponse","prevCats","findIndex","drug_category","prevUnits","u","drug_unit","prevRoutes","drug_route","prevForms","f","drug_dosage_form","all","getData","setFieldsValue","code","price","drug_category_id","drug_unit_id","drug_dosage_form_id","drug_route_id","strength","hidden","suffix","DrugPage","drugs","setDrugs","fetchingDrugs","setFetchingDrugs","selectedDrug","setSelectedDrug","drugForm","drug","getDrugs","results","DrugInstructionForm","defaultInstruction","instruction","getDrugInstructionsAPI","addDrugInstructionAPI","updateDrugInstructionAPI","deleteDrugInstructionAPI","DrugInstructionPage","drugInstructions","setDrugInstructions","fetchingDrugInstructions","setFetchingDrugInstructions","selectedInstruction","setSelectedInstruction","drugInstructionForm","ins","getDrugInstructions","DiseaseCategoryForm","getDiseaseCategoryAPI","addDiseaseCategoryAPI","updateDiseaseCategoryAPI","deleteDiseaseCategoryAPI","DiseaseCategoryPage","fetchingCategories","setFetchingCategories","diseaseCategoryForm","getDiseaseCategories","getDiseasesAPI","getDiseaseDetailsAPI","addDiseaseAPI","disease_category","updateDiseaseAPI","deleteDiseaseAPI","DiseaseForm","defaultDisease","diseaseDetail","setDiseaseDetail","getDiseaseDetail","DiseasePage","diseases","setDiseases","fetchingDiseases","setFetchingDiseases","selectedDisease","setSelectedDisease","diseaseForm","disease","getDiseases","NotificationPage","getRoomAPI","addRoomAPI","number","Number","updateRoomAPI","deleteRoomAPI","getVisitDataAPI","createVisitAPI","patientId","roomId","room_id","patient_id","deleteVisitAPI","visitId","listEMRAPI","addEMRAPI","getEMRHistoryAPI","emrId","updateEMRAPI","completeEMRAPI","pathname","useLocation","rooms","setRooms","roomLoading","setRoomLoading","visitData","setVisitData","visitLoading","setVisitLoading","createEMRLoading","setCreateEMRLoading","selectedRoom","setSelectedRoom","visitList","filter","visit","createdAt","Date","created_at","today","getDate","getMonth","getFullYear","room","_","patient","first_name","last_name","gender","moment","DOB","format","ken","handlePatientClick","getRooms","adminGetRoomAPI","roomResponse","prevSelected","localStorage","getItem","getVisitData","adminGetVisitDataAPI","visitDataResponse","createEmr","prev","visit_id","resolve","cloneArr","splice","checkExistEMR","historyResponse","existEmr","find","completed_at","emrObj","physician","medical_record","administrative","fullname","dayOfBirth","job","ethnicity","expatriate","address","workplace","object","insurance_expirity","insurance_number","family_member_and_address","phone","checkin_at","previous_diagnose","come_from","present_complaint","ask","pathological_process","self_medical_history","family_medical_history","examination","heartbeat","temperature","blood_pressure","breathing","weight","partials","subclinical_summary","initial_diagnose","processed","diagnose","from_date","to_date","summary","pathological_process_and_clinical_course","valuable_subclinical_summary","primary_disease","sub_disease","treatment_method","patient_status","direction_of_treatment","services","attachments","push","handleChangeRoom","getInitialData","setItem","listAllPatientsAPI","getPatientDetailsAPI","createPatientAPI","path","useRouteMatch","patientData","setPatientData","patientLoading","setPatientLoading","to","EyeOutlined","listAllPatient","patientResults","AppointmentPage","mode","locale","getServicesAPI","getServiceDetailsAPI","addServiceAPI","updateServiceAPI","deleteServiceAPI","ServiceForm","defaultService","serviceDetail","setServiceDetail","getServiceDetail","ServicePage","setServices","fetchingServices","setFetchingServices","selectedService","setSelectedService","serviceForm","thousandSeparator","displayType","service","getServices","getWorkingHoursAPI","updateWorkingHourAPI","weekday","isClosed","is_closed","WorkingHourPage","workingHours","setWorkingHours","setLoading","checked","handleWorkingHourChange","getWorkingHours","workingHoursResponse","sort","b","wh","RoomForm","defaultRoom","RoomPage","roomForm","getUsersAPI","qs","stringify","getUserDetailsAPI","addUserAPI","role_id","updateUserAPI","deleteUserAPI","blockUserAPI","unblockUserAPI","ROLES","display","ROLES_LIST","requiredRule","message","required","UserForm","defaultUser","userDetail","setUserDetail","getUserDetail","rules","Group","Circle","classes","classnames","styles","circle","AdminAccountPage","urlSearchParams","URLSearchParams","currentPageOnURL","page","setPage","users","setUsers","fetchingUsers","setFetchingUsers","selectedUser","setSelectedUser","userForm","is_verified_email","handleBlockUnblock","is_active","danger","LockOutlined","UnlockOutlined","getUsers","addReponse","responseData","defaultCurrent","current","pageSize","count","AdminSettingPage","withPrivateRoute","Child","roles","userRole","isValidRole","length","jwtDecode","error","Header","Layout","CustomHeader","avatar","src","backgroundColor","ghost","LogoutOutlined","Modal","confirm","ExclamationCircleOutlined","content","DrugDosageFormForm","defaultDosageForm","DrugDosageFormPage","dosageForms","setDosageForms","fetchingDosageForms","setFetchingDosageForms","selectedDosageForm","setSelectedDosageForm","drugDosageFormForm","dosageForm","Sider","Content","SubMenu","Menu","match","location","borderRight","selectedKeys","DashboardOutlined","MedicineBoxOutlined","BugOutlined","IdcardOutlined","CalendarOutlined","DollarOutlined","ClockCircleOutlined","AppstoreOutlined","UserOutlined","SettingOutlined","minHeight","exact","getBase64","file","reader","FileReader","readAsDataURL","onload","onerror","VisitImagesForm","previewVisible","setPreviewVisible","previewImage","setPreviewImage","previewTitle","setPreviewTitle","fileList","setFileList","uploadButton","marginTop","uploadEvent","event","preview","originFileObj","substring","lastIndexOf","listType","headers","Authorization","onPreview","footer","alt","quillToolbar","DiseaseSelect","diseaseCategories","clearable","selectedCat","setSelectedCat","align","maxWidth","v","Select","EMRForm","emrForm","drugLoading","finishLoading","initialValues","readOnly","defaultActiveKey","Panel","header","TextArea","rows","dateStr","momentObj","hour","minute","date","getDateString","getValueFromEvent","e","target","getContent","theme","modules","toolbar","addonBefore","List","fields","add","field","fieldKey","handleChangeDrugCategory","minWidth","MinusCircleOutlined","handleUploadChange","handleSaveEmr","SaveOutlined","handleFinishExamination","diseaseCategoryState","fetchDiseaseCategoryLoading","diseaseState","fetchDiseaseLoading","fetchDiseaseCategory","ADMIN_DISEASE_CATEGORY_URL","USER_DISEASE_CATEGORY_URL","fetchDisease","ADMIN_DISEASE_URL","USER_DISEASE_URL","useParams","setDrugCategories","setEmr","setDrugLoading","setFinishLoading","isSavingEmr","setIsSavingEmr","adminGetServicesAPI","servicesResponse","servicesData","adminGetDrugCategoryAPI","drugCategoryResponse","drugCategoriesData","drugCategory","adminGetDrugsAPI","drugResponse","drugData","adminGetDrugInstructionsAPI","drugInsResponse","drugInsData","getEmrDetail","emrList","goBack","emrBody","checkin","success","status","fileListElement","uid","cloneEmr","onBack","description","showIcon","setUpdateLoading","changePasswordLoading","setChangePasswordLoading","imageUrl","setImageUrl","changePasswordForm","LoadingOutlined","isMoment","method","showUploadList","info","family_member_name","autoSize","minRows","maxRows","family_member_address","Descriptions","PatientDetails","setPatient","EMRs","setEMRs","EMRLoading","setEMRLoading","__","row","Record","Key","getPatientDetails","patientResponse","getPatientEMRs","EMRResponse","colon","EmrDesc","bordered","column","span","dangerouslySetInnerHTML","__html","drugInstruction","s","i","EmrDetailsPage","emrHistory","setEmrHistory","emrLoading","setEmrLoading","selectedTab","setSelectedTab","getEmrHistory","res","updated_at","val","h","TabPane","tab","ContainerOutlined","PatientForm","ReceivePage","isCreatingPatient","setCreatingPatient","isCreatingVisit","setCreatingVisit","patientForm","renderMenu","handleCreateVisit","overlay","overlayStyle","trigger","listAllPatients","handleSubmit","createResponse","extra","Search","EmailIcon","enableBackground","VerifyPage","setSuccess","setError","isValidToken","isValid","test","verifyEmail","listAllEmrs","PatientEmrPage","emrs","setEmrs","getEmrs","PatientEmrDetailsPage","App","interceptors","request","use","config","originalRequest","_retry","AuthService","refreshResponse","newToken","then","catch","errorMessage","fetchProfile","refresh","newTokenReponse","checkRefresh","AdminLayout","PhysicianLayout","ReceptionistLayout","PatientLayout","initialState","detailsLoading","drugCategoryDetails","rootReducer","combineReducers","middlewares","thunk","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","Boolean","hostname","ReactDOM","viVN","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.99773dd2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"circle\":\"Circle_circle__3fC-i\",\"circle--success\":\"Circle_circle--success__1IfvS\"};","import React from 'react';\n\nconst LoginIcon = () => (\n  <svg width=\"50\" height=\"50\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" version=\"1.1\" id=\"Capa_1\" x=\"0px\" y=\"0px\" viewBox=\"0 0 512.002 512.002\" fill=\"currentColor\" xmlSpace=\"preserve\">\n    <g>\n      <g>\n        <g>\n          <circle cx=\"338\" cy=\"346.001\" r=\"20\" />\n          <path d=\"M238,472.001H80c-22.056,0-40-17.944-40-40v-164c0-22.056,17.944-40,40-40h288c22.056,0,40,17.944,40,40v40     c0,11.046,8.954,20,20,20c11.046,0,20-8.954,20-20v-40c0-44.112-35.888-80-80-80h-24.037v-70.534     c0-64.771-53.832-117.466-120-117.466s-120,52.695-120,117.466v70.534H80c-44.112,0-80,35.888-80,80v164     c0,44.112,35.888,80,80,80h158c11.046,0,20-8.954,20-20S249.046,472.001,238,472.001z M143.963,117.467     c0-42.715,35.888-77.466,80-77.466s80,34.751,80,77.466v70.534h-160V117.467z\" />\n          <path d=\"M503.643,325.739c-8.982-6.431-21.477-4.362-27.904,4.62l-98.581,137.7c-2.692,3.122-6.066,3.796-7.874,3.916     c-1.854,0.123-5.424-0.112-8.567-3.061l-63.708-62.171c-7.906-7.716-20.568-7.559-28.282,0.345     c-7.715,7.905-7.561,20.567,0.345,28.282l63.82,62.281c0.06,0.058,0.119,0.116,0.18,0.173C342.639,506.933,355.41,512,368.55,512     c1.129,0,2.261-0.037,3.393-0.113c14.314-0.954,27.679-7.915,36.666-19.097c0.232-0.29,0.456-0.585,0.673-0.887l98.981-138.26     C514.692,344.662,512.624,332.168,503.643,325.739z\" />\n          <circle cx=\"262\" cy=\"346.001\" r=\"20\" />\n          <circle cx=\"112\" cy=\"346.001\" r=\"20\" />\n          <circle cx=\"187\" cy=\"346.001\" r=\"20\" />\n        </g>\n      </g>\n    </g>\n    <g>\n    </g>\n    <g>\n    </g>\n    <g>\n    </g>\n    <g>\n    </g>\n    <g>\n    </g>\n    <g>\n    </g>\n    <g>\n    </g>\n    <g>\n    </g>\n    <g>\n    </g>\n    <g>\n    </g>\n    <g>\n    </g>\n    <g>\n    </g>\n    <g>\n    </g>\n    <g>\n    </g>\n    <g>\n    </g>\n  </svg>\n)\n\nexport default LoginIcon;","/* -------------------- AUTHENTICATION -------------------- */\nexport const LOGIN_PENDING = \"LOGIN_PENDING\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_FAILURE = \"LOGIN_FAILURE\";\n\nexport const LOGOUT = \"LOGOUT\";\n\n/* -------------------- ADMIN -------------------- */\n// Dashboard\nexport const FETCH_DASHBOARD_PENDING = \"FETCH_DASHBOARD_PENDING\";\nexport const FETCH_DASHBOARD_SUCCESS = \"FETCH_DASHBOARD_SUCCESS\";\nexport const FETCH_DASHBOARD_FAILURE = \"FETCH_DASHBOARD_FAILURE\";\n\n// Drug cateogry\nexport const CREATE_DRUG_CATEGORY_PENDING = \"CREATE_DRUG_CATEGORY_PENDING\";\nexport const CREATE_DRUG_CATEGORY_SUCCESS = \"CREATE_DRUG_CATEGORY_SUCCESS\";\nexport const CREATE_DRUG_CATEGORY_FAILURE = \"CREATE_DRUG_CATEGORY_FAILURE\";\n\nexport const FETCH_DRUG_CATEGORIES_PENDING = \"FETCH_DRUG_CATEGORIES_PENDING\";\nexport const FETCH_DRUG_CATEGORIES_SUCCESS = \"FETCH_DRUG_CATEGORIES_SUCCESS\";\nexport const FETCH_DRUG_CATEGORIES_FAILURE = \"FETCH_DRUG_CATEGORIES_FAILURE\";\n\nexport const FETCH_DRUG_CATEGORY_DETAILS_PENDING = \"FETCH_DRUG_CATEGORY_DETAILS_PENDING\";\nexport const FETCH_DRUG_CATEGORY_DETAILS_SUCCESS = \"FETCH_DRUG_CATEGORY_DETAILS_SUCCESS\";\nexport const FETCH_DRUG_CATEGORY_DETAILS_FAILURE = \"FETCH_DRUG_CATEGORY_DETAILS_FAILURE\";\n\nexport const UPDATE_DRUG_CATEGORY_PENDING = \"UPDATE_DRUG_CATEGORY_PENDING\";\nexport const UPDATE_DRUG_CATEGORY_SUCCESS = \"UPDATE_DRUG_CATEGORY_SUCCESS\";\nexport const UPDATE_DRUG_CATEGORY_FAILURE = \"UPDATE_DRUG_CATEGORY_FAILURE\";\n\nexport const DELETE_DRUG_CATEGORY_PENDING = \"DELETE_DRUG_CATEGORY_PENDING\";\nexport const DELETE_DRUG_CATEGORY_SUCCESS = \"DELETE_DRUG_CATEGORY_SUCCESS\";\nexport const DELETE_DRUG_CATEGORY_FAILURE = \"DELETE_DRUG_CATEGORY_FAILURE\";\n\n// Drug unit\nexport const FETCH_DRUG_UNIT_PENDING = \"FETCH_DRUG_UNIT_PENDING\";\nexport const FETCH_DRUG_UNIT_SUCCESS = \"FETCH_DRUG_UNIT_SUCCESS\";\nexport const FETCH_DRUG_UNIT_FAILURE = \"FETCH_DRUG_UNIT_FAILURE\";\n\n// Drug route\nexport const FETCH_DRUG_ROUTE_PENDING = \"FETCH_DRUG_ROUTE_PENDING\";\nexport const FETCH_DRUG_ROUTE_SUCCESS = \"FETCH_DRUG_ROUTE_SUCCESS\";\nexport const FETCH_DRUG_ROUTE_FAILURE = \"FETCH_DRUG_ROUTE_FAILURE\";\n\n// Drug dosage form\nexport const FETCH_DRUG_DOSAGE_FORM_PENDING = \"FETCH_DRUG_DOSAGE_FORM_PENDING\";\nexport const FETCH_DRUG_DOSAGE_FORM_SUCCESS = \"FETCH_DRUG_DOSAGE_FORM_SUCCESS\";\nexport const FETCH_DRUG_DOSAGE_FORM_FAILURE = \"FETCH_DRUG_DOSAGE_FORM_FAILURE\";\n\n// Drug\nexport const FETCH_DRUG_PENDING = \"FETCH_DRUG_PENDING\";\nexport const FETCH_DRUG_SUCCESS = \"FETCH_DRUG_SUCCESS\"\nexport const FETCH_DRUG_FAILURE = \"FETCH_DRUG_FAILURE\";\n\n// Drug instruction\nexport const FETCH_DRUG_INSTRUCTION_PENDING = \"FETCH_DRUG_INSTRUCTION_PENDING\";\nexport const FETCH_DRUG_INSTRUCTION_SUCCESS = \"FETCH_DRUG_INSTRUCTION_SUCCESS\";\nexport const FETCH_DRUG_INSTRUCTION_FAILURE = \"FETCH_DRUG_INSTRUCTION_FAILURE\";\n\n/* -------------------- USER -------------------- */\n// Profile\nexport const GET_PROFILE_PENDING = \"GET_PROFILE_PENDING\";\nexport const GET_PROFILE_SUCCESS = \"GET_PROFILE_SUCCESS\";\nexport const GET_PROFILE_FAILURE = \"GET_PROFILE_FAILURE\";\n\n// Disease category\nexport const FETCH_DISEASE_CATEGORIES_PENDING = \"FETCH_DISEASE_CATEGORIES_PENDING\";\nexport const FETCH_DISEASE_CATEGORIES_SUCCESS = \"FETCH_DISEASE_CATEGORIES_SUCCESS\";\nexport const FETCH_DISEASE_CATEGORIES_FAILURE = \"FETCH_DISEASE_CATEGORIES_FAILURE\";\n\n// Disease\nexport const FETCH_DISEASES_PENDING = \"FETCH_DISEASES_PENDING\";\nexport const FETCH_DISEASES_SUCCESS = \"FETCH_DISEASES_SUCCESS\";\nexport const FETCH_DISEASES_FAILURE = \"FETCH_DISEASES_FAILURE\";\n\n/* -------------------- PATIENT -------------------- */","export const API_URL = 'https://emr-2020.wl.r.appspot.com/api';\nexport const NODE_URL = 'https://api.emr-client.tech/api';\n\n/* -------------------- AUTHENTICATION -------------------- */\nexport const LOGIN_URL = API_URL + '/auth/login/';\nexport const REFRESH_TOKEN_URL = API_URL + '/auth/refresh-token/';\nexport const CHANGE_PASSWORD_URL = API_URL + '/auth/change-password/';\n\n/* -------------------- ADMIN -------------------- */\nexport const ADMIN_DASHBOARD_URL = NODE_URL + '/admin/statistic';\n\n// Drug\nexport const ADMIN_DRUG_CATEGORY_URL = API_URL + '/admin/manage-drug-category';\nexport const ADMIN_DRUG_UNIT_URL = API_URL + '/admin/manage-drug-unit';\nexport const ADMIN_DRUG_ROUTE_URL = API_URL + '/admin/manage-drug-route';\nexport const ADMIN_DRUG_DOSAGE_FORM_URL = API_URL + '/admin/manage-drug-dosage-form';\nexport const ADMIN_DRUG_URL = API_URL + '/admin/manage-drug';\nexport const ADMIN_DRUG_INSTRUCTION_URL = API_URL + '/admin/manage-drug-instruction';\n\n// Disease\nexport const ADMIN_DISEASE_CATEGORY_URL = API_URL + '/admin/manage-disease-category';\nexport const ADMIN_DISEASE_URL = API_URL + '/admin/manage-disease';\n\n\n/* -------------------- USER -------------------- */\n// Drug\nexport const USER_DRUG_CATEGORY_URL = API_URL + '/user/drug-category';\nexport const USER_DRUG_UNIT_URL = API_URL + '/user/drug-unit';\nexport const USER_DRUG_ROUTE_URL = API_URL + '/user/drug-route';\nexport const USER_DRUG_DOSAGE_FORM_URL = API_URL + '/user/drug-dosage-form';\nexport const USER_DRUG_URL = API_URL + '/user/drug';\nexport const USER_DRUG_INSTRUCTION_URL = API_URL + '/user/drug-instruction';\n\n// Disease\nexport const USER_DISEASE_CATEGORY_URL = API_URL + '/user/disease-category';\nexport const USER_DISEASE_URL = API_URL + '/user/disease';\n\n/* -------------------- PATIENT -------------------- */","import { API_URL } from \"constant/apiUrl\";\nimport axios from 'axios';\n\n\nconst endpointPrefix = `${API_URL}/auth`;\n\n/**\n * Login to system\n * @param email\n * @param password\n */\nexport function login(username, password) {\n  const url = `${endpointPrefix}/login/`;\n  return axios.post(url, {\n    [username.includes('+84') ? 'phone' : 'email']: username,\n    password: password\n  });\n}\n\n/**\n * This function is used to get new access token from refresh token\n * when current access token is expired\n * @param refreshToken Refresh token from last login\n */\nexport function refreshToken(refreshToken) {\n  const url = `${endpointPrefix}/refresh-token/`;\n  return axios.post(url, {\n    refresh_token: refreshToken\n  });\n}\n\n\nexport function verifyEmailAPI(token) {\n  const url = `${endpointPrefix}/verify-email/${token}/`;\n  return axios.get(url);\n}\n\nexport function changePasswordAPI(body) {\n  const url = `${endpointPrefix}/change-password/`;\n  return axios.put(url, body);\n}","import { API_URL, NODE_URL } from \"constant/apiUrl\";\nimport axios from 'axios';\n\nconst endpointPrefix = `${API_URL}/user`;\n\n/**\n* Get user profile\n* @param token Access token\n*/\nexport function getProfile() {\n  const url = `${endpointPrefix}/profile/`;\n  return axios.get(url);\n}\n\nexport function addBlockChainUserAPI(userId, role = \"user\") {\n  if (role !== \"user\" && role !== \"patient\") return Promise.reject(new Error('Unknown role'));\n  const url = `${NODE_URL}/register-${role}`;\n  return axios.post(url, { [`${role}_id`]: userId });\n}\n\nexport function updateProfile(body) {\n  const url = `${endpointPrefix}/profile/`;\n  return axios.put(url, body);\n}","import * as actionTypes from '../actionTypes';\nimport { getProfile } from 'services/user/user.service';\n\nfunction getProfilePending() {\n  return {\n    type: actionTypes.GET_PROFILE_PENDING\n  }\n}\n\nfunction getProfileSuccess(user) {\n  return {\n    type: actionTypes.GET_PROFILE_SUCCESS,\n    payload: user\n  }\n}\n\nfunction getProfileFailure() {\n  return {\n    type: actionTypes.GET_PROFILE_FAILURE\n  }\n}\n\nexport function getProfileAction() {\n  return async dispatch => {\n    try {\n      dispatch(getProfilePending());\n      const profileRes = await getProfile();\n      const user = profileRes.data;\n      dispatch(getProfileSuccess(user));\n    } catch(error) {\n      console.log(error);\n      dispatch(getProfileFailure());\n    }\n  }\n}\n\nexport function removeUserAction() {\n  return {\n    type: actionTypes.LOGOUT\n  }\n}","import * as actionTypes from '../actionTypes';\nimport { login } from 'services/auth/auth.service';\nimport Cookie from 'js-cookie';\nimport { getProfileAction, removeUserAction } from './user.action';\n\nfunction loginPending() {\n  return {\n    type: actionTypes.LOGIN_PENDING\n  }\n}\n\nfunction loginSuccess() {\n  return {\n    type: actionTypes.LOGIN_SUCCESS,\n  }\n}\n\nfunction loginFailure() {\n  return {\n    type: actionTypes.LOGIN_FAILURE\n  }\n}\n\nexport function loginAction(email, password) {\n  return async dispatch => {\n    try {\n      dispatch(loginPending());\n      const loginRes = await login(email, password);\n      const loginData = loginRes.data;\n\n      const accessToken = loginData.access_token;\n      const refreshToken = loginData.refresh_token;\n      Cookie.set('EMR_token', accessToken, { expires: 3 / 24 }); // 3 hours\n      Cookie.set('EMR_refresh', refreshToken, { expires: 7 }); // 7 days\n      dispatch(loginSuccess());\n      dispatch(getProfileAction());\n    } catch (error) {\n      dispatch(loginFailure());\n    }\n  }\n}\n\nexport function logoutAction() {\n  Cookie.remove('EMR_token');\n  Cookie.remove('EMR_refresh');\n\n  return dispatch => {\n    dispatch(removeUserAction());\n  }\n}","import React, { useEffect } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { Form, Input, Button } from 'antd';\nimport Icon from '@ant-design/icons';\nimport LoginIcon from 'components/Icons/LoginIcon';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { loginAction } from 'store/actions/auth.action';\nimport { getRedirectPath } from 'utils/routing';\n\nconst LoginForm = () => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const authState = useSelector(state => state.authState);\n  const userState = useSelector(state => state.userState);\n  const user = userState.user;\n\n  function handleSubmit(values) {\n    dispatch(loginAction(values.email, values.password));\n  }\n\n  useEffect(() => {\n    if (user && user.role) {\n      const redirectPath = getRedirectPath(user.role);\n      console.log(redirectPath);\n      history.replace(redirectPath);\n    }\n  }, [user, history]);\n\n  return (\n    <Form\n      className=\"auth\"\n      layout=\"vertical\"\n      autoComplete=\"off\"\n      noValidate\n      onFinish={handleSubmit}>\n\n      <div className=\"auth__header text-center\">\n        <Icon component={LoginIcon} />\n        <h1 className=\"text-3xl\">Đăng nhập</h1>\n      </div>\n\n      <Form.Item name=\"email\">\n        <Input type=\"email\" placeholder=\"Email/Điện thoại\" />\n      </Form.Item>\n\n      <Form.Item name=\"password\" className=\"m-0\">\n        <Input.Password placeholder=\"Mật khẩu\" />\n        {/* <Button type=\"link\"> */}\n        {/* </Button> */}\n      </Form.Item>\n      {/* <Link className=\"block mt-2 mb-6\" to=\"/forgot-password\">Quên mật khẩu</Link> */}\n      <div className=\"mt-2 mb-6\"></div>\n\n      <Form.Item>\n        <Button loading={authState.loginLoading || userState.getProfileLoading} block type=\"primary\" size=\"large\" htmlType=\"submit\">Đăng nhập</Button>\n      </Form.Item>\n    </Form>\n  )\n}\n\nexport default LoginForm;","export function getRedirectPath(role) {\n  if (!role) return \"/login\";\n\n  switch (role.id) {\n    case 1:\n      return \"/admin\";\n    case 2:\n      return \"/physician\";\n    case 3:\n      return \"/receptionist\";\n    case 4:\n      return \"/patient\";\n    default:\n      return \"\";\n  }\n}","import React from 'react';\nimport LoginForm from 'forms/LoginForm/LoginForm';\n\nconst LoginPage = (props) => {\n  return (\n    <main className=\"login-page\">\n      <LoginForm />\n    </main>\n  )\n}\n\nexport default LoginPage;","import React, { useEffect, useState } from 'react';\nimport { Row, Col, Statistic, Spin, Card, Select } from 'antd';\nimport { fetchDashboard } from 'store/actions/dashboard.action';\nimport { connect } from 'react-redux';\nimport { ProfileOutlined, FileDoneOutlined, FileExcelOutlined } from '@ant-design/icons';\nimport { ResponsiveBar } from '@nivo/bar';\n\nconst AdminDashboard = props => {\n\n  const [result, setResult] = useState({ total: 0, completed: 0, unCompleted: 0 });\n  const [years, setYears] = useState([]);\n  const [selectedYear, setSelectedYear] = useState('');\n  const [chartData, setChartData] = useState(\n    [\n      { month: 1, \"Đã đóng\": 0, \"Chưa đóng\": 0 },\n      { month: 2, \"Đã đóng\": 0, \"Chưa đóng\": 0 },\n      { month: 3, \"Đã đóng\": 0, \"Chưa đóng\": 0 },\n      { month: 4, \"Đã đóng\": 0, \"Chưa đóng\": 0 },\n      { month: 5, \"Đã đóng\": 0, \"Chưa đóng\": 0 },\n      { month: 6, \"Đã đóng\": 0, \"Chưa đóng\": 0 },\n      { month: 7, \"Đã đóng\": 0, \"Chưa đóng\": 0 },\n      { month: 8, \"Đã đóng\": 0, \"Chưa đóng\": 0 },\n      { month: 9, \"Đã đóng\": 0, \"Chưa đóng\": 0 },\n      { month: 10, \"Đã đóng\": 0, \"Chưa đóng\": 0 },\n      { month: 11, \"Đã đóng\": 0, \"Chưa đóng\": 0 },\n      { month: 12, \"Đã đóng\": 0, \"Chưa đóng\": 0 },\n    ]\n  );\n\n  const {\n    fetchDashboard,\n    statistic,\n    fetchLoading\n  } = props;\n\n  useEffect(() => {\n    fetchDashboard();\n  }, []);\n\n  useEffect(() => {\n    if (statistic) {\n      let total = 0;\n      let completed = 0;\n      let unCompleted = 0;\n      let years = [];\n\n\n      // Calc total EMRs\n      Object.keys(statistic.emr).map(key => {\n        total += statistic.emr[key];\n\n        // Get year\n        // const date = moment(key, \"M/YYYY\");\n        const [month, year] = key.split('/');\n\n        if (!years[year]) {\n          years.unshift(year);\n        }\n      })\n\n      // Calc completed EMRs\n      Object.keys(statistic.completed_emr).map(key => {\n        completed += statistic.completed_emr[key];\n      })\n\n      // Calc uncompleted EMRs\n      Object.keys(statistic.uncompleted_emr).map(key => {\n        unCompleted += statistic.uncompleted_emr[key];\n      })\n\n      setSelectedYear(years[0]);\n      setResult({ total: total, completed: completed, unCompleted: unCompleted });\n      setYears(years);\n    }\n\n  }, [statistic]);\n\n  function getChartData() {\n    const chartData = [\n      { month: 1, \"Đã đóng\": 0, \"Chưa đóng\": 0 },\n      { month: 2, \"Đã đóng\": 0, \"Chưa đóng\": 0 },\n      { month: 3, \"Đã đóng\": 0, \"Chưa đóng\": 0 },\n      { month: 4, \"Đã đóng\": 0, \"Chưa đóng\": 0 },\n      { month: 5, \"Đã đóng\": 0, \"Chưa đóng\": 0 },\n      { month: 6, \"Đã đóng\": 0, \"Chưa đóng\": 0 },\n      { month: 7, \"Đã đóng\": 0, \"Chưa đóng\": 0 },\n      { month: 8, \"Đã đóng\": 0, \"Chưa đóng\": 0 },\n      { month: 9, \"Đã đóng\": 0, \"Chưa đóng\": 0 },\n      { month: 10, \"Đã đóng\": 0, \"Chưa đóng\": 0 },\n      { month: 11, \"Đã đóng\": 0, \"Chưa đóng\": 0 },\n      { month: 12, \"Đã đóng\": 0, \"Chưa đóng\": 0 },\n    ]\n\n    // Calc completed EMRs\n    Object.keys(statistic.completed_emr).map(key => {\n\n      const [month, year] = key.split('/');\n\n      if (year == selectedYear) {\n        chartData[month - 1][\"Đã đóng\"] = statistic.completed_emr[key];\n      }\n    })\n\n    // Calc uncompleted EMRs\n    Object.keys(statistic.uncompleted_emr).map(key => {\n\n      const [month, year] = key.split('/');\n\n      if (year == selectedYear) {\n        chartData[month - 1][\"Chưa đóng\"] = statistic.uncompleted_emr[key];\n      }\n    })\n\n    setChartData(chartData);\n  }\n\n  function handleYearChange(year) {\n    setSelectedYear(year);\n  }\n\n  useEffect(() => {\n    if (selectedYear) {\n      getChartData();\n    }\n  }, [selectedYear])\n\n  useEffect(() => {\n    console.log(chartData);\n  }, [chartData]);\n\n  return (\n    <>\n      <h1 className=\"text-xl mb-5\">Bảng điều khiển</h1>\n      <Row gutter={60} className=\"mb-5\">\n        <Col flex={1}>\n          <Spin spinning={fetchLoading}>\n            <Card>\n              <Statistic\n                title=\"Tổng số bệnh án\"\n                value={result.total}\n                valueStyle={{ color: '#1890ff' }}\n                prefix={<ProfileOutlined />} />\n            </Card>\n          </Spin>\n        </Col>\n        <Col flex={1}>\n          <Spin spinning={fetchLoading}>\n            <Card>\n              <Statistic\n                title=\"Bệnh án đã đóng\"\n                value={result.completed}\n                valueStyle={{ color: '#3f8600' }}\n                prefix={<FileDoneOutlined />} />\n            </Card>\n          </Spin>\n        </Col>\n        <Col flex={1}>\n          <Spin spinning={fetchLoading}>\n            <Card>\n              <Statistic\n                title=\"Bệnh án chưa đóng\"\n                value={result.unCompleted}\n                valueStyle={{ color: '#cf1322' }}\n                prefix={<FileExcelOutlined />} />\n            </Card>\n          </Spin>\n        </Col>\n      </Row>\n\n      <Row justify=\"space-between\">\n        <Col>\n          <h2>Bệnh án</h2>\n        </Col>\n        <Col>\n          <Select style={{ width: 100 }} value={selectedYear} onChange={handleYearChange}>\n            {\n              years.map(y => (\n                <Select.Option key={y} value={y}>{y}</Select.Option>\n              ))\n            }\n          </Select>\n        </Col>\n      </Row>\n      <div style={{ height: 300, width: '100%' }}>\n        <ResponsiveBar\n          data={chartData}\n          margin={{ top: 50, right: 130, bottom: 50, left: 60 }}\n          padding={0.3}\n          keys={['Đã đóng', 'Chưa đóng']}\n          tooltip={(d) => (\n            <span>{d.id}: {d.indexValue}</span>\n          )}\n          indexBy={'month'} />\n      </div>\n\n    </>\n  )\n}\n\nconst mapStateToProps = state => ({\n  statistic: state.dashboardState.statistic,\n  fetchLoading: state.dashboardState.fetchLoading\n})\n\nconst mapDispatchToProps = dispatch => ({\n  fetchDashboard: () => dispatch(fetchDashboard())\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AdminDashboard);","import { ADMIN_DASHBOARD_URL } from 'constant/apiUrl';\nimport * as actionTypes from '../actionTypes';\nimport axios from 'axios';\n\nfunction fetchDashboardPending() {\n  return {\n    type: actionTypes.FETCH_DASHBOARD_PENDING\n  }\n}\n\nfunction fetchDashboardSuccess(data) {\n  return {\n    type: actionTypes.FETCH_DASHBOARD_SUCCESS,\n    payload: data\n  }\n}\n\nfunction fetchDashboardFailure() {\n  return {\n    type: actionTypes.FETCH_DASHBOARD_FAILURE\n  }\n}\n\nexport function fetchDashboard() {\n  \n  const endpoint = ADMIN_DASHBOARD_URL;\n\n  return async dispatch => {\n    try {\n      dispatch(fetchDashboardPending());\n      const response = await axios.get(endpoint);\n      return dispatch(fetchDashboardSuccess(response.data));\n    } catch (error) {\n      return dispatch(fetchDashboardFailure());\n    }\n  }\n}","import React from 'react';\nimport { Form, Input } from 'antd';\n\nconst DrugCategoryForm = props => {\n  const { form, onFinish, defaultCategory } = props;\n\n  return (\n    <Form\n      layout=\"vertical\"\n      form={form}\n      onFinish={onFinish}>\n      <Form.Item label=\"Loại thuốc\" name=\"name\" initialValue={defaultCategory?.name}>\n        <Input autoFocus />\n      </Form.Item>\n    </Form>\n  )\n}\n\nexport default DrugCategoryForm;","import axios from 'axios';\n\nimport { API_URL } from \"constant/apiUrl\";\n\nconst endpointPrefix = `${API_URL}/admin/manage-drug-category`;\n\nexport function getDrugCategoryAPI(search = \"\") {\n  const url = `${endpointPrefix}/?search=${search}`;\n  return axios.get(url);\n}\n\nexport function addDrugCategoryAPI(name) {\n  const url = `${endpointPrefix}/`;\n  return axios.post(url, { name: name });\n}\n\nexport function updateDrugCategoryAPI(id, name) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.put(url, {\n    name: name\n  })\n}\n\nexport function deleteDrugCategoryAPI(id) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.delete(url);\n}","export const formActions = {\n  CREATE: 'CREATE',\n  UPDATE: 'UPDATE'\n}","export function getQueryString(queryObj) {\n  if (!queryObj) return \"\";\n  return Object.keys(queryObj).map(key => `${key}=${queryObj[key]}`).join('&');\n}","import React, { useState, useEffect } from 'react';\nimport { Row, Col, Button, Modal, Table, Form, Popconfirm, Space } from 'antd';\nimport { PlusOutlined, EditOutlined, DeleteOutlined } from '@ant-design/icons';\nimport DrugCategoryForm from 'forms/DrugCategoryForm/DrugCategoryForm';\nimport { addDrugCategoryAPI, deleteDrugCategoryAPI, getDrugCategoryAPI, updateDrugCategoryAPI } from 'services/admin/drug-category.service';\nimport { formActions } from 'constant/formActions';\nimport { connect } from 'react-redux';\n\n// Redux\nimport { createDrugCategory, fetchDrugCategories, updateDrugCategory, deleteDrugCategory } from 'store/actions/drug-category.action';\n\nconst DrugCategoryPage = props => {\n\n  const {\n    categories,\n    createDrugCategory,\n    fetchDrugCategories,\n    updateDrugCategory,\n    deleteDrugCategory,\n    createLoading,\n    fetchLoading,\n    updateLoading,\n    deleteLoading\n  } = props;\n  const [modalVisible, setModalVisible] = useState(false);\n  const [action, setAction] = useState(formActions.CREATE);\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [drugCategoryForm] = Form.useForm();\n\n  useEffect(() => {\n    console.log(deleteLoading);\n  }, [deleteLoading]);\n\n  const tableColumns = [\n    {\n      title: '#',\n      key: '#',\n      render: (text, record, index) => index + 1\n    },\n    {\n      title: 'Tên',\n      key: 'name',\n      dataIndex: 'name'\n    },\n    {\n      title: 'Hành động',\n      key: 'action',\n      render: (text, record, index) => (\n        <Space size={10}>\n          <Button icon={<EditOutlined />} onClick={() => handleEditClick(record)}></Button>\n          <Popconfirm\n            onConfirm={async () => await handleDelete(record)} title=\"Bạn có chắc muốn xóa không?\"\n            okButtonProps={{loading: deleteLoading}}\n            okText=\"Xóa\"\n            okType=\"danger\"\n            cancelText=\"Hủy bỏ\">\n            <Button icon={<DeleteOutlined />}></Button>\n          </Popconfirm>\n        </Space>\n      )\n    }\n  ]\n\n  function handleOpenModal() {\n    setAction(formActions.CREATE);\n    setModalVisible(true);\n  }\n\n  function handleCloseModal() {\n    setModalVisible(false);\n  }\n\n  async function handleFormSubmit() {\n    try {\n      const values = await drugCategoryForm.validateFields();\n      const name = values.name;\n      const index = name.indexOf(\". \");\n      let cut = name.substr(index > -1 ? index + 2 : 0);\n      const indexOfNhom = cut.indexOf(\"Nhóm\");\n      if (indexOfNhom === -1) {\n        cut = \"Nhóm \" + cut;\n      }\n      const convertedStr = cut.charAt(0).toUpperCase() + cut.substr(1).toLowerCase();\n      if (action === formActions.CREATE) {\n        // await addDrugCategoryAPI(convertedStr);\n        await createDrugCategory({ name: convertedStr });\n      }\n\n      if (action === formActions.UPDATE) {\n        // await updateDrugCategoryAPI(selectedCategory.id, convertedStr);\n        await updateDrugCategory(selectedCategory.id, { name: convertedStr });\n      }\n\n      // getDrugCategories();\n      \n\n      setModalVisible(false);\n      await fetchDrugCategories(\"admin\");\n      \n    } catch (error) {\n      console.log(error);\n      setModalVisible(false);\n    }\n  }\n\n  function handleEditClick(category) {\n    setAction(formActions.UPDATE);\n    setSelectedCategory(category);\n    setModalVisible(true);\n  }\n\n  async function handleDelete(cat) {\n    try {\n      // await deleteDrugCategoryAPI(unit.id);\n      await deleteDrugCategory(cat.id)\n      await fetchDrugCategories(\"admin\");\n      // getDrugCategories();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  function afterClose() {\n    drugCategoryForm.resetFields();\n    setSelectedCategory(null);\n  }\n\n  useEffect(() => {\n    fetchDrugCategories(\"admin\");\n  }, []);\n\n  return (\n    <>\n      <Row justify=\"space-between\">\n        <Col><h1 className=\"text-xl\">Quản lý nhóm thuốc</h1></Col>\n        <Col>\n          <Button type=\"primary\" icon={<PlusOutlined />} onClick={handleOpenModal}>Tạo mới</Button>\n        </Col>\n      </Row>\n      <Table\n        rowKey=\"id\"\n        columns={tableColumns}\n        dataSource={categories}\n        pagination={false}\n        loading={fetchLoading} />\n      <Modal\n        visible={modalVisible}\n        title={action === formActions.CREATE ? 'Thêm nhóm thuốc' : 'Cập nhật nhóm thuốc'}\n        onCancel={handleCloseModal}\n        confirmLoading={(action === formActions.UPDATE && updateLoading) || (action === formActions.CREATE && createLoading)}\n        destroyOnClose={true}\n        afterClose={afterClose}\n        onOk={handleFormSubmit}>\n        <DrugCategoryForm onFinish={handleFormSubmit} form={drugCategoryForm} defaultCategory={selectedCategory} />\n      </Modal>\n    </>\n  )\n}\n\nconst mapStateToProps = state => ({\n  categories: state.drugCategoryState.drugCategories,\n  createLoading: state.drugCategoryState.createLoading,\n  fetchLoading: state.drugCategoryState.fetchLoading,\n  updateLoading: state.drugCategoryState.updateLoading,\n  deleteLoading: state.drugCategoryState.deleteLoading\n})\n\nconst mapDispatchToProps = dispatch => ({\n  createDrugCategory: (body) => dispatch(createDrugCategory(body)),\n  fetchDrugCategories: (role, query) => dispatch(fetchDrugCategories(role, query)),\n  updateDrugCategory: (id, body) => dispatch(updateDrugCategory(id, body)),\n  deleteDrugCategory: (id) => dispatch(deleteDrugCategory(id))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DrugCategoryPage);","import * as actionTypes from '../actionTypes';\nimport axios from 'axios';\nimport { ADMIN_DRUG_CATEGORY_URL, USER_DRUG_CATEGORY_URL } from 'constant/apiUrl';\nimport { getQueryString } from 'utils/string';\n\n// Create drug category\nfunction createDrugCategoryPending() {\n  return {\n    type: actionTypes.CREATE_DRUG_CATEGORY_PENDING\n  }\n}\n\nfunction createDrugCategorySuccess() {\n  return {\n    type: actionTypes.CREATE_DRUG_CATEGORY_SUCCESS,\n  }\n}\n\nfunction createDrugCategoryFailure() {\n  return {\n    type: actionTypes.CREATE_DRUG_CATEGORY_FAILURE\n  }\n}\n\n// Fetch drug categories\nfunction fetchDrugCategoriesPending() {\n  return {\n    type: actionTypes.FETCH_DRUG_CATEGORIES_PENDING\n  }\n}\n\nfunction fetchDrugCategoriesSuccess(data) {\n  return {\n    type: actionTypes.FETCH_DRUG_CATEGORIES_SUCCESS,\n    payload: data\n  }\n}\n\nfunction fetchDrugCategoriesFailure() {\n  return {\n    type: actionTypes.FETCH_DRUG_CATEGORIES_FAILURE\n  }\n}\n\n// Fetch drug category details\nfunction fetchDrugCategoryDetailsPending() {\n  return {\n    type: actionTypes.FETCH_DRUG_CATEGORY_DETAILS_PENDING\n  }\n}\n\nfunction fetchDrugCategoryDetailsSuccess(data) {\n  return {\n    type: actionTypes.FETCH_DRUG_CATEGORY_DETAILS_SUCCESS,\n    payload: data\n  }\n}\n\nfunction fetchDrugCategoryDetailsFailure() {\n  return {\n    type: actionTypes.FETCH_DRUG_CATEGORY_DETAILS_FAILURE\n  }\n}\n\n// Update drug category\nfunction updateDrugCategoryPending() {\n  return {\n    type: actionTypes.UPDATE_DRUG_CATEGORY_PENDING\n  }\n}\n\nfunction updateDrugCategorySuccess() {\n  return {\n    type: actionTypes.UPDATE_DRUG_CATEGORY_SUCCESS\n  }\n}\n\nfunction updateDrugCategoryFailure() {\n  return {\n    type: actionTypes.UPDATE_DRUG_CATEGORY_FAILURE\n  }\n}\n\n// Delete drug category\nfunction deleteDrugCategoryPending() {\n  return {\n    type: actionTypes.DELETE_DRUG_CATEGORY_PENDING\n  }\n}\n\nfunction deleteDrugCategorySuccess() {\n  return {\n    type: actionTypes.DELETE_DRUG_CATEGORY_SUCCESS\n  }\n}\n\nfunction deleteDrugCategoryFailure() {\n  return {\n    type: actionTypes.DELETE_DRUG_CATEGORY_FAILURE\n  }\n}\n\n\n/**\n * -----------------------------------------------------\n * Exported functions\n * -----------------------------------------------------\n */\nexport function createDrugCategory(body) {\n  let endpoint = ADMIN_DRUG_CATEGORY_URL + '/';\n\n  return async dispatch => {\n    try {\n      dispatch(createDrugCategoryPending());\n      await axios.post(endpoint, body);\n      dispatch(createDrugCategorySuccess());\n    } catch(error) {\n      dispatch(createDrugCategoryFailure());\n    }\n  }\n}\n\n\nexport function fetchDrugCategories(role, query) {\n  let endpoint;\n  if (role === \"admin\") {\n    endpoint = ADMIN_DRUG_CATEGORY_URL + '/';\n  } else {\n    endpoint = USER_DRUG_CATEGORY_URL + '/';\n  }\n\n  if (query) {\n    endpoint += getQueryString(query);\n  }\n\n  return async dispatch => {\n    try {\n      dispatch(fetchDrugCategoriesPending());\n      const response = await axios.get(endpoint);\n      dispatch(fetchDrugCategoriesSuccess(response.data));\n    } catch(error) {\n      dispatch(fetchDrugCategoriesFailure());\n    }\n  }\n}\n\nexport function fetchDrugCategoryDetails(role, id, query) {\n  let endpoint;\n  if (role === \"admin\") {\n    endpoint = ADMIN_DRUG_CATEGORY_URL + `/${id}/`;\n  } else {\n    endpoint = USER_DRUG_CATEGORY_URL + `/${id}/`;\n  }\n\n  if (query) {\n    endpoint += getQueryString(query);\n  }\n\n  return async dispatch => {\n    try {\n      dispatch(fetchDrugCategoryDetailsPending());\n      const response = await axios.get(endpoint);\n      dispatch(fetchDrugCategoryDetailsSuccess(response.data));\n    } catch(error) {\n      dispatch(fetchDrugCategoryDetailsFailure());\n    }\n  }\n}\n\nexport function updateDrugCategory(id, body) {\n  let endpoint = ADMIN_DRUG_CATEGORY_URL + `/${id}/`;\n  return async dispatch => {\n    try {\n      dispatch(updateDrugCategoryPending());\n      await axios.put(endpoint, body);\n      dispatch(updateDrugCategorySuccess());\n    } catch {\n      dispatch(updateDrugCategoryFailure());\n    }\n  }\n}\n\nexport function deleteDrugCategory(id) {\n  let endpoint = ADMIN_DRUG_CATEGORY_URL + `/${id}/`;\n  return async dispatch => {\n    try {\n      dispatch(deleteDrugCategoryPending());\n      await axios.delete(endpoint);\n      return dispatch(deleteDrugCategorySuccess());\n    } catch {\n      return dispatch(deleteDrugCategoryFailure());\n    }\n  }\n}","import React from 'react';\nimport { Form, Input } from 'antd';\n\nconst DrugUnitForm = props => {\n  const { form, onFinish, defaultUnit } = props;\n\n  return (\n    <Form\n      layout=\"vertical\"\n      form={form}\n      onFinish={onFinish}>\n      <Form.Item label=\"Đơn vị tính\" name=\"name\" initialValue={defaultUnit?.name}>\n        <Input autoFocus />\n      </Form.Item>\n    </Form>\n  )\n}\n\nexport default DrugUnitForm;","import axios from 'axios';\n\nimport { API_URL } from \"constant/apiUrl\";\n\nconst endpointPrefix = `${API_URL}/admin/manage-drug-unit`;\n\nexport function getDrugUnitsAPI(search = \"\") {\n  const url = `${endpointPrefix}/?search=${search}`;\n  return axios.get(url);\n}\n\nexport function addDrugUnitAPI(name) {\n  const url = `${endpointPrefix}/`;\n  return axios.post(url, { name: name });\n}\n\nexport function updateDrugUnitAPI(id, name) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.put(url, {\n    name: name\n  })\n}\n\nexport function deleteDrugUnitAPI(id) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.delete(url);\n}","import React, { useState, useEffect } from 'react';\nimport { Row, Col, Button, Modal, Table, Form, Popconfirm, Space } from 'antd';\nimport { PlusOutlined, EditOutlined, DeleteOutlined } from '@ant-design/icons';\nimport DrugUnitForm from 'forms/DrugUnitForm/DrugUnitForm';\nimport { getDrugUnitsAPI, addDrugUnitAPI, updateDrugUnitAPI, deleteDrugUnitAPI } from 'services/admin/drug-unit.service';\nimport { formActions } from 'constant/formActions';\n\nconst DrugUnitPage = () => {\n\n  const [modalVisible, setModalVisible] = useState(false);\n  const [drugUnits, setDrugUnits] = useState([]);\n  const [fetchingDrugUnits, setFetchingDrugUnits] = useState(false);\n  const [modalLoading, setModalLoading] = useState(false);\n  const [action, setAction] = useState(formActions.CREATE);\n  const [selectedUnit, setSelectedUnit] = useState(null);\n  const [drugUnitForm] = Form.useForm();\n\n  const tableColumns = [\n    {\n      title: '#',\n      key: '#',\n      render: (text, record, index) => index + 1\n    },\n    {\n      title: 'Đơn vị tính',\n      key: 'name',\n      dataIndex: 'name'\n    },\n    {\n      title: 'Hành động',\n      key: 'action',\n      render: (text, record, index) => (\n        <Space size={10}>\n          <Button icon={<EditOutlined />} onClick={() => handleEditClick(record)}></Button>\n          <Popconfirm\n            onConfirm={() => handleDelete(record)} title=\"Bạn có chắc muốn xóa không?\"\n            okText=\"Xóa\"\n            okType=\"danger\"\n            cancelText=\"Hủy bỏ\">\n            <Button icon={<DeleteOutlined />}></Button>\n          </Popconfirm>\n        </Space>\n      )\n    }\n  ]\n\n  function handleOpenModal() {\n    setAction(formActions.CREATE);\n    setModalVisible(true);\n  }\n\n  function handleCloseModal() {\n    setModalVisible(false);\n  }\n\n  async function getDrugUnits() {\n    try {\n      setFetchingDrugUnits(true);\n      const response = await getDrugUnitsAPI();\n      setDrugUnits(response.data);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setFetchingDrugUnits(false);\n    }\n  }\n\n  async function handleFormSubmit() {\n    try {\n      setModalLoading(true);\n      const values = await drugUnitForm.validateFields();\n      if (action === formActions.CREATE) {\n        await addDrugUnitAPI(values.name);\n      }\n\n      if (action === formActions.UPDATE) {\n        await updateDrugUnitAPI(selectedUnit.id, values.name);\n      }\n\n      getDrugUnits();\n\n      setModalVisible(false);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setModalLoading(false);\n    }\n  }\n\n  function handleEditClick(unit) {\n    setAction(formActions.UPDATE);\n    setSelectedUnit(unit);\n    setModalVisible(true);\n  }\n\n  async function handleDelete(unit) {\n    try {\n      await deleteDrugUnitAPI(unit.id);\n      getDrugUnits();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  function afterClose() {\n    drugUnitForm.resetFields();\n    setSelectedUnit(null);\n  }\n\n  useEffect(() => {\n    getDrugUnits();\n  }, []);\n\n  return (\n    <>\n      <Row justify=\"space-between\">\n        <Col><h1 className=\"text-xl\">Quản lý đơn vị tính</h1></Col>\n        <Col>\n          <Button type=\"primary\" icon={<PlusOutlined />} onClick={handleOpenModal}>Tạo mới</Button>\n        </Col>\n      </Row>\n      <Table\n        rowKey=\"id\"\n        columns={tableColumns}\n        dataSource={drugUnits}\n        loading={fetchingDrugUnits}\n        pagination={false} />\n      <Modal\n        visible={modalVisible}\n        title={action === formActions.CREATE ? 'Thêm đơn vị tính' : 'Cập nhật đơn vị tính'}\n        onCancel={handleCloseModal}\n        confirmLoading={modalLoading}\n        destroyOnClose={true}\n        afterClose={afterClose}\n        onOk={handleFormSubmit}>\n        <DrugUnitForm onFinish={handleFormSubmit} form={drugUnitForm} defaultUnit={selectedUnit} />\n      </Modal>\n    </>\n  )\n}\n\nexport default DrugUnitPage;","import React from 'react';\nimport { Form, Input } from 'antd';\n\nconst DrugRouteForm = props => {\n  const { form, onFinish, defaultRoute } = props;\n\n  return (\n    <Form\n      layout=\"vertical\"\n      form={form}\n      onFinish={onFinish}>\n      <Form.Item label=\"Đường dùng thuốc\" name=\"name\" initialValue={defaultRoute?.name}>\n        <Input autoFocus />\n      </Form.Item>\n    </Form>\n  )\n}\n\nexport default DrugRouteForm;","import axios from 'axios';\n\nimport { API_URL } from \"constant/apiUrl\";\n\nconst endpointPrefix = `${API_URL}/admin/manage-drug-route`;\n\nexport function getDrugRouteAPI(search = \"\") {\n  const url = `${endpointPrefix}/?search=${search}`;\n  return axios.get(url);\n}\n\nexport function addDrugRouteAPI(name) {\n  const url = `${endpointPrefix}/`;\n  return axios.post(url, { name: name });\n}\n\nexport function updateDrugRouteAPI(id, name) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.put(url, {\n    name: name\n  })\n}\n\nexport function deleteDrugRouteAPI(id) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.delete(url);\n}","import React, { useState, useEffect } from 'react';\nimport { Row, Col, Button, Modal, Table, Form, Popconfirm, Space } from 'antd';\nimport { PlusOutlined, EditOutlined, DeleteOutlined } from '@ant-design/icons';\nimport DrugRouteForm from 'forms/DrugRouteForm/DrugRouteForm';\nimport { addDrugRouteAPI, deleteDrugRouteAPI, getDrugRouteAPI, updateDrugRouteAPI } from 'services/admin/drug-route.service';\nimport { formActions } from 'constant/formActions';\n\nconst DrugRoutePage = () => {\n\n  const [modalVisible, setModalVisible] = useState(false);\n  const [routes, setRoutes] = useState([]);\n  const [fetchingRoutes, setFetchingRoutes] = useState(false);\n  const [modalLoading, setModalLoading] = useState(false);\n  const [action, setAction] = useState(formActions.CREATE);\n  const [selectedRoute, setSelectedRoute] = useState(null);\n  const [drugRouteForm] = Form.useForm();\n\n  const tableColumns = [\n    {\n      title: '#',\n      key: '#',\n      render: (text, record, index) => index + 1\n    },\n    {\n      title: 'Tên',\n      key: 'name',\n      dataIndex: 'name'\n    },\n    {\n      title: 'Hành động',\n      key: 'action',\n      render: (text, record, index) => (\n        <Space size={10}>\n          <Button icon={<EditOutlined />} onClick={() => handleEditClick(record)}></Button>\n          <Popconfirm\n            onConfirm={() => handleDelete(record)} title=\"Bạn có chắc muốn xóa không?\"\n            okText=\"Xóa\"\n            okType=\"danger\"\n            cancelText=\"Hủy bỏ\">\n            <Button icon={<DeleteOutlined />}></Button>\n          </Popconfirm>\n        </Space>\n      )\n    }\n  ]\n\n  function handleOpenModal() {\n    setAction(formActions.CREATE);\n    setModalVisible(true);\n  }\n\n  function handleCloseModal() {\n    setModalVisible(false);\n  }\n\n  async function getDrugRoutes() {\n    try {\n      setFetchingRoutes(true);\n      const response = await getDrugRouteAPI();\n      setRoutes(response.data);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setFetchingRoutes(false);\n    }\n  }\n\n  async function handleFormSubmit() {\n    try {\n      setModalLoading(true);\n      const values = await drugRouteForm.validateFields();\n      if (action === formActions.CREATE) {\n        await addDrugRouteAPI(values.name);\n      }\n\n      if (action === formActions.UPDATE) {\n        await updateDrugRouteAPI(selectedRoute.id, values.name);\n      }\n\n      getDrugRoutes();\n\n      setModalVisible(false);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setModalLoading(false);\n    }\n  }\n\n  function handleEditClick(route) {\n    setAction(formActions.UPDATE);\n    setSelectedRoute(route);\n    setModalVisible(true);\n  }\n\n  async function handleDelete(unit) {\n    try {\n      await deleteDrugRouteAPI(unit.id);\n      getDrugRoutes();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  function afterClose() {\n    drugRouteForm.resetFields();\n    setSelectedRoute(null);\n  }\n\n  useEffect(() => {\n    getDrugRoutes();\n  }, []);\n\n  return (\n    <>\n      <Row justify=\"space-between\">\n        <Col><h1 className=\"text-xl\">Quản lý đường dùng thuốc</h1></Col>\n        <Col>\n          <Button type=\"primary\" icon={<PlusOutlined />} onClick={handleOpenModal}>Tạo mới</Button>\n        </Col>\n      </Row>\n      <Table\n        rowKey=\"id\"\n        columns={tableColumns}\n        dataSource={routes}\n        pagination={false}\n        loading={fetchingRoutes} />\n      <Modal\n        visible={modalVisible}\n        title={action === formActions.CREATE ? 'Thêm đường dùng thuốc' : 'Cập nhật đường dùng thuốc'}\n        onCancel={handleCloseModal}\n        confirmLoading={modalLoading}\n        destroyOnClose={true}\n        afterClose={afterClose}\n        onOk={handleFormSubmit}>\n        <DrugRouteForm onFinish={handleFormSubmit} form={drugRouteForm} defaultRoute={selectedRoute} />\n      </Modal>\n    </>\n  )\n}\n\nexport default DrugRoutePage;","import axios from 'axios';\nimport { API_URL } from 'constant/apiUrl';\nimport { getQueryString } from 'utils/string';\n\nconst endpointPrefix = `${API_URL}/admin/manage-drug`;\n\nexport function getDrugsAPI(params) {\n  const url = `${endpointPrefix}/`;\n\n  if (params) {\n    return axios.get(`${url}?${getQueryString(params)}`);\n  }\n  return axios.get(url);\n}\n\nexport function getDrugDetailsAPI(id) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.get(url);\n}\n\nexport function addDrugAPI(body) {\n  const url = `${endpointPrefix}/`;\n  return axios.post(url, body);\n}\n\nexport function updateDrugAPI(id, body) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.put(url, body);\n}\n\nexport function deleteDrugAPI(id) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.delete(url);\n}","import axios from 'axios';\n\nimport { API_URL } from \"constant/apiUrl\";\n\nconst endpointPrefix = `${API_URL}/admin/manage-drug-dosage-form`;\n\nexport function getDrugDosageFormAPI(search = \"\") {\n  const url = `${endpointPrefix}/?search=${search}`;\n  return axios.get(url);\n}\n\nexport function addDrugDosageFormAPI(name) {\n  const url = `${endpointPrefix}/`;\n  return axios.post(url, { name: name });\n}\n\nexport function updateDrugDosageFormAPI(id, name) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.put(url, {\n    name: name\n  })\n}\n\nexport function deleteDrugDosageFormAPI(id) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.delete(url);\n}","import React, { useState, useEffect } from 'react';\nimport { Form, Input, Select, Spin } from 'antd';\nimport { getDrugCategoryAPI } from 'services/admin/drug-category.service';\nimport { getDrugUnitsAPI } from 'services/admin/drug-unit.service';\nimport { getDrugDetailsAPI } from 'services/admin/drug.service';\nimport { getDrugRouteAPI } from 'services/admin/drug-route.service';\nimport { getDrugDosageFormAPI } from 'services/admin/drug-dosage-form.service';\n\nconst DrugForm = props => {\n  const { form, onFinish, defaultDrug } = props;\n\n  const [categories, setCategories] = useState([]);\n  const [units, setUnits] = useState([]);\n  const [routes, setRoutes] = useState([]);\n  const [forms, setForms] = useState([]);\n  const [drugDetail, setDrugDetail] = useState(null);\n\n  const [catLoading, setCatLoading] = useState(false);\n  const [unitLoading, setUnitLoading] = useState(false);\n  const [routeLoading, setRouteLoading] = useState(false);\n  const [formLoading, setFormLoading] = useState(false);\n  const [detailLoading, setDetailLoading] = useState(false);\n\n  async function getDrugCategories() {\n    try {\n      setCatLoading(true);\n      const catResponse = await getDrugCategoryAPI();\n      setCategories(catResponse.data);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setCatLoading(false);\n    }\n  }\n\n  async function getDrugUnits() {\n    try {\n      setUnitLoading(true);\n      const unitResponse = await getDrugUnitsAPI();\n      setUnits(unitResponse.data);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setUnitLoading(false);\n    }\n  }\n\n  async function getDrugRoutes() {\n    try {\n      setRouteLoading(true);\n      const routeResponse = await getDrugRouteAPI();\n      setRoutes(routeResponse.data);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setRouteLoading(false);\n    }\n  }\n\n  async function getDrugDosageForms() {\n    try {\n      setFormLoading(true);\n      const formResponse = await getDrugDosageFormAPI();\n      setForms(formResponse.data);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setFormLoading(false);\n    }\n  }\n\n\n\n  async function getDrugDetail(id) {\n    try {\n      setDetailLoading(true);\n      const detailResponse = await getDrugDetailsAPI(id);\n      const drugDetail = detailResponse.data;\n      setDrugDetail(drugDetail);\n      setCategories(prevCats => {\n        const index = prevCats.findIndex(cat => cat.id === defaultDrug.drug_category.id);\n        if (index > -1) {\n          prevCats[index] = drugDetail.drug_category;\n          return prevCats;\n        } else {\n          return [...[drugDetail.drug_category], ...prevCats];\n        }\n      });\n      setUnits(prevUnits => {\n        const index = prevUnits.findIndex(u => u.id === defaultDrug.drug_unit.id);\n        if (index > -1) {\n          prevUnits[index] = drugDetail.drug_unit;\n          return prevUnits;\n        } else {\n          return [...[drugDetail.drug_unit], ...prevUnits];\n        }\n      });\n      setRoutes(prevRoutes => {\n        const index = prevRoutes.findIndex(r => r.id === defaultDrug.drug_route.id);\n        if (index > -1) {\n          prevRoutes[index] = drugDetail.drug_route;\n          return prevRoutes;\n        } else {\n          return [...[drugDetail.drug_route], ...prevRoutes];\n        }\n      });\n      setForms(prevForms => {\n        const index = prevForms.findIndex(f => f.id === defaultDrug.drug_dosage_form.id);\n        if (index > -1) {\n          prevForms[index] = drugDetail.drug_dosage_form;\n          return prevForms;\n        } else {\n          return [...[drugDetail.drug_dosage_form], ...prevForms];\n        }\n      });\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setDetailLoading(false);\n    }\n  }\n\n  async function getData() {\n    if (defaultDrug?.id) {\n      await Promise.all([\n        getDrugDetail(defaultDrug.id),\n        getDrugCategories(),\n        getDrugUnits(),\n        getDrugRoutes(),\n        getDrugDosageForms()\n      ]);\n\n    } else {\n      await Promise.all([\n        getDrugCategories(),\n        getDrugUnits(),\n        getDrugRoutes(),\n        getDrugDosageForms()\n      ])\n    }\n  }\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  useEffect(() => {\n    if (drugDetail) {\n      form.setFieldsValue({\n        code: drugDetail.code,\n        name: drugDetail.name,\n        price: drugDetail.price || 0,\n        drug_category_id: drugDetail.drug_category.id,\n        drug_unit_id: drugDetail.drug_unit.id,\n        drug_dosage_form_id: drugDetail.drug_dosage_form.id,\n        drug_route_id: drugDetail.drug_route.id,\n        strength: drugDetail.strength\n      });\n    }\n  }, [drugDetail, defaultDrug, form]);\n\n  return (\n    <Spin spinning={detailLoading}>\n      <Form\n        layout=\"vertical\"\n        form={form}\n        onFinish={onFinish}>\n        <Form.Item label=\"Mã thuốc\" name=\"code\" initialValue={drugDetail?.code}>\n          <Input />\n        </Form.Item>\n\n        <Form.Item label=\"Tên thuốc\" name=\"name\" initialValue={drugDetail?.name}>\n          <Input />\n        </Form.Item>\n\n        <Form.Item label=\"Giá\" name=\"price\" initialValue={0} hidden>\n          <Input type=\"number\" suffix=\"VNĐ\" value={0} />\n        </Form.Item>\n\n        <Form.Item label=\"Nhóm thuốc\" name=\"drug_category_id\" initialValue={drugDetail?.drug_category.id}>\n          <Select loading={catLoading}>\n            {\n              categories.map(cat => (\n                <Select.Option key={cat.id} value={cat.id}>{cat.name}</Select.Option>\n              ))\n            }\n          </Select>\n        </Form.Item>\n\n        <Form.Item label=\"Đơn vị tính\" name=\"drug_unit_id\" initialValue={drugDetail?.drug_unit.id}>\n          <Select loading={unitLoading}>\n            {\n              units.map(cat => (\n                <Select.Option key={cat.id} value={cat.id}>{cat.name}</Select.Option>\n              ))\n            }\n          </Select>\n        </Form.Item>\n\n        <Form.Item label=\"Đường dùng\" name=\"drug_route_id\" initialValue={drugDetail?.drug_route.id}>\n          <Select loading={routeLoading}>\n            {\n              routes.map(route => (\n                <Select.Option key={route.id} value={route.id}>{route.name}</Select.Option>\n              ))\n            }\n          </Select>\n        </Form.Item>\n        <Form.Item label=\"Dạng bào chế\" name=\"drug_dosage_form_id\" initialValue={drugDetail?.drug_dosage_form.id}>\n          <Select loading={formLoading}>\n            {\n              forms.map(f => (\n                <Select.Option key={f.id} value={f.id}>{f.name}</Select.Option>\n              ))\n            }\n          </Select>\n        </Form.Item>\n        <Form.Item label=\"Hàm lượng/nồng độ\" name=\"strength\" initialValue={drugDetail?.strength}>\n          <Input />\n        </Form.Item>\n      </Form>\n    </Spin>\n  )\n}\n\nexport default DrugForm;","import React, { useState, useEffect } from 'react';\nimport { Row, Col, Button, Modal, Table, Form, Popconfirm, Space } from 'antd';\nimport { PlusOutlined, EditOutlined, DeleteOutlined } from '@ant-design/icons';\nimport DrugForm from 'forms/DrugForm/DrugForm';\nimport { getDrugsAPI, addDrugAPI, updateDrugAPI, deleteDrugAPI } from 'services/admin/drug.service';\nimport { formActions } from 'constant/formActions';\nimport NumberFormat from 'react-number-format';\n\nconst DrugPage = () => {\n\n  const [modalVisible, setModalVisible] = useState(false);\n  const [drugs, setDrugs] = useState();\n  const [fetchingDrugs, setFetchingDrugs] = useState(false);\n  const [modalLoading, setModalLoading] = useState(false);\n  const [action, setAction] = useState(formActions.CREATE);\n  const [selectedDrug, setSelectedDrug] = useState(null);\n  const [drugForm] = Form.useForm();\n\n  const tableColumns = [\n    {\n      title: '#',\n      key: '#',\n      render: (text, record, index) => index + 1\n    },\n    {\n      title: 'Mã thuốc',\n      key: 'code',\n      dataIndex: 'code'\n    },\n    {\n      title: 'Tên thuốc',\n      key: 'name',\n      dataIndex: 'name'\n    },\n    {\n      title: 'Hàm lượng/nồng độ',\n      key: 'strength',\n      dataIndex: 'strength'\n    },\n    {\n      title: 'Hành động',\n      key: 'action',\n      render: (text, record, index) => (\n        <Space size={10}>\n          <Button icon={<EditOutlined />} onClick={() => handleEditClick(record)}></Button>\n          <Popconfirm\n            onConfirm={() => handleDelete(record)} title=\"Bạn có chắc muốn xóa không?\"\n            okText=\"Xóa\"\n            okType=\"danger\"\n            cancelText=\"Hủy bỏ\">\n            <Button icon={<DeleteOutlined />}></Button>\n          </Popconfirm>\n        </Space>\n      )\n    }\n  ]\n\n  function handleOpenModal() {\n    setAction(formActions.CREATE);\n    setModalVisible(true);\n  }\n\n  function handleCloseModal() {\n    setModalVisible(false);\n  }\n\n  async function getDrugs() {\n    try {\n      setFetchingDrugs(true);\n      const response = await getDrugsAPI();\n      setDrugs(response.data.results);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setFetchingDrugs(false);\n    }\n  }\n\n  async function handleFormSubmit() {\n    try {\n      setModalLoading(true);\n      const values = await drugForm.validateFields();\n      console.log(values);\n      const data = {\n        code: values.code,\n        name: values.name,\n        price: values.price,\n        drug_category: values.drug_category,\n        drug_unit: values.drug_unit,\n        drug_route: values.drug_route,\n        drug_dosage_form: values.drug_dosage_form,\n        strength: values.strength\n      }\n      if (action === formActions.CREATE) {\n        await addDrugAPI(values);\n      }\n\n      if (action === formActions.UPDATE) {\n        await updateDrugAPI(selectedDrug.id, values);\n      }\n\n      getDrugs();\n\n      setModalVisible(false);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setModalLoading(false);\n    }\n  }\n\n  function handleEditClick(drug) {\n    setAction(formActions.UPDATE);\n    setSelectedDrug(drug);\n    setModalVisible(true);\n  }\n\n  async function handleDelete(drug) {\n    try {\n      await deleteDrugAPI(drug.id);\n      getDrugs();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  function afterClose() {\n    drugForm.resetFields();\n    setSelectedDrug(null);\n  }\n\n  useEffect(() => {\n    getDrugs();\n  }, []);\n\n  return (\n    <>\n      <Row justify=\"space-between\">\n        <Col><h1 className=\"text-xl\">Quản lý thuốc</h1></Col>\n        <Col>\n          <Button type=\"primary\" icon={<PlusOutlined />} onClick={handleOpenModal}>Tạo mới</Button>\n        </Col>\n      </Row>\n      <Table\n        rowKey=\"id\"\n        columns={tableColumns}\n        dataSource={drugs}\n        loading={fetchingDrugs}\n        pagination={false} />\n      <Modal\n        visible={modalVisible}\n        title={action === formActions.CREATE ? 'Thêm thuốc' : 'Cập nhật thuốc'}\n        onCancel={handleCloseModal}\n        confirmLoading={modalLoading}\n        destroyOnClose={true}\n        afterClose={afterClose}\n        onOk={handleFormSubmit}>\n        <DrugForm onFinish={handleFormSubmit} form={drugForm} defaultDrug={selectedDrug} />\n      </Modal>\n    </>\n  )\n}\n\nexport default DrugPage;","import React from 'react';\nimport { Form, Input } from 'antd';\n\nconst DrugInstructionForm = props => {\n  const { form, onFinish, defaultInstruction } = props;\n\n  return (\n    <Form\n      layout=\"vertical\"\n      form={form}\n      onFinish={onFinish}>\n      <Form.Item label=\"Hướng dẫn sử dụng\" name=\"instruction\" initialValue={defaultInstruction?.instruction}>\n        <Input autoFocus />\n      </Form.Item>\n    </Form>\n  )\n}\n\nexport default DrugInstructionForm;","import axios from 'axios';\n\nimport { API_URL } from \"constant/apiUrl\";\n\nconst endpointPrefix = `${API_URL}/admin/manage-drug-instruction`;\n\nexport function getDrugInstructionsAPI() {\n  const url = `${endpointPrefix}/`;\n  return axios.get(url);\n}\n\nexport function addDrugInstructionAPI(instruction) {\n  const url = `${endpointPrefix}/`;\n  return axios.post(url, { instruction: instruction });\n}\n\nexport function updateDrugInstructionAPI(id, instruction) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.put(url, {\n    instruction: instruction\n  })\n}\n\nexport function deleteDrugInstructionAPI(id) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.delete(url);\n}","import React, { useState, useEffect } from 'react';\nimport { Row, Col, Button, Modal, Table, Form, Popconfirm, Space } from 'antd';\nimport { PlusOutlined, EditOutlined, DeleteOutlined } from '@ant-design/icons';\nimport DrugInstructionForm from 'forms/DrugInstructionForm/DrugInstructionForm';\nimport { getDrugInstructionsAPI, addDrugInstructionAPI, updateDrugInstructionAPI, deleteDrugInstructionAPI } from 'services/admin/drug-instruction.service';\nimport { formActions } from 'constant/formActions';\n\nconst DrugInstructionPage = () => {\n\n  const [modalVisible, setModalVisible] = useState(false);\n  const [drugInstructions, setDrugInstructions] = useState([]);\n  const [fetchingDrugInstructions, setFetchingDrugInstructions] = useState(false);\n  const [modalLoading, setModalLoading] = useState(false);\n  const [action, setAction] = useState(formActions.CREATE);\n  const [selectedInstruction, setSelectedInstruction] = useState(null);\n  const [drugInstructionForm] = Form.useForm();\n\n  const tableColumns = [\n    {\n      title: '#',\n      key: '#',\n      render: (text, record, index) => index + 1\n    },\n    {\n      title: 'Hướng dẫn sử dụng',\n      key: 'instruction',\n      dataIndex: 'instruction'\n    },\n    {\n      title: 'Hành động',\n      key: 'action',\n      render: (text, record, index) => (\n        <Space size={10}>\n          <Button icon={<EditOutlined />} onClick={() => handleEditClick(record)}></Button>\n          <Popconfirm\n            onConfirm={() => handleDelete(record)} title=\"Bạn có chắc muốn xóa không?\"\n            okText=\"Xóa\"\n            okType=\"danger\"\n            cancelText=\"Hủy bỏ\">\n            <Button icon={<DeleteOutlined />}></Button>\n          </Popconfirm>\n        </Space>\n      )\n    }\n  ]\n\n  function handleOpenModal() {\n    setAction(formActions.CREATE);\n    setModalVisible(true);\n  }\n\n  function handleCloseModal() {\n    setModalVisible(false);\n  }\n\n  async function getDrugInstructions() {\n    try {\n      setFetchingDrugInstructions(true);\n      const response = await getDrugInstructionsAPI();\n      setDrugInstructions(response.data);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setFetchingDrugInstructions(false);\n    }\n  }\n\n  async function handleFormSubmit() {\n    try {\n      setModalLoading(true);\n      const values = await drugInstructionForm.validateFields();\n      if (action === formActions.CREATE) {\n        await addDrugInstructionAPI(values.instruction);\n      }\n\n      if (action === formActions.UPDATE) {\n        await updateDrugInstructionAPI(selectedInstruction.id, values.instruction);\n      }\n\n      getDrugInstructions();\n\n      setModalVisible(false);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setModalLoading(false);\n    }\n  }\n\n  function handleEditClick(ins) {\n    setAction(formActions.UPDATE);\n    setSelectedInstruction(ins);\n    setModalVisible(true);\n  }\n\n  async function handleDelete(unit) {\n    try {\n      await deleteDrugInstructionAPI(unit.id);\n      getDrugInstructions();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  function afterClose() {\n    drugInstructionForm.resetFields();\n    setSelectedInstruction(null);\n  }\n\n  useEffect(() => {\n    getDrugInstructions();\n  }, []);\n\n  return (\n    <>\n      <Row justify=\"space-between\">\n        <Col><h1 className=\"text-xl\">Quản lý hướng dẫn sử dụng</h1></Col>\n        <Col>\n          <Button type=\"primary\" icon={<PlusOutlined />} onClick={handleOpenModal}>Tạo mới</Button>\n        </Col>\n      </Row>\n      <Table\n        rowKey=\"id\"\n        columns={tableColumns}\n        dataSource={drugInstructions}\n        loading={fetchingDrugInstructions}\n        pagination={false} />\n      <Modal\n        visible={modalVisible}\n        title={action === formActions.CREATE ? 'Thêm hướng dẫn sử dụng' : 'Cập nhật hướng dẫn sử dụng'}\n        onCancel={handleCloseModal}\n        confirmLoading={modalLoading}\n        destroyOnClose={true}\n        afterClose={afterClose}\n        onOk={handleFormSubmit}>\n        <DrugInstructionForm onFinish={handleFormSubmit} form={drugInstructionForm} defaultInstruction={selectedInstruction} />\n      </Modal>\n    </>\n  )\n}\n\nexport default DrugInstructionPage;","import React from 'react';\nimport { Form, Input } from 'antd';\n\nconst DiseaseCategoryForm = props => {\n  const { form, onFinish, defaultCategory } = props;\n\n  return (\n    <Form\n      layout=\"vertical\"\n      form={form}\n      onFinish={onFinish}>\n      <Form.Item label=\"Loại bệnh\" name=\"name\" initialValue={defaultCategory?.name}>\n        <Input autoFocus />\n      </Form.Item>\n    </Form>\n  )\n}\n\nexport default DiseaseCategoryForm;","import axios from 'axios';\n\nimport { API_URL } from \"constant/apiUrl\";\n\nconst endpointPrefix = `${API_URL}/admin/manage-disease-category`;\n\nexport function getDiseaseCategoryAPI(search = \"\") {\n  const url = `${endpointPrefix}/?search=${search}`;\n  return axios.get(url);\n}\n\nexport function addDiseaseCategoryAPI(name) {\n  const url = `${endpointPrefix}/`;\n  return axios.post(url, { name: name });\n}\n\nexport function updateDiseaseCategoryAPI(id, name) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.put(url, {\n    name: name\n  })\n}\n\nexport function deleteDiseaseCategoryAPI(id) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.delete(url);\n}","import React, { useState, useEffect } from 'react';\nimport { Row, Col, Button, Modal, Table, Form, Popconfirm, Space } from 'antd';\nimport { PlusOutlined, EditOutlined, DeleteOutlined } from '@ant-design/icons';\nimport DiseaseCategoryForm from 'forms/DiseaseCategoryForm/DiseaseCategoryForm';\nimport { addDiseaseCategoryAPI, deleteDiseaseCategoryAPI, getDiseaseCategoryAPI, updateDiseaseCategoryAPI } from 'services/admin/disease-category.service';\nimport { formActions } from 'constant/formActions';\n\nconst DiseaseCategoryPage = () => {\n\n  const [modalVisible, setModalVisible] = useState(false);\n  const [categories, setCategories] = useState([]);\n  const [fetchingCategories, setFetchingCategories] = useState(false);\n  const [modalLoading, setModalLoading] = useState(false);\n  const [action, setAction] = useState(formActions.CREATE);\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [diseaseCategoryForm] = Form.useForm();\n\n  const tableColumns = [\n    {\n      title: '#',\n      key: '#',\n      render: (text, record, index) => index + 1\n    },\n    {\n      title: 'Tên',\n      key: 'name',\n      dataIndex: 'name'\n    },\n    {\n      title: 'Hành động',\n      key: 'action',\n      render: (text, record, index) => (\n        <Space size={10}>\n          <Button icon={<EditOutlined />} onClick={() => handleEditClick(record)}></Button>\n          <Popconfirm\n            onConfirm={() => handleDelete(record)} title=\"Bạn có chắc muốn xóa không?\"\n            okText=\"Xóa\"\n            okType=\"danger\"\n            cancelText=\"Hủy bỏ\">\n            <Button icon={<DeleteOutlined />}></Button>\n          </Popconfirm>\n        </Space>\n      )\n    }\n  ]\n\n  function handleOpenModal() {\n    setAction(formActions.CREATE);\n    setModalVisible(true);\n  }\n\n  function handleCloseModal() {\n    setModalVisible(false);\n  }\n\n  async function getDiseaseCategories() {\n    try {\n      setFetchingCategories(true);\n      const response = await getDiseaseCategoryAPI();\n      setCategories(response.data);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setFetchingCategories(false);\n    }\n  }\n\n  async function handleFormSubmit() {\n    try {\n      setModalLoading(true);\n      const values = await diseaseCategoryForm.validateFields();\n      if (action === formActions.CREATE) {\n        await addDiseaseCategoryAPI(values.name);\n      }\n\n      if (action === formActions.UPDATE) {\n        await updateDiseaseCategoryAPI(selectedCategory.id, values.name);\n      }\n\n      getDiseaseCategories();\n\n      setModalVisible(false);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setModalLoading(false);\n    }\n  }\n\n  function handleEditClick(category) {\n    setAction(formActions.UPDATE);\n    setSelectedCategory(category);\n    setModalVisible(true);\n  }\n\n  async function handleDelete(unit) {\n    try {\n      await deleteDiseaseCategoryAPI(unit.id);\n      getDiseaseCategories();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  function afterClose() {\n    diseaseCategoryForm.resetFields();\n    setSelectedCategory(null);\n  }\n\n  useEffect(() => {\n    getDiseaseCategories();\n  }, []);\n\n  return (\n    <>\n      <Row justify=\"space-between\">\n        <Col><h1 className=\"text-xl\">Quản lý nhóm bệnh</h1></Col>\n        <Col>\n          <Button type=\"primary\" icon={<PlusOutlined />} onClick={handleOpenModal}>Tạo mới</Button>\n        </Col>\n      </Row>\n      <Table\n        rowKey=\"id\"\n        columns={tableColumns}\n        dataSource={categories}\n        pagination={false}\n        loading={fetchingCategories} />\n      <Modal\n        visible={modalVisible}\n        title={action === formActions.CREATE ? 'Thêm loại bệnh' : 'Cập nhật loại bệnh'}\n        onCancel={handleCloseModal}\n        confirmLoading={modalLoading}\n        destroyOnClose={true}\n        afterClose={afterClose}\n        onOk={handleFormSubmit}>\n        <DiseaseCategoryForm onFinish={handleFormSubmit} form={diseaseCategoryForm} defaultCategory={selectedCategory} />\n      </Modal>\n    </>\n  )\n}\n\nexport default DiseaseCategoryPage;","import axios from 'axios';\nimport { API_URL } from 'constant/apiUrl';\n\nconst endpointPrefix = `${API_URL}/admin/manage-disease`;\n\nexport function getDiseasesAPI() {\n  const url = `${endpointPrefix}/`;\n  return axios.get(url);\n}\n\nexport function getDiseaseDetailsAPI(id) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.get(url);\n}\n\nexport function addDiseaseAPI({ code, name, disease_category }) {\n  const url = `${endpointPrefix}/`;\n  return axios.post(url, {\n    code,\n    name,\n    disease_category\n  });\n}\n\nexport function updateDiseaseAPI(id, { code, name, disease_category }) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.put(url, {\n    code,\n    name,\n    disease_category\n  });\n}\n\nexport function deleteDiseaseAPI(id) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.delete(url);\n}","import React, { useState, useEffect } from 'react';\nimport { Form, Input, Select, Spin } from 'antd';\nimport { getDiseaseCategoryAPI } from 'services/admin/disease-category.service';\nimport { getDiseaseDetailsAPI } from 'services/admin/disease.service';\n\nconst DiseaseForm = props => {\n  const { form, onFinish, defaultDisease } = props;\n\n  const [categories, setCategories] = useState([]);\n  const [diseaseDetail, setDiseaseDetail] = useState(null);\n  const [catLoading, setCatLoading] = useState(false);\n  const [detailLoading, setDetailLoading] = useState(false);\n\n  async function getDiseaseCategories() {\n    try {\n      setCatLoading(true);\n      const catResponse = await getDiseaseCategoryAPI();\n      setCategories(catResponse.data);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setCatLoading(false);\n    }\n  }\n\n  async function getDiseaseDetail(id) {\n    try {\n      setDetailLoading(true);\n      const detailResponse = await getDiseaseDetailsAPI(id);\n      const diseaseDetail = detailResponse.data;\n      setDiseaseDetail(diseaseDetail);\n      setCategories(prevCats => {\n        const index = prevCats.findIndex(cat => cat.id === defaultDisease.disease_category);\n        if (index > -1) {\n          prevCats[index] = diseaseDetail.disease_category;\n          return prevCats;\n        } else {\n          return [...[diseaseDetail.disease_category], ...prevCats];\n        }\n      });\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setDetailLoading(false);\n    }\n  }\n\n  async function getData() {\n    if (defaultDisease?.id) {\n      await Promise.all([\n        getDiseaseDetail(defaultDisease.id),\n        getDiseaseCategories(),\n      ]);\n\n    } else {\n      await Promise.all([\n        getDiseaseCategories(),\n      ])\n    }\n\n  }\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  useEffect(() => {\n    if (diseaseDetail) {\n      form.setFieldsValue({\n        code: diseaseDetail.code,\n        name: diseaseDetail.name,\n        disease_category: diseaseDetail.disease_category.id,\n      });\n    }\n  }, [diseaseDetail, defaultDisease, form]);\n\n  return (\n    <Spin spinning={detailLoading}>\n      <Form\n        layout=\"vertical\"\n        form={form}\n        onFinish={onFinish}>\n        <Form.Item label=\"Mã bệnh\" name=\"code\" initialValue={diseaseDetail?.code}>\n          <Input />\n        </Form.Item>\n\n        <Form.Item label=\"Tên bệnh\" name=\"name\" initialValue={diseaseDetail?.name}>\n          <Input />\n        </Form.Item>\n\n        <Form.Item label=\"Loại bệnh\" name=\"disease_category\" initialValue={diseaseDetail?.disease_category.id}>\n          <Select loading={catLoading}>\n            {\n              categories.map(cat => (\n                <Select.Option key={cat.id} value={cat.id}>{cat.name}</Select.Option>\n              ))\n            }\n          </Select>\n        </Form.Item>\n      </Form>\n    </Spin>\n  )\n}\n\nexport default DiseaseForm;","import React, { useState, useEffect } from 'react';\nimport { Row, Col, Button, Modal, Table, Form, Popconfirm, Space } from 'antd';\nimport { PlusOutlined, EditOutlined, DeleteOutlined } from '@ant-design/icons';\nimport DiseaseForm from 'forms/DiseaseForm/DiseaseForm';\nimport { getDiseasesAPI, addDiseaseAPI, updateDiseaseAPI, deleteDiseaseAPI } from 'services/admin/disease.service';\nimport { formActions } from 'constant/formActions';\n\nconst DiseasePage = () => {\n\n  const [modalVisible, setModalVisible] = useState(false);\n  const [diseases, setDiseases] = useState();\n  const [fetchingDiseases, setFetchingDiseases] = useState(false);\n  const [modalLoading, setModalLoading] = useState(false);\n  const [action, setAction] = useState(formActions.CREATE);\n  const [selectedDisease, setSelectedDisease] = useState(null);\n  const [diseaseForm] = Form.useForm();\n\n  const tableColumns = [\n    {\n      title: '#',\n      key: '#',\n      render: (text, record, index) => index + 1\n    },\n    {\n      title: 'Mã bệnh',\n      key: 'code',\n      dataIndex: 'code'\n    },\n    {\n      title: 'Tên bệnh',\n      key: 'name',\n      dataIndex: 'name'\n    },\n    {\n      title: 'Hành động',\n      key: 'action',\n      render: (text, record, index) => (\n        <Space size={10}>\n          <Button icon={<EditOutlined />} onClick={() => handleEditClick(record)}></Button>\n          <Popconfirm\n            onConfirm={() => handleDelete(record)} title=\"Bạn có chắc muốn xóa không?\"\n            okText=\"Xóa\"\n            okType=\"danger\"\n            cancelText=\"Hủy bỏ\">\n            <Button icon={<DeleteOutlined />}></Button>\n          </Popconfirm>\n        </Space>\n      )\n    }\n  ]\n\n  function handleOpenModal() {\n    setAction(formActions.CREATE);\n    setModalVisible(true);\n  }\n\n  function handleCloseModal() {\n    setModalVisible(false);\n  }\n\n  async function getDiseases() {\n    try {\n      setFetchingDiseases(true);\n      const response = await getDiseasesAPI();\n      setDiseases(response.data.results);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setFetchingDiseases(false);\n    }\n  }\n\n  async function handleFormSubmit() {\n    try {\n      setModalLoading(true);\n      const values = await diseaseForm.validateFields();\n      const data = {\n        code: values.code,\n        name: values.name,\n        disease_category: values.disease_category,\n      }\n      if (action === formActions.CREATE) {\n        await addDiseaseAPI(data);\n      }\n\n      if (action === formActions.UPDATE) {\n        await updateDiseaseAPI(selectedDisease.id, data);\n      }\n\n      getDiseases();\n\n      setModalVisible(false);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setModalLoading(false);\n    }\n  }\n\n  function handleEditClick(disease) {\n    setAction(formActions.UPDATE);\n    setSelectedDisease(disease);\n    setModalVisible(true);\n  }\n\n  async function handleDelete(disease) {\n    try {\n      await deleteDiseaseAPI(disease.id);\n      getDiseases();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  function afterClose() {\n    diseaseForm.resetFields();\n    setSelectedDisease(null);\n  }\n\n  useEffect(() => {\n    getDiseases();\n  }, []);\n\n  return (\n    <>\n      <Row justify=\"space-between\">\n        <Col><h1 className=\"text-xl\">Quản lý bệnh</h1></Col>\n        <Col>\n          <Button type=\"primary\" icon={<PlusOutlined />} onClick={handleOpenModal}>Tạo mới</Button>\n        </Col>\n      </Row>\n      <Table\n        rowKey=\"id\"\n        columns={tableColumns}\n        dataSource={diseases}\n        loading={fetchingDiseases} />\n      <Modal\n        visible={modalVisible}\n        title={action === formActions.CREATE ? 'Thêm bệnh' : 'Cập nhật bệnh'}\n        onCancel={handleCloseModal}\n        confirmLoading={modalLoading}\n        destroyOnClose={true}\n        afterClose={afterClose}\n        onOk={handleFormSubmit}>\n        <DiseaseForm onFinish={handleFormSubmit} form={diseaseForm} defaultDisease={selectedDisease} />\n      </Modal>\n    </>\n  )\n}\n\nexport default DiseasePage;","import React from 'react';\n\nconst NotificationPage = () => {\n  return (\n    <div>Notification Page</div>\n  )\n}\n\nexport default NotificationPage;","import axios from 'axios';\n\nimport { API_URL } from \"constant/apiUrl\";\n\nconst endpointPrefix = `${API_URL}/user/room`;\n\nexport function getRoomAPI() {\n  const url = `${endpointPrefix}/`;\n  return axios.get(url);\n}\n\nexport function getRoomDetailsAPI(roomId) {\n  const url = `${endpointPrefix}/${roomId}/`;\n  return axios.get(url);\n}","import axios from 'axios';\n\nimport { API_URL } from \"constant/apiUrl\";\n\nconst endpointPrefix = `${API_URL}/admin/manage-room`;\n\nexport function getRoomAPI() {\n  const url = `${endpointPrefix}/`;\n  return axios.get(url);\n}\n\nexport function addRoomAPI({ number, name }) {\n  const url = `${endpointPrefix}/`;\n  return axios.post(url, { number: Number(number), name });\n}\n\nexport function updateRoomAPI(id, { name, number }) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.put(url, {\n    number: Number(number),\n    name\n  })\n}\n\nexport function deleteRoomAPI(id) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.delete(url);\n}","import axios from 'axios';\nimport { API_URL } from 'constant/apiUrl';\nimport { getQueryString } from 'utils/string';\n\nconst endpointPrefix = `${API_URL}/user/visit`;\n\nexport function getVisitDataAPI(query) {\n  const url = `${endpointPrefix}/`;\n  if (query) {\n    return axios.get(`${url}?${getQueryString(query)}`);\n  }\n  return axios.get(url);\n}\n\nexport function createVisitAPI({ patientId, roomId }) {\n  const url = `${endpointPrefix}/`;\n  return axios.post(url, {\n    room_id: roomId,\n    patient_id: patientId\n  })\n}\n\nexport function deleteVisitAPI(visitId) {\n  const url = `${endpointPrefix}/${visitId}/`;\n  return axios.delete(url);\n}","import axios from 'axios';\nimport { API_URL } from 'constant/apiUrl';\nimport { getQueryString } from 'utils/string';\n\nconst endpointPrefix = `${API_URL}/admin/manage-visit`;\n\nexport function getVisitDataAPI(query) {\n  const url = `${endpointPrefix}/`;\n  if (query) {\n    return axios.get(`${url}?${getQueryString(query)}`);\n  }\n  return axios.get(url);\n}\n\nexport function createVisitAPI({ patientId, roomId }) {\n  const url = `${endpointPrefix}/`;\n  return axios.post(url, {\n    room_id: roomId,\n    patient_id: patientId\n  })\n}","import axios from 'axios';\nimport { NODE_URL } from 'constant/apiUrl';\nimport { getQueryString } from 'utils/string';\n\nconst endpointPrefix = `${NODE_URL}`;\n\nexport function listEMRAPI(query) {\n  const url = `${endpointPrefix}/physician/emrs/`;\n  if (query) {\n    return axios.get(`${url}?${getQueryString(query)}`);\n  }\n\n  return axios.get(url);\n}\n\nexport function addEMRAPI(emr) {\n  const url = `${endpointPrefix}/physician/emrs/`;\n  return axios.post(url, emr);\n}\n\nexport function getEMRHistoryAPI(emrId) {\n  const url = `${endpointPrefix}/physician/emrs/${emrId}`;\n  return axios.get(url);\n}\n\nexport function updateEMRAPI(emrId, body) {\n  const url = `${endpointPrefix}/physician/emrs/${emrId}`;\n  return axios.put(url, body);\n}\n\nexport function completeEMRAPI(emrId) {\n  const url = `${endpointPrefix}/physician/emrs/${emrId}/complete`;\n  return axios.get(url);\n}","import React, { useState, useEffect } from 'react';\nimport { Row, Col, Select, Empty, Table, Button } from 'antd';\nimport { connect } from 'react-redux';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { removeDuplicates } from 'utils/array';\nimport moment from 'moment';\n\n// APIs\nimport { getRoomAPI } from 'services/user/room.service';\nimport { getRoomAPI as adminGetRoomAPI } from 'services/admin/room.service';\nimport { getVisitDataAPI } from 'services/user/visit.service';\nimport { getVisitDataAPI as adminGetVisitDataAPI } from 'services/admin/visit.service';\nimport { addEMRAPI, getEMRHistoryAPI } from 'services/user/emr.service';\n\n\nconst VisitPage = props => {\n  const user = props.user;\n  const { pathname } = useLocation();\n\n  const history = useHistory();\n  const [rooms, setRooms] = useState([]);\n  const [roomLoading, setRoomLoading] = useState(false);\n  const [visitData, setVisitData] = useState(null);\n  const [visitLoading, setVisitLoading] = useState(false);\n  const [createEMRLoading, setCreateEMRLoading] = useState([]);\n\n  const [selectedRoom, setSelectedRoom] = useState(\"\");\n\n  const visitList = visitData?.results.filter(visit => {\n    const createdAt = new Date(visit.created_at);\n    const today = new Date();\n    const isToday = createdAt.getDate() === today.getDate() &&\n      createdAt.getMonth() === today.getMonth() &&\n      createdAt.getFullYear() === today.getFullYear();\n    return (isToday && visit.room.id === selectedRoom)\n  });\n\n  const tableColumns = [\n    {\n      title: 'Số thứ tự',\n      key: '#',\n      dataIndex: 'visit_number'\n    },\n    {\n      title: 'Họ và tên',\n      key: 'fullname',\n      render: (_, record) => record.patient.first_name + \" \" + record.patient.last_name\n    },\n    {\n      title: 'Giới tính',\n      key: 'gender',\n      render: (_, record) => record.patient.gender\n    },\n    {\n      title: 'Ngày sinh',\n      key: 'DOB',\n      render: (_, record) => moment(record.patient.DOB).format('DD/MM/YYYY')\n    },\n    {\n      ken: 'action',\n      render: (_, record) => <Button onClick={() => handlePatientClick(record)} loading={createEMRLoading.includes(record.id)}>Khám bệnh</Button>\n    }\n  ]\n\n  async function getRooms() {\n    try {\n      setRoomLoading(true);\n      let roomResponse;\n      if (user.role.name === \"admin\") {\n        roomResponse = await adminGetRoomAPI();\n      } else if (user.role.name === \"physician\" || user?.role?.name === \"receptionist\") {\n        roomResponse = await getRoomAPI();\n      }\n      setRooms(roomResponse.data);\n\n      const prevSelected = localStorage.getItem(\"selectedRoom\");\n      if (prevSelected) {\n        setSelectedRoom(prevSelected);\n        getVisitData(prevSelected);\n      }\n\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setRoomLoading(false);\n    }\n  }\n\n  async function getVisitData(roomId) {\n    try {\n      let visitDataResponse;\n      setVisitLoading(true);\n      if (user.role.name === \"admin\") {\n        visitDataResponse = await adminGetVisitDataAPI({ room_id: roomId });\n      } else {\n        visitDataResponse = await getVisitDataAPI({ room_id: roomId })\n      }\n      const visitData = visitDataResponse.data;\n      setVisitData(visitData);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setVisitLoading(false);\n    }\n  }\n\n  async function getInitialData() {\n    await Promise.all([\n      getRooms(),\n    ]);\n  }\n\n  useEffect(() => {\n    if (user) {\n      getInitialData();\n    }\n  }, [user]);\n\n  useEffect(() => {\n    if (selectedRoom) {\n      localStorage.setItem(\"selectedRoom\", selectedRoom);\n    }\n  }, [selectedRoom])\n\n  async function createEmr(emr) {\n    try {\n      setCreateEMRLoading(prev => [...prev, ...[emr.visit_id]]);\n      const response = await addEMRAPI(emr);\n      return Promise.resolve(response);\n    } catch (error) {\n      console.log(error);\n      return Promise.reject(error);\n    } finally {\n      setCreateEMRLoading(prev => {\n        const cloneArr = [...prev];\n        cloneArr.splice(cloneArr.indexOf(emr.visit_id), 1);\n        return cloneArr\n      });\n    }\n  }\n\n  async function checkExistEMR(emrId) {\n    try {\n      setCreateEMRLoading(prev => [...prev, ...[emrId]]);\n      const historyResponse = await getEMRHistoryAPI(emrId);\n      const data = historyResponse.data.data;\n      const existEmr = data.find(emr => emr.id === emrId && emr.completed_at === null);\n      return !!(existEmr);\n    } catch (error) {\n\n    } finally {\n      setCreateEMRLoading(prev => {\n        const cloneArr = [...prev];\n        cloneArr.splice(cloneArr.indexOf(emrId), 1);\n        return cloneArr\n      });\n    }\n  }\n\n  async function handlePatientClick(visit) {\n    const { patient } = visit;\n    const existVisit = await checkExistEMR(visit.id);\n\n    if (!existVisit) {\n\n      const emrObj = {\n        visit_id: visit.id,\n        patient: visit.patient,\n        physician: user,\n        room: visit.room,\n        medical_record: {\n          administrative: {\n            fullname: null,\n            dayOfBirth: null,\n            gender: null,\n            job: null,\n            ethnicity: null,\n            expatriate: null,\n            address: null,\n            workplace: null,\n            object: null,\n            insurance_expirity: null,\n            insurance_number: null,\n            family_member_and_address: null,\n            phone: null,\n            checkin_at: null,\n            previous_diagnose: null,\n            come_from: null\n          },\n          present_complaint: null,\n          ask: {\n            pathological_process: null,\n            self_medical_history: null,\n            family_medical_history: null\n          },\n          examination: {\n            heartbeat: null,\n            temperature: null,\n            blood_pressure: null,\n            breathing: null,\n            weight: null,\n            body: null,\n            partials: null,\n            subclinical_summary: null,\n            initial_diagnose: {\n              category: null,\n              disease: null\n            },\n            drugs: null,\n            processed: null,\n            diagnose: {\n              category: null,\n              disease: null\n            },\n            from_date: null,\n            to_date: null,\n          },\n          summary: {\n            pathological_process_and_clinical_course: null,\n            valuable_subclinical_summary: null,\n            primary_disease: {\n              category: null,\n              disease: null\n            },\n            sub_disease: {\n              category: null,\n              disease: null\n            },\n            treatment_method: null,\n            patient_status: null,\n            direction_of_treatment: null,\n            services: null,\n            attachments: []\n          }\n        }\n      }\n\n      try {\n        await createEmr(emrObj);\n        history.push(`${pathname}/${visit.id}`);\n      } catch (error) {\n        console.log(error);\n      }\n    } else {\n      history.push(`${pathname}/${visit.id}`);\n    }\n  }\n\n  function handleChangeRoom(value) {\n    setSelectedRoom(value);\n    getVisitData(value);\n  }\n\n  return (\n    <>\n      <Row className=\"flex-no-wrap\">\n        <Col style={{ width: 350 }} className=\"flex-shrink-0\">\n          <div className=\"mb-5\">\n            <h3 className=\"text-xl\">Khoa</h3>\n            <Select loading={roomLoading} style={{ width: '100%' }} value={selectedRoom} onChange={handleChangeRoom}>\n              {\n                rooms.map(room => (\n                  <Select.Option key={room.id} value={room.id} onChange={handleChangeRoom}>{room.name}</Select.Option>\n                ))\n              }\n            </Select>\n          </div>\n        </Col>\n        <Col flex=\"0 0 45px\"></Col>\n        <Col flex={1}>\n          <h3 className=\"text-xl\">Bệnh nhân đang chờ khám</h3>\n          <Table dataSource={visitList} columns={tableColumns} rowKey=\"id\" loading={visitLoading} pagination={false} />\n        </Col>\n      </Row>\n    </>\n  )\n}\n\nconst mapStateToProps = state => ({\n  user: state.userState.user\n})\n\nexport default connect(mapStateToProps)(VisitPage);","import axios from 'axios';\nimport { API_URL } from 'constant/apiUrl';\n\nconst endpointPrefix = `${API_URL}/user/patient`;\n\nexport function listAllPatientsAPI(search = \"\") {\n  const url = `${endpointPrefix}/?search=${search}`;\n  return axios.get(url);\n}\n\nexport function getPatientDetailsAPI(patientId) {\n  const url = `${endpointPrefix}/${patientId}/`;\n  return axios.get(url);\n}\n\nexport function createPatientAPI(body) {\n  const url = `${endpointPrefix}/`;\n  return axios.post(url, body)\n}\n\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { PageHeader, Table, Space, Button } from 'antd';\nimport { EyeOutlined } from '@ant-design/icons';\nimport { Link, useRouteMatch } from 'react-router-dom';\nimport moment from 'moment';\n\n// API\nimport { listAllPatientsAPI } from 'services/user/patient.service';\n\nconst PatientPage = props => {\n  const { user } = props;\n  const { path } = useRouteMatch();\n\n  const [patientData, setPatientData] = useState(null);\n  const [patientLoading, setPatientLoading] = useState(false);\n\n  const tableColumns = [\n    {\n      title: '#',\n      key: '#',\n      render: (text, record, index) => index + 1\n    },\n    {\n      title: 'Họ và tên',\n      key: 'fullname',\n      render: (text, record) => record.first_name + \" \" + record.last_name\n    },\n    {\n      title: 'Giới tính',\n      key: 'gender',\n      dataIndex: 'gender'\n    },\n    {\n      title: 'Ngày sinh',\n      key: 'DOB',\n      render: (text, record) => moment(record.DOB).format('DD/MM/YYYY')\n    },\n    {\n      title: 'Địa chỉ',\n      key: 'address',\n      render: (text, record) => record.address || <i className=\"text-gray-500\">Đang cập nhật...</i>\n    },\n    {\n      title: 'Hành động',\n      key: 'action',\n      render: (text, record) => (\n        <Space>\n          <Link to={`${path}/${record.id}`}>\n            <Button icon={<EyeOutlined />}>Xem chi tiết</Button>\n          </Link>\n        </Space>\n      )\n    }\n  ]\n\n  async function listAllPatient() {\n    try {\n      setPatientLoading(true);\n      const patientResults = await listAllPatientsAPI();\n      const patientData = patientResults.data;\n      setPatientData(patientData);\n    } catch (error) {\n\n    } finally {\n      setPatientLoading(false);\n    }\n  }\n\n  async function getInitialData() {\n    await Promise.all([\n      listAllPatient()\n    ])\n  }\n\n  useEffect(() => {\n    getInitialData()\n  }, []);\n\n  return (\n    <>\n      <PageHeader title=\"Bệnh nhân\" />\n      <Table columns={tableColumns} dataSource={patientData?.results} loading={patientLoading} rowKey=\"id\" />\n    </>\n  )\n}\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.userState.user\n  }\n}\n\nexport default connect(mapStateToProps)(PatientPage); ","import React from 'react';\nimport { Calendar, PageHeader, Row, Col } from 'antd';\n\nconst AppointmentPage = () => {\n  return (\n    <>\n      <h3 className=\"text-xl\">Lịch hẹn</h3>\n      <Row>\n        <Col flex=\"1\">\n          <Calendar mode=\"month\" locale=\"vi\" />\n        </Col>\n\n        <Col flex=\"0 0 300px\">\n\n        </Col>\n      </Row>\n    </>\n  )\n}\n\nexport default AppointmentPage;","import axios from 'axios';\n\nimport { API_URL } from \"constant/apiUrl\";\n\nconst endpointPrefix = `${API_URL}/admin/manage-service`;\n\nexport function getServicesAPI(search = \"\") {\n  const url = `${endpointPrefix}/?search=${search}`;\n  return axios.get(url);\n}\n\nexport function getServiceDetailsAPI(id) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.get(url);\n}\n\nexport function addServiceAPI({ name, price }) {\n  const url = `${endpointPrefix}/`;\n  return axios.post(url, { name, price: Number(price) });\n}\n\nexport function updateServiceAPI(id, { name, price }) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.put(url, {\n    name,\n    price: Number(price)\n  })\n}\n\nexport function deleteServiceAPI(id) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.delete(url);\n}","import React, { useState, useEffect } from 'react';\nimport { Form, Input, Spin } from 'antd';\nimport { getServiceDetailsAPI } from 'services/admin/medical-service.service';\n\nconst ServiceForm = props => {\n  const { form, onFinish, defaultService } = props;\n\n  const [serviceDetail, setServiceDetail] = useState(null);\n  const [detailLoading, setDetailLoading] = useState(false);\n\n  async function getServiceDetail(id) {\n    try {\n      setDetailLoading(true);\n      const detailResponse = await getServiceDetailsAPI(id);\n      const serviceDetail = detailResponse.data;\n      setServiceDetail(serviceDetail);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setDetailLoading(false);\n    }\n  }\n\n  async function getData() {\n    if (defaultService?.id) {\n      await Promise.all([\n        getServiceDetail(defaultService.id),\n      ]);\n    }\n  }\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  useEffect(() => {\n    if (serviceDetail) {\n      form.setFieldsValue({\n        name: serviceDetail.name,\n        price: serviceDetail.price,\n      });\n    }\n  }, [serviceDetail, defaultService, form]);\n\n  return (\n    <Spin spinning={detailLoading}>\n      <Form\n        layout=\"vertical\"\n        form={form}\n        onFinish={onFinish}>\n\n        <Form.Item label=\"Tên dịch vụ\" name=\"name\" initialValue={serviceDetail?.name}>\n          <Input />\n        </Form.Item>\n\n        <Form.Item label=\"Giá\" name=\"price\" initialValue={serviceDetail?.price}>\n          <Input type=\"number\" suffix=\"VNĐ\" />\n        </Form.Item>\n      </Form>\n    </Spin>\n  )\n}\n\nexport default ServiceForm;","import React, { useState, useEffect } from 'react';\nimport { Row, Col, Button, Modal, Table, Form, Popconfirm, Space } from 'antd';\nimport { PlusOutlined, EditOutlined, DeleteOutlined } from '@ant-design/icons';\nimport ServiceForm from 'forms/ServiceForm/ServiceForm';\nimport { getServicesAPI, addServiceAPI, updateServiceAPI, deleteServiceAPI } from 'services/admin/medical-service.service';\nimport { formActions } from 'constant/formActions';\nimport NumberFormat from 'react-number-format';\n\nconst ServicePage = () => {\n\n  const [modalVisible, setModalVisible] = useState(false);\n  const [services, setServices] = useState();\n  const [fetchingServices, setFetchingServices] = useState(false);\n  const [modalLoading, setModalLoading] = useState(false);\n  const [action, setAction] = useState(formActions.CREATE);\n  const [selectedService, setSelectedService] = useState(null);\n  const [serviceForm] = Form.useForm();\n\n  const tableColumns = [\n    {\n      title: '#',\n      key: '#',\n      render: (text, record, index) => index + 1\n    },\n    {\n      title: 'Tên dịch vụ',\n      key: 'name',\n      dataIndex: 'name'\n    },\n    {\n      title: 'Giá',\n      key: 'price',\n      dataIndex: 'price',\n      render: (text, record, index) => (<NumberFormat thousandSeparator=\" \" suffix=\" VNĐ\" value={text} displayType=\"text\" />)\n    },\n    {\n      title: 'Hành động',\n      key: 'action',\n      render: (text, record, index) => (\n        <Space size={10}>\n          <Button icon={<EditOutlined />} onClick={() => handleEditClick(record)}></Button>\n          <Popconfirm\n            onConfirm={() => handleDelete(record)} title=\"Bạn có chắc muốn xóa không?\"\n            okText=\"Xóa\"\n            okType=\"danger\"\n            cancelText=\"Hủy bỏ\">\n            <Button icon={<DeleteOutlined />}></Button>\n          </Popconfirm>\n        </Space>\n      )\n    }\n  ]\n\n  function handleOpenModal() {\n    setAction(formActions.CREATE);\n    setModalVisible(true);\n  }\n\n  function handleCloseModal() {\n    setModalVisible(false);\n  }\n\n  async function getServices() {\n    try {\n      setFetchingServices(true);\n      const response = await getServicesAPI();\n      setServices(response.data);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setFetchingServices(false);\n    }\n  }\n\n  async function handleFormSubmit() {\n    try {\n      setModalLoading(true);\n      const values = await serviceForm.validateFields();\n      const data = {\n        name: values.name,\n        price: values.price,\n      }\n      if (action === formActions.CREATE) {\n        await addServiceAPI(data);\n      }\n\n      if (action === formActions.UPDATE) {\n        await updateServiceAPI(selectedService.id, data);\n      }\n\n      getServices();\n\n      setModalVisible(false);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setModalLoading(false);\n    }\n  }\n\n  function handleEditClick(service) {\n    setAction(formActions.UPDATE);\n    setSelectedService(service);\n    setModalVisible(true);\n  }\n\n  async function handleDelete(service) {\n    try {\n      await deleteServiceAPI(service.id);\n      getServices();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  function afterClose() {\n    serviceForm.resetFields();\n    setSelectedService(null);\n  }\n\n  useEffect(() => {\n    getServices();\n  }, []);\n\n  return (\n    <>\n      <Row justify=\"space-between\">\n        <Col><h1 className=\"text-xl\">Quản lý thuốc</h1></Col>\n        <Col>\n          <Button type=\"primary\" icon={<PlusOutlined />} onClick={handleOpenModal}>Tạo mới</Button>\n        </Col>\n      </Row>\n      <Table\n        rowKey=\"id\"\n        columns={tableColumns}\n        dataSource={services}\n        loading={fetchingServices} />\n      <Modal\n        visible={modalVisible}\n        title={action === formActions.CREATE ? 'Thêm thuốc' : 'Cập nhật thuốc'}\n        onCancel={handleCloseModal}\n        confirmLoading={modalLoading}\n        destroyOnClose={true}\n        afterClose={afterClose}\n        onOk={handleFormSubmit}>\n        <ServiceForm onFinish={handleFormSubmit} form={serviceForm} defaultService={selectedService} />\n      </Modal>\n    </>\n  )\n}\n\nexport default ServicePage;","import axios from 'axios';\nimport { API_URL } from 'constant/apiUrl';\n\nconst endpointPrefix = `${API_URL}/admin/manage-working-hours`;\n\nexport function getWorkingHoursAPI() {\n  const url = `${endpointPrefix}/`;\n  return axios.get(url);\n}\n\nexport function updateWorkingHourAPI(id, { weekday, isClosed }) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.put(url, {\n    weekday: weekday,\n    is_closed: isClosed\n  })\n}","import React, { useState, useEffect } from 'react';\nimport { Table, Switch } from 'antd';\nimport { getWorkingHoursAPI, updateWorkingHourAPI } from 'services/admin/working-hours.service';\n\nconst WorkingHourPage = () => {\n\n  const [workingHours, setWorkingHours] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const tableColumns = [\n    {\n      title: 'Ngày',\n      key: 'weekday',\n      dataIndex: 'weekday'\n    },\n    {\n      title: 'Đóng cửa',\n      key: 'is_closed',\n      render: (text, record) => (\n        <Switch\n          checked={record.is_closed}\n          onChange={() => handleWorkingHourChange(record)} />\n      )\n    }\n  ]\n\n  async function getWorkingHours() {\n    try {\n      setLoading(true);\n      const workingHoursResponse = await getWorkingHoursAPI();\n      setWorkingHours(workingHoursResponse.data.sort((a, b) => {\n        if (a.id < b.id) {\n          return -1\n        } else {\n          return 1\n        }\n      }));\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  async function handleWorkingHourChange(wh) {\n    try {\n      setLoading(true);\n      await updateWorkingHourAPI(wh.id, {\n        weekday: wh.weekday,\n        isClosed: !wh.is_closed\n      });\n      getWorkingHours();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  useEffect(() => {\n    getWorkingHours();\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"text-xl\">Quản lý giờ làm việc</h1>\n      <div style={{width: 400}}>\n      <Table\n        rowKey=\"weekday\"\n        dataSource={workingHours}\n        columns={tableColumns}\n        loading={loading}\n        pagination={false} />\n      </div>\n      \n    </>\n  )\n}\n\nexport default WorkingHourPage;","import React from 'react';\nimport { Form, Input } from 'antd';\n\nconst RoomForm = props => {\n  const { form, onFinish, defaultRoom } = props;\n\n  return (\n    <Form\n      layout=\"vertical\"\n      form={form}\n      onFinish={onFinish}>\n      <Form.Item label=\"Mã\" name=\"number\" initialValue={defaultRoom?.number}>\n        <Input type=\"number\" autoFocus />\n      </Form.Item>\n      <Form.Item label=\"Tên phòng\" name=\"name\" initialValue={defaultRoom?.name}>\n        <Input />\n      </Form.Item>\n    </Form>\n  )\n}\n\nexport default RoomForm;","import React, { useState, useEffect } from 'react';\nimport { Row, Col, Button, Modal, Table, Form, Popconfirm, Space } from 'antd';\nimport { PlusOutlined, EditOutlined, DeleteOutlined } from '@ant-design/icons';\nimport RoomForm from 'forms/RoomForm/RoomForm';\nimport { addRoomAPI, deleteRoomAPI, getRoomAPI, updateRoomAPI } from 'services/admin/room.service';\nimport { formActions } from 'constant/formActions';\n\nconst RoomPage = () => {\n\n  const [modalVisible, setModalVisible] = useState(false);\n  const [rooms, setCategories] = useState([]);\n  const [fetchingCategories, setFetchingCategories] = useState(false);\n  const [modalLoading, setModalLoading] = useState(false);\n  const [action, setAction] = useState(formActions.CREATE);\n  const [selectedRoom, setSelectedRoom] = useState(null);\n  const [roomForm] = Form.useForm();\n\n  const tableColumns = [\n    {\n      title: 'Mã phòng',\n      key: 'number',\n      dataIndex: 'number',\n      width: '150px'\n    },\n    {\n      title: 'Tên phòng',\n      key: 'name',\n      dataIndex: 'name'\n    },\n    {\n      title: 'Hành động',\n      key: 'action',\n      width: '150px',\n      render: (text, record, index) => (\n        <Space size={10}>\n          <Button icon={<EditOutlined />} onClick={() => handleEditClick(record)}></Button>\n          <Popconfirm\n            onConfirm={() => handleDelete(record)} title=\"Bạn có chắc muốn xóa không?\"\n            okText=\"Xóa\"\n            okType=\"danger\"\n            cancelText=\"Hủy bỏ\">\n            <Button icon={<DeleteOutlined />}></Button>\n          </Popconfirm>\n        </Space>\n      )\n    }\n  ]\n\n  function handleOpenModal() {\n    setAction(formActions.CREATE);\n    setModalVisible(true);\n  }\n\n  function handleCloseModal() {\n    setModalVisible(false);\n  }\n\n  async function getRooms() {\n    try {\n      setFetchingCategories(true);\n      const response = await getRoomAPI();\n      setCategories(response.data);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setFetchingCategories(false);\n    }\n  }\n\n  async function handleFormSubmit() {\n    try {\n      setModalLoading(true);\n      const values = await roomForm.validateFields();\n      if (action === formActions.CREATE) {\n        await addRoomAPI(values);\n      }\n\n      if (action === formActions.UPDATE) {\n        await updateRoomAPI(selectedRoom.id, values);\n      }\n\n      getRooms();\n\n      setModalVisible(false);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setModalLoading(false);\n    }\n  }\n\n  function handleEditClick(room) {\n    setAction(formActions.UPDATE);\n    setSelectedRoom(room);\n    setModalVisible(true);\n  }\n\n  async function handleDelete(unit) {\n    try {\n      await deleteRoomAPI(unit.id);\n      getRooms();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  function afterClose() {\n    roomForm.resetFields();\n    setSelectedRoom(null);\n  }\n\n  useEffect(() => {\n    getRooms();\n  }, []);\n\n  return (\n    <>\n      <Row justify=\"space-between\">\n        <Col><h1 className=\"text-xl\">Quản lý phòng</h1></Col>\n        <Col>\n          <Button type=\"primary\" icon={<PlusOutlined />} onClick={handleOpenModal}>Tạo mới</Button>\n        </Col>\n      </Row>\n      <Table\n        rowKey=\"id\"\n        columns={tableColumns}\n        dataSource={rooms}\n        \n        loading={fetchingCategories} />\n      <Modal\n        visible={modalVisible}\n        title={action === formActions.CREATE ? 'Thêm phòng' : 'Cập nhật phòng'}\n        onCancel={handleCloseModal}\n        confirmLoading={modalLoading}\n        destroyOnClose={true}\n        afterClose={afterClose}\n        onOk={handleFormSubmit}>\n        <RoomForm onFinish={handleFormSubmit} form={roomForm} defaultRoom={selectedRoom} />\n      </Modal>\n    </>\n  )\n}\n\nexport default RoomPage;","import axios from 'axios';\nimport { API_URL } from 'constant/apiUrl';\nimport qs from 'qs';\n\nconst endpointPrefix = `${API_URL}/admin/manage-user`;\n\nexport function getUsersAPI(query) {\n  const url = `${endpointPrefix}/?${qs.stringify(query)}`;\n  return axios.get(url);\n}\n\nexport function getUserDetailsAPI(id) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.get(url);\n}\n\nexport function addUserAPI({ email, password, first_name, last_name, phone, DOB, gender, role_id }) {\n  const url = `${endpointPrefix}/`;\n  return axios.post(url, {\n    email,\n    password,\n    first_name,\n    last_name,\n    phone,\n    DOB: DOB.format('yyyy-MM-DD'),\n    gender,\n    role_id\n  });\n}\n\nexport function updateUserAPI(id, { email, password, first_name, last_name, phone, DOB, gender, role_id }) {\n  const url = `${endpointPrefix}/${id}/`;\n  if (password) {\n    return axios.put(url, {\n      email,\n      password,\n      first_name,\n      last_name,\n      phone,\n      DOB: DOB.format('yyyy-MM-DD'),\n      gender,\n      role_id\n    })\n  }\n\n  return axios.put(url, {\n    email,\n    first_name,\n    last_name,\n    phone,\n    DOB: DOB.format('yyyy-MM-DD'),\n    gender,\n    role_id\n  })\n}\n\nexport function deleteUserAPI(id) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.delete(url);\n}\n\nexport function blockUserAPI(userId) {\n  const url = `${endpointPrefix}/${userId}/block/`;\n  return axios.get(url);\n}\n\nexport function unblockUserAPI(userId) {\n  const url = `${endpointPrefix}/${userId}/unblock/`;\n  return axios.get(url);\n}","export const ROLES = {\n  \"1\": {\n    name: \"admin\",\n    display: \"Quản trị viên\"\n  },\n  \"2\": {\n    name: \"physician\",\n    display: \"Bác sĩ\"\n  },\n  \"3\": {\n    name: \"receptionist\",\n    display: \"Lễ tân\"\n  },\n  \"4\": {\n    name: \"patient\",\n    display: \"Bệnh nhân\"\n  }\n}\n\nexport const ROLES_LIST = [1, 2, 3, 4];","export const requiredRule = (message = \"Vui lòng điền vào trường này\") => {\n  return {\n    required: true,\n    message: message\n  }\n}","import React, { useState, useEffect } from 'react';\nimport { Form, Input, Select, Spin, Row, Col, DatePicker, Radio } from 'antd';\nimport { getUserDetailsAPI } from 'services/admin/user.service';\nimport { ROLES, ROLES_LIST } from 'constant/roles';\nimport moment from 'moment';\nimport { requiredRule } from 'constant/formRules';\n\nconst UserForm = props => {\n  const { form, onFinish, defaultUser } = props;\n  const [userDetail, setUserDetail] = useState(null);\n  const [detailLoading, setDetailLoading] = useState(false);\n\n  async function getUserDetail(id) {\n    try {\n      setDetailLoading(true);\n      const detailResponse = await getUserDetailsAPI(id);\n      const userDetail = detailResponse.data;\n      setUserDetail(userDetail);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setDetailLoading(false);\n    }\n  }\n\n  async function getData() {\n    if (defaultUser?.id) {\n      await Promise.all([\n        getUserDetail(defaultUser.id),\n      ]);\n    }\n  }\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  useEffect(() => {\n    if (userDetail) {\n      form.setFieldsValue({\n        email: userDetail.email,\n        first_name: userDetail.first_name,\n        last_name: userDetail.last_name,\n        phone: userDetail.phone,\n        DOB: moment(userDetail.DOB),\n        gender: userDetail.gender,\n        role_id: userDetail.role.id\n      });\n    }\n  }, [userDetail, defaultUser, form]);\n\n  return (\n    <Spin spinning={detailLoading}>\n      <Form\n        layout=\"vertical\"\n        form={form}\n        autoComplete=\"off\"\n        onFinish={onFinish}>\n        <Form.Item label=\"Email\" name=\"email\" initialValue={userDetail?.email} rules={[\n          {\n            required: !userDetail || (userDetail && userDetail.role.id != 4),\n            message: \"Vui lòng điền vào trường này\"\n          }\n        ]}>\n          <Input type=\"email\" />\n        </Form.Item>\n\n        <Form.Item label=\"Mật khẩu\" name=\"password\" rules={[\n          {\n            required: !userDetail?.id,\n            message: \"Vui lòng điền vào trường này\"\n          }\n        ]}>\n          <Input.Password autoComplete=\"new-password\" placeholder={userDetail ? \"Nhập mật khẩu mới\" : \"\"} />\n        </Form.Item>\n\n        <Row>\n          <Col flex={1}>\n            <Form.Item label=\"Họ\" name=\"first_name\" rules={[requiredRule()]}>\n              <Input />\n            </Form.Item>\n          </Col>\n          <div style={{ width: 20 }}></div>\n          <Col flex={1}>\n            <Form.Item label=\"Tên\" name=\"last_name\" rules={[requiredRule()]}>\n              <Input />\n            </Form.Item>\n          </Col>\n        </Row>\n\n        <Form.Item label=\"Điện thoại\" name=\"phone\" initialValue={userDetail?.phone} rules={[requiredRule()]}>\n          <Input type=\"tel\" />\n        </Form.Item>\n\n        <Row>\n          <Col>\n            <Form.Item label=\"Ngày sinh\" name=\"DOB\" rules={[requiredRule()]}>\n              <DatePicker placeholder=\"Chọn ngày\" />\n            </Form.Item>\n          </Col>\n          <div style={{ width: 15 }}></div>\n          <Col flex={1}>\n            <Form.Item label=\"Giới tính\" name=\"gender\" rules={[requiredRule()]}>\n              <Radio.Group>\n                <Radio value=\"Nam\">Nam</Radio>\n                <Radio value=\"Nữ\">Nữ</Radio>\n                <Radio value=\"Khác\">Khác</Radio>\n              </Radio.Group>\n            </Form.Item>\n          </Col>\n        </Row>\n\n\n        <Form.Item label=\"Vai trò\" name=\"role_id\" initialValue={userDetail?.role_id} rules={[requiredRule()]}>\n          <Select>\n            {\n              ROLES_LIST.map(role_id => (\n                <Select.Option key={role_id} value={role_id}>{ROLES[role_id].display}</Select.Option>\n              ))\n            }\n          </Select>\n        </Form.Item>\n      </Form>\n    </Spin>\n  )\n}\n\nexport default UserForm;","import React from 'react';\nimport classnames from 'classnames';\nimport styles from './Circle.module.scss';\n\nconst Circle = props => {\n\n  const classes = classnames(\n    styles.circle,\n    { [styles['circle--success']]: props.color === 'success' }\n  )\n\n  return (\n    <div className={classes}></div>\n  )\n}\n\nexport default Circle;","import React, { useState, useEffect } from 'react';\nimport { Row, Col, Button, Modal, Table, Form, Popconfirm, Space } from 'antd';\nimport { PlusOutlined, LockOutlined, UnlockOutlined, EditOutlined, DeleteOutlined, EyeOutlined } from '@ant-design/icons';\nimport UserForm from 'forms/UserForm/UserForm';\nimport { formActions } from 'constant/formActions';\nimport NumberFormat from 'react-number-format';\nimport { ROLES } from 'constant/roles';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport Circle from 'components/Circle/Circle';\n\n// APIs\nimport { getUsersAPI, addUserAPI, updateUserAPI, deleteUserAPI, blockUserAPI, unblockUserAPI } from 'services/admin/user.service';\nimport { addBlockChainUserAPI } from 'services/user/user.service';\n\n\nconst AdminAccountPage = () => {\n\n  const history = useHistory();\n  const { pathname, search } = useLocation();\n  const urlSearchParams = new URLSearchParams(search);\n  const currentPageOnURL = Number(urlSearchParams.get('page'));\n  const [page, setPage] = useState(currentPageOnURL || 1);\n  const [modalVisible, setModalVisible] = useState(false);\n  const [users, setUsers] = useState();\n  const [fetchingUsers, setFetchingUsers] = useState(false);\n  const [modalLoading, setModalLoading] = useState(false);\n  const [action, setAction] = useState(formActions.CREATE);\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [userForm] = Form.useForm();\n\n  const tableColumns = [\n    {\n      title: '#',\n      key: '#',\n      render: (text, record, index) => index + 1\n    },\n    {\n      title: 'Họ và tên',\n      key: 'fullname',\n      render: (text, record) => record.first_name + \" \" + record.last_name\n    },\n    {\n      title: 'Email',\n      key: 'email',\n      dataIndex: 'email',\n      render: (text, record) => (\n        <Space>\n          <Circle color={record.is_verified_email ? 'success' : ''} />\n          <span>{record.email}</span>\n        </Space>\n      )\n    },\n    // {\n    //   title: 'Điện thoại',\n    //   key: 'phone',\n    //   dataIndex: 'phone',\n    //   render: (text, record) => (\n    //     <Space>\n    //       <Circle color={record.is_verified_phone ? 'success' : ''} />\n    //       <span>{record.phone}</span>\n    //     </Space>\n    //   )\n    // },\n    {\n      title: 'Vai trò',\n      key: 'role',\n      render: (text, record) => <span>{ROLES[record.role.id].display}</span>\n    },\n    {\n      title: 'Hành động', key: 'action', render: (text, record) => {\n        return (\n          <Space size={10}>\n            <Button icon={<EyeOutlined />} onClick={() => handleViewClick(record)}></Button>\n            <Button icon={<EditOutlined />} onClick={() => handleEditClick(record)}></Button>\n            <Popconfirm\n              onConfirm={() => handleDelete(record)}\n              title=\"Bạn có chắc muốn xóa không?\"\n              okText=\"Xóa\"\n              okType=\"danger\"\n              cancelText=\"Hủy bỏ\">\n              <Button icon={<DeleteOutlined />}></Button>\n            </Popconfirm>\n            {\n              <Popconfirm\n                onConfirm={() => handleBlockUnblock(record)}\n                title={`Bạn có chắc muốn ${record.is_active ? 'khóa' : 'mở khóa'} tài khoản này không?`}\n                okText={record.is_active ? \"Khóa\" : \"Mở khóa\"}\n                okType={record.is_active ? \"danger\" : \"primary\"}\n                cancelText=\"Hủy bỏ\">\n                {\n                  record.is_active ?\n                    <Button danger type=\"link\" icon={<LockOutlined />}>Khóa</Button>\n                    :\n                    <Button type=\"link\" icon={<UnlockOutlined />}>Mở khóa</Button>\n                }\n              </Popconfirm>\n            }\n          </Space>\n        )\n      }\n    }\n  ]\n\n  function handleOpenModal() {\n    setAction(formActions.CREATE);\n    setModalVisible(true);\n  }\n\n  function handleCloseModal() {\n    setModalVisible(false);\n  }\n\n  async function getUsers(page) {\n    try {\n      setFetchingUsers(true);\n      const response = await getUsersAPI({ page: page });\n      setUsers(response.data);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setFetchingUsers(false);\n    }\n  }\n\n  async function handleFormSubmit() {\n    try {\n      setModalLoading(true);\n      const values = await userForm.validateFields();\n\n      if (action === formActions.CREATE) {\n        const addReponse = await addUserAPI(values);\n        const responseData = addReponse.data;\n        const userId = responseData.id;\n        await addBlockChainUserAPI(userId, \"user\");\n        // await addBlockChainUserAPI(\"af6e0eb2-639b-471d-8394-74b0dfce3395\", \"user\");\n      }\n\n      if (action === formActions.UPDATE) {\n        if (!values.password) {\n          delete values.password;\n        }\n        await updateUserAPI(selectedUser.id, values);\n      }\n\n      getUsers(page);\n\n      setModalVisible(false);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setModalLoading(false);\n    }\n  }\n\n  async function handleBlockUnblock(user) {\n    try {\n      setFetchingUsers(true);\n      if (user.is_active) {\n        await blockUserAPI(user.id);\n      } else {\n        await unblockUserAPI(user.id);\n      }\n      getUsers();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  function handleViewClick(user) {\n\n  }\n\n  function handleEditClick(user) {\n    setAction(formActions.UPDATE);\n    setSelectedUser(user);\n    setModalVisible(true);\n  }\n\n  async function handleDelete(user) {\n    try {\n      await deleteUserAPI(user.id);\n      getUsers(page);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  function afterClose() {\n    userForm.resetFields();\n    setSelectedUser(null);\n  }\n\n  function handlePaginationChange(page) {\n    getUsers(page);\n    setPage(page);\n    history.push({\n      pathname: pathname,\n      search: `page=${page}`\n    })\n  }\n\n  useEffect(() => {\n    getUsers(page);\n  }, []);\n\n  return (\n    <>\n      <Row justify=\"space-between\">\n        <Col><h1 className=\"text-xl\">Quản lý tài khoản</h1></Col>\n        <Col>\n          <Button type=\"primary\" icon={<PlusOutlined />} onClick={handleOpenModal}>Tạo mới</Button>\n        </Col>\n      </Row>\n      <Table\n        rowKey=\"id\"\n        columns={tableColumns}\n        dataSource={users?.results}\n        pagination={{\n          defaultCurrent: page,\n          current: page,\n          pageSize: 10,\n          total: users?.count,\n          onChange: handlePaginationChange\n        }}\n        loading={fetchingUsers} />\n      <Modal\n        visible={modalVisible}\n        title={action === formActions.CREATE ? 'Thêm tài khoản' : 'Cập nhật tài khoản'}\n        onCancel={handleCloseModal}\n        confirmLoading={modalLoading}\n        destroyOnClose={true}\n        afterClose={afterClose}\n        onOk={handleFormSubmit}>\n        <UserForm onFinish={handleFormSubmit} form={userForm} defaultUser={selectedUser} />\n      </Modal>\n    </>\n  )\n}\n\nexport default AdminAccountPage;","import React from 'react';\n\nconst AdminSettingPage = () => {\n  return (\n    <div>Admin setting page</div>\n  )\n}\n\nexport default AdminSettingPage;","import React, { useEffect } from 'react';\nimport Cookie from 'js-cookie';\nimport { Redirect } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { logoutAction } from 'store/actions/auth.action';\nimport jwtDecode from 'jwt-decode';\n\nconst withPrivateRoute = (Child, roles) => {\n  const WrapperComponent = (props) => {\n\n    const dispatch = useDispatch();\n    const token = Cookie.get('EMR_token');\n    const user = useSelector((state) => state.userState.user);\n\n    function isValidRole(user) {\n      const userRole = user?.role.name;\n      const isValid = roles.includes(userRole);\n      return isValid;\n    }\n\n    useEffect(() => {\n      if (user && user.role) {\n        if (!isValidRole(user)) {\n          dispatch(logoutAction());\n        }\n      }\n    }, [user, dispatch]);\n\n    try {\n      if (!token || token.length === 0 || !jwtDecode(token)) {\n        return <Redirect to=\"/login\" />;\n      } else {\n        return <Child {...props} />\n      }\n      \n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  return WrapperComponent;\n}\n\nexport default withPrivateRoute;","import React from 'react';\nimport { Button, Layout, Modal, Spin, Space, Avatar } from 'antd';\nimport {\n  LogoutOutlined,\n  ExclamationCircleOutlined\n} from '@ant-design/icons';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { logoutAction } from 'store/actions/auth.action';\nimport { ROLES } from 'constant/roles';\n\nconst { Header } = Layout;\n\nconst CustomHeader = () => {\n\n  const dispatch = useDispatch();\n  const user = useSelector((state) => state.userState.user);\n\n  function handleLogout() {\n    Modal.confirm({\n      title: \"Đăng xuất\",\n      icon: <ExclamationCircleOutlined />,\n      content: \"Bạn có chắc muốn đăng xuất không?\",\n      onOk() {\n        dispatch(logoutAction());\n      }\n    })\n  }\n\n  return (\n    <Header className=\"header flex items-center\">\n      <div className=\"text-2xl text-white\">EMR</div>\n      <div className=\"ml-auto\"></div>\n      <div className=\"text-white\">\n        {\n          user ?\n            <Space>\n              {\n                user.avatar ?\n                  <Avatar src={user.avatar} />\n                  :\n                  <Avatar style={{ backgroundColor: '#1890ff' }}>{user.last_name.charAt(0)}</Avatar>\n              }\n              <span>{ user.first_name } { user.last_name } ({ ROLES[user.role.id].display })</span>\n            </Space>\n            :\n            \"Đang tải...\"\n        }\n\n        <span className=\"ml-3\">|</span>\n      </div>\n      <Button type=\"default\" ghost icon={<LogoutOutlined />} className=\"border-none\" onClick={handleLogout}>Đăng xuất</Button>\n    </Header>\n  )\n}\n\nexport default CustomHeader;","import React from 'react';\nimport { Form, Input } from 'antd';\n\nconst DrugDosageFormForm = props => {\n  const { form, onFinish, defaultDosageForm } = props;\n\n  return (\n    <Form\n      layout=\"vertical\"\n      form={form}\n      onFinish={onFinish}>\n      <Form.Item label=\"Dạng bào chế\" name=\"name\" initialValue={defaultDosageForm?.name}>\n        <Input autoFocus />\n      </Form.Item>\n    </Form>\n  )\n}\n\nexport default DrugDosageFormForm;","import React, { useState, useEffect } from 'react';\nimport { Row, Col, Button, Modal, Table, Form, Popconfirm, Space } from 'antd';\nimport { PlusOutlined, EditOutlined, DeleteOutlined } from '@ant-design/icons';\nimport DrugDosageFormForm from 'forms/DrugDosageFormForm/DrugDosageFormForm';\nimport { addDrugDosageFormAPI, deleteDrugDosageFormAPI, getDrugDosageFormAPI, updateDrugDosageFormAPI } from 'services/admin/drug-dosage-form.service';\nimport { formActions } from 'constant/formActions';\n\nconst DrugDosageFormPage = () => {\n\n  const [modalVisible, setModalVisible] = useState(false);\n  const [dosageForms, setDosageForms] = useState([]);\n  const [fetchingDosageForms, setFetchingDosageForms] = useState(false);\n  const [modalLoading, setModalLoading] = useState(false);\n  const [action, setAction] = useState(formActions.CREATE);\n  const [selectedDosageForm, setSelectedDosageForm] = useState(null);\n  const [drugDosageFormForm] = Form.useForm();\n\n  const tableColumns = [\n    {\n      title: '#',\n      key: '#',\n      render: (text, record, index) => index + 1\n    },\n    {\n      title: 'Tên',\n      key: 'name',\n      dataIndex: 'name'\n    },\n    {\n      title: 'Hành động',\n      key: 'action',\n      render: (text, record, index) => (\n        <Space size={10}>\n          <Button icon={<EditOutlined />} onClick={() => handleEditClick(record)}></Button>\n          <Popconfirm\n            onConfirm={() => handleDelete(record)} title=\"Bạn có chắc muốn xóa không?\"\n            okText=\"Xóa\"\n            okType=\"danger\"\n            cancelText=\"Hủy bỏ\">\n            <Button icon={<DeleteOutlined />}></Button>\n          </Popconfirm>\n        </Space>\n      )\n    }\n  ]\n\n  function handleOpenModal() {\n    setAction(formActions.CREATE);\n    setModalVisible(true);\n  }\n\n  function handleCloseModal() {\n    setModalVisible(false);\n  }\n\n  async function getDrugDosageForms() {\n    try {\n      setFetchingDosageForms(true);\n      const response = await getDrugDosageFormAPI();\n      setDosageForms(response.data);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setFetchingDosageForms(false);\n    }\n  }\n\n  async function handleFormSubmit() {\n    try {\n      setModalLoading(true);\n      const values = await drugDosageFormForm.validateFields();\n      if (action === formActions.CREATE) {\n        await addDrugDosageFormAPI(values.name);\n      }\n\n      if (action === formActions.UPDATE) {\n        await updateDrugDosageFormAPI(selectedDosageForm.id, values.name);\n      }\n\n      getDrugDosageForms();\n\n      setModalVisible(false);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setModalLoading(false);\n    }\n  }\n\n  function handleEditClick(dosageForm) {\n    setAction(formActions.UPDATE);\n    setSelectedDosageForm(dosageForm);\n    setModalVisible(true);\n  }\n\n  async function handleDelete(unit) {\n    try {\n      await deleteDrugDosageFormAPI(unit.id);\n      getDrugDosageForms();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  function afterClose() {\n    drugDosageFormForm.resetFields();\n    setSelectedDosageForm(null);\n  }\n\n  useEffect(() => {\n    getDrugDosageForms();\n  }, []);\n\n  return (\n    <>\n      <Row justify=\"space-between\">\n        <Col><h1 className=\"text-xl\">Quản lý đường dùng thuốc</h1></Col>\n        <Col>\n          <Button type=\"primary\" icon={<PlusOutlined />} onClick={handleOpenModal}>Tạo mới</Button>\n        </Col>\n      </Row>\n      <Table\n        rowKey=\"id\"\n        columns={tableColumns}\n        dataSource={dosageForms}\n        pagination={false}\n        loading={fetchingDosageForms} />\n      <Modal\n        visible={modalVisible}\n        title={action === formActions.CREATE ? 'Thêm đường dùng thuốc' : 'Cập nhật đường dùng thuốc'}\n        onCancel={handleCloseModal}\n        confirmLoading={modalLoading}\n        destroyOnClose={true}\n        afterClose={afterClose}\n        onOk={handleFormSubmit}>\n        <DrugDosageFormForm onFinish={handleFormSubmit} form={drugDosageFormForm} defaultDosageForm={selectedDosageForm} />\n      </Modal>\n    </>\n  )\n}\n\nexport default DrugDosageFormPage;","import React from 'react';\nimport { Link, Redirect, Switch, Route, useRouteMatch, useLocation } from 'react-router-dom';\nimport { Layout, Menu } from 'antd';\nimport {\n  UserOutlined,\n  DashboardOutlined,\n  MedicineBoxOutlined,\n  BugOutlined,\n  DollarOutlined,\n  IdcardOutlined,\n  ClockCircleOutlined,\n  AppstoreOutlined,\n  CalendarOutlined,\n  ContainerOutlined,\n  SettingOutlined,\n  NotificationOutlined} from '@ant-design/icons';\nimport AdminDashboard from 'pages/admin/dashboard';\nimport DrugCategoryPage from 'pages/common/drug/drug-category';\nimport DrugUnitPage from 'pages/common/drug/drug-unit';\nimport DrugRoutePage from 'pages/common/drug/drug-route';\nimport DrugPage from 'pages/common/drug/drug';\nimport DrugInstructionPage from 'pages/common/drug/drug-instruction';\nimport DiseaseCategory from 'pages/common/disease/disease-category';\nimport DiseasePage from 'pages/common/disease/disease';\nimport NotificationPage from 'pages/common/notification/notification';\nimport VisitPage from 'pages/common/visit/visit';\nimport PatientPage from 'pages/common/patient/patient';\nimport AppointmentPage from 'pages/common/appointment/apointment';\nimport ServicePage from 'pages/common/service/service';\nimport WorkingHourPage from 'pages/admin/working-hour';\nimport RoomPage from 'pages/common/room/room';\nimport AdminAccountPage from 'pages/admin/account';\nimport AdminSettingPage from 'pages/admin/setting';\nimport withPrivateRoute from 'HOCs/withPrivateRoute';\nimport CustomHeader from 'components/Header';\nimport DrugDosageFormPage from 'pages/common/drug/drug-dosage-form';\n\nconst { Sider, Content } = Layout;\nconst { SubMenu } = Menu;\n\nconst AdminLayout = () => {\n  const match = useRouteMatch();\n  const location = useLocation();\n  const path = match.path;\n\n  return (\n    <Layout>\n      <CustomHeader />\n      <Layout>\n        <Sider width={200} className=\"site-layout-background\">\n          <Menu\n            mode=\"inline\"\n            style={{ height: '100%', borderRight: 0 }}\n            selectedKeys={[location.pathname]}\n          >\n            <Menu.Item key=\"/admin/dashboard\" icon={<DashboardOutlined />}>\n              <Link to=\"/admin/dashboard\">Bảng điều khiển</Link>\n            </Menu.Item>\n            <SubMenu key=\"drug\" icon={<MedicineBoxOutlined />} title=\"Quản lý thuốc\">\n              <Menu.Item key=\"/admin/drug/category\">\n                <Link to=\"/admin/drug/category\">Loại thuốc</Link>\n              </Menu.Item>\n              <Menu.Item key=\"/admin/drug/unit\">\n                <Link to=\"/admin/drug/unit\">Đơn vị tính</Link>\n              </Menu.Item>\n              <Menu.Item key=\"/admin/drug/route\">\n                <Link to=\"/admin/drug/route\">Đường dùng</Link>\n              </Menu.Item>\n              <Menu.Item key=\"/admin/drug/dosage-form\">\n                <Link to=\"/admin/drug/dosage-form\">Dạng bào chế</Link>\n              </Menu.Item>\n              <Menu.Item key=\"/admin/drug\">\n                <Link to=\"/admin/drug\">Thuốc</Link>\n              </Menu.Item>\n              <Menu.Item key=\"/admin/drug/instruction\">\n                <Link to=\"/admin/drug/instruction\">Hướng dẫn sử dụng</Link>\n              </Menu.Item>\n            </SubMenu>\n            <SubMenu key=\"disease\" icon={<BugOutlined />} title=\"Quản lý bệnh\">\n              <Menu.Item key=\"/admin/disease/category\">\n                <Link to=\"/admin/disease/category\">Nhóm bệnh</Link>\n              </Menu.Item>\n              <Menu.Item key=\"/admin/disease\">\n                <Link to=\"/admin/disease\">Bệnh</Link>\n              </Menu.Item>\n            </SubMenu>\n\n            {/* <Menu.Item key=\"/admin/notification\" icon={<NotificationOutlined />}>\n              <Link to=\"/admin/notification\">Thông báo</Link>\n            </Menu.Item> */}\n            {/* <Menu.Item key=\"/admin/visit\" icon={<ContainerOutlined />}>\n              <Link to=\"/admin/visit\">Khám bệnh</Link>\n            </Menu.Item> */}\n            <Menu.Item key=\"/admin/patient\" icon={<IdcardOutlined />}>\n              <Link to=\"/admin/patient\">Bệnh nhân</Link>\n            </Menu.Item>\n            <Menu.Item key=\"/admin/appointment\" icon={<CalendarOutlined />}>\n              <Link to=\"/admin/appointment\">Lịch hẹn</Link>\n            </Menu.Item>\n            <Menu.Item key=\"/admin/service\" icon={<DollarOutlined />}>\n              <Link to=\"/admin/service\">Dịch vụ</Link>\n            </Menu.Item>\n\n            <Menu.Item key=\"/admin/working-hour\" icon={<ClockCircleOutlined />}>\n              <Link to=\"/admin/working-hour\">Giờ làm việc</Link>\n            </Menu.Item>\n            <Menu.Item key=\"/admin/room\" icon={<AppstoreOutlined />}>\n              <Link to=\"/admin/room\">Phòng khám</Link>\n            </Menu.Item>\n\n            <Menu.Item key=\"/admin/account\" icon={<UserOutlined />}>\n              <Link to=\"/admin/account\">Tài khoản</Link>\n            </Menu.Item>\n            <Menu.Item key=\"/admin/setting\" icon={<SettingOutlined />}>\n              <Link to=\"/admin/setting\">Cài đặt</Link>\n            </Menu.Item>\n          </Menu>\n        </Sider>\n        <Layout style={{ padding: '0 24px 24px' }}>\n          <Content\n            className=\"site-layout-background\"\n            style={{\n              padding: 24,\n              margin: 0,\n              minHeight: 280,\n            }}\n          >\n            <Switch>\n              {/* Dashboard */}\n              <Route path={`${path}/dashboard`}>\n                <AdminDashboard />\n              </Route>\n\n              {/* Drug */}\n              <Route path={`${path}/drug/category`}>\n                <DrugCategoryPage />\n              </Route>\n              <Route path={`${path}/drug/unit`}>\n                <DrugUnitPage />\n              </Route>\n              <Route path={`${path}/drug/route`}>\n                <DrugRoutePage />\n              </Route>\n              <Route path={`${path}/drug/dosage-form`}>\n                <DrugDosageFormPage />\n              </Route>\n              <Route path={`${path}/drug`} exact>\n                <DrugPage />\n              </Route>\n              <Route path={`${path}/drug/instruction`}>\n                <DrugInstructionPage />\n              </Route>\n\n              {/* Disease */}\n              <Route path={`${path}/disease/category`}>\n                <DiseaseCategory />\n              </Route>\n              <Route path={`${path}/disease`}>\n                <DiseasePage />\n              </Route>\n\n              {/* Notification */}\n              <Route path={`${path}/notification`}>\n                <NotificationPage />\n              </Route>\n\n              {/* Visit */}\n              <Route path={`${path}/visit`}>\n                <VisitPage />\n              </Route>\n\n              {/* Patient */}\n              <Route path={`${path}/patient`}>\n                <PatientPage />\n              </Route>\n\n              {/* Appointment */}\n              <Route path={`${path}/appointment`}>\n                <AppointmentPage />\n              </Route>\n\n              {/* Service */}\n              <Route path={`${path}/service`}>\n                <ServicePage />\n              </Route>\n\n              {/* Service */}\n              <Route path={`${path}/working-hour`}>\n                <WorkingHourPage />\n              </Route>\n\n              {/* Room */}\n              <Route path={`${path}/room`}>\n                <RoomPage />\n              </Route>\n\n              {/* Room */}\n              <Route path={`${path}/account`}>\n                <AdminAccountPage />\n              </Route>\n\n              {/* Room */}\n              <Route path={`${path}/setting`}>\n                <AdminSettingPage />\n              </Route>\n\n              {/* Fallback */}\n              <Redirect to={`/admin/dashboard`} />\n            </Switch>\n          </Content>\n        </Layout>\n      </Layout>\n    </Layout>\n  )\n}\n\nexport default withPrivateRoute(AdminLayout, ['admin']);","export function getBase64(file) {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = () => resolve(reader.result);\n    reader.onerror = error => reject(error);\n  });\n}","import React, { useState } from 'react';\nimport { Upload, Modal } from 'antd';\nimport { PlusOutlined } from '@ant-design/icons';\nimport { API_URL } from 'constant/apiUrl';\nimport Cookie from 'js-cookie';\nimport { getBase64 } from 'utils/image';\n\n// APIs\n// import { removeImageAPI } from 'services/user/emr.service';\n\nconst VisitImagesForm = props => {\n\n  const { emrId } = props;\n\n  const [previewVisible, setPreviewVisible] = useState(false);\n  const [previewImage, setPreviewImage] = useState('');\n  const [previewTitle, setPreviewTitle] = useState('');\n  const [fileList, setFileList] = useState([...props.fileList]);\n  const token = Cookie.get('EMR_token');\n\n  const uploadButton = (\n    <div>\n      <PlusOutlined />\n      <div style={{ marginTop: 8 }}>Tải lên</div>\n    </div>\n  );\n\n  async function handleChange(uploadEvent) {\n    const { event, file, fileList } = uploadEvent;\n    setFileList(fileList);\n    props.onChange(uploadEvent);\n  }\n\n  async function handlePreview(file) {\n    if (!file.url && !file.preview) {\n      file.preview = await getBase64(file.originFileObj);\n    }\n\n    setPreviewImage(file.url || file.preview);\n    setPreviewVisible(true);\n    setPreviewTitle(file.name || file.url.substring(file.url.lastIndexOf('/') + 1),);\n  }\n\n  function handleCancel() {\n    setPreviewVisible(false);\n  }\n\n  return (\n    <>\n      <Upload\n        onChange={handleChange}\n        listType=\"picture-card\"\n        fileList={fileList}\n        action={`${API_URL}/user/emr/image/`}\n        name=\"image\"\n        headers={{ Authorization: `Bearer ${token}` }}\n        onPreview={handlePreview}>\n        {uploadButton}\n      </Upload>\n      <Modal\n        visible={previewVisible}\n        title={previewTitle}\n        footer={null}\n        onCancel={handleCancel}>\n        <img src={previewImage} alt=\"\" style={{ width: '100%' }} />\n      </Modal>\n    </>\n  )\n}\n\nexport default VisitImagesForm;","export const quillToolbar = [\n  ['bold', 'italic', 'underline', 'strike'],        // toggled buttons\n  ['blockquote', 'code-block'],\n\n  [{ 'header': 1 }, { 'header': 2 }],               // custom button values\n  [{ 'list': 'ordered'}, { 'list': 'bullet' }],\n  [{ 'script': 'sub'}, { 'script': 'super' }],      // superscript/subscript\n  [{ 'indent': '-1'}, { 'indent': '+1' }],          // outdent/indent\n  [{ 'direction': 'rtl' }],                         // text direction\n\n  [{ 'size': ['small', false, 'large', 'huge'] }],  // custom dropdown\n  [{ 'header': [1, 2, 3, 4, 5, 6, false] }],\n\n  [{ 'color': [] }, { 'background': [] }],          // dropdown with defaults from theme\n  [{ 'font': [] }],\n  [{ 'align': [] }],\n\n  ['clean']                                         // remove formatting button\n];","import axios from 'axios';\n\nimport { API_URL } from \"constant/apiUrl\";\n\nconst endpointPrefix = `${API_URL}/user/service`;\n\nexport function getServicesAPI(search = \"\") {\n  const url = `${endpointPrefix}/?search=${search}`;\n  return axios.get(url);\n}\n\nexport function getServiceDetailsAPI(id) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.get(url);\n}","import axios from 'axios';\n\nimport { API_URL } from \"constant/apiUrl\";\n\nconst endpointPrefix = `${API_URL}/user/drug-category`;\n\nexport function getDrugCategoryAPI(search = \"\") {\n  const url = `${endpointPrefix}/?search=${search}`;\n  return axios.get(url);\n}","import axios from 'axios';\n\nimport { API_URL } from \"constant/apiUrl\";\n\nconst endpointPrefix = `${API_URL}/user/drug-instruction`;\n\nexport function getDrugInstructionsAPI() {\n  const url = `${endpointPrefix}/`;\n  return axios.get(url);\n}","import axios from 'axios';\nimport { API_URL } from 'constant/apiUrl';\nimport { getQueryString } from 'utils/string';\n\nconst endpointPrefix = `${API_URL}/user/drug`;\n\nexport function getDrugsAPI(params) {\n  const url = `${endpointPrefix}/`;\n\n  if (params) {\n    return axios.get(`${url}?${getQueryString(params)}`);\n  }\n  return axios.get(url);\n}\n\nexport function getDrugDetailsAPI(id) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.get(url);\n}","import React, { useState } from 'react';\nimport { Form, Select, Row, Col, Button } from 'antd';\nimport { DeleteOutlined } from '@ant-design/icons';\n\nconst DiseaseSelect = ({ value = { category: null, disease: null }, onChange, ...props }) => {\n\n  const { label, diseaseCategories, diseases, clearable } = props;\n  const [selectedCat, setSelectedCat] = useState('');\n\n  function handleCatChange(id) {\n    setSelectedCat(id);\n    onChange({ ...value, category: id })\n  }\n\n  function handleChange(v) {\n    onChange({ ...value, disease: v });\n  }\n\n  return (\n    <Row align=\"middle\" gutter={15} className=\"flex-no-wrap\">\n      {\n        label &&\n        <Col flex=\"0 0 150px\">{label}</Col>\n      }\n      <Col flex=\"0 0 300px\" style={{ maxWidth: 300 }}>\n        <Select placeholder=\"Nhóm bệnh\" onChange={handleCatChange} value={value?.category}>\n          {\n            diseaseCategories.map(cat => {\n              return <Select.Option key={cat.id} value={cat.id}>{cat.name}</Select.Option>\n            })\n          }\n        </Select>\n      </Col>\n      <Col flex=\"1 1 auto\">\n        <Select placeholder=\"Bệnh\" onChange={handleChange} value={value?.disease}>\n          {\n            diseases?.filter(d => selectedCat === '' || d.disease_category === selectedCat).map(d => {\n              return <Select.Option key={d.id} value={d.name}>{d.name}</Select.Option>\n            })\n          }\n        </Select>\n      </Col>\n      {\n        clearable &&\n        <Col>\n          <Button icon={<DeleteOutlined />} onClick={() => onChange({ category: null, disease: null })}></Button>\n        </Col>\n      }\n    </Row>\n  )\n}\n\nexport default DiseaseSelect;","import React from 'react';\nimport { Form, Row, Col, Input, Radio, Select, Button, Collapse, DatePicker, Divider, Space } from 'antd';\nimport moment from 'moment';\nimport ReactQuill from 'react-quill';\nimport { quillToolbar } from 'constant/quill';\nimport VisitImagesForm from 'forms/Visit/VisitImagesForm';\nimport DiseaseSelect from 'components/DiseaseSelect/DiseaseSelect';\nimport { MinusCircleOutlined, PlusOutlined, SaveOutlined, FileDoneOutlined } from '@ant-design/icons';\n\nconst { Option } = Select;\n\nconst EMRForm = props => {\n\n  const {\n    emrForm,\n    emr,\n    diseaseCategories,\n    diseases,\n    drugCategories,\n    drugLoading,\n    drugInstructions,\n    services,\n    drugs,\n    finishLoading,\n  } = props;\n\n  function getDateString(dateStr) {\n    let result = \"\";\n    const momentObj = moment(dateStr);\n    result = `${momentObj.hour()} giờ ${momentObj.minute()} phút ngày ${momentObj.date()} tháng ${momentObj.month()} năm ${momentObj.year()}`;\n    return result;\n  }\n\n  return (\n    <Form layout=\"vertical\" form={emrForm} initialValues={\n      { drugs: emr.medical_record.examination.drugs },\n      { services: emr.medical_record.summary.services }\n    }>\n\n      <Row gutter={15}>\n        {/* <Col flex={1}>\n        <Form.Item label=\"Sở y tế\" name=\"health_service_dept\">\n          <Input />\n        </Form.Item>\n      </Col> */}\n        {/* <Col flex={1}>\n        <Form.Item label=\"Bệnh viện\" name=\"hospital\">\n          <Input />\n        </Form.Item>\n      </Col> */}\n        <Col flex={1}>\n          <Form.Item label=\"Khoa\" name=\"room\" initialValue={emr.room.name}>\n            <Input readOnly />\n          </Form.Item>\n        </Col>\n      </Row>\n\n      <Collapse defaultActiveKey={[\"administrative\", \"present-complaint\", \"ask\", \"examination\", \"summary\"]}>\n        <Collapse.Panel header={<strong className=\"uppercase\">i. Hành chính</strong>} key=\"administrative\">\n          <Row gutter={15}>\n            <Col flex=\"0 0 33.33%\">\n              <Form.Item label=\"1. Họ và tên\" name=\"fullname\" initialValue={(emr.patient.first_name + \" \" + emr.patient.last_name).toUpperCase()}>\n                <Input />\n              </Form.Item>\n            </Col>\n            <Col flex=\"0 0 33.33%\">\n              <Form.Item label=\"2. Sinh ngày\" name=\"dayOfBirth\" initialValue={moment(emr.patient.DOB)}>\n                <DatePicker format=\"DD/MM/YYYY\" style={{ width: '100%' }} />\n              </Form.Item>\n            </Col>\n            <Col flex=\"0 0 33.33%\">\n              <Form.Item label=\"3. Giới tính\" name=\"gender\" initialValue={emr.patient.gender}>\n                <Select>\n                  <Select.Option value=\"Nam\">Nam</Select.Option>\n                  <Select.Option value=\"Nữ\">Nữ</Select.Option>\n                </Select>\n              </Form.Item>\n            </Col>\n          </Row>\n          <Row gutter={15}>\n            <Col flex=\"0 0 33.33%\">\n              <Form.Item label=\"4. Nghề nghiệp\" name=\"job\">\n                <Input />\n              </Form.Item>\n            </Col>\n            <Col flex=\"0 0 33.33%\">\n              <Form.Item label=\"5. Dân tộc\" name=\"ethnicity\">\n                <Input />\n              </Form.Item>\n            </Col>\n            <Col flex=\"0 0 33.33%\">\n              <Form.Item label=\"6. Ngoại kiều\" name=\"expatriate\">\n                <Input />\n              </Form.Item>\n            </Col>\n          </Row>\n\n          <Form.Item label=\"7. Địa chỉ\" name=\"address\">\n            <Input />\n          </Form.Item>\n\n          <Row gutter={15}>\n            <Col flex=\"0 0 50%\">\n              <Form.Item label=\"8. Nơi làm việc\" name=\"workplace\">\n                <Input />\n              </Form.Item>\n            </Col>\n            <Col>\n              <Form.Item label=\"9. Đối tượng\" name=\"object\">\n                <Radio.Group>\n                  <Radio value=\"BHYT\">1. BHYT</Radio>\n                  <Radio value=\"Thu phí\">2. Thu phí</Radio>\n                  <Radio value=\"Miễn phí\">3. Miễn phí</Radio>\n                  <Radio value=\"Khác\">4. Khác</Radio>\n                </Radio.Group>\n              </Form.Item>\n            </Col>\n          </Row>\n\n          <Row gutter={15}>\n            <Col flex=\"0 0 50%\">\n              <Form.Item label=\"10. Giá trị BHYT\" name=\"insurance_expirity\">\n                <DatePicker style={{ width: '100%' }} format=\"DD/MM/YYYY\" />\n              </Form.Item>\n            </Col>\n            <Col flex=\"0 0 50%\">\n              <Form.Item label=\"Số thẻ BHYT\" name=\"insurance_number\">\n                <Input />\n              </Form.Item>\n            </Col>\n          </Row>\n\n          <Row gutter={15}>\n            <Col flex=\"0 0 50%\">\n              <Form.Item label=\"11. Họ tên, địa chỉ người nhà khi cần báo tin\" name=\"family_member_and_address\">\n                <Input.TextArea rows={2} />\n              </Form.Item>\n            </Col>\n            <Col flex=\"0 0 50%\">\n              <Form.Item label=\"Điện thoại\" initialValue={emr.patient.phone} name=\"phone\">\n                <Input />\n              </Form.Item>\n            </Col>\n          </Row>\n\n\n          <Form.Item label=\"12. Đến khám bệnh lúc\" initialValue={getDateString(emr.created_at)} name=\"checkin\">\n            <Input readOnly />\n          </Form.Item>\n\n          <Row gutter={15}>\n            <Col flex={1}>\n              <Form.Item label=\"13. Chẩn đoán của nơi giới thiệu\" name=\"previous_diagnose\" initialValue={emr.medical_record.administrative.previous_diagnose}>\n                <Input />\n              </Form.Item>\n            </Col>\n            <Col>\n              <Form.Item label=\"Nơi giới thiệu\" name=\"come_from\" initialValue={emr.medical_record.administrative.come_from}>\n                <Radio.Group>\n                  <Radio value=\"Y tế\">1. Y tế</Radio>\n                  <Radio value=\"Tự đến\">2. Tự đến</Radio>\n                </Radio.Group>\n              </Form.Item>\n            </Col>\n          </Row>\n\n        </Collapse.Panel>\n        <Collapse.Panel header={<strong className=\"uppercase\">II. Lý do vào viện</strong>} key=\"present-complaint\">\n          <Form.Item label=\"Lý do vào viện\" name=\"present_complaint\" initialValue={emr.medical_record.present_complaint}>\n            <Input />\n          </Form.Item>\n        </Collapse.Panel>\n        <Collapse.Panel header={<strong className=\"uppercase\">iii. hỏi bệnh</strong>} key=\"ask\">\n          <Form.Item label=\"1. Quá trình bệnh lý\" name=\"pathological_process\" initialValue={emr.medical_record.ask.pathological_process} getValueFromEvent={e => e.target.getContent()}>\n            {/* <Input.TextArea autoSize={{ minRows: 3, maxRows: 7 }} /> */}\n            <ReactQuill theme=\"snow\" modules={{ toolbar: quillToolbar }} />\n          </Form.Item>\n          <Form.Item label=\"2. Tiền sử bệnh\" name=\"self_medical_history\" className=\"mb-3\" initialValue={emr.medical_record.ask.self_medical_history}>\n            <Input placeholder=\"Bản thân\" />\n          </Form.Item>\n          <Form.Item name=\"family_medical_history\" initialValue={emr.medical_record.ask.family_medical_history}>\n            <Input placeholder=\"Gia đình\" />\n          </Form.Item>\n        </Collapse.Panel>\n        <Collapse.Panel header={<strong className=\"uppercase\">iv. khám bệnh</strong>} key=\"examination\">\n          <Row gutter={15} className=\"flex-no-wrap\">\n            <Col flex={1}>\n              <Form.Item label=\"1. Toàn thân\" name=\"body\" initialValue={emr.medical_record.examination.body}>\n                <ReactQuill theme=\"snow\" modules={{ toolbar: quillToolbar }} />\n              </Form.Item>\n            </Col>\n            <Col flex=\"0 0 auto\">\n              <Form.Item label=\"Dấu hiệu sinh tồn\">\n                {/* <div className=\"border border-solid border-gray-400 p-2\"> */}\n                <Form.Item className=\"mb-2\" name=\"heartbeat\" initialValue={emr.medical_record.examination.heartbeat}>\n                  <Input addonBefore={<div style={{ width: 80 }}>Mạch</div>} suffix=\"lần/ph\" />\n                </Form.Item>\n                <Form.Item className=\"mb-2\" name=\"temperature\" initialValue={emr.medical_record.examination.temperature}>\n                  <Input addonBefore={<div style={{ width: 80 }}>Nhiệt độ</div>} suffix=\"°C\" />\n                </Form.Item>\n                <Form.Item className=\"mb-2\" name=\"blood_pressure\" initialValue={emr.medical_record.examination.blood_pressure}>\n                  <Input addonBefore={<div style={{ width: 80 }}>Huyết áp</div>} suffix=\"mmHg\" />\n                </Form.Item>\n                <Form.Item className=\"mb-2\" name=\"breathing\" initialValue={emr.medical_record.examination.breathing}>\n                  <Input addonBefore={<div style={{ width: 80 }}>Nhịp thở</div>} suffix=\"lần/ph\" />\n                </Form.Item>\n                <Form.Item className=\"mb-0\" name=\"weight\" initialValue={emr.medical_record.examination.weight}>\n                  <Input addonBefore={<div style={{ width: 80 }}>Câng nặng</div>} suffix=\"kg\" />\n                </Form.Item>\n                {/* </div> */}\n              </Form.Item>\n            </Col>\n          </Row>\n\n          <Form.Item label=\"2. Các bộ phận\" name=\"partials\" initialValue={emr.medical_record.examination.partials}>\n            <ReactQuill theme=\"snow\" modules={{ toolbar: quillToolbar }} />\n          </Form.Item>\n\n          <Form.Item label=\"3. Tóm tắt kết quả cận lâm sàng\" name=\"subclinical_summary\" initialValue={emr.medical_record.examination.subclinical_summary}>\n            <ReactQuill theme=\"snow\" modules={{ toolbar: quillToolbar }} />\n          </Form.Item>\n\n          <Form.Item label=\"4. Chẩn đoán ban đầu\" name=\"initial_diagnose\" initialValue={emr.medical_record.examination.initial_diagnose}>\n            <DiseaseSelect diseaseCategories={diseaseCategories} diseases={diseases} />\n          </Form.Item>\n\n          <div className=\"mb-3\">5. Đã xử lý (thuốc, chăm sóc)</div>\n\n          <Form.List name=\"drugs\">\n            {(fields, { add, remove }) => (\n              <>\n                {\n                  fields.map((field, index) => (\n                    <Row gutter={15} key={field.key} align=\"middle\">\n                      <Col>{index + 1}</Col>\n                      <Col flex=\"0 0 220px\">\n                        <Form.Item\n                          {...field}\n                          label=\"Nhóm thuốc\"\n                          name={[field.name, 'drugCategory']}\n                          fieldKey={[field.fieldKey, 'drugCategory']}\n                          rules={[{ required: true, message: \"Trường này là bắt buộc\" }]}>\n                          <Select onChange={props.handleChangeDrugCategory}>\n                            {\n                              drugCategories.map(cat => (\n                                <Option key={cat.id} value={cat.id}>{cat.name}</Option>\n                              ))\n                            }\n                          </Select>\n                        </Form.Item>\n                      </Col>\n                      <Col flex=\"1 0 220px\">\n                        <Form.Item\n                          {...field}\n                          label=\"Thuốc\"\n                          name={[field.name, 'drug']}\n                          fieldKey={[field.fieldKey, 'drug']}\n                          rules={[{ required: true, message: \"Trường này là bắt buộc\" }]}>\n                          <Select loading={drugLoading}>\n                            {\n                              drugs.map(drug => (\n                                <Option key={drug.id} value={`${drug.name} ${drug.strength}`}>{drug.name} {drug.strength}</Option>\n                              ))\n                            }\n                          </Select>\n                        </Form.Item>\n                      </Col>\n                      <Col flex=\"0 0 120px\">\n                        <Form.Item\n                          {...field}\n                          name={[field.name, 'drugInstruction']}\n                          fieldKey={[field.fieldKey, 'drugInstruction']}\n                          rules={[{ required: true, message: \"Trường này là bắt buộc\" }]}\n                          label=\"Cách dùng\"\n                          style={{ minWidth: 200 }}>\n                          <Select>\n                            {\n                              drugInstructions.map(ins => (\n                                <Option key={ins.id} value={ins.instruction}>{ins.instruction}</Option>\n                              ))\n                            }\n                          </Select>\n                        </Form.Item>\n                      </Col>\n                      {/* </Row> */}\n                      {/* <Row gutter={15}> */}\n                      {/* <Col flex=\"0 0 80px\">\n                    <Form.Item\n                      {...field}\n                      name={[field.name, 'numberOfDays']}\n                      fieldKey={[field.fieldKey, 'numberOfDays']}\n                      rules={[{ required: true, message: \"Trường này là bắt buộc\" }]}\n                      label=\"Số ngày\">\n                      <Input type=\"number\" />\n                    </Form.Item>\n                  </Col>\n                  <Col flex=\"0 0 80px\">\n                    <Form.Item label=\"Sáng\" name={[field.name, 'morning']}>\n                      <Input type=\"number\" />\n                    </Form.Item>\n                  </Col>\n                  <Col flex=\"0 0 80px\">\n                    <Form.Item label=\"Trưa\" name={[field.name, 'afternoon']}>\n                      <Input type=\"number\" />\n                    </Form.Item>\n                  </Col>\n                  <Col flex=\"0 0 80px\">\n                    <Form.Item label=\"Chiều\" name={[field.name, 'evening']}>\n                      <Input type=\"number\" />\n                    </Form.Item>\n                  </Col>\n                  <Col flex=\"0 0 80px\">\n                    <Form.Item label=\"Tối\" name={[field.name, 'night']}>\n                      <Input type=\"number\" />\n                    </Form.Item>\n                  </Col> */}\n                      <Col flex=\"0 0 80px\">\n                        <Form.Item\n                          {...field}\n                          label=\"Số lượng\"\n                          name={[field.name, 'total']}\n                          fieldKey={[field.fieldKey, 'total']}>\n                          <Input type=\"number\" />\n                        </Form.Item>\n                      </Col>\n                      <Col>\n                        <MinusCircleOutlined onClick={() => remove(field.name)} />\n                      </Col>\n                    </Row>\n                  ))\n\n                }\n                <Form.Item>\n                  <Button type=\"dashed\" block onClick={() => add()} icon={<PlusOutlined />}>Thêm thuốc</Button>\n                </Form.Item>\n              </>\n            )}\n          </Form.List>\n\n          <Form.Item name=\"processed\" initialValue={emr.medical_record.examination.processed}>\n            <ReactQuill theme=\"snow\" modules={{ toolbar: quillToolbar }} />\n          </Form.Item>\n\n          <Form.Item label=\"6. Chẩn đoán khi ra viện\" name=\"diagnose\" initialValue={emr.medical_record.examination.diagnose}>\n            <DiseaseSelect diseaseCategories={diseaseCategories} diseases={diseases} />\n          </Form.Item>\n\n          <Row gutter={15}>\n            <Col>\n              <Form.Item label=\"7. Điều trị ngoại trú từ ngày\" initialValue={moment(emr.created_at)} name=\"from_date\">\n                <DatePicker format=\"DD/MM/YYYY\" />\n              </Form.Item>\n            </Col>\n            <Col>\n              <Form.Item label=\"Đến ngày\" name=\"to_date\" initialValue={moment(emr.medical_record.examination.to_date || new Date(), \"DD/MM/YYYY\")}>\n                <DatePicker format=\"DD/MM/YYYY\" />\n              </Form.Item>\n            </Col>\n          </Row>\n        </Collapse.Panel>\n        <Collapse.Panel header={<strong className=\"uppercase\">tổng kết bệnh án</strong>} key=\"summary\">\n          <Form.Item label=\"1. Quá trình bệnh lý và diễn biến lâm sàng\" name=\"pathological_process_and_clinical_course\" initialValue={emr.medical_record.summary.pathological_process_and_clinical_course}>\n            <ReactQuill theme=\"snow\" modules={{ toolbar: quillToolbar }} />\n          </Form.Item>\n\n          <Form.Item label=\"2. Tóm tắt kết quả xét nghiệm cận lâm sàng có giá trị chẩn đoán\" name=\"valuable_subclinical_summary\" initialValue={emr.medical_record.summary.valuable_subclinical_summary}>\n            <ReactQuill theme=\"snow\" modules={{ toolbar: quillToolbar }} />\n          </Form.Item>\n\n          <Form.Item label=\"3. Chẩn đoán khi ra viện\" className=\"mb-3\">\n            <Form.Item name=\"primary_disease\" initialValue={emr.medical_record.summary.primary_disease}>\n              <DiseaseSelect label=\"Bệnh chính\" diseaseCategories={diseaseCategories} diseases={diseases} />\n            </Form.Item>\n            <Form.Item name=\"sub_disease\" initialValue={emr.medical_record.summary.sub_disease}>\n              <DiseaseSelect label=\"Bệnh phụ (nếu có)\" diseaseCategories={diseaseCategories} diseases={diseases} clearable />\n            </Form.Item>\n          </Form.Item>\n\n\n\n          <Form.Item label=\"4. Phương pháp điều trị\" name=\"treatment_method\" initialValue={emr.medical_record.summary.treatment_method}>\n            <ReactQuill theme=\"snow\" modules={{ toolbar: quillToolbar }} />\n          </Form.Item>\n\n          <Form.Item label=\"5. Tình trạng người bệnh ra viện\" name=\"patient_status\" initialValue={emr.medical_record.summary.patient_status}>\n            <ReactQuill theme=\"snow\" modules={{ toolbar: quillToolbar }} />\n          </Form.Item>\n\n          <Form.Item label=\"6. Hướng điều trị và các chế độ tiếp theo\" name=\"direction_of_treatment\" initialValue={emr.medical_record.summary.direction_of_treatment}>\n            <ReactQuill theme=\"snow\" modules={{ toolbar: quillToolbar }} />\n          </Form.Item>\n\n\n\n          <Row gutter={15} className=\"mb-5\">\n            <Col flex=\"0 0 50%\">\n              <div className=\"mb-3\">Chỉ định dịch vụ</div>\n              <Form.List name=\"services\">\n                {\n                  (fields, { add, remove }) => (\n                    <>\n                      {\n                        fields.map((field, index) => (\n                          <Row gutter={15} key={field.key} align=\"middle\" className=\"mb-5\">\n                            <Col>{index + 1}</Col>\n                            <Col flex={1}>\n                              <Form.Item {...field} name={[field.name, 'name']} fieldKey={[field.fieldKey, 'name']} style={{ margin: 0 }} rules={[{ required: true, message: \"Trường này là bắt buộc\" }]}>\n                                <Select placeholder=\"Chọn dịch vụ\">\n                                  {\n                                    services.map((service, index) => (\n                                      <Option value={service.name} key={service.id}>\n                                        {service.name}\n                                      </Option>\n                                    ))\n                                  }\n                                </Select>\n                              </Form.Item>\n                            </Col>\n                            <Col>\n                              <MinusCircleOutlined onClick={() => remove(field.name)} />\n                            </Col>\n                          </Row>\n                        ))\n                      }\n                      <Form.Item>\n                        <Button type=\"dashed\" block onClick={() => add()} icon={<PlusOutlined />}>Thêm dịch vụ</Button>\n                      </Form.Item>\n                    </>\n                  )\n                }\n              </Form.List>\n            </Col>\n            <Col flex=\"0 0 50%\">\n              <div className=\"mb-3\">Tệp đính kèm</div>\n              <VisitImagesForm onChange={(e) => props.handleUploadChange(e, emr.id)} fileList={emr.medical_record.summary.attachments || []} />\n            </Col>\n          </Row>\n        </Collapse.Panel>\n      </Collapse>\n\n      <Divider />\n\n\n      <div className=\"text-right\">\n        <Space>\n          {/* <Button danger type=\"default\" size=\"large\" icon={<DeleteOutlined />}>Hủy đơn</Button> */}\n          <Button type=\"default\" size=\"large\" onClick={props.handleSaveEmr} icon={<SaveOutlined />}>Lưu lại</Button>\n          <Button type=\"primary\" size=\"large\" onClick={() => props.handleFinishExamination(emr.id)} loading={finishLoading} icon={<FileDoneOutlined />}>Kết thúc khám</Button>\n        </Space>\n      </div>\n    </Form>\n  )\n}\n\nexport default EMRForm;","import React, { useState, useEffect } from 'react';\nimport {\n  Collapse,\n  PageHeader,\n  message,\n  Divider,\n  Button,\n  Row,\n  Col,\n  Space,\n  Spin,\n  Form,\n  Input,\n  DatePicker,\n  Select,\n  Radio,\n  Tabs,\n  Alert,\n  BackTop\n} from 'antd';\nimport moment from 'moment';\nimport { connect } from 'react-redux';\nimport { useHistory, useParams } from 'react-router-dom';\nimport VisitImagesForm from 'forms/Visit/VisitImagesForm';\nimport { FileDoneOutlined, SaveOutlined, MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\nimport ReactQuill from 'react-quill';\nimport { quillToolbar } from 'constant/quill';\n\n// APIs\nimport { getServicesAPI } from 'services/user/medical-service.service';\nimport { getDrugCategoryAPI } from 'services/user/drug-category.service';\nimport { getDrugInstructionsAPI } from 'services/user/drug-instruction.service';\nimport { getServicesAPI as adminGetServicesAPI } from 'services/admin/medical-service.service';\nimport { getDrugCategoryAPI as adminGetDrugCategoryAPI } from 'services/admin/drug-category.service';\nimport { getDrugInstructionsAPI as adminGetDrugInstructionsAPI } from 'services/admin/drug-instruction.service';\nimport { getEMRHistoryAPI, updateEMRAPI, completeEMRAPI } from 'services/user/emr.service';\nimport { deleteVisitAPI } from 'services/user/visit.service';\nimport { getDrugsAPI as adminGetDrugsAPI } from 'services/admin/drug.service';\nimport { getDrugsAPI } from 'services/user/drug.service';\nimport { fetchDiseaseCategory } from 'store/actions/disease-category.action';\nimport { fetchDisease } from 'store/actions/disease.action';\nimport DiseaseSelect from 'components/DiseaseSelect/DiseaseSelect';\nimport EMRForm from 'forms/EMRForm/EMRForm';\n\nconst { Option } = Select;\nconst { useForm } = Form;\n\nconst ExaminationPage = props => {\n\n  const {\n    user,\n    diseaseCategories,\n    diseases,\n    fetchDiseaseCategory,\n    fetchDisease,\n  } = props;\n\n  const history = useHistory();\n  const params = useParams();\n\n  const [services, setServices] = useState([]);\n  const [drugCategories, setDrugCategories] = useState([]);\n  const [drugs, setDrugs] = useState([]);\n  const [drugInstructions, setDrugInstructions] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [emr, setEmr] = useState(null);\n\n  const [drugLoading, setDrugLoading] = useState(false);\n  const [finishLoading, setFinishLoading] = useState(false);\n  const [isSavingEmr, setIsSavingEmr] = useState(false);\n\n  const [emrForm] = useForm();\n\n  async function getServices() {\n    try {\n      let servicesResponse;\n      if (user.role.name === \"admin\") {\n        servicesResponse = await adminGetServicesAPI();\n      } else {\n        servicesResponse = await getServicesAPI()\n      }\n      const servicesData = servicesResponse.data;\n      setServices(servicesData);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async function getDrugCategories() {\n    try {\n      let drugCategoryResponse;\n      if (user.role.name === \"admin\") {\n        drugCategoryResponse = await adminGetDrugCategoryAPI();\n      } else {\n        drugCategoryResponse = await getDrugCategoryAPI()\n      }\n      const drugCategoriesData = drugCategoryResponse.data;\n      setDrugCategories(drugCategoriesData);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async function getDrugs(drugCategory) {\n    try {\n      setDrugLoading(true);\n      let drugResponse;\n      if (user.role.name === \"admin\") {\n        drugResponse = await adminGetDrugsAPI({ drug_category: drugCategory });\n      } else {\n        drugResponse = await getDrugsAPI({ drug_category: drugCategory })\n      }\n      const drugData = drugResponse.data;\n      setDrugs(drugData);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setDrugLoading(false);\n    }\n  }\n\n  async function getDrugInstructions() {\n    try {\n      let drugInsResponse;\n      if (user.role.name === \"admin\") {\n        drugInsResponse = await adminGetDrugInstructionsAPI();\n      } else {\n        drugInsResponse = await getDrugInstructionsAPI()\n      }\n      const drugInsData = drugInsResponse.data;\n      setDrugInstructions(drugInsData);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async function getEmrDetail(emrId) {\n    try {\n      setLoading(true);\n      const emrList = await getEMRHistoryAPI(emrId);\n      const data = emrList.data.data;\n      if (data[0]) {\n        setEmr(data[0]);\n      }\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  async function getInitialData() {\n    const emr = params.emr;\n    await Promise.all([\n      getEmrDetail(emr),\n      getServices(),\n      getDrugCategories(),\n      getDrugInstructions(),\n      fetchDisease(),\n      fetchDiseaseCategory()\n    ]);\n  }\n\n  useEffect(() => {\n    if (user) {\n      getInitialData();\n    }\n  }, [user]);\n\n  async function handleChangeDrugCategory(category) {\n    await getDrugs(category);\n  }\n\n  async function handleFinishExamination(visitId) {\n    try {\n      setFinishLoading(true);\n      const completeResponse = await completeEMRAPI(visitId);\n      const deleteResponse = await deleteVisitAPI(visitId);\n      history.goBack();\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setFinishLoading(false);\n    }\n  }\n\n  async function handleSaveEmr() {\n\n    const values = await emrForm.validateFields();\n\n    // return console.log(values);\n\n    const emrBody = {\n      patient: emr.patient,\n      physician: user,\n      room: emr.room,\n      medical_record: {\n        administrative: {\n          fullname: values.fullname || null,\n          dayOfBirth: values.dayOfBirth?.format('DD/MM/YYYY') || null,\n          gender: values.gender || null,\n          job: values.job || null,\n          ethnicity: values.ethnicity || null,\n          expatriate: values.expatriate || null,\n          address: values.address || null,\n          workplace: values.workplace || null,\n          object: values.object || null,\n          insurance_expirity: values.insurance_expirity?.format('DD/MM/YYYY') || null,\n          insurance_number: values.insurance_number || null,\n          family_member_and_address: values.family_member_and_address || null,\n          phone: values.phone || null,\n          checkin_at: values.checkin || null,\n          previous_diagnose: values.previous_diagnose || null,\n          come_from: values.come_from || null\n        },\n        present_complaint: values.present_complaint || null,\n        ask: {\n          pathological_process: values.pathological_process || null,\n          self_medical_history: values.self_medical_history || null,\n          family_medical_history: values.family_medical_history || null\n        },\n        examination: {\n          heartbeat: values.heartbeat || null,\n          temperature: values.temperature || null,\n          blood_pressure: values.blood_pressure || null,\n          breathing: values.breathing || null,\n          weight: values.weight || null,\n          body: values.body || null,\n          partials: values.partials || null,\n          subclinical_summary: values.subclinical_summary || null,\n          initial_diagnose: {\n            category: values.initial_diagnose?.category || null,\n            disease: values.initial_diagnose?.disease || null,\n          },\n          drugs: values.drugs || null,\n          processed: values.processed || null,\n          diagnose: {\n            category: values.diagnose?.category || null,\n            disease: values.diagnose?.disease || null\n          },\n          from_date: values.from_date?.format('DD/MM/YYYY') || null,\n          to_date: values.to_date?.format('DD/MM/YYYY') || null,\n        },\n        summary: {\n          pathological_process_and_clinical_course: values.pathological_process_and_clinical_course || null,\n          valuable_subclinical_summary: values.valuable_subclinical_summary || null,\n          primary_disease: {\n            category: values.primary_disease?.category || null,\n            disease: values.primary_disease?.disease || null\n          },\n          sub_disease: {\n            category: values.sub_disease?.category || null,\n            disease: values.sub_disease?.disease || null\n          },\n          treatment_method: values.treatment_method || null,\n          patient_status: values.patient_status || null,\n          direction_of_treatment: values.direction_of_treatment || null,\n          services: values.services || null,\n          attachments: emr.medical_record.summary.attachments || null\n        }\n      }\n    }\n    try {\n      setIsSavingEmr(true);\n      await updateEMRAPI(emr.id, emrBody);\n      message.success(\"Lưu bệnh án thành công\");\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setIsSavingEmr(false);\n    }\n\n\n  }\n\n  async function handleUploadChange({ event, file, fileList }, emrId) {\n    console.log(\"change\");\n\n    if (file && file.status === \"done\") {\n\n      try {\n\n        // Upload image\n        const response = file.response;\n        const fileListElement = { uid: response.url, id: response.url, url: response.url };\n        const cloneEmr = { ...emr };\n        cloneEmr.medical_record.summary.attachments = [...cloneEmr.medical_record.summary.attachments, ...[fileListElement]];\n        const updateRes = await updateEMRAPI(emrId, cloneEmr);\n        setEmr(cloneEmr);\n        message.success({ content: \"Lưu thành công\" });\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    if (file && file.status === \"removed\") {\n      try {\n        const cloneEmr = { ...emr };\n        cloneEmr.medical_record.summary.attachments = fileList;\n        const updateRes = await updateEMRAPI(emrId, cloneEmr);\n        setEmr(cloneEmr);\n        message.success({ content: \"Lưu thành công\" });\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  }\n\n  // useEffect(() => {\n  //   console.log(emr);\n  // }, [emr]);\n\n  \n\n  function getTodayString() {\n    const now = new Date();\n    return `Ngày ${now.getDate()} tháng ${now.getMonth() + 1}, năm ${now.getFullYear()}`\n  }\n\n  return (\n    <>\n      <PageHeader title=\"Bệnh án ngoại trú\" onBack={() => history.goBack()} />\n      {\n        emr ?\n          emr.completed_at === null ?\n            <>\n              <Spin spinning={isSavingEmr}>\n                <EMRForm\n                  emrForm={emrForm}\n                  emr={emr}\n                  diseases={diseases}\n                  diseaseCategories={diseaseCategories}\n                  handleChangeDrugCategory={handleChangeDrugCategory}\n                  drugCategories={drugCategories}\n                  drugLoading={drugLoading}\n                  drugInstructions={drugInstructions}\n                  services={services}\n                  drugs={drugs}\n                  handleUploadChange={handleUploadChange}\n                  handleSaveEmr={handleSaveEmr}\n                  handleFinishExamination={handleFinishExamination}\n                  finishLoading={finishLoading} />\n              </Spin>\n            </>\n            :\n            <Alert message=\"Lỗi\" description={`Bệnh án này đã đóng vào ${moment(emr.created_at).format(\"DD/MM/YYYY HH:mm:ss\")}`} type=\"error\" showIcon />\n          :\n          loading ?\n            <div className=\"py-10 text-center\"><Spin spinning={loading} /></div>\n            :\n            <Alert message=\"Lỗi\" description=\"Không tìm thấy bệnh án\" type=\"error\" showIcon />\n      }\n    </>\n  )\n}\n\nconst mapStateToProps = state => ({\n  user: state.userState.user,\n  diseaseCategories: state.diseaseCategoryState.diseaseCategories,\n  fetchDiseaseCategoryLoading: state.diseaseCategoryState.fetchLoading,\n  diseases: state.diseaseState.diseases,\n  fetchDiseaseLoading: state.diseaseState.fetchLoading\n})\n\nconst mapDispatchToProps = dispatch => ({\n  fetchDiseaseCategory: (role, query) => dispatch(fetchDiseaseCategory(role, query)),\n  fetchDisease: (role, query) => dispatch(fetchDisease(role, query))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ExaminationPage);","import * as actionTypes from '../actionTypes';\nimport axios from 'axios';\nimport {\n  ADMIN_DISEASE_CATEGORY_URL,\n  USER_DISEASE_CATEGORY_URL,\n} from 'constant/apiUrl';\nimport { getQueryString } from 'utils/string';\n\nfunction createDiseaseCategoryPending() {\n  return {\n    \n  }\n}\n\nfunction createDiseaseCategorySuccess() {\n  return {\n    \n  }\n}\n\nfunction createDiseaseCategoryFailure() {\n  return {\n    \n  }\n}\n\nfunction fetchDiseaseCategoryPending() {\n  return {\n    type: actionTypes.FETCH_DISEASE_CATEGORIES_PENDING\n  }\n}\n\nfunction fetchDiseaseCategorySuccess(data) {\n  return {\n    type: actionTypes.FETCH_DISEASE_CATEGORIES_SUCCESS,\n    payload: data\n  }\n}\n\nfunction fetchDiseaseCategoryFailure() {\n  return {\n    type: actionTypes.FETCH_DISEASE_CATEGORIES_FAILURE\n  }\n}\n\nfunction fetchDiseaseCategoryDetailsPending() {\n  return {\n    \n  }\n}\n\nfunction fetchDiseaseCategoryDetailsSuccess(data) {\n  return {\n    \n  }\n}\n\nfunction fetchDiseaseCategoryDetailsFailure() {\n  return {\n    \n  }\n}\n\nfunction updateDiseaseCategoryPending() {\n  return {\n    \n  }\n}\nfunction updateDiseaseCategorySuccess() {\n  return {\n    \n  }\n}\nfunction updateDiseaseCategoryFailure() {\n  return {\n    \n  }\n}\nfunction deleteDiseaseCategoryPending() {\n  return {\n    \n  }\n}\n\nfunction deleteDiseaseCategorySuccess() {\n  return {\n    \n }\n}\n\nfunction deleteDiseaseCategoryFailure() {\n  return {\n   \n  }\n}\n\n\n\nexport function createDiseaseCategory() {\n  \n  return async dispatch => {\n    try {\n      dispatch()\n\n      return dispatch()\n    } catch (error) {\n      return dispatch()\n    }\n  }\n}\nexport function fetchDiseaseCategory(role, query) {\n  let endpoint = \"\";\n  if (role === \"admin\") {\n    endpoint = ADMIN_DISEASE_CATEGORY_URL + \"/\";\n  } else {\n    endpoint = USER_DISEASE_CATEGORY_URL + \"/\";\n  }\n\n  if (query) {\n    endpoint += getQueryString(query);\n  }\n\n  return async dispatch => {\n    try {\n      dispatch(fetchDiseaseCategoryPending());\n      const response = await axios.get(endpoint);\n      return dispatch(fetchDiseaseCategorySuccess(response.data));\n    } catch (error) {\n      return dispatch(fetchDiseaseCategoryFailure());\n    }\n  }\n}\nexport function fetchDiseaseCategoryDetails() {\n  \n  return async dispatch => {\n    try {\n      return dispatch()\n\n      dispatch()\n    } catch (error) {\n      return dispatch()\n    }\n  }\n}\nexport function updateDiseaseCategory() {\n  \n  return async dispatch => {\n    try {\n      dispatch()\n\n      return dispatch()\n    } catch (error) {\n      return dispatch()\n    }\n  }\n}\nexport function deleteDiseaseCategory() {\n  \n  return async dispatch => {\n    try {\n      dispatch()\n\n      return dispatch()\n    } catch (error) {\n      return dispatch()\n    }\n  }\n}","import * as actionTypes from '../actionTypes';\nimport axios from 'axios';\nimport {\n  ADMIN_DISEASE_URL,\n  USER_DISEASE_URL,\n} from 'constant/apiUrl';\nimport { getQueryString } from 'utils/string';\n\nfunction createDiseasePending() {\n  return {\n    \n  }\n}\n\nfunction createDiseaseSuccess() {\n  return {\n    \n  }\n}\n\nfunction createDiseaseFailure() {\n  return {\n    \n  }\n}\n\nfunction fetchDiseasePending() {\n  return {\n    type: actionTypes.FETCH_DISEASES_PENDING\n  }\n}\n\nfunction fetchDiseaseSuccess(data) {\n  return {\n    type: actionTypes.FETCH_DISEASES_SUCCESS,\n    payload: data\n  }\n}\n\nfunction fetchDiseaseFailure() {\n  return {\n    type: actionTypes.FETCH_DISEASES_FAILURE\n  }\n}\n\nfunction fetchDiseaseDetailsPending() {\n  return {\n    \n  }\n}\n\nfunction fetchDiseaseDetailsSuccess(data) {\n  return {\n    \n  }\n}\n\nfunction fetchDiseaseDetailsFailure() {\n  return {\n    \n  }\n}\n\nfunction updateDiseasePending() {\n  return {\n    \n  }\n}\nfunction updateDiseaseSuccess() {\n  return {\n    \n  }\n}\nfunction updateDiseaseFailure() {\n  return {\n    \n  }\n}\nfunction deleteDiseasePending() {\n  return {\n    \n  }\n}\n\nfunction deleteDiseaseSuccess() {\n  return {\n    \n }\n}\n\nfunction deleteDiseaseFailure() {\n  return {\n   \n  }\n}\n\n\n\nexport function createDisease() {\n  \n  return async dispatch => {\n    try {\n      dispatch()\n\n      return dispatch()\n    } catch (error) {\n      return dispatch()\n    }\n  }\n}\nexport function fetchDisease(role, query) {\n  let endpoint = \"\";\n  if (role === \"admin\") {\n    endpoint = ADMIN_DISEASE_URL + \"/\";\n  } else {\n    endpoint = USER_DISEASE_URL + \"/\";\n  }\n\n  if (query) {\n    endpoint += getQueryString(query);\n  }\n\n  return async dispatch => {\n    try {\n      dispatch(fetchDiseasePending());\n      const response = await axios.get(endpoint);\n      return dispatch(fetchDiseaseSuccess(response.data));\n    } catch (error) {\n      return dispatch(fetchDiseaseFailure());\n    }\n  }\n}\nexport function fetchDiseaseDetails() {\n  \n  return async dispatch => {\n    try {\n      return dispatch()\n\n      dispatch()\n    } catch (error) {\n      return dispatch()\n    }\n  }\n}\nexport function updateDisease() {\n  \n  return async dispatch => {\n    try {\n      dispatch()\n\n      return dispatch()\n    } catch (error) {\n      return dispatch()\n    }\n  }\n}\nexport function deleteDisease() {\n  \n  return async dispatch => {\n    try {\n      dispatch()\n\n      return dispatch()\n    } catch (error) {\n      return dispatch()\n    }\n  }\n}","import { Avatar, Row, Col, Spin, Upload, Form, Input, Select, DatePicker, Button, message } from 'antd';\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { LoadingOutlined, PlusOutlined } from '@ant-design/icons';\nimport { getBase64 } from 'utils/image';\nimport { API_URL } from 'constant/apiUrl';\nimport Cookie from 'js-cookie';\nimport moment from 'moment';\n\n\n// APIs\nimport { updateProfile } from 'services/user/user.service';\nimport { changePasswordAPI } from 'services/auth/auth.service';\n\nconst { Item, useForm } = Form;\n\nconst ProfilePage = props => {\n  const { user } = props;\n  const token = Cookie.get('EMR_token');\n\n  const [loading, setLoading] = useState(false);\n  const [updateLoading, setUpdateLoading] = useState(false);\n  const [changePasswordLoading, setChangePasswordLoading] = useState(false);\n  const [imageUrl, setImageUrl] = useState(user?.avatar);\n\n  const [changePasswordForm] = useForm();\n\n  useEffect(() => {\n    if (user && user.avatar) {\n      setImageUrl(user.avatar);\n    }\n  }, [user]);\n\n  const uploadButton = (\n    <div>\n      {loading ? <LoadingOutlined /> : <PlusOutlined />}\n      <div style={{ marginTop: 8 }}>Upload</div>\n    </div>\n  )\n\n  function handleChange(info) {\n    if (info.file.status === 'uploading') {\n      setLoading(true);\n      return;\n    }\n    if (info.file.status === 'done') {\n      setImageUrl(info.file.response.avatar);\n      setLoading(false);\n    }\n  };\n\n  async function handleSaveProfile(values) {\n    if (moment.isMoment(values.DOB)) {\n      values.DOB = values.DOB.format('YYYY-MM-DD');\n    }\n\n    try {\n      setUpdateLoading(true);\n      await updateProfile(values);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setUpdateLoading(false);\n    }\n  }\n\n  async function handleChangePassword(values) {\n    try {\n      setChangePasswordLoading(true);\n      await changePasswordAPI(values);\n      message.success(\"Đổi mật khẩu thành công\");\n      changePasswordForm.resetFields();\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setChangePasswordLoading(false);\n    }\n  }\n\n  return !user ? <Spin spinning={true} /> : (\n    <>\n      <Row gutter={60}>\n        <Col flex=\"0 0 50%\">\n          <h3 className=\"text-xl mb-3\">Hồ sơ cá nhân</h3>\n          <Upload\n            name=\"image\"\n            action={`${API_URL}/user/profile/avatar/`}\n            headers={{ Authorization: `Bearer ${token}` }}\n            method=\"PATCH\"\n            listType=\"picture-card\"\n            className=\"avatar-uploader\"\n            showUploadList={false}\n\n            onChange={handleChange} >\n            {imageUrl ? <img src={imageUrl} alt=\"avatar\" style={{ width: '100%' }} /> : uploadButton}\n          </Upload>\n\n          <Spin spinning={updateLoading}>\n            <Form layout=\"vertical\" onFinish={handleSaveProfile}>\n              <Row gutter={15}>\n                <Col flex=\"0 0 50%\">\n                  <Item label=\"Họ\" name=\"first_name\" initialValue={user.first_name}>\n                    <Input />\n                  </Item>\n                </Col>\n                <Col flex=\"0 0 50%\">\n                  <Item label=\"Tên\" name=\"last_name\" initialValue={user.last_name}>\n                    <Input />\n                  </Item>\n                </Col>\n              </Row>\n              <Row gutter={15}>\n                <Col flex=\"0 0 50%\">\n                  <Item label=\"Giới tính\" name=\"gender\" initialValue={user.gender}>\n                    <Select>\n                      <Select.Option value=\"Nam\">Nam</Select.Option>\n                      <Select.Option value=\"Nữ\">Nữ</Select.Option>\n                      <Select.Option value=\"Khác\">Khác</Select.Option>\n                    </Select>\n                  </Item>\n                </Col>\n                <Col flex=\"0 0 50%\">\n                  <Item label=\"Ngày sinh\" name=\"DOB\" initialValue={moment(user.DOB)}>\n                    <DatePicker style={{ width: '100%' }} format=\"DD/MM/YYYY\" />\n                  </Item>\n                </Col>\n              </Row>\n              <Row gutter={15}>\n                <Col flex=\"0 0 50%\">\n                  <Item label=\"Địa chỉ email\">\n                    <Input value={user.email} readOnly />\n                  </Item>\n                </Col>\n                <Col flex=\"0 0 50%\">\n                  <Item label=\"Điện thoại\" name=\"phone\" initialValue={user.phone}>\n                    <Input />\n                  </Item>\n                </Col>\n              </Row>\n              <Row gutter={15}>\n                <Col flex=\"0 0 50%\">\n                  <Item label=\"Nghề nghiệp\" name=\"job\" initialValue={user.job}>\n                    <Input />\n                  </Item>\n                </Col>\n                <Col flex=\"0 0 50%\">\n                  <Item label=\"Nơi làm việc\" name=\"workplace\" initialValue={user.workplace}>\n                    <Input />\n                  </Item>\n                </Col>\n              </Row>\n              <Row gutter={15}>\n                <Col flex=\"0 0 50%\">\n                  <Item label=\"Dân tộc\" name=\"ethnicity\" initialValue={user.ethnicity}>\n                    <Input />\n                  </Item>\n                </Col>\n                <Col flex=\"0 0 50%\">\n                  <Item label=\"Ngoại kiều\" name=\"expatriate\" initialValue={user.expatriate}>\n                    <Input />\n                  </Item>\n                </Col>\n              </Row>\n\n              <Form.Item label=\"Họ và tên người nhà\" name=\"family_member_name\" initialValue={user.family_member_name}>\n                <Input />\n              </Form.Item>\n\n              <Form.Item label=\"Địa chỉ\" name=\"address\" initialValue={user.address}>\n                <Input.TextArea autoSize={{ minRows: 2, maxRows: 4 }} />\n              </Form.Item>\n\n              <Form.Item label=\"Địa chỉ người nhà\" name=\"family_member_address\" initialValue={user.family_member_address}>\n                <Input.TextArea autoSize={{ minRows: 2, maxRows: 4 }} />\n              </Form.Item>\n\n              <Button type=\"primary\" htmlType=\"submit\">Cập nhật</Button>\n            </Form>\n          </Spin>\n\n        </Col>\n        <Col flex=\"0 0 50%\">\n          <h3 className=\"text-xl mb-3\">Đổi mật khẩu</h3>\n\n          <Spin spinning={changePasswordLoading}>\n            <Form layout=\"vertical\" onFinish={handleChangePassword} autoComplete=\"new-password\" form={changePasswordForm}>\n              <Item label=\"Mật khẩu cũ\" name=\"old_password\">\n                <Input.Password />\n              </Item>\n\n              <Item label=\"Mật khẩu mới\" name=\"new_password\">\n                <Input.Password />\n              </Item>\n\n              <Item label=\"Nhập lại mật khẩu mới\" name=\"confirm_password\">\n                <Input.Password />\n              </Item>\n\n              <Button type=\"primary\" htmlType=\"submit\">Đổi mật khẩu</Button>\n            </Form>\n          </Spin>\n\n        </Col>\n      </Row>\n\n    </>\n  )\n}\n\nconst mapStateToProps = state => ({\n  user: state.userState.user\n})\n\nexport default connect(mapStateToProps)(ProfilePage);","import React, { useState, useEffect } from 'react';\nimport { PageHeader, Descriptions, Spin, Table, Space, Button } from 'antd';\nimport { Link, useHistory, useRouteMatch } from 'react-router-dom';\nimport moment from 'moment';\nimport { EyeOutlined } from '@ant-design/icons';\n\n// APIs\nimport { getPatientDetailsAPI } from 'services/user/patient.service';\nimport { listEMRAPI } from 'services/user/emr.service';\nimport Circle from 'components/Circle/Circle';\n\nconst { Item } = Descriptions;\n\nconst PatientDetails = props => {\n\n  const { goBack } = useHistory();\n  const { params, url } = useRouteMatch();\n  const patientId = params.patientId;\n\n  const [patient, setPatient] = useState(null);\n  const [patientLoading, setPatientLoading] = useState(false);\n  const [EMRs, setEMRs] = useState(null);\n  const [EMRLoading, setEMRLoading] = useState(false);\n\n  const tableColumns = [\n    {\n      title: '#',\n      key: '#',\n      render: (_, __, index) => index + 1\n    },\n    {\n      title: 'Ngày khám bệnh',\n      key: 'date',\n      render: (_, row) => moment(row.Record.created_at).format(\"DD/MM/YYYY\")\n    },\n    {\n      title: 'Bác sĩ khám bệnh',\n      key: 'physician',\n      render: (_, row) => row.Record.physician.first_name + \" \" + row.Record.physician.last_name\n    },\n    {\n      title: 'Khoa khám',\n      key: 'room',\n      render: (_, row) => \"Khoa \" + row.Record.room.name\n    },\n    {\n      title: 'Trạng thái',\n      key: 'status',\n      render: (_, row) => <div className=\"flex items-center\">\n        <Circle color={row.Record.completed_at !== null ? 'success' : ''} />\n        <span className=\"ml-2\">{row.Record.completed_at !== null ? ' Đã đóng' : ' Chưa đóng'}</span>\n      </div>\n    },\n    {\n      title: 'Hành động',\n      key: 'actions',\n      render: (_, row) => <Space>\n        <Link to={`${url}/${row.Key}`}>\n          <Button icon={<EyeOutlined />}>Xem</Button>\n        </Link>\n\n      </Space>\n    }\n  ]\n\n  async function getPatientDetails(patientId) {\n    try {\n      setPatientLoading(true);\n      const patientResponse = await getPatientDetailsAPI(patientId);\n      setPatient(patientResponse.data);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setPatientLoading(false);\n    }\n  }\n\n  async function getPatientEMRs(patientId) {\n    try {\n      setEMRLoading(true);\n      const EMRResponse = await listEMRAPI({ patient_id: patientId });\n      setEMRs(EMRResponse.data.data);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setEMRLoading(false);\n    }\n  }\n\n  async function getInitialData() {\n    await Promise.all([\n      getPatientDetails(patientId),\n      getPatientEMRs(patientId)\n    ])\n  }\n\n  useEffect(() => {\n    getInitialData();\n  }, []);\n\n  return (\n    <>\n      <PageHeader onBack={goBack} title={patient ? patient.first_name + \" \" + patient.last_name : \"Chi tiết bệnh nhân\"} />\n\n      <Spin spinning={patientLoading}>\n        <Descriptions title=\"Thông tin cá nhân\" colon>\n          <Item label=\"Họ và tên\">{patient ? patient.first_name + \" \" + patient.last_name : \"Đang tải...\"}</Item>\n          <Item label=\"Giới tính\">{patient?.gender || \"Đang tải\"}</Item>\n          <Item label=\"Ngày sinh\">{patient ? moment(patient.DOB).format(\"DD/MM/YYYY\") : \"Đang tải\"}</Item>\n          <Item label=\"Điện thoại\">{patient?.phone || \"Đang tải\"}</Item>\n          <Item label=\"Địa chỉ\">{patient?.address || \"Đang cập nhật\"}</Item>\n        </Descriptions>\n      </Spin>\n\n      <div className=\"ant-descriptions-title mb-3\">Lịch sử khám bệnh</div>\n      <Table rowKey=\"id\" dataSource={EMRs} loading={EMRLoading} columns={tableColumns} />\n\n    </>\n  )\n}\n\nexport default PatientDetails;","import { Descriptions } from 'antd';\nimport React from 'react';\n\nconst { Item } = Descriptions;\n\nconst EmrDesc = props => {\n  const { emr } = props;\n  const {\n    medical_record: {\n      administrative: {\n        fullname,\n        dayOfBirth,\n        gender,\n        job,\n        ethnicity,\n        expatriate,\n        address,\n        workplace,\n        object,\n        insurance_expirity,\n        insurance_number,\n        family_member_name,\n        family_member_address,\n        phone,\n        checkin_at,\n        previous_diagnose,\n        come_from\n      },\n      present_complaint,\n      ask: {\n        pathological_process,\n        self_medical_history,\n        family_medical_history\n      },\n      examination: {\n        heartbeat,\n        temperature,\n        blood_pressure,\n        breathing,\n        weight,\n        body,\n        partials,\n        subclinical_summary,\n        initial_diagnose,\n        drugs,\n        processed,\n        diagnose,\n        from_date,\n        to_date\n      },\n      summary: {\n        pathological_process_and_clinical_course,\n        valuable_subclinical_summary,\n        primary_disease,\n        sub_disease,\n        treatment_method,\n        patient_status,\n        direction_of_treatment,\n        services,\n        attachments\n      }\n    }\n  } = emr;\n\n  return (\n    <div>\n      <div className=\"mb-2\">Khoa: Khoa {emr.room.name}</div>\n      <Descriptions title=\"I. Hành chính\" size=\"middle\" bordered column={2} className=\"mb-5\">\n        <Item label=\"1. Họ và tên\">{fullname}</Item>\n        <Item label=\"2. Ngày sinh\">{dayOfBirth}</Item>\n        <Item label=\"3. Giới tính\">{gender}</Item>\n        <Item label=\"4. Nghề nghiệp\">{job}</Item>\n        <Item label=\"5. Dân tộc\">{ethnicity}</Item>\n        <Item label=\"6. Ngoại kiều\">{expatriate}</Item>\n        <Item label=\"7. Địa chỉ\" span={2}>{address}</Item>\n        <Item label=\"8. Nơi làm việc\">{workplace}</Item>\n        <Item label=\"9. Đối tượng\">{object}</Item>\n        <Item label=\"10. BHYT giá trị đến ngày\">{insurance_expirity}</Item>\n        <Item label=\"Số thẻ BHYT\">{insurance_number}</Item>\n        <Item label=\"11. Họ tên, địa chỉ người nhà khi cần báo tin\" span={2}>{family_member_name}, {family_member_address}</Item>\n        <Item label=\"Điện thoại số\">{phone}</Item>\n        <Item label=\"12. Đến khám bệnh lúc\">{checkin_at}</Item>\n        <Item label=\"13. Chẩn đoán của nơi giới thiệu\">{previous_diagnose} ({come_from})</Item>\n      </Descriptions>\n      <Descriptions title=\"II. Lý do vào viện\" bordered size=\"middle\" className=\"mb-5\">\n        <Item label=\"Lý do vào viện\">{present_complaint}</Item>\n      </Descriptions>\n\n      <Descriptions title=\"III. Hỏi bệnh\" bordered layout=\"vertical\" column={2} className=\"mb-5\">\n        <Item label=\"1. Quá trình bệnh lý\" span={2}>\n          <div dangerouslySetInnerHTML={{ __html: pathological_process }} className=\"whitespace-pre-line\"></div>\n        </Item>\n        <Item label=\"2. Tiền sử bệnh bản thân\">{self_medical_history}</Item>\n        <Item label=\"Gia đình\">{family_medical_history}</Item>\n      </Descriptions>\n\n      <Descriptions title=\"IV. Khám bệnh\" bordered column={2} layout=\"vertical\" className=\"mb-5\">\n        <Item label=\"1. Toàn thân\" className=\"align-baseline\">\n          <div dangerouslySetInnerHTML={{ __html: body }} className=\"whitespace-pre-line\"></div>\n        </Item>\n        <Item label=\"Dấu hiệu sinh tồn\">\n          <div>Mạch: {heartbeat} <i className=\"ml-auto\">lần/ph</i></div>\n          <div>Nhiệt độ: {temperature} <i className=\"ml-auto\">°C</i></div>\n          <div>Huyết áp: {blood_pressure} <i className=\"ml-auto\">mmHg</i></div>\n          <div>Nhịp thở: {breathing} <i className=\"ml-auto\">lần/ph</i></div>\n          <div>Cân nặng: {weight} <i className=\"ml-auto\">kg</i></div>\n        </Item>\n        <Item label=\"2. Các bộ phận\" span={2} className=\"align-baseline\">\n          <div dangerouslySetInnerHTML={{ __html: partials }} className=\"whitespace-pre-line\"></div>\n        </Item>\n        <Item label=\"3. Tóm tắt kết quả cận lâm sàng\" span={2}>\n          <div dangerouslySetInnerHTML={{ __html: subclinical_summary }} className=\"whitespace-pre-line\"></div>\n        </Item>\n        <Item label=\"4. Chẩn đoán ban đầu\" span={2}>{initial_diagnose?.disease}</Item>\n        <Item label=\"5. Thuốc\">\n          {\n            drugs?.map((d, index) => {\n              return <div key={index}>{d.drug} x {d.total} ({d.drugInstruction})</div>\n            })\n          }\n        </Item>\n        <Item label=\"Đã xử lý\">\n          <div dangerouslySetInnerHTML={{ __html: processed }} className=\"whitespace-pre-line\"></div>\n        </Item>\n        <Item label=\"6. Chẩn đoán khi ra viện\" span={2}>{diagnose?.disease}</Item>\n        <Item label=\"7. Điều trị ngoại trú\">Từ ngày {from_date} đến ngày {to_date}</Item>\n      </Descriptions>\n\n      <Descriptions title=\"Tổng kết bệnh án\" bordered layout=\"vertical\" column={2}>\n        <Item label=\"1. Quá trình bệnh lý và diễn biến lâm sàng\" span={2}>\n          <div dangerouslySetInnerHTML={{ __html: pathological_process_and_clinical_course }} className=\"whitespace-pre-line\"></div>\n        </Item>\n        <Item label=\"2. Tóm tắt kết quả xét nghiệm cận lâm sàng có giá trị chẩn đoán\" span={2}>\n          <div dangerouslySetInnerHTML={{ __html: valuable_subclinical_summary }} className=\"whitespace-pre-line\"></div>\n        </Item>\n        <Item label=\"3. Chẩn đoán ra viện\" span={2}>\n          <div>Bệnh chính: {primary_disease?.disease}</div>\n          <div>Bệnh kèm theo (nếu có): {sub_disease?.disease}</div>\n        </Item>\n        <Item label=\"4. Phương pháp điều trị\" span={2}>\n          <div dangerouslySetInnerHTML={{ __html: treatment_method }} className=\"whitespace-pre-line\"></div>\n        </Item>\n        <Item label=\"5. Tình trạng người bệnh ra viện\">\n          <div dangerouslySetInnerHTML={{ __html: patient_status }} className=\"whitespace-pre-line\"></div>\n        </Item>\n        <Item label=\"6. Hướng điều trị và các chế độ tiếp theo\">\n          <div dangerouslySetInnerHTML={{ __html: direction_of_treatment }} className=\"whitespace-pre-line\"></div>\n        </Item>\n        <Item label=\"Dịch vụ\">\n          {\n            services?.map((s, i) => (\n              <div key={i}>{s.name || s.id}</div>\n            ))\n          }\n        </Item>\n        <Item label=\"Tệp đính kèm\">\n          {\n            attachments?.map((a, i) => (\n              <img src={a.url} key={i} style={{width: 200}} />\n            ))\n          }\n        </Item>\n      </Descriptions>\n    </div>\n  )\n}\n\nexport default EmrDesc;","import { Empty, PageHeader, Spin, Tabs } from 'antd';\nimport EmrDesc from 'components/EmrDesc/EmrDesc';\nimport React, { useState, useEffect } from 'react';\nimport { useHistory, useRouteMatch } from 'react-router-dom';\nimport { getEMRHistoryAPI } from 'services/user/emr.service';\n\nconst EmrDetailsPage = props => {\n\n  const { goBack } = useHistory();\n  const { params } = useRouteMatch();\n\n  const [emrHistory, setEmrHistory] = useState([]);\n  const [emrLoading, setEmrLoading] = useState(false);\n  const [selectedTab, setSelectedTab] = useState(\"\");\n\n  async function getEmrHistory(emrId) {\n    try {\n      setEmrLoading(true);\n      const res = await getEMRHistoryAPI(emrId);\n      const data = res.data.data;\n      setEmrHistory(data);\n      setSelectedTab(data.completed_at || data.updated_at || data.created_at);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setEmrLoading(false);\n    }\n  }\n\n  async function getInitialData() {\n    const emrId = params.emrId;\n    return await Promise.all([\n      getEmrHistory(emrId)\n    ])\n  }\n\n  useEffect(() => {\n    getInitialData();\n  }, []);\n\n  return (\n    <div className=\"bg-white p-3\">\n      <PageHeader onBack={goBack} title=\"Chi tiết bệnh án\" />\n      {\n        emrLoading ? <Spin spinning={true} /> :\n          emrHistory.length > 0 ?\n            <Tabs defaultActiveKey={selectedTab} onChange={(val) => setSelectedTab(val)}>\n              {\n                emrHistory.map(h => {\n                  return <Tabs.TabPane key={h.completed_at || h.updated_at || h.created_at} tab={h.completed_at || h.updated_at || h.created_at}>\n                    <EmrDesc emr={h} />\n                  </Tabs.TabPane>\n                })\n              }\n            </Tabs>\n            :\n            <Empty />\n      }\n    </div>\n  )\n}\n\nexport default EmrDetailsPage;","import React from 'react';\nimport { Link, Redirect, Switch, Route, useRouteMatch, useLocation } from 'react-router-dom';\nimport { Layout, Menu } from 'antd';\nimport {\n  IdcardOutlined,\n  CalendarOutlined,\n  ContainerOutlined,\n  ProfileOutlined,\n  NotificationOutlined} from '@ant-design/icons';\nimport NotificationPage from 'pages/common/notification/notification';\nimport VisitPage from 'pages/common/visit/visit';\nimport PatientPage from 'pages/common/patient/patient';\nimport AppointmentPage from 'pages/common/appointment/apointment';\nimport withPrivateRoute from 'HOCs/withPrivateRoute';\nimport CustomHeader from 'components/Header';\nimport ExaminationPage from 'pages/common/examination/examination';\nimport ProfilePage from 'pages/common/profile/profile';\nimport PatientDetails from 'pages/common/patient/patient-details';\nimport EmrDetailsPage from 'pages/common/patient/emr-details';\n\nconst { Sider, Content } = Layout;\n\nconst PhysicianLayout = () => {\n  const match = useRouteMatch();\n  const location = useLocation();\n  const path = match.path;\n\n  return (\n    <Layout>\n      <CustomHeader />\n      <Layout>\n        <Sider width={200} className=\"site-layout-background\">\n          <Menu\n            mode=\"inline\"\n            style={{ height: '100%', borderRight: 0 }}\n            selectedKeys={[location.pathname]}\n          >\n            <Menu.Item key=\"/physician/visit\" icon={<ContainerOutlined />}>\n              <Link to=\"/physician/visit\">Khám bệnh</Link>\n            </Menu.Item>\n            <Menu.Item key=\"/physician/patient\" icon={<IdcardOutlined />}>\n              <Link to=\"/physician/patient\">Bệnh nhân</Link>\n            </Menu.Item>\n            <Menu.Item key=\"/physician/appointment\" icon={<CalendarOutlined />}>\n              <Link to=\"/physician/appointment\">Lịch hẹn</Link>\n            </Menu.Item>\n            <Menu.Item key=\"/physician/profile\" icon={<ProfileOutlined />}>\n              <Link to=\"/physician/profile\">Hồ sơ</Link>\n            </Menu.Item>\n          </Menu>\n        </Sider>\n        <Layout style={{ padding: '0 24px 24px' }}>\n          <Content\n            className=\"site-layout-background\"\n            style={{\n              padding: 24,\n              margin: 0,\n              minHeight: 280,\n            }}\n          >\n            <Switch>\n\n              {/* Visit */}\n              <Route path={`${path}/visit`} exact>\n                <VisitPage />\n              </Route>\n\n              <Route path={`${path}/visit/:emr`}>\n                <ExaminationPage />\n              </Route>\n\n              {/* Patient */}\n              <Route path={`${path}/patient`} exact>\n                <PatientPage />\n              </Route>\n              \n              <Route path={`${path}/patient/:patientId`} exact>\n                <PatientDetails />\n              </Route>\n\n              <Route path={`${path}/patient/:patientId/:emrId`}>\n                <EmrDetailsPage />\n              </Route>\n\n              {/* Appointment */}\n              <Route path={`${path}/appointment`}>\n                <AppointmentPage />\n              </Route>\n\n              <Route path={`${path}/profile`}>\n                <ProfilePage />\n              </Route>\n\n              {/* Fallback */}\n              <Redirect to={`/physician/visit`} />\n            </Switch>\n          </Content>\n        </Layout>\n      </Layout>\n    </Layout>\n  )\n}\n\nexport default withPrivateRoute(PhysicianLayout, ['physician']);","import React from 'react';\nimport { Form, Input, Row, Col, DatePicker, Radio } from 'antd';\nimport { requiredRule } from 'constant/formRules';\n\nconst PatientForm = props => {\n  const { form, onFinish } = props;\n\n  return (\n    <Form\n      layout=\"vertical\"\n      onFinish={onFinish}\n      form={form}>\n      <Row>\n        <Col flex={1}>\n          <Form.Item label=\"Họ\" name=\"first_name\" rules={[requiredRule()]}>\n            <Input autoFocus />\n          </Form.Item>\n        </Col>\n        <Col flex=\"0 0 15px\"></Col>\n        <Col flex={1}>\n          <Form.Item label=\"Tên\" name=\"last_name\" rules={[requiredRule()]}>\n            <Input />\n          </Form.Item>\n        </Col>\n      </Row>\n      <Form.Item name=\"phone\" label=\"Số điện thoại\" rules={[requiredRule()]}>\n        <Input />\n      </Form.Item>\n      <Row>\n        <Col>\n          <Form.Item name=\"DOB\" label=\"Ngày sinh\" rules={[requiredRule()]}>\n            <DatePicker placeholder=\"Chọn ngày\" />\n          </Form.Item>\n\n        </Col>\n        <Col flex=\"0 0 15px\"></Col>\n        <Col flex={1}>\n          <Form.Item name=\"gender\" label=\"Giới tính\" rules={[requiredRule()]}>\n            <Radio.Group>\n              <Radio value=\"Nam\">Nam</Radio>\n              <Radio value=\"Nữ\">Nữ</Radio>\n              <Radio value=\"Khác\">Khác</Radio>\n            </Radio.Group>\n          </Form.Item>\n        </Col>\n      </Row>\n\n      <Row gutter={15}>\n        <Col flex=\"0 0 50%\">\n          <Form.Item name=\"job\" label=\"Nghề nghiệp\">\n            <Input />\n          </Form.Item>\n        </Col>\n        <Col flex=\"0 0 50%\">\n          <Form.Item name=\"workplace\" label=\"Nơi làm việc\">\n            <Input />\n          </Form.Item>\n        </Col>\n      </Row>\n\n      <Row gutter={15}>\n        <Col flex=\"0 0 50%\">\n          <Form.Item name=\"ethnicity\" label=\"Dân tộc\">\n            <Input />\n          </Form.Item>\n        </Col>\n        <Col flex=\"0 0 50%\">\n          <Form.Item name=\"expatriate\" label=\"Ngoại kiều\">\n            <Input />\n          </Form.Item>\n        </Col>\n      </Row>\n\n      <Form.Item label=\"Họ và tên người nhà\" name=\"family_member_name\">\n        <Input />\n      </Form.Item>\n\n      <Form.Item label=\"Địa chỉ\" name=\"address\">\n        <Input.TextArea autoSize={{ minRows: 2 }} />\n      </Form.Item>\n\n      <Form.Item label=\"Địa chỉ người nhà\" name=\"family_member_address\">\n        <Input.TextArea autoSize={{ minRows: 2 }} />\n      </Form.Item>\n\n    </Form>\n  )\n}\n\nexport default PatientForm;","import React, { useState, useEffect } from 'react';\nimport { Input, Table, Form, PageHeader, Button, Modal, Menu, Dropdown, message } from 'antd';\nimport { PlusOutlined } from '@ant-design/icons';\nimport PatientForm from 'forms/PatientForm/PatientForm';\n\n// APIs\nimport { getRoomAPI } from 'services/user/room.service';\nimport { createVisitAPI } from 'services/user/visit.service';\nimport { listAllPatientsAPI, createPatientAPI } from 'services/user/patient.service';\nimport { addBlockChainUserAPI } from 'services/user/user.service';\n\nconst ReceivePage = props => {\n\n  const [patientData, setPatientData] = useState(null);\n  const [patientLoading, setPatientLoading] = useState(false);\n  const [rooms, setRooms] = useState(null);\n  const [roomLoading, setRoomLoading] = useState(false);\n  const [roomModalVisible, setRoomModalVisible] = useState(false);\n  const [isCreatingPatient, setCreatingPatient] = useState(false);\n  const [modalVisible, setModalVisible] = useState(false);\n  const [isCreatingVisit, setCreatingVisit] = useState(false);\n  const [patientForm] = Form.useForm();\n\n  function renderMenu(patient) {\n    return (\n      <Menu>\n        {\n          rooms?.map(room => (\n            <Menu.Item key={room.id} onClick={() => handleCreateVisit(patient, room)}>Khoa {room.name}</Menu.Item>\n          ))\n        }\n      </Menu>\n    )\n  }\n\n  const tableColumns = [\n    {\n      title: '#',\n      key: 'index',\n      render: (text, record, index) => index + 1\n    },\n    {\n      title: 'Họ và tên',\n      key: 'fullname',\n      render: (text, { first_name, last_name }) => first_name + ' ' + last_name\n    },\n    {\n      title: 'Giới tính',\n      key: 'gender',\n      dataIndex: 'gender'\n    },\n    {\n      title: 'Ngày sinh',\n      key: 'DOB',\n      dataIndex: 'DOB'\n    },\n    {\n      title: 'Điện thoại',\n      key: 'phone',\n      dataIndex: 'phone'\n    },\n    {\n      title: 'Hành động',\n      key: 'action',\n      render: (text, record) => (\n        <Dropdown overlay={renderMenu(record)} overlayStyle={{ minWidth: 200 }} trigger=\"click\">\n          <Button>Tiếp nhận</Button>\n        </Dropdown>\n      )\n    }\n  ]\n\n\n  //\n  // Load initial data\n  //\n  async function listAllPatients(search) {\n    try {\n      setPatientLoading(true);\n      const patientResponse = await listAllPatientsAPI(search);\n      setPatientData(patientResponse.data);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setPatientLoading(false);\n    }\n  }\n\n  async function getRooms() {\n    try {\n      setRoomLoading(true);\n      const roomResponse = await getRoomAPI();\n      setRooms(roomResponse.data);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setRoomLoading(false);\n    }\n  }\n\n  async function getInitialData() {\n    await Promise.all([\n      listAllPatients(),\n      getRooms()\n    ])\n  }\n\n  useEffect(() => {\n    getInitialData();\n  }, []);\n\n  //\n  // Component functions\n  //\n  function handleAddClick() {\n    setModalVisible(true);\n  }\n\n  function handleCloseModal() {\n    setModalVisible(false);\n  }\n\n  function handleSearch(values) {\n    listAllPatients(values.search);\n  }\n\n  async function handleSubmit() {\n    try {\n      setCreatingPatient(true);\n      const values = await patientForm.validateFields();\n      values.DOB = values.DOB.format('YYYY-MM-DD');\n      const createResponse = await createPatientAPI(values);\n      const userId = createResponse.data.id;\n      await addBlockChainUserAPI(userId, \"patient\");\n      message.success(\"Tạo bệnh nhân thành công\");\n      setModalVisible(false);\n      await listAllPatients();\n      // await addBlockChainUserAPI(\"4f31587e-40cc-43a9-a3bf-a7e5fa731955\", \"patient\");\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setCreatingPatient(false);\n    }\n  }\n\n  async function handleCreateVisit(patient, room) {\n    try {\n      setCreatingVisit(true);\n      await createVisitAPI({ patientId: patient.id, roomId: room.id });\n      message.success(`Đã tiếp nhận bệnh nhân ${patient.first_name} ${patient.last_name} vào ${room.name}`);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setCreatingVisit(false);\n    }\n  }\n\n  return (\n    <>\n      <PageHeader\n        title=\"Tiếp nhận bệnh nhân\"\n        className=\"pl-0\"\n        extra={<Button type=\"primary\" onClick={handleAddClick} icon={<PlusOutlined />}>Bệnh nhân mới</Button>} />\n\n      <Form onFinish={handleSearch}>\n        <Form.Item name=\"search\">\n          <Input.Search size=\"large\" placeholder=\"Tìm kiếm bệnh nhân theo tên/SĐT\" />\n        </Form.Item>\n      </Form>\n      <Table\n        rowKey=\"id\"\n        dataSource={patientData?.results}\n        loading={patientLoading || isCreatingVisit}\n        columns={tableColumns} />\n      <Modal\n        visible={modalVisible}\n        confirmLoading={isCreatingPatient}\n        onCancel={handleCloseModal}\n        onOk={handleSubmit}\n        destroyOnClose={true}\n        title=\"Bệnh nhân mới\">\n        <PatientForm form={patientForm} onFinish={handleSubmit} />\n      </Modal>\n    </>\n  )\n}\n\nexport default ReceivePage;","import React from 'react';\nimport { Link, Redirect, Switch, Route, useRouteMatch, useLocation } from 'react-router-dom';\nimport { Layout, Menu } from 'antd';\nimport {\n  UserOutlined,\n  DashboardOutlined,\n  CalendarOutlined,\n} from '@ant-design/icons';\nimport AppointmentPage from 'pages/common/appointment/apointment';\nimport withPrivateRoute from 'HOCs/withPrivateRoute';\nimport CustomHeader from 'components/Header';\nimport ReceivePage from 'pages/receptionist/receive';\nimport ProfilePage from 'pages/common/profile/profile';\n\nconst { Sider, Content } = Layout;\n\nconst ReceptionistLayout = () => {\n  const match = useRouteMatch();\n  const location = useLocation();\n  const path = match.path;\n\n  return (\n    <Layout>\n      <CustomHeader />\n      <Layout>\n        <Sider width={200} className=\"site-layout-background\">\n          <Menu\n            mode=\"inline\"\n            style={{ height: '100%', borderRight: 0 }}\n            selectedKeys={[location.pathname]}\n          >\n            <Menu.Item key=\"/receptionist/receive\" icon={<DashboardOutlined />}>\n              <Link to=\"/receptionist/receive\">Tiếp nhận bệnh</Link>\n            </Menu.Item>\n            <Menu.Item key=\"/receptionist/appointment\" icon={<CalendarOutlined />}>\n              <Link to=\"/receptionist/appointment\">Lịch hẹn</Link>\n            </Menu.Item>\n\n            <Menu.Item key=\"/receptionist/profile\" icon={<UserOutlined />}>\n              <Link to=\"/receptionist/profile\">Hồ sơ</Link>\n            </Menu.Item>\n          </Menu>\n        </Sider>\n        <Layout style={{ padding: '0 24px 24px' }}>\n          <Content\n            className=\"site-layout-background\"\n            style={{\n              padding: 24,\n              margin: 0,\n              minHeight: 280,\n            }}\n          >\n            <Switch>\n              {/* Dashboard */}\n              <Route path={`${path}/receive`}>\n                <ReceivePage />\n              </Route>\n\n              {/* Appointment */}\n              <Route path={`${path}/appointment`}>\n                <AppointmentPage />\n              </Route>\n\n              <Route path={`${path}/profile`}>\n                <ProfilePage />\n              </Route>\n\n              {/* Fallback */}\n              <Redirect to={`/receptionist/receive`} />\n            </Switch>\n          </Content>\n        </Layout>\n      </Layout>\n    </Layout>\n  )\n}\n\nexport default withPrivateRoute(ReceptionistLayout, ['receptionist']);","import React from 'react';\n\nconst EmailIcon = () => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" id=\"Capa_1\" enableBackground=\"new 0 0 512 512\" height=\"50\" viewBox=\"0 0 512 512\" width=\"50\"><g><g><path d=\"m497 15.243h-482c-8.284 0-15 6.716-15 15v330c0 8.284 6.716 15 15 15h121.019c-.006.505-.019 1.008-.019 1.515 0 66.168 53.832 120 120 120s120-53.832 120-120c0-.506-.013-1.01-.019-1.515h121.019c8.284 0 15-6.716 15-15v-330c0-8.285-6.716-15-15-15zm-43.122 30-197.878 147.792-197.878-147.792zm-197.878 421.514c-49.626 0-90-40.374-90-90s40.374-90 90-90 90 40.374 90 90-40.374 90-90 90zm226-121.514h-110.208c-13.876-50.929-60.527-88.485-115.792-88.485-55.266 0-101.916 37.557-115.792 88.485h-110.208v-283.56l217.024 162.092c2.662 1.988 5.819 2.982 8.976 2.982s6.314-.994 8.976-2.982l217.024-162.092zm-191.606 5.908-49.394 49.393-19.394-19.393c-5.857-5.858-15.355-5.858-21.213 0s-5.858 15.355 0 21.213l30 30c2.929 2.929 6.768 4.394 10.606 4.394s7.678-1.464 10.606-4.394l60-60c5.858-5.858 5.858-15.355 0-21.213-5.856-5.859-15.354-5.859-21.211 0z\" fill=\"currentColor\" /></g></g></svg>\n)\n\nexport default EmailIcon;","import React, { useState, useEffect } from 'react';\nimport EmailIcon from 'components/Icons/EmailIcon';\nimport Icon from '@ant-design/icons';\nimport { Alert, Button, Space, Spin } from 'antd';\nimport { Link, useLocation } from 'react-router-dom';\nimport { verifyEmailAPI } from 'services/auth/auth.service';\n\nconst VerifyPage = (props) => {\n\n  const [loading, setLoading] = useState(false);\n  const [success, setSuccess] = useState(false);\n  const [error, setError] = useState(null);\n  const { search } = useLocation();\n  const urlSearchParams = new URLSearchParams(search);\n  const token = urlSearchParams.get('token');\n\n  function isValidToken(token = \"\") {\n    const isValid = /[A-Za-z0-9-_=]+\\.[A-Za-z0-9-_=]+\\.?[A-Za-z0-9-_.+/=]*/.test(token);\n    console.log(isValid);\n    return isValid;\n  }\n\n  async function verifyEmail(token) {\n    try {\n      setLoading(true);\n      await verifyEmailAPI(token);\n      setSuccess(true);\n    } catch (error) {\n      setError(error);\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  useEffect(() => {\n    if (token && token.length > 0 && isValidToken(token)) {\n      verifyEmail(token);\n    }\n  }, [search, token]);\n\n  return (\n    <main className=\"login-page\">\n      <div className=\"auth\">\n        <div className=\"auth__header text-center\">\n          <Icon component={EmailIcon} />\n          <h1 className=\"text-3xl\">Xác thực email</h1>\n        </div>\n\n        {\n          loading &&\n          <Space align=\"center\" className=\"flex text-center justify-center\">\n            <Spin />\n            <span>Vui lòng đợi</span>\n          </Space>\n        }\n\n        {\n          success &&\n          <Alert\n            showIcon\n            type=\"success\"\n            message=\"Xác thực địa chỉ email thành công\"\n          />\n        }\n\n        {\n          !isValidToken(token) &&\n          <Alert\n            showIcon\n            type=\"error\"\n            message=\"URL không hợp lệ\"\n          />\n        }\n\n        {\n          !!error &&\n          <Alert\n            showIcon\n            type=\"error\"\n            message={error?.response?.data.message || \"Có lỗi khi xác thực email, vui lòng thử lại\"}\n          />\n        }\n\n        <div className=\"text-center mt-5\">\n          <Button type=\"link\">\n            <Link to=\"/\">Về trang chủ</Link>\n          </Button>\n        </div>\n      </div>\n    </main>\n  )\n}\n\nexport default VerifyPage;","import { NODE_URL } from \"constant/apiUrl\";\nimport axios from 'axios';\n\n\nconst endpointPrefix = `${NODE_URL}/patient/emrs`;\n\nexport function listAllEmrs() {\n  const url = `${endpointPrefix}/`;\n  return axios.get(url);\n}\n\nexport function getEMRHistoryAPI(emrId) {\n  const url = `${endpointPrefix}/${emrId}`;\n  return axios.get(url);\n}","import { Button, Space, Table } from 'antd';\nimport React, { useState, useEffect } from 'react';\nimport { listAllEmrs } from 'services/patient/emr.service';\nimport moment from 'moment';\nimport Circle from 'components/Circle/Circle';\nimport { Link, useRouteMatch } from 'react-router-dom';\nimport { EyeOutlined } from '@ant-design/icons';\n\nconst PatientEmrPage = props => {\n\n  const { url } = useRouteMatch();\n  const [emrs, setEmrs] = useState(null);\n  const [emrLoading, setEmrLoading] = useState(false);\n\n  const tableColumns = [\n    {\n      title: '#',\n      key: '#',\n      render: (_, __, index) => index + 1\n    },\n    {\n      title: 'Ngày khám bệnh',\n      key: 'date',\n      render: (_, row) => moment(row.Record.created_at).format(\"DD/MM/YYYY\")\n    },\n    {\n      title: 'Bác sĩ khám bệnh',\n      key: 'physician',\n      render: (_, row) => row.Record.physician.first_name + \" \" + row.Record.physician.last_name\n    },\n    {\n      title: 'Khoa khám',\n      key: 'room',\n      render: (_, row) => \"Khoa \" + row.Record.room.name\n    },\n    {\n      title: 'Trạng thái',\n      key: 'status',\n      render: (_, row) => <div className=\"flex items-center\">\n        <Circle color={row.Record.completed_at !== null ? 'success' : ''} />\n        <span className=\"ml-2\">{row.Record.completed_at !== null ? ' Đã đóng' : ' Chưa đóng'}</span>\n      </div>\n    },\n    {\n      title: 'Hành động',\n      key: 'actions',\n      render: (_, row) => <Space>\n        <Link to={`${url}/${row.Key}`}>\n          <Button icon={<EyeOutlined />}>Xem</Button>\n        </Link>\n      </Space>\n    }\n  ]\n\n  async function getEmrs() {\n    try {\n      setEmrLoading(true);\n      const res = await listAllEmrs();\n      const data = res.data.data;\n      setEmrs(data);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setEmrLoading(false);\n    }\n  }\n\n  async function getInitialData() {\n    return await Promise.all([\n      getEmrs()\n    ])\n  }\n\n  useEffect(() => {\n    getInitialData();\n  }, [])\n\n  return (\n    <>\n      <h1 className=\"text-xl\">Lịch sử khám bệnh</h1>\n      <Table rowKey=\"Key\" dataSource={emrs} loading={emrLoading} columns={tableColumns} />\n    </>\n  )\n}\n\nexport default PatientEmrPage;","import { Empty, PageHeader, Spin, Tabs } from 'antd';\nimport EmrDesc from 'components/EmrDesc/EmrDesc';\nimport React, { useState, useEffect } from 'react';\nimport { useHistory, useRouteMatch } from 'react-router-dom';\nimport { getEMRHistoryAPI } from 'services/patient/emr.service';\n\nconst PatientEmrDetailsPage = props => {\n\n  const { goBack } = useHistory();\n  const { params } = useRouteMatch();\n\n  const [emrHistory, setEmrHistory] = useState([]);\n  const [emrLoading, setEmrLoading] = useState(false);\n  const [selectedTab, setSelectedTab] = useState(\"\");\n\n  async function getEmrHistory(emrId) {\n    try {\n      setEmrLoading(true);\n      const res = await getEMRHistoryAPI(emrId);\n      const data = res.data.data;\n      setEmrHistory(data);\n      setSelectedTab(data.completed_at || data.updated_at || data.created_at);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setEmrLoading(false);\n    }\n  }\n\n  async function getInitialData() {\n    const emrId = params.emrId;\n    return await Promise.all([\n      getEmrHistory(emrId)\n    ])\n  }\n\n  useEffect(() => {\n    getInitialData();\n  }, []);\n\n  return (\n    <div className=\"bg-white p-3\">\n      <PageHeader onBack={goBack} title=\"Chi tiết bệnh án\" />\n      {\n        emrLoading ? <Spin spinning={true} /> :\n          emrHistory.length > 0 ?\n            <Tabs defaultActiveKey={selectedTab} onChange={(val) => setSelectedTab(val)}>\n              {\n                emrHistory.map(h => {\n                  return <Tabs.TabPane key={h.completed_at || h.updated_at || h.created_at} tab={h.completed_at || h.updated_at || h.created_at}>\n                    <EmrDesc emr={h} />\n                  </Tabs.TabPane>\n                })\n              }\n            </Tabs>\n            :\n            <Empty />\n      }\n    </div>\n  )\n}\n\nexport default PatientEmrDetailsPage;","import React from 'react';\nimport { Link, Redirect, Switch, Route, useRouteMatch, useLocation } from 'react-router-dom';\nimport { Layout, Menu } from 'antd';\nimport {\n  UserOutlined,\n  DashboardOutlined,\n  CalendarOutlined,\n} from '@ant-design/icons';\nimport withPrivateRoute from 'HOCs/withPrivateRoute';\nimport CustomHeader from 'components/Header';\nimport ProfilePage from 'pages/common/profile/profile';\nimport PatientEmrPage from 'pages/patient/emr';\nimport PatientEmrDetailsPage from 'pages/patient/patient-emr-details';\n\nconst { Sider, Content } = Layout;\n\nconst PatientLayout = () => {\n  const match = useRouteMatch();\n  const location = useLocation();\n  const path = match.path;\n\n  return (\n    <Layout>\n      <CustomHeader />\n      <Layout>\n        <Sider width={200} className=\"site-layout-background\">\n          <Menu\n            mode=\"inline\"\n            style={{ height: '100%', borderRight: 0 }}\n            selectedKeys={[location.pathname]}\n          >\n            <Menu.Item key=\"/patient/emr\" icon={<DashboardOutlined />}>\n              <Link to=\"/patient/emr\">Bệnh án</Link>\n            </Menu.Item>\n\n            <Menu.Item key=\"/patient/profile\" icon={<UserOutlined />}>\n              <Link to=\"/patient/profile\">Hồ sơ</Link>\n            </Menu.Item>\n          </Menu>\n        </Sider>\n        <Layout style={{ padding: '0 24px 24px' }}>\n          <Content\n            className=\"site-layout-background\"\n            style={{\n              padding: 24,\n              margin: 0,\n              minHeight: 280,\n            }}\n          >\n            <Switch>\n              {/* Dashboard */}\n              <Route path={`${path}/emr`} exact>\n                <PatientEmrPage />\n              </Route>\n\n              <Route path={`${path}/emr/:emrId`}>\n                <PatientEmrDetailsPage />\n              </Route>\n\n              <Route path={`${path}/profile`}>\n                <ProfilePage />\n              </Route>\n\n              {/* Fallback */}\n              <Redirect to={`/patient/emr`} />\n            </Switch>\n          </Content>\n        </Layout>\n      </Layout>\n    </Layout>\n  )\n}\n\nexport default withPrivateRoute(PatientLayout, ['patient']);","import React, { useEffect } from 'react';\nimport { Route, HashRouter as Router, Switch, Redirect  } from 'react-router-dom';\nimport LoginPage from 'pages/login';\nimport Cookie from 'js-cookie';\nimport jwtDecode from 'jwt-decode';\nimport AdminLayout from 'layouts/AdminLayout/AdminLayout';\nimport PhysicianLayout from 'layouts/PhysicianLayout/PhysicianLayout';\nimport ReceptionistLayout from 'layouts/ReceptionistLayout/ReceptionistLayout';\nimport setupInterceptor from 'utils/interceptor';\nimport { useDispatch } from 'react-redux';\nimport { getProfileAction } from 'store/actions/user.action';\nimport { refreshToken } from 'services/auth/auth.service';\nimport moment from 'moment';\nimport 'moment/locale/vi';\n\n// import \"normalize.css/normalize.css\";\n// import \"@blueprintjs/core/lib/css/blueprint.css\";\n// import \"@blueprintjs/icons/lib/css/blueprint-icons.css\";\nimport 'antd/dist/antd.css';\nimport 'react-quill/dist/quill.snow.css';\n// import 'react-quill/dist/quill.bubble.css';\n// import 'react-quill/dist/quill.core.css';\nimport 'styles/main.scss';\nimport VerifyPage from 'pages/verify-email';\nimport PatientLayout from 'layouts/PatientLayout/PatientLayout';\n\nmoment.locale('vi');\n\n\nfunction App() {\n\n  setupInterceptor();\n\n  const dispatch = useDispatch();\n\n  function fetchProfile() {\n    try {\n      const token = Cookie.get('EMR_token');\n      if (token && jwtDecode(token)) {\n        dispatch(getProfileAction());\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async function checkRefresh() {\n    try {\n      const token = Cookie.get('EMR_token');\n      const refresh = Cookie.get('EMR_refresh');\n      if (!token && refresh) {\n        const newTokenReponse = await refreshToken(refresh);\n        const newToken = newTokenReponse.data;\n        Cookie.set('EMR_token', newToken.access_token, { expires: 3/24 });\n      }\n      fetchProfile();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  useEffect(() => {\n    checkRefresh();\n  });\n  \n  return (\n    <div className=\"app\">\n      <Router>\n        <Switch>\n          <Route path=\"/login\" component={LoginPage} />\n          <Route path=\"/verify-email\" component={VerifyPage} />\n\n          <Route path=\"/admin\" component={AdminLayout} />\n          <Route path=\"/physician\" component={PhysicianLayout} />\n          <Route path=\"/receptionist\" component={ReceptionistLayout} />\n          <Route path=\"/patient\" component={PatientLayout} />\n\n          <Redirect to=\"/login\" />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import axios from 'axios';\nimport { message } from 'antd';\nimport Cookie from 'js-cookie';\nimport * as AuthService from 'services/auth/auth.service';\nimport jwtDecode from 'jwt-decode';\nimport { API_URL } from 'constant/apiUrl';\n\nexport default function setupInterceptor() {\n  axios.interceptors.request.use((config) => {\n\n    if (config.method === 'delete') {\n      message.loading('Đang thực hiện');\n    }\n\n    try {\n      const token = Cookie.get('EMR_token');\n      if (token && jwtDecode(token)) {\n        config.headers['Authorization'] = `Bearer ${token}`;\n      }\n    } catch (error) {\n      console.log({ error });\n    }\n    return config;\n  }, (error) => Promise.reject(error));\n\n  axios.interceptors.response.use(((res) => {\n    return res;\n  }), async (error) => {\n    const originalRequest = error.config;\n\n    if (error.response.status === 401 && !originalRequest._retry && originalRequest.url !== `${API_URL}/auth/refresh-token/`) {\n      Cookie.remove(\"EMR_token\");\n\n      originalRequest._retry = true;\n\n      let refreshToken = Cookie.get('EMR_refresh');\n\n      if (refreshToken && refreshToken.length > 0) {\n        try {\n          const refreshResponse = await AuthService.refreshToken(refreshToken);\n          const newToken = refreshResponse.data.access_token;\n          Cookie.set('EMR_token', newToken);\n\n          const config = error.config;\n          config.headers['Authorization'] = `Bearer ${newToken}`;\n\n          return new Promise((resolve, reject) => {\n            return axios.request(config)\n              .then(res => resolve(res))\n              .catch(error => reject(error))\n          })\n        } catch (error) {\n          Cookie.remove(\"EMR_refresh\");\n          return Promise.reject(error);\n        }\n      }\n    } else {\n      // Do not show error alert on veirfy email page because it already have its own error messages\n      if (!originalRequest.url.includes('/api/auth/verify-email')) {\n        const errorMessage = error.response?.data.message || \"Unexpected error occurred\";\n        message.error(errorMessage);\n      }\n\n    }\n\n    return Promise.reject(error);\n  })\n}","import * as actionTypes from '../actionTypes';\n\nconst initialState = {\n  loginLoading: false\n}\n\nexport default function authReducer (state = initialState, action) {\n  switch(action.type) {\n    case actionTypes.LOGIN_PENDING:\n      return {\n        ...state,\n        loginLoading: true\n      }\n\n    case actionTypes.LOGIN_SUCCESS:\n      return {\n        ...state,\n        loginLoading: false\n      }\n\n    case actionTypes.LOGIN_FAILURE:\n      return {\n        ...state,\n        loginLoading: false\n      }\n\n    default:\n      return {\n        ...state\n      }\n  }\n}","import * as actionTypes from '../actionTypes';\n\nconst initialState = {\n  statistic: null,\n  fetchLoading: false\n}\n\nexport default function dashboardReducer(state = initialState, action) {\n  switch (action.type) {\n    case actionTypes.FETCH_DASHBOARD_PENDING:\n      return {\n        ...state,\n        fetchLoading: true\n      }\n    case actionTypes.FETCH_DASHBOARD_SUCCESS:\n      return {\n        ...state,\n        fetchLoading: false,\n        statistic: action.payload\n      }\n    case actionTypes.FETCH_DASHBOARD_FAILURE:\n      return {\n        ...state,\n        fetchLoading: false\n      }\n    default:\n      return {\n        ...state\n      }\n  }\n}","import * as actionTypes from '../actionTypes';\n\nconst initialState = {\n  diseaseCategories: [],\n  createLoading: false,\n  fetchLoading: false,\n  detailsLoading: false,\n  updateLoading: false,\n  deleteLoading: false\n}\n\nexport default function diseaseCategoryReducer(state = initialState, action) {\n  switch (action.type) {\n    // fetch all\n    case actionTypes.FETCH_DISEASE_CATEGORIES_PENDING:\n      return {\n        ...state,\n        fetchLoading: true\n      }\n    case actionTypes.FETCH_DISEASE_CATEGORIES_SUCCESS:\n      return {\n        ...state,\n        fetchLoading: false,\n        diseaseCategories: action.payload\n      }\n    case actionTypes.FETCH_DISEASE_CATEGORIES_FAILURE:\n      return {\n        ...state,\n        fetchLoading: false,\n      }\n    // Default\n    default:\n      return {\n        ...state\n      }\n  }\n}","import * as actionTypes from '../actionTypes';\n\nconst initialState = {\n  diseases: null,\n  createLoading: false,\n  fetchLoading: false,\n  detailsLoading: false,\n  updateLoading: false,\n  deleteLoading: false\n}\n\nexport default function diseaseReducer(state = initialState, action) {\n  switch (action.type) {\n    // fetch all\n    case actionTypes.FETCH_DISEASES_PENDING:\n      return {\n        ...state,\n        fetchLoading: true\n      }\n    case actionTypes.FETCH_DISEASES_SUCCESS:\n      return {\n        ...state,\n        fetchLoading: false,\n        diseases: action.payload\n      }\n    case actionTypes.FETCH_DISEASES_FAILURE:\n      return {\n        ...state,\n        fetchLoading: false,\n      }\n    // Default\n    default:\n      return {\n        ...state\n      }\n  }\n}","import * as actionTypes from '../actionTypes';\n\nconst initialState = {\n  drugCategories: null,\n  drugCategoryDetails: null,\n  createLoading: false,\n  fetchLoading: false,\n  detailsLoading: false,\n  updateLoading: false,\n  deleteLoading: false\n}\n\nexport default function drugCategoryReducer(state = initialState, action) {\n  switch (action.type) {\n    // Create drug category\n    case actionTypes.CREATE_DRUG_CATEGORY_PENDING:\n      return {\n        ...state,\n        createLoading: true\n      }\n    case actionTypes.CREATE_DRUG_CATEGORY_SUCCESS:\n    case actionTypes.CREATE_DRUG_CATEGORY_FAILURE:\n      return {\n        ...state,\n        createLoading: false\n      }\n    // Drug categories\n    case actionTypes.FETCH_DRUG_CATEGORIES_PENDING:\n      return {\n        ...state,\n        fetchLoading: true,\n      }\n    case actionTypes.FETCH_DRUG_CATEGORIES_SUCCESS:\n      return {\n        ...state,\n        fetchLoading: false,\n        drugCategories: action.payload\n      }\n    case actionTypes.FETCH_DRUG_CATEGORIES_FAILURE:\n      return {\n        ...state,\n        fetchLoading: false,\n      }\n\n    // Drug category details\n    case actionTypes.FETCH_DRUG_CATEGORY_DETAILS_PENDING:\n      return {\n        ...state,\n        detailsLoading: true,\n      }\n    case actionTypes.FETCH_DRUG_CATEGORY_DETAILS_SUCCESS:\n      return {\n        ...state,\n        drugCategoryDetails: action.payload,\n        detailsLoading: false,\n      }\n    case actionTypes.FETCH_DRUG_CATEGORY_DETAILS_FAILURE:\n      return {\n        ...state,\n        detailsLoading: false,\n      }\n    // Update drug category\n    case actionTypes.UPDATE_DRUG_CATEGORY_PENDING:\n      return {\n        ...state,\n        updateLoading: true\n      }\n    case actionTypes.UPDATE_DRUG_CATEGORY_SUCCESS:\n    case actionTypes.UPDATE_DRUG_CATEGORY_FAILURE:\n      return {\n        ...state,\n        updateLoading: false\n      }\n    // Delete drug category\n    case actionTypes.DELETE_DRUG_CATEGORY_PENDING:\n      return {\n        ...state,\n        deleteLoading: true\n      }\n    case actionTypes.DELETE_DRUG_CATEGORY_SUCCESS:\n    case actionTypes.DELETE_DRUG_CATEGORY_FAILURE:\n      return {\n        ...state,\n        deleteLoading: false\n      }\n    default:\n      return {\n        ...state\n      }\n  }\n}","import * as actionTypes from '../actionTypes';\n\nconst initialState = {\n  user: null,\n  getProfileLoading: false,\n}\n\nexport default function userReducer(state = initialState, action) {\n  switch (action.type) {\n    case actionTypes.GET_PROFILE_PENDING:\n      return {\n        ...state,\n        user: null,\n        getProfileLoading: true\n      }\n    case actionTypes.GET_PROFILE_SUCCESS:\n      return {\n        ...state,\n        user: action.payload,\n        getProfileLoading: false\n      }\n    case actionTypes.GET_PROFILE_FAILURE:\n      return {\n        ...state,\n        user: null,\n        getProfileLoading: false\n      }\n    \n    case actionTypes.LOGOUT:\n      return {\n        ...state,\n        user: null,\n        getProfileLoading: false\n      }\n    default:\n      return { ...state }\n  }\n}","import { combineReducers } from 'redux';\nimport authReducer from './reducers/auth.reducer';\nimport dashboardReducer from './reducers/dashboard.reducer';\nimport diseaseCategoryReducer from './reducers/disease-category.reducer';\nimport diseaseReducer from './reducers/disease.reducer';\nimport drugCategoryReducer from './reducers/drug-category.reducer';\nimport userReducer from './reducers/user.reducer';\n\nconst rootReducer = combineReducers({\n  dashboardState: dashboardReducer,\n  userState: userReducer,\n  authState: authReducer,\n  drugCategoryState: drugCategoryReducer,\n  diseaseCategoryState: diseaseCategoryReducer,\n  diseaseState: diseaseReducer\n})\n\nexport default rootReducer;","import { createStore, compose, applyMiddleware } from 'redux';\nimport rootReducer from './rootReducer';\nimport thunk from 'redux-thunk';\n\nconst middlewares = [thunk]\n\nconst composeEnhancers =\n  typeof window === 'object' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : compose;\n\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(...middlewares)));\n\nexport default store;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from 'store/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\nimport { ConfigProvider } from 'antd';\nimport viVN from 'antd/lib/locale/vi_VN';\n\nReactDOM.render(\n  <Provider store={store}>\n    <ConfigProvider locale={viVN}>\n      <App />\n    </ConfigProvider>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}