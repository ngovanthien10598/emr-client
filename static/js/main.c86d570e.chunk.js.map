{"version":3,"sources":["components/VistItem/VisitItem.module.scss","components/Circle/Circle.module.scss","components/Icons/LoginIcon.jsx","store/actionTypes.js","constant/apiUrl.js","services/auth/auth.service.js","services/user/user.service.js","store/actions/user.action.js","store/actions/auth.action.js","forms/LoginForm/LoginForm.jsx","utils/routing.js","pages/login.jsx","pages/admin/dashboard.jsx","forms/DrugCategoryForm/DrugCategoryForm.jsx","services/admin/drug-category.service.js","constant/formActions.js","pages/common/drug/drug-category.jsx","forms/DrugUnitForm/DrugUnitForm.jsx","services/admin/drug-unit.service.js","pages/common/drug/drug-unit.jsx","services/admin/drug.service.js","forms/DrugForm/DrugForm.jsx","pages/common/drug/drug.jsx","forms/DrugInstructionForm/DrugInstructionForm.jsx","services/admin/drug-instruction.service.js","pages/common/drug/drug-instruction.jsx","forms/DiseaseCategoryForm/DiseaseCategoryForm.jsx","services/admin/disease-category.service.js","pages/common/disease/disease-category.jsx","services/admin/disease.service.js","forms/DiseaseForm/DiseaseForm.jsx","pages/common/disease/disease.jsx","pages/common/notification/notification.jsx","components/VistItem/VisitItem.jsx","services/user/room.service.js","services/user/visit.service.js","forms/Visit/VisitLivingFunctionForm.jsx","pages/common/visit/visit.jsx","pages/common/patient/patient.jsx","pages/common/appointment/apointment.jsx","services/admin/medical-service.service.js","forms/ServiceForm/ServiceForm.jsx","pages/common/service/service.jsx","services/admin/working-hours.service.js","pages/admin/working-hour.jsx","forms/RoomForm/RoomForm.jsx","services/admin/room.service.js","pages/common/room/room.jsx","services/admin/user.service.js","constant/roles.js","forms/UserForm/UserForm.jsx","components/Circle/Circle.jsx","pages/admin/account.jsx","pages/admin/setting.jsx","HOCs/withPrivateRoute.jsx","components/Header.jsx","layouts/AdminLayout/AdminLayout.jsx","layouts/PhysicianLayout/PhysicianLayout.jsx","services/user/patient.service.js","forms/PatientForm/PatientForm.jsx","pages/receptionist/receive.jsx","pages/common/profile/profile.jsx","layouts/ReceptionistLayout/ReceptionistLayout.jsx","components/Icons/EmailIcon.jsx","pages/verify-email.jsx","App.jsx","utils/interceptor.js","store/reducers/auth.reducer.js","store/reducers/user.reducer.js","store/rootReducer.js","store/store.js","serviceWorker.js","index.jsx"],"names":["module","exports","LoginIcon","width","height","xmlns","xmlnsXlink","version","id","x","y","viewBox","fill","xmlSpace","cx","cy","r","d","LOGIN_PENDING","LOGIN_SUCCESS","LOGIN_FAILURE","GET_PROFILE_PENDING","GET_PROFILE_SUCCESS","GET_PROFILE_FAILURE","LOGOUT","API_URL","endpointPrefix","login","email","password","url","axios","post","refreshToken","refresh_token","verifyEmailAPI","token","get","getProfile","getProfileSuccess","user","type","actionTypes","payload","getProfileAction","dispatch","a","profileRes","data","console","log","logoutAction","Cookie","remove","LoginForm","history","useHistory","useDispatch","authState","useSelector","state","userState","useEffect","role","redirectPath","getRedirectPath","replace","className","layout","autoComplete","onFinish","values","loginRes","loginData","accessToken","access_token","set","expires","Icon","component","Item","name","placeholder","Password","to","loading","loginLoading","getProfileLoading","block","size","htmlType","LoginPage","props","AdminDashboard","DrugCategoryForm","form","defaultCategory","label","initialValue","autoFocus","getDrugCategoryAPI","search","addDrugCategoryAPI","updateDrugCategoryAPI","put","deleteDrugCategoryAPI","delete","formActions","DrugCategoryPage","useState","modalVisible","setModalVisible","categories","setCategories","fetchingCategories","setFetchingCategories","modalLoading","setModalLoading","action","setAction","selectedCategory","setSelectedCategory","Form","useForm","drugCategoryForm","tableColumns","title","key","render","text","record","index","dataIndex","icon","EditOutlined","onClick","category","onConfirm","handleDelete","okText","okType","cancelText","DeleteOutlined","getDrugCategories","response","handleFormSubmit","validateFields","unit","justify","PlusOutlined","rowKey","columns","dataSource","pagination","visible","onCancel","confirmLoading","destroyOnClose","afterClose","resetFields","onOk","DrugUnitForm","defaultUnit","getDrugUnitsAPI","addDrugUnitAPI","updateDrugUnitAPI","deleteDrugUnitAPI","DrugUnitPage","drugUnits","setDrugUnits","fetchingDrugUnits","setFetchingDrugUnits","selectedUnit","setSelectedUnit","drugUnitForm","getDrugUnits","getDrugsAPI","getDrugDetailsAPI","addDrugAPI","code","drug_category","price","drug_unit","Number","updateDrugAPI","deleteDrugAPI","DrugForm","defaultDrug","units","setUnits","drugDetail","setDrugDetail","catLoading","setCatLoading","unitLoading","setUnitLoading","detailLoading","setDetailLoading","catResponse","unitResponse","getDrugDetail","detailResponse","prevCats","findIndex","cat","prevUnits","u","Promise","all","getData","setFieldsValue","spinning","suffix","map","Option","value","DrugPage","drugs","setDrugs","fetchingDrugs","setFetchingDrugs","selectedDrug","setSelectedDrug","drugForm","thousandSeparator","displayType","drug","getDrugs","results","DrugInstructionForm","defaultInstruction","instruction","getDrugInstructionsAPI","addDrugInstructionAPI","updateDrugInstructionAPI","deleteDrugInstructionAPI","DrugInstructionPage","drugInstructions","setDrugInstructions","fetchingDrugInstructions","setFetchingDrugInstructions","selectedInstruction","setSelectedInstruction","drugInstructionForm","ins","getDrugInstructions","DiseaseCategoryForm","getDiseaseCategoryAPI","addDiseaseCategoryAPI","updateDiseaseCategoryAPI","deleteDiseaseCategoryAPI","DiseaseCategoryPage","diseaseCategoryForm","getDiseaseCategories","getDiseasesAPI","getDiseaseDetailsAPI","addDiseaseAPI","disease_category","updateDiseaseAPI","deleteDiseaseAPI","DiseaseForm","defaultDisease","diseaseDetail","setDiseaseDetail","getDiseaseDetail","DiseasePage","diseases","setDiseases","fetchingDiseases","setFetchingDiseases","selectedDisease","setSelectedDisease","diseaseForm","disease","getDiseases","NotificationPage","VisitItem","visit","onPatientClick","rowClasses","classnames","styles","align","visit_number","patient","first_name","last_name","gender","getRoomAPI","getVisitDataAPI","createVisitAPI","patientId","roomId","room_id","patient_id","VisitLivingFunctionForm","bmi","setBmi","onChange","heightStr","getFieldValue","weightStr","weight","Math","pow","gutter","field","flex","toFixed","VisitPage","rooms","setRooms","visitData","setVisitData","roomLoading","setRoomLoading","selectedRoom","setSelectedRoom","visiting","setVisiting","livingFuncsForm","visitList","filter","createdAt","Date","created_at","today","getDate","getMonth","getFullYear","room","getRooms","roomResponse","prevSelected","localStorage","getItem","getVisitData","visitDataResponse","handlePatientClick","prev","prop","emrObj","avatar","physician","emr_diseases","emr_services","emr_drugs","images","symptom","newArr","unique","obj","pos","arr","mapObj","indexOf","setItem","JSON","stringify","getInitialData","localVisitingStr","localVisitingObj","parse","style","length","split","description","maxWidth","v","TabPane","tab","span","DOB","moment","format","defaultActiveKey","Panel","header","PatientPage","AppointmentPage","getServicesAPI","getServiceDetailsAPI","addServiceAPI","updateServiceAPI","deleteServiceAPI","ServiceForm","defaultService","serviceDetail","setServiceDetail","getServiceDetail","ServicePage","services","setServices","fetchingServices","setFetchingServices","selectedService","setSelectedService","serviceForm","service","getServices","getWorkingHoursAPI","updateWorkingHourAPI","weekday","isClosed","is_closed","WorkingHourPage","workingHours","setWorkingHours","setLoading","checked","handleWorkingHourChange","getWorkingHours","workingHoursResponse","sort","b","wh","RoomForm","defaultRoom","number","addRoomAPI","updateRoomAPI","deleteRoomAPI","RoomPage","roomForm","getUsersAPI","query","qs","getUserDetailsAPI","addUserAPI","phone","role_id","updateUserAPI","deleteUserAPI","blockUserAPI","userId","unblockUserAPI","ROLES","display","ROLES_LIST","UserForm","defaultUser","userDetail","setUserDetail","getUserDetail","rules","required","message","Group","Circle","classes","circle","color","AdminAccountPage","useLocation","pathname","urlSearchParams","URLSearchParams","currentPageOnURL","page","setPage","users","setUsers","fetchingUsers","setFetchingUsers","selectedUser","setSelectedUser","userForm","is_verified_email","is_verified_phone","EyeOutlined","handleBlockUnblock","is_active","danger","LockOutlined","UnlockOutlined","getUsers","defaultCurrent","current","pageSize","total","count","push","AdminSettingPage","withPrivateRoute","Child","roles","userRole","includes","isValidRole","jwtDecode","error","Header","Layout","CustomHeader","ghost","LogoutOutlined","Modal","confirm","ExclamationCircleOutlined","content","Sider","Content","SubMenu","Menu","match","useRouteMatch","location","path","mode","borderRight","selectedKeys","DashboardOutlined","MedicineBoxOutlined","BugOutlined","NotificationOutlined","ContainerOutlined","IdcardOutlined","CalendarOutlined","DollarOutlined","ClockCircleOutlined","AppstoreOutlined","UserOutlined","SettingOutlined","padding","margin","minHeight","exact","listAllPatientsAPI","PatientForm","ReceivePage","patientData","setPatientData","patientLoading","setPatientLoading","isCreatingVisit","setCreatingVisit","patientForm","renderMenu","handleCreateVisit","overlay","overlayStyle","minWidth","trigger","listAllPatients","patientResponse","createVisitResponse","extra","Search","ProfilePage","EmailIcon","enableBackground","VerifyPage","success","setSuccess","setError","isValidToken","isValid","test","verifyEmail","showIcon","App","interceptors","request","use","config","method","headers","reject","res","destroy","originalRequest","status","_retry","AuthService","refreshResponse","newToken","resolve","then","catch","errorMessage","fetchProfile","refresh","newTokenReponse","checkRefresh","AdminLayout","PhysicianLayout","ReceptionistLayout","initialState","rootReducer","combineReducers","middlewares","thunk","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","Boolean","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c86d570e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"VisitItem_row__2Jg5a\",\"col\":\"VisitItem_col__1pyao\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"circle\":\"Circle_circle__3fC-i\",\"circle--success\":\"Circle_circle--success__1IfvS\"};","import React from 'react';\n\nconst LoginIcon = () => (\n  <svg width=\"50\" height=\"50\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" version=\"1.1\" id=\"Capa_1\" x=\"0px\" y=\"0px\" viewBox=\"0 0 512.002 512.002\" fill=\"currentColor\" xmlSpace=\"preserve\">\n    <g>\n      <g>\n        <g>\n          <circle cx=\"338\" cy=\"346.001\" r=\"20\" />\n          <path d=\"M238,472.001H80c-22.056,0-40-17.944-40-40v-164c0-22.056,17.944-40,40-40h288c22.056,0,40,17.944,40,40v40     c0,11.046,8.954,20,20,20c11.046,0,20-8.954,20-20v-40c0-44.112-35.888-80-80-80h-24.037v-70.534     c0-64.771-53.832-117.466-120-117.466s-120,52.695-120,117.466v70.534H80c-44.112,0-80,35.888-80,80v164     c0,44.112,35.888,80,80,80h158c11.046,0,20-8.954,20-20S249.046,472.001,238,472.001z M143.963,117.467     c0-42.715,35.888-77.466,80-77.466s80,34.751,80,77.466v70.534h-160V117.467z\" />\n          <path d=\"M503.643,325.739c-8.982-6.431-21.477-4.362-27.904,4.62l-98.581,137.7c-2.692,3.122-6.066,3.796-7.874,3.916     c-1.854,0.123-5.424-0.112-8.567-3.061l-63.708-62.171c-7.906-7.716-20.568-7.559-28.282,0.345     c-7.715,7.905-7.561,20.567,0.345,28.282l63.82,62.281c0.06,0.058,0.119,0.116,0.18,0.173C342.639,506.933,355.41,512,368.55,512     c1.129,0,2.261-0.037,3.393-0.113c14.314-0.954,27.679-7.915,36.666-19.097c0.232-0.29,0.456-0.585,0.673-0.887l98.981-138.26     C514.692,344.662,512.624,332.168,503.643,325.739z\" />\n          <circle cx=\"262\" cy=\"346.001\" r=\"20\" />\n          <circle cx=\"112\" cy=\"346.001\" r=\"20\" />\n          <circle cx=\"187\" cy=\"346.001\" r=\"20\" />\n        </g>\n      </g>\n    </g>\n    <g>\n    </g>\n    <g>\n    </g>\n    <g>\n    </g>\n    <g>\n    </g>\n    <g>\n    </g>\n    <g>\n    </g>\n    <g>\n    </g>\n    <g>\n    </g>\n    <g>\n    </g>\n    <g>\n    </g>\n    <g>\n    </g>\n    <g>\n    </g>\n    <g>\n    </g>\n    <g>\n    </g>\n    <g>\n    </g>\n  </svg>\n)\n\nexport default LoginIcon;","export const LOGIN_PENDING = \"LOGIN_PENDING\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_FAILURE = \"LOGIN_FAILURE\";\n\nexport const GET_PROFILE_PENDING = \"GET_PROFILE_PENDING\";\nexport const GET_PROFILE_SUCCESS = \"GET_PROFILE_SUCCESS\";\nexport const GET_PROFILE_FAILURE = \"GET_PROFILE_FAILURE\";\n\nexport const LOGOUT = \"LOGOUT\";","export const API_URL = 'https://emr-2020.wl.r.appspot.com/api';","import { API_URL } from \"constant/apiUrl\";\nimport axios from 'axios';\n\n\nconst endpointPrefix = `${API_URL}/auth`;\n\n/**\n * Login to system\n * @param email\n * @param password\n */\nexport function login(email, password) {\n  const url = `${endpointPrefix}/login/`;\n  return axios.post(url, {\n    email: email,\n    password: password\n  });\n}\n\n/**\n * This function is used to get new access token from refresh token\n * when current access token is expired\n * @param refreshToken Refresh token from last login\n */\nexport function refreshToken(refreshToken) {\n  const url = `${endpointPrefix}/refresh-token/`;\n  return axios.post(url, {\n    refresh_token: refreshToken\n  });\n}\n\n\nexport function verifyEmailAPI(token) {\n  const url = `${endpointPrefix}/verify-email/${token}/`;\n  return axios.get(url);\n}","import { API_URL } from \"constant/apiUrl\";\nimport axios from 'axios';\n\nconst endpointPrefix = `${API_URL}/user`;\n\n/**\n* Get user profile\n* @param token Access token\n*/\nexport function getProfile() {\n  const url = `${endpointPrefix}/profile/`;\n  return axios.get(url);\n}","import * as actionTypes from '../actionTypes';\nimport { getProfile } from 'services/user/user.service';\n\nfunction getProfilePending() {\n  return {\n    type: actionTypes.GET_PROFILE_PENDING\n  }\n}\n\nfunction getProfileSuccess(user) {\n  return {\n    type: actionTypes.GET_PROFILE_SUCCESS,\n    payload: user\n  }\n}\n\nfunction getProfileFailure() {\n  return {\n    type: actionTypes.GET_PROFILE_FAILURE\n  }\n}\n\nexport function getProfileAction() {\n  return async dispatch => {\n    try {\n      dispatch(getProfilePending());\n      const profileRes = await getProfile();\n      const user = profileRes.data;\n      dispatch(getProfileSuccess(user));\n    } catch(error) {\n      console.log(error);\n      dispatch(getProfileFailure());\n    }\n  }\n}\n\nexport function removeUserAction() {\n  return {\n    type: actionTypes.LOGOUT\n  }\n}","import * as actionTypes from '../actionTypes';\nimport { login } from 'services/auth/auth.service';\nimport Cookie from 'js-cookie';\nimport { getProfileAction, removeUserAction } from './user.action';\n\nfunction loginPending() {\n  return {\n    type: actionTypes.LOGIN_PENDING\n  }\n}\n\nfunction loginSuccess() {\n  return {\n    type: actionTypes.LOGIN_SUCCESS,\n  }\n}\n\nfunction loginFailure() {\n  return {\n    type: actionTypes.LOGIN_FAILURE\n  }\n}\n\nexport function loginAction(email, password) {\n  return async dispatch => {\n    try {\n      dispatch(loginPending());\n      const loginRes = await login(email, password);\n      const loginData = loginRes.data;\n\n      const accessToken = loginData.access_token;\n      const refreshToken = loginData.refresh_token;\n      Cookie.set('EMR_token', accessToken, { expires: 3 / 24 }); // 3 hours\n      Cookie.set('EMR_refresh', refreshToken, { expires: 7 }); // 7 days\n      dispatch(loginSuccess());\n      dispatch(getProfileAction());\n    } catch (error) {\n      dispatch(loginFailure());\n    }\n  }\n}\n\nexport function logoutAction() {\n  Cookie.remove('EMR_token');\n  Cookie.remove('EMR_refresh');\n\n  return dispatch => {\n    dispatch(removeUserAction());\n  }\n}","import React, { useEffect } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { Form, Input, Button } from 'antd';\nimport Icon from '@ant-design/icons';\nimport LoginIcon from 'components/Icons/LoginIcon';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { loginAction } from 'store/actions/auth.action';\nimport { getRedirectPath } from 'utils/routing';\n\nconst LoginForm = () => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const authState = useSelector(state => state.authState);\n  const userState = useSelector(state => state.userState);\n  const user = userState.user;\n\n  function handleSubmit(values) {\n    dispatch(loginAction(values.email, values.password));\n  }\n\n  useEffect(() => {\n    if (user && user.role) {\n      const redirectPath = getRedirectPath(user.role);\n      console.log(redirectPath);\n      history.replace(redirectPath);\n    }\n  }, [user, history]);\n\n  return (\n    <Form\n      className=\"auth\"\n      layout=\"vertical\"\n      autoComplete=\"off\"\n      onFinish={handleSubmit}>\n\n      <div className=\"auth__header text-center\">\n        <Icon component={LoginIcon} />\n        <h1 className=\"text-3xl\">Đăng nhập</h1>\n      </div>\n\n      <Form.Item name=\"email\">\n        <Input type=\"email\" placeholder=\"Email\" />\n      </Form.Item>\n\n      <Form.Item name=\"password\" className=\"m-0\">\n        <Input.Password placeholder=\"Mật khẩu\" />\n        {/* <Button type=\"link\"> */}\n        {/* </Button> */}\n      </Form.Item>\n      <Link className=\"block mt-2 mb-6\" to=\"/forgot-password\">Quên mật khẩu</Link>\n\n      <Form.Item>\n        <Button loading={authState.loginLoading || userState.getProfileLoading} block type=\"primary\" size=\"large\" htmlType=\"submit\">Đăng nhập</Button>\n      </Form.Item>\n    </Form>\n  )\n}\n\nexport default LoginForm;","export function getRedirectPath(role) {\n  if (!role) return \"/login\";\n\n  switch (role.id) {\n    case 1:\n      return \"/admin\";\n    case 2:\n      return \"/physician\";\n    case 3:\n      return \"/receptionist\";\n    case 4:\n      return \"/patient\";\n    default:\n      return \"\";\n  }\n}","import React from 'react';\nimport LoginForm from 'forms/LoginForm/LoginForm';\n\nconst LoginPage = (props) => {\n  return (\n    <main className=\"login-page\">\n      <LoginForm />\n    </main>\n  )\n}\n\nexport default LoginPage;","import React from 'react';\n\nconst AdminDashboard = () => {\n  return (\n    <div>Admin dashboard</div>\n  )\n}\n\nexport default AdminDashboard;","import React from 'react';\nimport { Form, Input } from 'antd';\n\nconst DrugCategoryForm = props => {\n  const { form, onFinish, defaultCategory } = props;\n\n  return (\n    <Form\n      layout=\"vertical\"\n      form={form}\n      onFinish={onFinish}>\n      <Form.Item label=\"Loại thuốc\" name=\"name\" initialValue={defaultCategory?.name}>\n        <Input autoFocus />\n      </Form.Item>\n    </Form>\n  )\n}\n\nexport default DrugCategoryForm;","import axios from 'axios';\n\nimport { API_URL } from \"constant/apiUrl\";\n\nconst endpointPrefix = `${API_URL}/admin/manage-drug-category`;\n\nexport function getDrugCategoryAPI(search = \"\") {\n  const url = `${endpointPrefix}/?search=${search}`;\n  return axios.get(url);\n}\n\nexport function addDrugCategoryAPI(name) {\n  const url = `${endpointPrefix}/`;\n  return axios.post(url, { name: name });\n}\n\nexport function updateDrugCategoryAPI(id, name) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.put(url, {\n    name: name\n  })\n}\n\nexport function deleteDrugCategoryAPI(id) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.delete(url);\n}","export const formActions = {\n  CREATE: 'CREATE',\n  UPDATE: 'UPDATE'\n}","import React, { useState, useEffect } from 'react';\nimport { Row, Col, Button, Modal, Table, Form, Popconfirm, Space } from 'antd';\nimport { PlusOutlined, EditOutlined, DeleteOutlined } from '@ant-design/icons';\nimport DrugCategoryForm from 'forms/DrugCategoryForm/DrugCategoryForm';\nimport { addDrugCategoryAPI, deleteDrugCategoryAPI, getDrugCategoryAPI, updateDrugCategoryAPI } from 'services/admin/drug-category.service';\nimport { formActions } from 'constant/formActions';\n\nconst DrugCategoryPage = () => {\n\n  const [modalVisible, setModalVisible] = useState(false);\n  const [categories, setCategories] = useState([]);\n  const [fetchingCategories, setFetchingCategories] = useState(false);\n  const [modalLoading, setModalLoading] = useState(false);\n  const [action, setAction] = useState(formActions.CREATE);\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [drugCategoryForm] = Form.useForm();\n\n  const tableColumns = [\n    {\n      title: '#',\n      key: '#',\n      render: (text, record, index) => index + 1\n    },\n    {\n      title: 'Tên',\n      key: 'name',\n      dataIndex: 'name'\n    },\n    {\n      title: 'Hành động',\n      key: 'action',\n      render: (text, record, index) => (\n        <Space size={10}>\n          <Button icon={<EditOutlined />} onClick={() => handleEditClick(record)}></Button>\n          <Popconfirm\n            onConfirm={() => handleDelete(record)} title=\"Bạn có chắc muốn xóa không?\"\n            okText=\"Xóa\"\n            okType=\"danger\"\n            cancelText=\"Hủy bỏ\">\n            <Button icon={<DeleteOutlined />}></Button>\n          </Popconfirm>\n        </Space>\n      )\n    }\n  ]\n\n  function handleOpenModal() {\n    setAction(formActions.CREATE);\n    setModalVisible(true);\n  }\n\n  function handleCloseModal() {\n    setModalVisible(false);\n  }\n\n  async function getDrugCategories() {\n    try {\n      setFetchingCategories(true);\n      const response = await getDrugCategoryAPI();\n      setCategories(response.data);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setFetchingCategories(false);\n    }\n  }\n\n  async function handleFormSubmit() {\n    try {\n      setModalLoading(true);\n      const values = await drugCategoryForm.validateFields();\n      if (action === formActions.CREATE) {\n        await addDrugCategoryAPI(values.name);\n      }\n\n      if (action === formActions.UPDATE) {\n        await updateDrugCategoryAPI(selectedCategory.id, values.name);\n      }\n\n      getDrugCategories();\n\n      setModalVisible(false);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setModalLoading(false);\n    }\n  }\n\n  function handleEditClick(category) {\n    setAction(formActions.UPDATE);\n    setSelectedCategory(category);\n    setModalVisible(true);\n  }\n\n  async function handleDelete(unit) {\n    try {\n      await deleteDrugCategoryAPI(unit.id);\n      getDrugCategories();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  function afterClose() {\n    drugCategoryForm.resetFields();\n    setSelectedCategory(null);\n  }\n\n  useEffect(() => {\n    getDrugCategories();\n  }, []);\n\n  return (\n    <>\n      <Row justify=\"space-between\">\n        <Col><h1 className=\"text-xl\">Quản lý loại thuốc</h1></Col>\n        <Col>\n          <Button type=\"primary\" icon={<PlusOutlined />} onClick={handleOpenModal}>Tạo mới</Button>\n        </Col>\n      </Row>\n      <Table\n        rowKey=\"id\"\n        columns={tableColumns}\n        dataSource={categories}\n        pagination={false}\n        loading={fetchingCategories} />\n      <Modal\n        visible={modalVisible}\n        title={action === formActions.CREATE ? 'Thêm loại thuốc' : 'Cập nhật loại thuốc'}\n        onCancel={handleCloseModal}\n        confirmLoading={modalLoading}\n        destroyOnClose={true}\n        afterClose={afterClose}\n        onOk={handleFormSubmit}>\n        <DrugCategoryForm onFinish={handleFormSubmit} form={drugCategoryForm} defaultCategory={selectedCategory} />\n      </Modal>\n    </>\n  )\n}\n\nexport default DrugCategoryPage;","import React from 'react';\nimport { Form, Input } from 'antd';\n\nconst DrugUnitForm = props => {\n  const { form, onFinish, defaultUnit } = props;\n\n  return (\n    <Form\n      layout=\"vertical\"\n      form={form}\n      onFinish={onFinish}>\n      <Form.Item label=\"Đơn vị tính\" name=\"name\" initialValue={defaultUnit?.name}>\n        <Input autoFocus />\n      </Form.Item>\n    </Form>\n  )\n}\n\nexport default DrugUnitForm;","import axios from 'axios';\n\nimport { API_URL } from \"constant/apiUrl\";\n\nconst endpointPrefix = `${API_URL}/admin/manage-drug-unit`;\n\nexport function getDrugUnitsAPI(search = \"\") {\n  const url = `${endpointPrefix}/?search=${search}`;\n  return axios.get(url);\n}\n\nexport function addDrugUnitAPI(name) {\n  const url = `${endpointPrefix}/`;\n  return axios.post(url, { name: name });\n}\n\nexport function updateDrugUnitAPI(id, name) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.put(url, {\n    name: name\n  })\n}\n\nexport function deleteDrugUnitAPI(id) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.delete(url);\n}","import React, { useState, useEffect } from 'react';\nimport { Row, Col, Button, Modal, Table, Form, Popconfirm, Space } from 'antd';\nimport { PlusOutlined, EditOutlined, DeleteOutlined } from '@ant-design/icons';\nimport DrugUnitForm from 'forms/DrugUnitForm/DrugUnitForm';\nimport { getDrugUnitsAPI, addDrugUnitAPI, updateDrugUnitAPI, deleteDrugUnitAPI } from 'services/admin/drug-unit.service';\nimport { formActions } from 'constant/formActions';\n\nconst DrugUnitPage = () => {\n\n  const [modalVisible, setModalVisible] = useState(false);\n  const [drugUnits, setDrugUnits] = useState([]);\n  const [fetchingDrugUnits, setFetchingDrugUnits] = useState(false);\n  const [modalLoading, setModalLoading] = useState(false);\n  const [action, setAction] = useState(formActions.CREATE);\n  const [selectedUnit, setSelectedUnit] = useState(null);\n  const [drugUnitForm] = Form.useForm();\n\n  const tableColumns = [\n    {\n      title: '#',\n      key: '#',\n      render: (text, record, index) => index + 1\n    },\n    {\n      title: 'Đơn vị tính',\n      key: 'name',\n      dataIndex: 'name'\n    },\n    {\n      title: 'Hành động',\n      key: 'action',\n      render: (text, record, index) => (\n        <Space size={10}>\n          <Button icon={<EditOutlined />} onClick={() => handleEditClick(record)}></Button>\n          <Popconfirm\n            onConfirm={() => handleDelete(record)} title=\"Bạn có chắc muốn xóa không?\"\n            okText=\"Xóa\"\n            okType=\"danger\"\n            cancelText=\"Hủy bỏ\">\n            <Button icon={<DeleteOutlined />}></Button>\n          </Popconfirm>\n        </Space>\n      )\n    }\n  ]\n\n  function handleOpenModal() {\n    setAction(formActions.CREATE);\n    setModalVisible(true);\n  }\n\n  function handleCloseModal() {\n    setModalVisible(false);\n  }\n\n  async function getDrugUnits() {\n    try {\n      setFetchingDrugUnits(true);\n      const response = await getDrugUnitsAPI();\n      setDrugUnits(response.data);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setFetchingDrugUnits(false);\n    }\n  }\n\n  async function handleFormSubmit() {\n    try {\n      setModalLoading(true);\n      const values = await drugUnitForm.validateFields();\n      if (action === formActions.CREATE) {\n        await addDrugUnitAPI(values.name);\n      }\n\n      if (action === formActions.UPDATE) {\n        await updateDrugUnitAPI(selectedUnit.id, values.name);\n      }\n\n      getDrugUnits();\n\n      setModalVisible(false);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setModalLoading(false);\n    }\n  }\n\n  function handleEditClick(unit) {\n    setAction(formActions.UPDATE);\n    setSelectedUnit(unit);\n    setModalVisible(true);\n  }\n\n  async function handleDelete(unit) {\n    try {\n      await deleteDrugUnitAPI(unit.id);\n      getDrugUnits();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  function afterClose() {\n    drugUnitForm.resetFields();\n    setSelectedUnit(null);\n  }\n\n  useEffect(() => {\n    getDrugUnits();\n  }, []);\n\n  return (\n    <>\n      <Row justify=\"space-between\">\n        <Col><h1 className=\"text-xl\">Quản lý đơn vị tính</h1></Col>\n        <Col>\n          <Button type=\"primary\" icon={<PlusOutlined />} onClick={handleOpenModal}>Tạo mới</Button>\n        </Col>\n      </Row>\n      <Table\n        rowKey=\"id\"\n        columns={tableColumns}\n        dataSource={drugUnits}\n        loading={fetchingDrugUnits}\n        pagination={false} />\n      <Modal\n        visible={modalVisible}\n        title={action === formActions.CREATE ? 'Thêm đơn vị tính' : 'Cập nhật đơn vị tính'}\n        onCancel={handleCloseModal}\n        confirmLoading={modalLoading}\n        destroyOnClose={true}\n        afterClose={afterClose}\n        onOk={handleFormSubmit}>\n        <DrugUnitForm onFinish={handleFormSubmit} form={drugUnitForm} defaultUnit={selectedUnit} />\n      </Modal>\n    </>\n  )\n}\n\nexport default DrugUnitPage;","import axios from 'axios';\nimport { API_URL } from 'constant/apiUrl';\n\nconst endpointPrefix = `${API_URL}/admin/manage-drug`;\n\nexport function getDrugsAPI() {\n  const url = `${endpointPrefix}/`;\n  return axios.get(url);\n}\n\nexport function getDrugDetailsAPI(id) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.get(url);\n}\n\nexport function addDrugAPI({ code, name, drug_category, price, drug_unit }) {\n  const url = `${endpointPrefix}/`;\n  return axios.post(url, {\n    code,\n    name,\n    drug_category,\n    price: Number(price),\n    drug_unit\n  });\n}\n\nexport function updateDrugAPI(id, { code, name, drug_category, price, drug_unit }) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.put(url, {\n    code,\n    name,\n    drug_category,\n    price: Number(price),\n    drug_unit\n  });\n}\n\nexport function deleteDrugAPI(id) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.delete(url);\n}","import React, { useState, useEffect } from 'react';\nimport { Form, Input, Select, Spin } from 'antd';\nimport { getDrugCategoryAPI } from 'services/admin/drug-category.service';\nimport { getDrugUnitsAPI } from 'services/admin/drug-unit.service';\nimport { getDrugDetailsAPI } from 'services/admin/drug.service';\n\nconst DrugForm = props => {\n  const { form, onFinish, defaultDrug } = props;\n\n  const [categories, setCategories] = useState([]);\n  const [units, setUnits] = useState([]);\n  const [drugDetail, setDrugDetail] = useState(null);\n  const [catLoading, setCatLoading] = useState(false);\n  const [unitLoading, setUnitLoading] = useState(false);\n  const [detailLoading, setDetailLoading] = useState(false);\n\n  async function getDrugCategories() {\n    try {\n      setCatLoading(true);\n      const catResponse = await getDrugCategoryAPI();\n      setCategories(catResponse.data);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setCatLoading(false);\n    }\n  }\n\n  async function getDrugUnits() {\n    try {\n      setUnitLoading(true);\n      const unitResponse = await getDrugUnitsAPI();\n      setUnits(unitResponse.data);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setUnitLoading(false);\n    }\n  }\n\n  async function getDrugDetail(id) {\n    try {\n      setDetailLoading(true);\n      const detailResponse = await getDrugDetailsAPI(id);\n      const drugDetail = detailResponse.data;\n      setDrugDetail(drugDetail);\n      setCategories(prevCats => {\n        const index = prevCats.findIndex(cat => cat.id === defaultDrug.drug_category);\n        if (index > -1) {\n          prevCats[index] = drugDetail.drug_category;\n          return prevCats;\n        } else {\n          return [...[drugDetail.drug_category], ...prevCats];\n        }\n      });\n      setUnits(prevUnits => {\n        const index = prevUnits.findIndex(u => u.id === defaultDrug.drug_unit);\n        if (index > -1) {\n          prevUnits[index] = drugDetail.drug_unit;\n          return prevUnits;\n        } else {\n          return [...[drugDetail.drug_unit], ...prevUnits];\n        }\n      });\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setDetailLoading(false);\n    }\n  }\n\n  async function getData() {\n    if (defaultDrug?.id) {\n      await Promise.all([\n        getDrugDetail(defaultDrug.id),\n        getDrugCategories(),\n        getDrugUnits()\n      ]);\n\n    } else {\n      await Promise.all([\n        getDrugCategories(),\n        getDrugUnits()\n      ])\n    }\n\n  }\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  useEffect(() => {\n    if (drugDetail) {\n      form.setFieldsValue({\n        code: drugDetail.code,\n        name: drugDetail.name,\n        price: drugDetail.price,\n        drug_category: drugDetail.drug_category.id,\n        drug_unit: drugDetail.drug_unit.id\n      });\n    }\n  }, [drugDetail, defaultDrug, form]);\n\n  return (\n    <Spin spinning={detailLoading}>\n      <Form\n        layout=\"vertical\"\n        form={form}\n        onFinish={onFinish}>\n        <Form.Item label=\"Mã thuốc\" name=\"code\" initialValue={drugDetail?.code}>\n          <Input />\n        </Form.Item>\n\n        <Form.Item label=\"Tên thuốc\" name=\"name\" initialValue={drugDetail?.name}>\n          <Input />\n        </Form.Item>\n\n        <Form.Item label=\"Giá\" name=\"price\" initialValue={drugDetail?.price}>\n          <Input type=\"number\" suffix=\"VNĐ\" />\n        </Form.Item>\n\n        <Form.Item label=\"Loại thuốc\" name=\"drug_category\" initialValue={drugDetail?.drug_category.id}>\n          <Select loading={catLoading}>\n            {\n              categories.map(cat => (\n                <Select.Option key={cat.id} value={cat.id}>{cat.name}</Select.Option>\n              ))\n            }\n          </Select>\n        </Form.Item>\n\n        <Form.Item label=\"Đơn vị tính\" name=\"drug_unit\" initialValue={drugDetail?.drug_unit.id}>\n          <Select loading={unitLoading}>\n            {\n              units.map(cat => (\n                <Select.Option key={cat.id} value={cat.id}>{cat.name}</Select.Option>\n              ))\n            }\n          </Select>\n        </Form.Item>\n      </Form>\n    </Spin>\n  )\n}\n\nexport default DrugForm;","import React, { useState, useEffect } from 'react';\nimport { Row, Col, Button, Modal, Table, Form, Popconfirm, Space } from 'antd';\nimport { PlusOutlined, EditOutlined, DeleteOutlined } from '@ant-design/icons';\nimport DrugForm from 'forms/DrugForm/DrugForm';\nimport { getDrugsAPI, addDrugAPI, updateDrugAPI, deleteDrugAPI } from 'services/admin/drug.service';\nimport { formActions } from 'constant/formActions';\nimport NumberFormat from 'react-number-format';\n\nconst DrugPage = () => {\n\n  const [modalVisible, setModalVisible] = useState(false);\n  const [drugs, setDrugs] = useState();\n  const [fetchingDrugs, setFetchingDrugs] = useState(false);\n  const [modalLoading, setModalLoading] = useState(false);\n  const [action, setAction] = useState(formActions.CREATE);\n  const [selectedDrug, setSelectedDrug] = useState(null);\n  const [drugForm] = Form.useForm();\n\n  const tableColumns = [\n    {\n      title: '#',\n      key: '#',\n      render: (text, record, index) => index + 1\n    },\n    {\n      title: 'Mã thuốc',\n      key: 'code',\n      dataIndex: 'code'\n    },\n    {\n      title: 'Tên thuốc',\n      key: 'name',\n      dataIndex: 'name'\n    },\n    {\n      title: 'Giá',\n      key: 'price',\n      dataIndex: 'price',\n      render: (text, record, index) => (<NumberFormat thousandSeparator=\" \" suffix=\" VNĐ\" value={text} displayType=\"text\" />)\n    },\n    {\n      title: 'Hành động',\n      key: 'action',\n      render: (text, record, index) => (\n        <Space size={10}>\n          <Button icon={<EditOutlined />} onClick={() => handleEditClick(record)}></Button>\n          <Popconfirm\n            onConfirm={() => handleDelete(record)} title=\"Bạn có chắc muốn xóa không?\"\n            okText=\"Xóa\"\n            okType=\"danger\"\n            cancelText=\"Hủy bỏ\">\n            <Button icon={<DeleteOutlined />}></Button>\n          </Popconfirm>\n        </Space>\n      )\n    }\n  ]\n\n  function handleOpenModal() {\n    setAction(formActions.CREATE);\n    setModalVisible(true);\n  }\n\n  function handleCloseModal() {\n    setModalVisible(false);\n  }\n\n  async function getDrugs() {\n    try {\n      setFetchingDrugs(true);\n      const response = await getDrugsAPI();\n      setDrugs(response.data.results);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setFetchingDrugs(false);\n    }\n  }\n\n  async function handleFormSubmit() {\n    try {\n      setModalLoading(true);\n      const values = await drugForm.validateFields();\n      const data = {\n        code: values.code,\n        name: values.name,\n        price: values.price,\n        drug_category: values.drug_category,\n        drug_unit: values.drug_unit\n      }\n      if (action === formActions.CREATE) {\n        await addDrugAPI(data);\n      }\n\n      if (action === formActions.UPDATE) {\n        await updateDrugAPI(selectedDrug.id, data);\n      }\n\n      getDrugs();\n\n      setModalVisible(false);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setModalLoading(false);\n    }\n  }\n\n  function handleEditClick(drug) {\n    setAction(formActions.UPDATE);\n    setSelectedDrug(drug);\n    setModalVisible(true);\n  }\n\n  async function handleDelete(drug) {\n    try {\n      await deleteDrugAPI(drug.id);\n      getDrugs();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  function afterClose() {\n    drugForm.resetFields();\n    setSelectedDrug(null);\n  }\n\n  useEffect(() => {\n    getDrugs();\n  }, []);\n\n  return (\n    <>\n      <Row justify=\"space-between\">\n        <Col><h1 className=\"text-xl\">Quản lý thuốc</h1></Col>\n        <Col>\n          <Button type=\"primary\" icon={<PlusOutlined />} onClick={handleOpenModal}>Tạo mới</Button>\n        </Col>\n      </Row>\n      <Table\n        rowKey=\"id\"\n        columns={tableColumns}\n        dataSource={drugs}\n        loading={fetchingDrugs}\n        pagination={false} />\n      <Modal\n        visible={modalVisible}\n        title={action === formActions.CREATE ? 'Thêm thuốc' : 'Cập nhật thuốc'}\n        onCancel={handleCloseModal}\n        confirmLoading={modalLoading}\n        destroyOnClose={true}\n        afterClose={afterClose}\n        onOk={handleFormSubmit}>\n        <DrugForm onFinish={handleFormSubmit} form={drugForm} defaultDrug={selectedDrug} />\n      </Modal>\n    </>\n  )\n}\n\nexport default DrugPage;","import React from 'react';\nimport { Form, Input } from 'antd';\n\nconst DrugInstructionForm = props => {\n  const { form, onFinish, defaultInstruction } = props;\n\n  return (\n    <Form\n      layout=\"vertical\"\n      form={form}\n      onFinish={onFinish}>\n      <Form.Item label=\"Hướng dẫn sử dụng\" name=\"instruction\" initialValue={defaultInstruction?.instruction}>\n        <Input autoFocus />\n      </Form.Item>\n    </Form>\n  )\n}\n\nexport default DrugInstructionForm;","import axios from 'axios';\n\nimport { API_URL } from \"constant/apiUrl\";\n\nconst endpointPrefix = `${API_URL}/admin/manage-drug-instruction`;\n\nexport function getDrugInstructionsAPI() {\n  const url = `${endpointPrefix}/`;\n  return axios.get(url);\n}\n\nexport function addDrugInstructionAPI(instruction) {\n  const url = `${endpointPrefix}/`;\n  return axios.post(url, { instruction: instruction });\n}\n\nexport function updateDrugInstructionAPI(id, instruction) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.put(url, {\n    instruction: instruction\n  })\n}\n\nexport function deleteDrugInstructionAPI(id) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.delete(url);\n}","import React, { useState, useEffect } from 'react';\nimport { Row, Col, Button, Modal, Table, Form, Popconfirm, Space } from 'antd';\nimport { PlusOutlined, EditOutlined, DeleteOutlined } from '@ant-design/icons';\nimport DrugInstructionForm from 'forms/DrugInstructionForm/DrugInstructionForm';\nimport { getDrugInstructionsAPI, addDrugInstructionAPI, updateDrugInstructionAPI, deleteDrugInstructionAPI } from 'services/admin/drug-instruction.service';\nimport { formActions } from 'constant/formActions';\n\nconst DrugInstructionPage = () => {\n\n  const [modalVisible, setModalVisible] = useState(false);\n  const [drugInstructions, setDrugInstructions] = useState([]);\n  const [fetchingDrugInstructions, setFetchingDrugInstructions] = useState(false);\n  const [modalLoading, setModalLoading] = useState(false);\n  const [action, setAction] = useState(formActions.CREATE);\n  const [selectedInstruction, setSelectedInstruction] = useState(null);\n  const [drugInstructionForm] = Form.useForm();\n\n  const tableColumns = [\n    {\n      title: '#',\n      key: '#',\n      render: (text, record, index) => index + 1\n    },\n    {\n      title: 'Hướng dẫn sử dụng',\n      key: 'instruction',\n      dataIndex: 'instruction'\n    },\n    {\n      title: 'Hành động',\n      key: 'action',\n      render: (text, record, index) => (\n        <Space size={10}>\n          <Button icon={<EditOutlined />} onClick={() => handleEditClick(record)}></Button>\n          <Popconfirm\n            onConfirm={() => handleDelete(record)} title=\"Bạn có chắc muốn xóa không?\"\n            okText=\"Xóa\"\n            okType=\"danger\"\n            cancelText=\"Hủy bỏ\">\n            <Button icon={<DeleteOutlined />}></Button>\n          </Popconfirm>\n        </Space>\n      )\n    }\n  ]\n\n  function handleOpenModal() {\n    setAction(formActions.CREATE);\n    setModalVisible(true);\n  }\n\n  function handleCloseModal() {\n    setModalVisible(false);\n  }\n\n  async function getDrugInstructions() {\n    try {\n      setFetchingDrugInstructions(true);\n      const response = await getDrugInstructionsAPI();\n      setDrugInstructions(response.data);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setFetchingDrugInstructions(false);\n    }\n  }\n\n  async function handleFormSubmit() {\n    try {\n      setModalLoading(true);\n      const values = await drugInstructionForm.validateFields();\n      if (action === formActions.CREATE) {\n        await addDrugInstructionAPI(values.instruction);\n      }\n\n      if (action === formActions.UPDATE) {\n        await updateDrugInstructionAPI(selectedInstruction.id, values.instruction);\n      }\n\n      getDrugInstructions();\n\n      setModalVisible(false);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setModalLoading(false);\n    }\n  }\n\n  function handleEditClick(ins) {\n    setAction(formActions.UPDATE);\n    setSelectedInstruction(ins);\n    setModalVisible(true);\n  }\n\n  async function handleDelete(unit) {\n    try {\n      await deleteDrugInstructionAPI(unit.id);\n      getDrugInstructions();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  function afterClose() {\n    drugInstructionForm.resetFields();\n    setSelectedInstruction(null);\n  }\n\n  useEffect(() => {\n    getDrugInstructions();\n  }, []);\n\n  return (\n    <>\n      <Row justify=\"space-between\">\n        <Col><h1 className=\"text-xl\">Quản lý hướng dẫn sử dụng</h1></Col>\n        <Col>\n          <Button type=\"primary\" icon={<PlusOutlined />} onClick={handleOpenModal}>Tạo mới</Button>\n        </Col>\n      </Row>\n      <Table\n        rowKey=\"id\"\n        columns={tableColumns}\n        dataSource={drugInstructions}\n        loading={fetchingDrugInstructions}\n        pagination={false} />\n      <Modal\n        visible={modalVisible}\n        title={action === formActions.CREATE ? 'Thêm hướng dẫn sử dụng' : 'Cập nhật hướng dẫn sử dụng'}\n        onCancel={handleCloseModal}\n        confirmLoading={modalLoading}\n        destroyOnClose={true}\n        afterClose={afterClose}\n        onOk={handleFormSubmit}>\n        <DrugInstructionForm onFinish={handleFormSubmit} form={drugInstructionForm} defaultInstruction={selectedInstruction} />\n      </Modal>\n    </>\n  )\n}\n\nexport default DrugInstructionPage;","import React from 'react';\nimport { Form, Input } from 'antd';\n\nconst DiseaseCategoryForm = props => {\n  const { form, onFinish, defaultCategory } = props;\n\n  return (\n    <Form\n      layout=\"vertical\"\n      form={form}\n      onFinish={onFinish}>\n      <Form.Item label=\"Loại bệnh\" name=\"name\" initialValue={defaultCategory?.name}>\n        <Input autoFocus />\n      </Form.Item>\n    </Form>\n  )\n}\n\nexport default DiseaseCategoryForm;","import axios from 'axios';\n\nimport { API_URL } from \"constant/apiUrl\";\n\nconst endpointPrefix = `${API_URL}/admin/manage-disease-category`;\n\nexport function getDiseaseCategoryAPI(search = \"\") {\n  const url = `${endpointPrefix}/?search=${search}`;\n  return axios.get(url);\n}\n\nexport function addDiseaseCategoryAPI(name) {\n  const url = `${endpointPrefix}/`;\n  return axios.post(url, { name: name });\n}\n\nexport function updateDiseaseCategoryAPI(id, name) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.put(url, {\n    name: name\n  })\n}\n\nexport function deleteDiseaseCategoryAPI(id) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.delete(url);\n}","import React, { useState, useEffect } from 'react';\nimport { Row, Col, Button, Modal, Table, Form, Popconfirm, Space } from 'antd';\nimport { PlusOutlined, EditOutlined, DeleteOutlined } from '@ant-design/icons';\nimport DiseaseCategoryForm from 'forms/DiseaseCategoryForm/DiseaseCategoryForm';\nimport { addDiseaseCategoryAPI, deleteDiseaseCategoryAPI, getDiseaseCategoryAPI, updateDiseaseCategoryAPI } from 'services/admin/disease-category.service';\nimport { formActions } from 'constant/formActions';\n\nconst DiseaseCategoryPage = () => {\n\n  const [modalVisible, setModalVisible] = useState(false);\n  const [categories, setCategories] = useState([]);\n  const [fetchingCategories, setFetchingCategories] = useState(false);\n  const [modalLoading, setModalLoading] = useState(false);\n  const [action, setAction] = useState(formActions.CREATE);\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [diseaseCategoryForm] = Form.useForm();\n\n  const tableColumns = [\n    {\n      title: '#',\n      key: '#',\n      render: (text, record, index) => index + 1\n    },\n    {\n      title: 'Tên',\n      key: 'name',\n      dataIndex: 'name'\n    },\n    {\n      title: 'Hành động',\n      key: 'action',\n      render: (text, record, index) => (\n        <Space size={10}>\n          <Button icon={<EditOutlined />} onClick={() => handleEditClick(record)}></Button>\n          <Popconfirm\n            onConfirm={() => handleDelete(record)} title=\"Bạn có chắc muốn xóa không?\"\n            okText=\"Xóa\"\n            okType=\"danger\"\n            cancelText=\"Hủy bỏ\">\n            <Button icon={<DeleteOutlined />}></Button>\n          </Popconfirm>\n        </Space>\n      )\n    }\n  ]\n\n  function handleOpenModal() {\n    setAction(formActions.CREATE);\n    setModalVisible(true);\n  }\n\n  function handleCloseModal() {\n    setModalVisible(false);\n  }\n\n  async function getDiseaseCategories() {\n    try {\n      setFetchingCategories(true);\n      const response = await getDiseaseCategoryAPI();\n      setCategories(response.data);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setFetchingCategories(false);\n    }\n  }\n\n  async function handleFormSubmit() {\n    try {\n      setModalLoading(true);\n      const values = await diseaseCategoryForm.validateFields();\n      if (action === formActions.CREATE) {\n        await addDiseaseCategoryAPI(values.name);\n      }\n\n      if (action === formActions.UPDATE) {\n        await updateDiseaseCategoryAPI(selectedCategory.id, values.name);\n      }\n\n      getDiseaseCategories();\n\n      setModalVisible(false);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setModalLoading(false);\n    }\n  }\n\n  function handleEditClick(category) {\n    setAction(formActions.UPDATE);\n    setSelectedCategory(category);\n    setModalVisible(true);\n  }\n\n  async function handleDelete(unit) {\n    try {\n      await deleteDiseaseCategoryAPI(unit.id);\n      getDiseaseCategories();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  function afterClose() {\n    diseaseCategoryForm.resetFields();\n    setSelectedCategory(null);\n  }\n\n  useEffect(() => {\n    getDiseaseCategories();\n  }, []);\n\n  return (\n    <>\n      <Row justify=\"space-between\">\n        <Col><h1 className=\"text-xl\">Quản lý loại bệnh</h1></Col>\n        <Col>\n          <Button type=\"primary\" icon={<PlusOutlined />} onClick={handleOpenModal}>Tạo mới</Button>\n        </Col>\n      </Row>\n      <Table\n        rowKey=\"id\"\n        columns={tableColumns}\n        dataSource={categories}\n        \n        loading={fetchingCategories} />\n      <Modal\n        visible={modalVisible}\n        title={action === formActions.CREATE ? 'Thêm loại bệnh' : 'Cập nhật loại bệnh'}\n        onCancel={handleCloseModal}\n        confirmLoading={modalLoading}\n        destroyOnClose={true}\n        afterClose={afterClose}\n        onOk={handleFormSubmit}>\n        <DiseaseCategoryForm onFinish={handleFormSubmit} form={diseaseCategoryForm} defaultCategory={selectedCategory} />\n      </Modal>\n    </>\n  )\n}\n\nexport default DiseaseCategoryPage;","import axios from 'axios';\nimport { API_URL } from 'constant/apiUrl';\n\nconst endpointPrefix = `${API_URL}/admin/manage-disease`;\n\nexport function getDiseasesAPI() {\n  const url = `${endpointPrefix}/`;\n  return axios.get(url);\n}\n\nexport function getDiseaseDetailsAPI(id) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.get(url);\n}\n\nexport function addDiseaseAPI({ code, name, disease_category }) {\n  const url = `${endpointPrefix}/`;\n  return axios.post(url, {\n    code,\n    name,\n    disease_category\n  });\n}\n\nexport function updateDiseaseAPI(id, { code, name, disease_category }) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.put(url, {\n    code,\n    name,\n    disease_category\n  });\n}\n\nexport function deleteDiseaseAPI(id) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.delete(url);\n}","import React, { useState, useEffect } from 'react';\nimport { Form, Input, Select, Spin } from 'antd';\nimport { getDiseaseCategoryAPI } from 'services/admin/disease-category.service';\nimport { getDiseaseDetailsAPI } from 'services/admin/disease.service';\n\nconst DiseaseForm = props => {\n  const { form, onFinish, defaultDisease } = props;\n\n  const [categories, setCategories] = useState([]);\n  const [diseaseDetail, setDiseaseDetail] = useState(null);\n  const [catLoading, setCatLoading] = useState(false);\n  const [detailLoading, setDetailLoading] = useState(false);\n\n  async function getDiseaseCategories() {\n    try {\n      setCatLoading(true);\n      const catResponse = await getDiseaseCategoryAPI();\n      setCategories(catResponse.data);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setCatLoading(false);\n    }\n  }\n\n  async function getDiseaseDetail(id) {\n    try {\n      setDetailLoading(true);\n      const detailResponse = await getDiseaseDetailsAPI(id);\n      const diseaseDetail = detailResponse.data;\n      setDiseaseDetail(diseaseDetail);\n      setCategories(prevCats => {\n        const index = prevCats.findIndex(cat => cat.id === defaultDisease.disease_category);\n        if (index > -1) {\n          prevCats[index] = diseaseDetail.disease_category;\n          return prevCats;\n        } else {\n          return [...[diseaseDetail.disease_category], ...prevCats];\n        }\n      });\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setDetailLoading(false);\n    }\n  }\n\n  async function getData() {\n    if (defaultDisease?.id) {\n      await Promise.all([\n        getDiseaseDetail(defaultDisease.id),\n        getDiseaseCategories(),\n      ]);\n\n    } else {\n      await Promise.all([\n        getDiseaseCategories(),\n      ])\n    }\n\n  }\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  useEffect(() => {\n    if (diseaseDetail) {\n      form.setFieldsValue({\n        code: diseaseDetail.code,\n        name: diseaseDetail.name,\n        disease_category: diseaseDetail.disease_category.id,\n      });\n    }\n  }, [diseaseDetail, defaultDisease, form]);\n\n  return (\n    <Spin spinning={detailLoading}>\n      <Form\n        layout=\"vertical\"\n        form={form}\n        onFinish={onFinish}>\n        <Form.Item label=\"Mã bệnh\" name=\"code\" initialValue={diseaseDetail?.code}>\n          <Input />\n        </Form.Item>\n\n        <Form.Item label=\"Tên bệnh\" name=\"name\" initialValue={diseaseDetail?.name}>\n          <Input />\n        </Form.Item>\n\n        <Form.Item label=\"Loại bệnh\" name=\"disease_category\" initialValue={diseaseDetail?.disease_category.id}>\n          <Select loading={catLoading}>\n            {\n              categories.map(cat => (\n                <Select.Option key={cat.id} value={cat.id}>{cat.name}</Select.Option>\n              ))\n            }\n          </Select>\n        </Form.Item>\n      </Form>\n    </Spin>\n  )\n}\n\nexport default DiseaseForm;","import React, { useState, useEffect } from 'react';\nimport { Row, Col, Button, Modal, Table, Form, Popconfirm, Space } from 'antd';\nimport { PlusOutlined, EditOutlined, DeleteOutlined } from '@ant-design/icons';\nimport DiseaseForm from 'forms/DiseaseForm/DiseaseForm';\nimport { getDiseasesAPI, addDiseaseAPI, updateDiseaseAPI, deleteDiseaseAPI } from 'services/admin/disease.service';\nimport { formActions } from 'constant/formActions';\n\nconst DiseasePage = () => {\n\n  const [modalVisible, setModalVisible] = useState(false);\n  const [diseases, setDiseases] = useState();\n  const [fetchingDiseases, setFetchingDiseases] = useState(false);\n  const [modalLoading, setModalLoading] = useState(false);\n  const [action, setAction] = useState(formActions.CREATE);\n  const [selectedDisease, setSelectedDisease] = useState(null);\n  const [diseaseForm] = Form.useForm();\n\n  const tableColumns = [\n    {\n      title: '#',\n      key: '#',\n      render: (text, record, index) => index + 1\n    },\n    {\n      title: 'Mã bệnh',\n      key: 'code',\n      dataIndex: 'code'\n    },\n    {\n      title: 'Tên bệnh',\n      key: 'name',\n      dataIndex: 'name'\n    },\n    {\n      title: 'Hành động',\n      key: 'action',\n      render: (text, record, index) => (\n        <Space size={10}>\n          <Button icon={<EditOutlined />} onClick={() => handleEditClick(record)}></Button>\n          <Popconfirm\n            onConfirm={() => handleDelete(record)} title=\"Bạn có chắc muốn xóa không?\"\n            okText=\"Xóa\"\n            okType=\"danger\"\n            cancelText=\"Hủy bỏ\">\n            <Button icon={<DeleteOutlined />}></Button>\n          </Popconfirm>\n        </Space>\n      )\n    }\n  ]\n\n  function handleOpenModal() {\n    setAction(formActions.CREATE);\n    setModalVisible(true);\n  }\n\n  function handleCloseModal() {\n    setModalVisible(false);\n  }\n\n  async function getDiseases() {\n    try {\n      setFetchingDiseases(true);\n      const response = await getDiseasesAPI();\n      setDiseases(response.data.results);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setFetchingDiseases(false);\n    }\n  }\n\n  async function handleFormSubmit() {\n    try {\n      setModalLoading(true);\n      const values = await diseaseForm.validateFields();\n      const data = {\n        code: values.code,\n        name: values.name,\n        disease_category: values.disease_category,\n      }\n      if (action === formActions.CREATE) {\n        await addDiseaseAPI(data);\n      }\n\n      if (action === formActions.UPDATE) {\n        await updateDiseaseAPI(selectedDisease.id, data);\n      }\n\n      getDiseases();\n\n      setModalVisible(false);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setModalLoading(false);\n    }\n  }\n\n  function handleEditClick(disease) {\n    setAction(formActions.UPDATE);\n    setSelectedDisease(disease);\n    setModalVisible(true);\n  }\n\n  async function handleDelete(disease) {\n    try {\n      await deleteDiseaseAPI(disease.id);\n      getDiseases();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  function afterClose() {\n    diseaseForm.resetFields();\n    setSelectedDisease(null);\n  }\n\n  useEffect(() => {\n    getDiseases();\n  }, []);\n\n  return (\n    <>\n      <Row justify=\"space-between\">\n        <Col><h1 className=\"text-xl\">Quản lý bệnh</h1></Col>\n        <Col>\n          <Button type=\"primary\" icon={<PlusOutlined />} onClick={handleOpenModal}>Tạo mới</Button>\n        </Col>\n      </Row>\n      <Table\n        rowKey=\"id\"\n        columns={tableColumns}\n        dataSource={diseases}\n        loading={fetchingDiseases} />\n      <Modal\n        visible={modalVisible}\n        title={action === formActions.CREATE ? 'Thêm bệnh' : 'Cập nhật bệnh'}\n        onCancel={handleCloseModal}\n        confirmLoading={modalLoading}\n        destroyOnClose={true}\n        afterClose={afterClose}\n        onOk={handleFormSubmit}>\n        <DiseaseForm onFinish={handleFormSubmit} form={diseaseForm} defaultDisease={selectedDisease} />\n      </Modal>\n    </>\n  )\n}\n\nexport default DiseasePage;","import React from 'react';\n\nconst NotificationPage = () => {\n  return (\n    <div>Notification Page</div>\n  )\n}\n\nexport default NotificationPage;","import React from 'react';\nimport { Row, Col, List, Button } from 'antd';\nimport classnames from 'classnames';\n\nimport styles from './VisitItem.module.scss';\n\nconst VisitItem = ({ visit, onPatientClick, ...props }) => {\n\n  const rowClasses = classnames(\n    '-ml-3 -mr-3',\n  )\n\n  function handlePatientClick() {\n    onPatientClick(visit)\n  }\n\n  return (\n    <List.Item {...props} className={rowClasses} onClick={handlePatientClick}>\n      <Row className={`${styles['row']} pl-3`} align=\"middle\">\n        <Col className={styles['col']}>{visit.visit_number}</Col>\n        <Col className={styles['col']}>{visit.patient.first_name} {visit.patient.last_name}</Col>\n        <Col className={styles['col']}>{visit.patient.gender}</Col>\n        <Col><Button>Khám</Button></Col>\n      </Row>\n    </List.Item>\n  )\n}\n\nexport default VisitItem;","import axios from 'axios';\n\nimport { API_URL } from \"constant/apiUrl\";\n\nconst endpointPrefix = `${API_URL}/user/room`;\n\nexport function getRoomAPI() {\n  const url = `${endpointPrefix}/`;\n  return axios.get(url);\n}\n\nexport function getRoomDetailsAPI(roomId) {\n  const url = `${endpointPrefix}/${roomId}/`;\n  return axios.get(url);\n}","import axios from 'axios';\nimport { API_URL } from 'constant/apiUrl';\n\nconst endpointPrefix = `${API_URL}/user/visit`;\n\nexport function getVisitDataAPI() {\n  const url = `${endpointPrefix}/`;\n  return axios.get(url);\n}\n\nexport function createVisitAPI({ patientId, roomId }) {\n  const url = `${endpointPrefix}/`;\n  return axios.post(url, {\n    room_id: roomId,\n    patient_id: patientId\n  })\n}","import React, { useState, useEffect } from 'react';\nimport { Form, Input, Row, Col } from 'antd';\n\nconst { Item } = Form;\n\nconst VisitLivingFunctionForm = props => {\n\n  const { form, onFinish } = props;\n  const [bmi, setBmi] = useState(0.0);\n\n  const row1 = [\n    {\n      name: \"heartbeat\",\n      text: \"Mạch\",\n      unit: \"lần/phút\"\n    },\n    {\n      name: \"temp\",\n      text: \"Nhiệt độ\",\n      unit: \"°C\"\n    },\n    {\n      name: \"pressure\",\n      text: \"Huyết áp\",\n      unit: \"mmHg\"\n    },\n  ]\n\n  const row2 = [\n    {\n      name: \"breathing\",\n      text: \"Nhịp thở\",\n      unit: \"lần/phút\"\n    },\n    {\n      name: \"height\",\n      text: \"Chiều cao\",\n      unit: \"cm\"\n    },\n    {\n      name: \"weight\",\n      text: \"Cân nặng\",\n      unit: \"kg\"\n    },\n  ]\n\n  function getBMI() {\n    const heightStr = form.getFieldValue('height');\n    const weightStr = form.getFieldValue('weight');\n    const height = Number(heightStr);\n    const weight = Number(weightStr);\n    console.log(height);\n    console.log(weight);\n\n    if (!height || !weight || weight <= 0) {\n      setBmi(0.00);\n    } else {\n      setBmi(weight / Math.pow(height * 0.01, 2));\n    }\n  }\n\n  function getBMIDesc() {\n    let result = \"\";\n\n    if (bmi === 0) {\n      return \"Không có dữ liệu\"\n    } else if (bmi < 16) {\n      return \"Gầy độ III\";\n    } else if (bmi >= 16 && bmi < 17) {\n      return \"Gầy độ II\";\n    } else if (bmi >= 17 && bmi < 18.5) {\n      return \"Gầy độ I\";\n    } else if (bmi >= 18.5 && bmi < 25) {\n      return \"Bình thường\";\n    } else if (bmi >= 25 && bmi < 30) {\n      return \"Thừa cân\";\n    } else if (bmi >= 30 && bmi < 35) {\n      return \"Béo phì độ I\";\n    } else if (bmi >= 35 && bmi < 40) {\n      return \"Béo phì độ II\";\n    } else {\n      return \"Béo phì độ III\";\n    }\n  }\n\n  return (\n    <Form layout=\"vertical\" form={form} onChange={getBMI}>\n      <Row justify=\"start\" gutter={15}>\n        {\n          row1.map(field => (\n            <Col flex=\"0 0 243px\">\n              <Item name={field.name} key={field.name}>\n                <Input placeholder={field.text} suffix={field.unit} />\n              </Item>\n            </Col>\n          ))\n        }\n      </Row>\n      <Row justify=\"start\" gutter={15}>\n        {\n          row2.map(field => (\n            <Col flex=\"0 0 243px\">\n              <Item name={field.name} key={field.name}>\n                <Input placeholder={field.text} suffix={field.unit} />\n              </Item>\n            </Col>\n          ))\n        }\n      </Row>\n      <div><strong>BMI: </strong>{bmi.toFixed(2)} ({getBMIDesc()})</div>\n    </Form>\n  )\n}\n\nexport default VisitLivingFunctionForm;","import React, { useState, useEffect } from 'react';\nimport { Row, Col, List, Select, Tabs, Empty, Descriptions, Collapse, Form } from 'antd';\nimport VisitItem from 'components/VistItem/VisitItem';\nimport { getRoomAPI } from 'services/user/room.service';\nimport { getVisitDataAPI } from 'services/user/visit.service';\nimport moment from 'moment';\nimport { useSelector } from 'react-redux';\nimport VisitLivingFunctionForm from 'forms/Visit/VisitLivingFunctionForm';\n\nconst { useForm } = Form;\n\nconst VisitPage = () => {\n\n  const [rooms, setRooms] = useState([]);\n  const [visitData, setVisitData] = useState(null);\n  const [roomLoading, setRoomLoading] = useState(false);\n  const [selectedRoom, setSelectedRoom] = useState(\"\");\n\n  const [waiting, setWaiting] = useState([]);\n  const [visiting, setVisiting] = useState([]);\n  const userState = useSelector(state => state.userState);\n  const user = userState.user;\n\n  const [livingFuncsForm] = useForm();\n\n  const visitList = visitData?.results.filter(visit => {\n    const createdAt = new Date(visit.created_at);\n    const today = new Date();\n    const isToday = createdAt.getDate() === today.getDate() &&\n      createdAt.getMonth() === today.getMonth() &&\n      createdAt.getFullYear() === today.getFullYear();\n    return (isToday && visit.room.id === selectedRoom)\n  });\n\n  async function getRooms() {\n    try {\n      setRoomLoading(true);\n      const roomResponse = await getRoomAPI();\n      setRooms(roomResponse.data);\n\n      const prevSelected = localStorage.getItem(\"selectedRoom\");\n      setSelectedRoom(prevSelected);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setRoomLoading(false);\n    }\n  }\n\n  async function getVisitData() {\n    try {\n      const visitDataResponse = await getVisitDataAPI();\n      const visitData = visitDataResponse.data;\n      setVisitData(visitData);\n    } catch (error) {\n\n    }\n  }\n\n  async function getInitialData() {\n    await Promise.all([\n      getRooms(),\n      getVisitData()\n    ]);\n  }\n\n  useEffect(() => {\n    getInitialData();\n\n    const localVisitingStr = localStorage.getItem(\"visiting\");\n    const localVisitingObj = JSON.parse(localVisitingStr);\n    if (localVisitingObj) {\n      setVisiting(localVisitingObj);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (selectedRoom) {\n      localStorage.setItem(\"selectedRoom\", selectedRoom);\n    }\n  }, [selectedRoom, visiting])\n\n  function handlePatientClick(visit) {\n    setVisiting(prev => {\n      const patient = visit.patient;\n      const emrObj = {\n        id: visit.id,\n        patient: {\n          id: patient.id,\n          first_name: patient.first_name,\n          last_name: patient.last_name,\n          gender: patient.gender,\n          role: patient.role.name,\n          avatar: patient.avatar\n        },\n        physician: {\n          id: user.id,\n          first_name: user.first_name,\n          last_name: user.last_name,\n          gender: user.gender,\n          role: user.role.name,\n          avatar: user.avatar\n        },\n        room: visit.room.name,\n        emr_diseases: [],\n        emr_services: [],\n        emr_drugs: [],\n        images: [],\n        created_at: visit.created_at,\n        symptom: \"\",\n\n      }\n      const newArr = [...prev, ...[emrObj]];\n      const unique = removeDuplicates(newArr, \"id\");\n      localStorage.setItem(\"visiting\", JSON.stringify(unique));\n      return unique;\n    });\n  }\n\n  function handleChangeRoom(value) {\n    setSelectedRoom(value);\n  }\n\n  function removeDuplicates(myArr, prop) {\n    return myArr.filter((obj, pos, arr) => {\n      return arr.map(mapObj => mapObj[prop]).indexOf(obj[prop]) === pos;\n    });\n  }\n\n  return (\n    <>\n      <Row className=\"flex-no-wrap\">\n        <Col style={{ width: 350 }} className=\"flex-shrink-0\">\n          <div className=\"mb-5\">\n            <h2 className=\"text-sm\">Phòng trực</h2>\n            <Select loading={roomLoading} style={{ width: '100%' }} value={selectedRoom} onChange={handleChangeRoom}>\n              {\n                rooms.map(room => (\n                  <Select.Option key={room.id} value={room.id}>{room.name}</Select.Option>\n                ))\n              }\n            </Select>\n          </div>\n          <div className=\"bg-white p-3 pb-0 rounded\">\n            <h2 className=\"text-sm mb-0\">Bệnh nhân đang chờ khám</h2>\n            {\n              !selectedRoom ?\n                <Empty description=\"Vui lòng chọn phòng\" />\n                :\n                visitList?.length > 0 ?\n                  <List split={false} size=\"small\">\n                    {\n                      visitList.map(visit => (\n                        <VisitItem\n                          key={visit.id}\n                          onPatientClick={handlePatientClick}\n                          visit={visit} />\n                      ))\n                    }\n                  </List>\n                  : <Empty description=\"Không có dữ liệu\" />\n            }\n\n          </div>\n\n        </Col>\n        <Col className=\"ml-3 flex-grow-1\" style={{ maxWidth: 'calc(100% - 350px - 12px)' }}>\n          <h2 className=\"text-sm\">Khám bệnh</h2>\n          <Tabs type=\"card\">\n            {\n              visiting.map(v => (\n                <Tabs.TabPane key={v.id} tab={`${v.patient.first_name} ${v.patient.last_name}`}>\n                  <Descriptions title=\"Thông tin bệnh nhân\">\n                    <Descriptions.Item span={1} label=\"Họ và tên\">\n                      {v.patient.first_name} {v.patient.last_name} ({v.patient.gender})\n                    </Descriptions.Item>\n                    <Descriptions.Item span={1} label=\"Ngày sinh\">\n                      {v.patient.DOB}\n                    </Descriptions.Item>\n                  </Descriptions>\n                  <Descriptions title={`Thông tin khám bệnh (Phòng khám: ${v.room})`}>\n                    <Descriptions.Item span={1} label=\"Ngày vào khám\">{moment(v.created_at).format(\"DD/MM/YYYY HH:mm:ss\")}</Descriptions.Item>\n                    <Descriptions.Item span={1} label=\"Bác sĩ khám bệnh\">\n                      {v.physician.first_name} {v.physician.last_name}\n                    </Descriptions.Item>\n                  </Descriptions>\n\n                  <Collapse defaultActiveKey={[\"living-function\"]}>\n                    <Collapse.Panel header=\"Chức năng sống\" key=\"living-function\">\n                      <VisitLivingFunctionForm form={livingFuncsForm} />\n                    </Collapse.Panel>\n                  </Collapse>\n                </Tabs.TabPane>\n              ))\n            }\n\n          </Tabs>\n        </Col>\n      </Row>\n    </>\n  )\n}\n\nexport default VisitPage;","import React from 'react';\n\nconst PatientPage = () => {\n  return (\n    <div>Patient page</div>\n  )\n}\n\nexport default PatientPage; ","import React from 'react';\n\nconst AppointmentPage = () => {\n  return (\n    <div>Appointment Page</div>\n  )\n}\n\nexport default AppointmentPage;","import axios from 'axios';\n\nimport { API_URL } from \"constant/apiUrl\";\n\nconst endpointPrefix = `${API_URL}/admin/manage-service`;\n\nexport function getServicesAPI(search = \"\") {\n  const url = `${endpointPrefix}/?search=${search}`;\n  return axios.get(url);\n}\n\nexport function getServiceDetailsAPI(id) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.get(url);\n}\n\nexport function addServiceAPI({ name, price }) {\n  const url = `${endpointPrefix}/`;\n  return axios.post(url, { name, price: Number(price) });\n}\n\nexport function updateServiceAPI(id, { name, price }) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.put(url, {\n    name,\n    price: Number(price)\n  })\n}\n\nexport function deleteServiceAPI(id) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.delete(url);\n}","import React, { useState, useEffect } from 'react';\nimport { Form, Input, Spin } from 'antd';\nimport { getServiceDetailsAPI } from 'services/admin/medical-service.service';\n\nconst ServiceForm = props => {\n  const { form, onFinish, defaultService } = props;\n\n  const [serviceDetail, setServiceDetail] = useState(null);\n  const [detailLoading, setDetailLoading] = useState(false);\n\n  async function getServiceDetail(id) {\n    try {\n      setDetailLoading(true);\n      const detailResponse = await getServiceDetailsAPI(id);\n      const serviceDetail = detailResponse.data;\n      setServiceDetail(serviceDetail);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setDetailLoading(false);\n    }\n  }\n\n  async function getData() {\n    if (defaultService?.id) {\n      await Promise.all([\n        getServiceDetail(defaultService.id),\n      ]);\n    }\n  }\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  useEffect(() => {\n    if (serviceDetail) {\n      form.setFieldsValue({\n        name: serviceDetail.name,\n        price: serviceDetail.price,\n      });\n    }\n  }, [serviceDetail, defaultService, form]);\n\n  return (\n    <Spin spinning={detailLoading}>\n      <Form\n        layout=\"vertical\"\n        form={form}\n        onFinish={onFinish}>\n\n        <Form.Item label=\"Tên dịch vụ\" name=\"name\" initialValue={serviceDetail?.name}>\n          <Input />\n        </Form.Item>\n\n        <Form.Item label=\"Giá\" name=\"price\" initialValue={serviceDetail?.price}>\n          <Input type=\"number\" suffix=\"VNĐ\" />\n        </Form.Item>\n      </Form>\n    </Spin>\n  )\n}\n\nexport default ServiceForm;","import React, { useState, useEffect } from 'react';\nimport { Row, Col, Button, Modal, Table, Form, Popconfirm, Space } from 'antd';\nimport { PlusOutlined, EditOutlined, DeleteOutlined } from '@ant-design/icons';\nimport ServiceForm from 'forms/ServiceForm/ServiceForm';\nimport { getServicesAPI, addServiceAPI, updateServiceAPI, deleteServiceAPI } from 'services/admin/medical-service.service';\nimport { formActions } from 'constant/formActions';\nimport NumberFormat from 'react-number-format';\n\nconst ServicePage = () => {\n\n  const [modalVisible, setModalVisible] = useState(false);\n  const [services, setServices] = useState();\n  const [fetchingServices, setFetchingServices] = useState(false);\n  const [modalLoading, setModalLoading] = useState(false);\n  const [action, setAction] = useState(formActions.CREATE);\n  const [selectedService, setSelectedService] = useState(null);\n  const [serviceForm] = Form.useForm();\n\n  const tableColumns = [\n    {\n      title: '#',\n      key: '#',\n      render: (text, record, index) => index + 1\n    },\n    {\n      title: 'Tên dịch vụ',\n      key: 'name',\n      dataIndex: 'name'\n    },\n    {\n      title: 'Giá',\n      key: 'price',\n      dataIndex: 'price',\n      render: (text, record, index) => (<NumberFormat thousandSeparator=\" \" suffix=\" VNĐ\" value={text} displayType=\"text\" />)\n    },\n    {\n      title: 'Hành động',\n      key: 'action',\n      render: (text, record, index) => (\n        <Space size={10}>\n          <Button icon={<EditOutlined />} onClick={() => handleEditClick(record)}></Button>\n          <Popconfirm\n            onConfirm={() => handleDelete(record)} title=\"Bạn có chắc muốn xóa không?\"\n            okText=\"Xóa\"\n            okType=\"danger\"\n            cancelText=\"Hủy bỏ\">\n            <Button icon={<DeleteOutlined />}></Button>\n          </Popconfirm>\n        </Space>\n      )\n    }\n  ]\n\n  function handleOpenModal() {\n    setAction(formActions.CREATE);\n    setModalVisible(true);\n  }\n\n  function handleCloseModal() {\n    setModalVisible(false);\n  }\n\n  async function getServices() {\n    try {\n      setFetchingServices(true);\n      const response = await getServicesAPI();\n      setServices(response.data);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setFetchingServices(false);\n    }\n  }\n\n  async function handleFormSubmit() {\n    try {\n      setModalLoading(true);\n      const values = await serviceForm.validateFields();\n      const data = {\n        name: values.name,\n        price: values.price,\n      }\n      if (action === formActions.CREATE) {\n        await addServiceAPI(data);\n      }\n\n      if (action === formActions.UPDATE) {\n        await updateServiceAPI(selectedService.id, data);\n      }\n\n      getServices();\n\n      setModalVisible(false);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setModalLoading(false);\n    }\n  }\n\n  function handleEditClick(service) {\n    setAction(formActions.UPDATE);\n    setSelectedService(service);\n    setModalVisible(true);\n  }\n\n  async function handleDelete(service) {\n    try {\n      await deleteServiceAPI(service.id);\n      getServices();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  function afterClose() {\n    serviceForm.resetFields();\n    setSelectedService(null);\n  }\n\n  useEffect(() => {\n    getServices();\n  }, []);\n\n  return (\n    <>\n      <Row justify=\"space-between\">\n        <Col><h1 className=\"text-xl\">Quản lý thuốc</h1></Col>\n        <Col>\n          <Button type=\"primary\" icon={<PlusOutlined />} onClick={handleOpenModal}>Tạo mới</Button>\n        </Col>\n      </Row>\n      <Table\n        rowKey=\"id\"\n        columns={tableColumns}\n        dataSource={services}\n        loading={fetchingServices} />\n      <Modal\n        visible={modalVisible}\n        title={action === formActions.CREATE ? 'Thêm thuốc' : 'Cập nhật thuốc'}\n        onCancel={handleCloseModal}\n        confirmLoading={modalLoading}\n        destroyOnClose={true}\n        afterClose={afterClose}\n        onOk={handleFormSubmit}>\n        <ServiceForm onFinish={handleFormSubmit} form={serviceForm} defaultService={selectedService} />\n      </Modal>\n    </>\n  )\n}\n\nexport default ServicePage;","import axios from 'axios';\nimport { API_URL } from 'constant/apiUrl';\n\nconst endpointPrefix = `${API_URL}/admin/manage-working-hours`;\n\nexport function getWorkingHoursAPI() {\n  const url = `${endpointPrefix}/`;\n  return axios.get(url);\n}\n\nexport function updateWorkingHourAPI(id, { weekday, isClosed }) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.put(url, {\n    weekday: weekday,\n    is_closed: isClosed\n  })\n}","import React, { useState, useEffect } from 'react';\nimport { Table, Switch } from 'antd';\nimport { getWorkingHoursAPI, updateWorkingHourAPI } from 'services/admin/working-hours.service';\n\nconst WorkingHourPage = () => {\n\n  const [workingHours, setWorkingHours] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const tableColumns = [\n    {\n      title: 'Ngày',\n      key: 'weekday',\n      dataIndex: 'weekday'\n    },\n    {\n      title: 'Đóng cửa',\n      key: 'is_closed',\n      render: (text, record) => (\n        <Switch\n          checked={record.is_closed}\n          onChange={() => handleWorkingHourChange(record)} />\n      )\n    }\n  ]\n\n  async function getWorkingHours() {\n    try {\n      setLoading(true);\n      const workingHoursResponse = await getWorkingHoursAPI();\n      setWorkingHours(workingHoursResponse.data.sort((a, b) => {\n        if (a.id < b.id) {\n          return -1\n        } else {\n          return 1\n        }\n      }));\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  async function handleWorkingHourChange(wh) {\n    try {\n      setLoading(true);\n      await updateWorkingHourAPI(wh.id, {\n        weekday: wh.weekday,\n        isClosed: !wh.is_closed\n      });\n      getWorkingHours();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  useEffect(() => {\n    getWorkingHours();\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"text-xl\">Quản lý giờ làm việc</h1>\n      <div style={{width: 400}}>\n      <Table\n        rowKey=\"weekday\"\n        dataSource={workingHours}\n        columns={tableColumns}\n        loading={loading}\n        pagination={false} />\n      </div>\n      \n    </>\n  )\n}\n\nexport default WorkingHourPage;","import React from 'react';\nimport { Form, Input } from 'antd';\n\nconst RoomForm = props => {\n  const { form, onFinish, defaultRoom } = props;\n\n  return (\n    <Form\n      layout=\"vertical\"\n      form={form}\n      onFinish={onFinish}>\n      <Form.Item label=\"Số phòng\" name=\"number\" initialValue={defaultRoom?.number}>\n        <Input type=\"number\" autoFocus />\n      </Form.Item>\n      <Form.Item label=\"Tên phòng\" name=\"name\" initialValue={defaultRoom?.name}>\n        <Input />\n      </Form.Item>\n    </Form>\n  )\n}\n\nexport default RoomForm;","import axios from 'axios';\n\nimport { API_URL } from \"constant/apiUrl\";\n\nconst endpointPrefix = `${API_URL}/admin/manage-room`;\n\nexport function getRoomAPI() {\n  const url = `${endpointPrefix}/`;\n  return axios.get(url);\n}\n\nexport function addRoomAPI({ number, name }) {\n  const url = `${endpointPrefix}/`;\n  return axios.post(url, { number: Number(number), name });\n}\n\nexport function updateRoomAPI(id, { name, number }) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.put(url, {\n    number: Number(number),\n    name\n  })\n}\n\nexport function deleteRoomAPI(id) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.delete(url);\n}","import React, { useState, useEffect } from 'react';\nimport { Row, Col, Button, Modal, Table, Form, Popconfirm, Space } from 'antd';\nimport { PlusOutlined, EditOutlined, DeleteOutlined } from '@ant-design/icons';\nimport RoomForm from 'forms/RoomForm/RoomForm';\nimport { addRoomAPI, deleteRoomAPI, getRoomAPI, updateRoomAPI } from 'services/admin/room.service';\nimport { formActions } from 'constant/formActions';\n\nconst RoomPage = () => {\n\n  const [modalVisible, setModalVisible] = useState(false);\n  const [rooms, setCategories] = useState([]);\n  const [fetchingCategories, setFetchingCategories] = useState(false);\n  const [modalLoading, setModalLoading] = useState(false);\n  const [action, setAction] = useState(formActions.CREATE);\n  const [selectedRoom, setSelectedRoom] = useState(null);\n  const [roomForm] = Form.useForm();\n\n  const tableColumns = [\n    {\n      title: '#',\n      key: '#',\n      render: (text, record, index) => index + 1\n    },\n    {\n      title: 'Số phòng',\n      key: 'number',\n      dataIndex: 'number'\n    },\n    {\n      title: 'Tên',\n      key: 'name',\n      dataIndex: 'name'\n    },\n    {\n      title: 'Hành động',\n      key: 'action',\n      render: (text, record, index) => (\n        <Space size={10}>\n          <Button icon={<EditOutlined />} onClick={() => handleEditClick(record)}></Button>\n          <Popconfirm\n            onConfirm={() => handleDelete(record)} title=\"Bạn có chắc muốn xóa không?\"\n            okText=\"Xóa\"\n            okType=\"danger\"\n            cancelText=\"Hủy bỏ\">\n            <Button icon={<DeleteOutlined />}></Button>\n          </Popconfirm>\n        </Space>\n      )\n    }\n  ]\n\n  function handleOpenModal() {\n    setAction(formActions.CREATE);\n    setModalVisible(true);\n  }\n\n  function handleCloseModal() {\n    setModalVisible(false);\n  }\n\n  async function getRooms() {\n    try {\n      setFetchingCategories(true);\n      const response = await getRoomAPI();\n      setCategories(response.data);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setFetchingCategories(false);\n    }\n  }\n\n  async function handleFormSubmit() {\n    try {\n      setModalLoading(true);\n      const values = await roomForm.validateFields();\n      if (action === formActions.CREATE) {\n        await addRoomAPI(values);\n      }\n\n      if (action === formActions.UPDATE) {\n        await updateRoomAPI(selectedRoom.id, values);\n      }\n\n      getRooms();\n\n      setModalVisible(false);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setModalLoading(false);\n    }\n  }\n\n  function handleEditClick(room) {\n    setAction(formActions.UPDATE);\n    setSelectedRoom(room);\n    setModalVisible(true);\n  }\n\n  async function handleDelete(unit) {\n    try {\n      await deleteRoomAPI(unit.id);\n      getRooms();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  function afterClose() {\n    roomForm.resetFields();\n    setSelectedRoom(null);\n  }\n\n  useEffect(() => {\n    getRooms();\n  }, []);\n\n  return (\n    <>\n      <Row justify=\"space-between\">\n        <Col><h1 className=\"text-xl\">Quản lý phòng</h1></Col>\n        <Col>\n          <Button type=\"primary\" icon={<PlusOutlined />} onClick={handleOpenModal}>Tạo mới</Button>\n        </Col>\n      </Row>\n      <Table\n        rowKey=\"id\"\n        columns={tableColumns}\n        dataSource={rooms}\n        \n        loading={fetchingCategories} />\n      <Modal\n        visible={modalVisible}\n        title={action === formActions.CREATE ? 'Thêm phòng' : 'Cập nhật phòng'}\n        onCancel={handleCloseModal}\n        confirmLoading={modalLoading}\n        destroyOnClose={true}\n        afterClose={afterClose}\n        onOk={handleFormSubmit}>\n        <RoomForm onFinish={handleFormSubmit} form={roomForm} defaultRoom={selectedRoom} />\n      </Modal>\n    </>\n  )\n}\n\nexport default RoomPage;","import axios from 'axios';\nimport { API_URL } from 'constant/apiUrl';\nimport qs from 'qs';\n\nconst endpointPrefix = `${API_URL}/admin/manage-user`;\n\nexport function getUsersAPI(query) {\n  const url = `${endpointPrefix}/?${qs.stringify(query)}`;\n  return axios.get(url);\n}\n\nexport function getUserDetailsAPI(id) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.get(url);\n}\n\nexport function addUserAPI({ email, password, first_name, last_name, phone, DOB, gender, role_id }) {\n  const url = `${endpointPrefix}/`;\n  return axios.post(url, {\n    email,\n    password,\n    first_name,\n    last_name,\n    phone,\n    DOB: DOB.format('yyyy-MM-DD'),\n    gender,\n    role_id\n  });\n}\n\nexport function updateUserAPI(id, { email, password, first_name, last_name, phone, DOB, gender, role_id }) {\n  const url = `${endpointPrefix}/${id}/`;\n  if (password) {\n    return axios.put(url, {\n      email,\n      password,\n      first_name,\n      last_name,\n      phone,\n      DOB: DOB.format('yyyy-MM-DD'),\n      gender,\n      role_id\n    })\n  }\n\n  return axios.put(url, {\n    email,\n    first_name,\n    last_name,\n    phone,\n    DOB: DOB.format('yyyy-MM-DD'),\n    gender,\n    role_id\n  })\n}\n\nexport function deleteUserAPI(id) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.delete(url);\n}\n\nexport function blockUserAPI(userId) {\n  const url = `${endpointPrefix}/${userId}/block/`;\n  return axios.get(url);\n}\n\nexport function unblockUserAPI(userId) {\n  const url = `${endpointPrefix}/${userId}/unblock/`;\n  return axios.get(url);\n}","export const ROLES = {\n  \"1\": {\n    name: \"admin\",\n    display: \"Quản trị viên\"\n  },\n  \"2\": {\n    name: \"physician\",\n    display: \"Bác sĩ\"\n  },\n  \"3\": {\n    name: \"receptionist\",\n    display: \"Lễ tân\"\n  },\n  \"4\": {\n    name: \"patient\",\n    display: \"Bệnh nhân\"\n  }\n}\n\nexport const ROLES_LIST = [1, 2, 3, 4];","import React, { useState, useEffect } from 'react';\nimport { Form, Input, Select, Space, Spin, Row, Col, DatePicker, Radio } from 'antd';\nimport { getUserDetailsAPI } from 'services/admin/user.service';\nimport { ROLES, ROLES_LIST } from 'constant/roles';\nimport moment from 'moment';\n\nconst UserForm = props => {\n  const { form, onFinish, defaultUser } = props;\n  const [userDetail, setUserDetail] = useState(null);\n  const [detailLoading, setDetailLoading] = useState(false);\n\n  async function getUserDetail(id) {\n    try {\n      setDetailLoading(true);\n      const detailResponse = await getUserDetailsAPI(id);\n      const userDetail = detailResponse.data;\n      setUserDetail(userDetail);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setDetailLoading(false);\n    }\n  }\n\n  async function getData() {\n    if (defaultUser?.id) {\n      await Promise.all([\n        getUserDetail(defaultUser.id),\n      ]);\n    }\n  }\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  useEffect(() => {\n    if (userDetail) {\n      form.setFieldsValue({\n        email: userDetail.email,\n        first_name: userDetail.first_name,\n        last_name: userDetail.last_name,\n        phone: userDetail.phone,\n        DOB: moment(userDetail.DOB),\n        gender: userDetail.gender,\n        role_id: userDetail.role.id\n      });\n    }\n  }, [userDetail, defaultUser, form]);\n\n  return (\n    <Spin spinning={detailLoading}>\n      <Form\n        layout=\"vertical\"\n        form={form}\n        autoComplete=\"off\"\n        onFinish={onFinish}>\n        <Form.Item label=\"Email\" name=\"email\" initialValue={userDetail?.email} rules={[\n          {\n            required: true,\n            message: \"Vui lòng điền vào trường này\"\n          }\n        ]}>\n          <Input type=\"email\" />\n        </Form.Item>\n\n        <Form.Item label=\"Mật khẩu\" name=\"password\" rules={[\n          {\n            required: !userDetail?.id,\n            message: \"Vui lòng điền vào trường này\"\n          }\n        ]}>\n          <Input.Password />\n        </Form.Item>\n\n        <Row>\n          <Col flex={1}>\n            <Form.Item label=\"Họ\" name=\"first_name\" rules={[\n              {\n                required: true,\n                message: \"Vui lòng điền vào trường này\"\n              }\n            ]}>\n              <Input />\n            </Form.Item>\n          </Col>\n          <div style={{ width: 20 }}></div>\n          <Col flex={1}>\n            <Form.Item label=\"Tên\" name=\"last_name\" rules={[\n              {\n                required: true,\n                message: \"Vui lòng điền vào trường này\"\n              }\n            ]}>\n              <Input />\n            </Form.Item>\n          </Col>\n        </Row>\n\n        <Form.Item label=\"Điện thoại\" name=\"phone\" initialValue={userDetail?.phone} rules={[\n          {\n            required: true,\n            message: \"Vui lòng điền vào trường này\"\n          }\n        ]}>\n          <Input type=\"tel\" />\n        </Form.Item>\n\n        <Row>\n          <Col>\n            <Form.Item label=\"Ngày sinh\" name=\"DOB\" rules={[\n              {\n                required: true,\n                message: \"Vui lòng chọn ngày sinh\"\n              }\n            ]}>\n              <DatePicker placeholder=\"Chọn ngày\" />\n            </Form.Item>\n          </Col>\n          <div style={{ width: 20 }}></div>\n          <Col flex={1}>\n            <Form.Item label=\"Giới tính\" name=\"gender\" rules={[\n              {\n                required: true,\n                message: \"Vui lòng chọn một giá trị\"\n              }\n            ]}>\n              <Radio.Group>\n                <Radio value=\"Nam\">Nam</Radio>\n                <Radio value=\"Nữ\">Nữ</Radio>\n                <Radio value=\"Khác\">Khác</Radio>\n              </Radio.Group>\n            </Form.Item>\n          </Col>\n        </Row>\n\n\n        <Form.Item label=\"Vai trò\" name=\"role_id\" initialValue={userDetail?.role_id} rules={[\n          {\n            required: true,\n            message: \"Vui lòng chọn vai trò\"\n          }\n        ]}>\n          <Select>\n            {\n              ROLES_LIST.map(role_id => (\n                <Select.Option key={role_id} value={role_id}>{ROLES[role_id].display}</Select.Option>\n              ))\n            }\n          </Select>\n        </Form.Item>\n      </Form>\n    </Spin>\n  )\n}\n\nexport default UserForm;","import React from 'react';\nimport classnames from 'classnames';\nimport styles from './Circle.module.scss';\n\nconst Circle = props => {\n\n  const classes = classnames(\n    styles.circle,\n    { [styles['circle--success']]: props.color === 'success' }\n  )\n\n  return (\n    <div className={classes}></div>\n  )\n}\n\nexport default Circle;","import React, { useState, useEffect } from 'react';\nimport { Row, Col, Button, Modal, Table, Form, Popconfirm, Space } from 'antd';\nimport { PlusOutlined, LockOutlined, UnlockOutlined, EditOutlined, DeleteOutlined, EyeOutlined } from '@ant-design/icons';\nimport UserForm from 'forms/UserForm/UserForm';\nimport { getUsersAPI, addUserAPI, updateUserAPI, deleteUserAPI, blockUserAPI, unblockUserAPI } from 'services/admin/user.service';\nimport { formActions } from 'constant/formActions';\nimport NumberFormat from 'react-number-format';\nimport { ROLES } from 'constant/roles';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport Circle from 'components/Circle/Circle';\n\nconst AdminAccountPage = () => {\n\n  const history = useHistory();\n  const { pathname, search } = useLocation();\n  const urlSearchParams = new URLSearchParams(search);\n  const currentPageOnURL = Number(urlSearchParams.get('page'));\n  const [page, setPage] = useState(currentPageOnURL || 1);\n  const [modalVisible, setModalVisible] = useState(false);\n  const [users, setUsers] = useState();\n  const [fetchingUsers, setFetchingUsers] = useState(false);\n  const [modalLoading, setModalLoading] = useState(false);\n  const [action, setAction] = useState(formActions.CREATE);\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [userForm] = Form.useForm();\n\n  const tableColumns = [\n    {\n      title: '#',\n      key: '#',\n      render: (text, record, index) => index + 1\n    },\n    {\n      title: 'Họ và tên',\n      key: 'fullname',\n      render: (text, record) => record.first_name + \" \" + record.last_name\n    },\n    {\n      title: 'Email',\n      key: 'email',\n      dataIndex: 'email',\n      render: (text, record) => (\n        <Space>\n          <Circle color={record.is_verified_email ? 'success' : ''} />\n          <span>{record.email}</span>\n        </Space>\n      )\n    },\n    {\n      title: 'Điện thoại',\n      key: 'phone',\n      dataIndex: 'phone',\n      render: (text, record) => (\n        <Space>\n          <Circle color={record.is_verified_phone ? 'success' : ''} />\n          <span>{record.phone}</span>\n        </Space>\n      )\n    },\n    {\n      title: 'Vai trò',\n      key: 'role',\n      render: (text, record) => <span>{ROLES[record.role.id].display}</span>\n    },\n    {\n      title: 'Hành động', key: 'action', render: (text, record) => {\n        return (\n          <Space size={10}>\n            <Button icon={<EyeOutlined />} onClick={() => handleViewClick(record)}></Button>\n            <Button icon={<EditOutlined />} onClick={() => handleEditClick(record)}></Button>\n            <Popconfirm\n              onConfirm={() => handleDelete(record)}\n              title=\"Bạn có chắc muốn xóa không?\"\n              okText=\"Xóa\"\n              okType=\"danger\"\n              cancelText=\"Hủy bỏ\">\n              <Button icon={<DeleteOutlined />}></Button>\n            </Popconfirm>\n            {\n              <Popconfirm\n                onConfirm={() => handleBlockUnblock(record)}\n                title={`Bạn có chắc muốn ${record.is_active ? 'khóa' : 'mở khóa'} tài khoản này không?`}\n                okText={record.is_active ? \"Khóa\" : \"Mở khóa\"}\n                okType={record.is_active ? \"danger\" : \"primary\"}\n                cancelText=\"Hủy bỏ\">\n                {\n                  record.is_active ?\n                    <Button danger type=\"link\" icon={<LockOutlined />}>Khóa</Button>\n                    :\n                    <Button type=\"link\" icon={<UnlockOutlined />}>Mở khóa</Button>\n                }\n              </Popconfirm>\n            }\n          </Space>\n        )\n      }\n    }\n  ]\n\n  function handleOpenModal() {\n    setAction(formActions.CREATE);\n    setModalVisible(true);\n  }\n\n  function handleCloseModal() {\n    setModalVisible(false);\n  }\n\n  async function getUsers(page) {\n    try {\n      setFetchingUsers(true);\n      const response = await getUsersAPI({ page: page });\n      setUsers(response.data);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setFetchingUsers(false);\n    }\n  }\n\n  async function handleFormSubmit() {\n    try {\n      setModalLoading(true);\n      const values = await userForm.validateFields();\n      if (action === formActions.CREATE) {\n        await addUserAPI(values);\n      }\n\n      if (action === formActions.UPDATE) {\n        if (values.password.length === 0) {\n          delete values.password;\n        }\n        await updateUserAPI(selectedUser.id, values);\n      }\n\n      getUsers(page);\n\n      setModalVisible(false);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setModalLoading(false);\n    }\n  }\n\n  async function handleBlockUnblock(user) {\n    try {\n      setFetchingUsers(true);\n      if (user.is_active) {\n        await blockUserAPI(user.id);\n      } else {\n        await unblockUserAPI(user.id);\n      }\n      getUsers();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  function handleViewClick(user) {\n\n  }\n\n  function handleEditClick(user) {\n    setAction(formActions.UPDATE);\n    setSelectedUser(user);\n    setModalVisible(true);\n  }\n\n  async function handleDelete(user) {\n    try {\n      await deleteUserAPI(user.id);\n      getUsers(page);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  function afterClose() {\n    userForm.resetFields();\n    setSelectedUser(null);\n  }\n\n  function handlePaginationChange(page) {\n    getUsers(page);\n    setPage(page);\n    history.push({\n      pathname: pathname,\n      search: `page=${page}`\n    })\n  }\n\n  useEffect(() => {\n    getUsers(page);\n  }, []);\n\n  return (\n    <>\n      <Row justify=\"space-between\">\n        <Col><h1 className=\"text-xl\">Quản lý tài khoản</h1></Col>\n        <Col>\n          <Button type=\"primary\" icon={<PlusOutlined />} onClick={handleOpenModal}>Tạo mới</Button>\n        </Col>\n      </Row>\n      <Table\n        rowKey=\"id\"\n        columns={tableColumns}\n        dataSource={users?.results}\n        pagination={{\n          defaultCurrent: page,\n          current: page,\n          pageSize: 10,\n          total: users?.count,\n          onChange: handlePaginationChange\n        }}\n        loading={fetchingUsers} />\n      <Modal\n        visible={modalVisible}\n        title={action === formActions.CREATE ? 'Thêm tài khoản' : 'Cập nhật tài khoản'}\n        onCancel={handleCloseModal}\n        confirmLoading={modalLoading}\n        destroyOnClose={true}\n        afterClose={afterClose}\n        onOk={handleFormSubmit}>\n        <UserForm onFinish={handleFormSubmit} form={userForm} defaultUser={selectedUser} />\n      </Modal>\n    </>\n  )\n}\n\nexport default AdminAccountPage;","import React from 'react';\n\nconst AdminSettingPage = () => {\n  return (\n    <div>Admin setting page</div>\n  )\n}\n\nexport default AdminSettingPage;","import React, { useEffect } from 'react';\nimport Cookie from 'js-cookie';\nimport { Redirect } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { logoutAction } from 'store/actions/auth.action';\nimport jwtDecode from 'jwt-decode';\n\nconst withPrivateRoute = (Child, roles) => {\n  const WrapperComponent = (props) => {\n\n    const dispatch = useDispatch();\n    const token = Cookie.get('EMR_token');\n    const user = useSelector((state) => state.userState.user);\n\n    function isValidRole(user) {\n      const userRole = user?.role.name;\n      const isValid = roles.includes(userRole);\n      return isValid;\n    }\n\n    useEffect(() => {\n      if (user && user.role) {\n        if (!isValidRole(user)) {\n          dispatch(logoutAction());\n        }\n      }\n    }, [user, dispatch]);\n\n    try {\n      if (!token || token.length === 0 || !jwtDecode(token)) {\n        return <Redirect to=\"/login\" />;\n      } else {\n        return <Child {...props} />\n      }\n      \n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  return WrapperComponent;\n}\n\nexport default withPrivateRoute;","import React from 'react';\nimport { Button, Layout, Modal } from 'antd';\nimport {\n  LogoutOutlined,\n  ExclamationCircleOutlined\n} from '@ant-design/icons';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { logoutAction } from 'store/actions/auth.action';\n\nconst { Header } = Layout;\n\nconst CustomHeader = () => {\n\n  const dispatch = useDispatch();\n  const user = useSelector((state) => state.userState.user);\n\n  function handleLogout() {\n    Modal.confirm({\n      title: \"Đăng xuất\",\n      icon: <ExclamationCircleOutlined />,\n      content: \"Bạn có chắc muốn đăng xuất không?\",\n      onOk() {\n        dispatch(logoutAction());\n      }\n    })\n  }\n\n  return (\n    <Header className=\"header flex items-center\">\n      <div className=\"text-2xl text-white\">EMR</div>\n      <div className=\"ml-auto\"></div>\n      <div className=\"text-white\">{user?.first_name} {user?.last_name} <span className=\"ml-3\">|</span></div>\n      <Button type=\"default\" ghost icon={<LogoutOutlined />} className=\"border-none\" onClick={handleLogout}>Đăng xuất</Button>\n    </Header>\n  )\n}\n\nexport default CustomHeader;","import React from 'react';\nimport { Link, Redirect, Switch, Route, useRouteMatch, useLocation } from 'react-router-dom';\nimport { Layout, Menu } from 'antd';\nimport {\n  UserOutlined,\n  DashboardOutlined,\n  MedicineBoxOutlined,\n  BugOutlined,\n  DollarOutlined,\n  IdcardOutlined,\n  ClockCircleOutlined,\n  AppstoreOutlined,\n  CalendarOutlined,\n  ContainerOutlined,\n  SettingOutlined,\n  NotificationOutlined} from '@ant-design/icons';\nimport AdminDashboard from 'pages/admin/dashboard';\nimport DrugCategoryPage from 'pages/common/drug/drug-category';\nimport DrugUnitPage from 'pages/common/drug/drug-unit';\nimport DrugPage from 'pages/common/drug/drug';\nimport DrugInstructionPage from 'pages/common/drug/drug-instruction';\nimport DiseaseCategory from 'pages/common/disease/disease-category';\nimport DiseasePage from 'pages/common/disease/disease';\nimport NotificationPage from 'pages/common/notification/notification';\nimport VisitPage from 'pages/common/visit/visit';\nimport PatientPage from 'pages/common/patient/patient';\nimport AppointmentPage from 'pages/common/appointment/apointment';\nimport ServicePage from 'pages/common/service/service';\nimport WorkingHourPage from 'pages/admin/working-hour';\nimport RoomPage from 'pages/common/room/room';\nimport AdminAccountPage from 'pages/admin/account';\nimport AdminSettingPage from 'pages/admin/setting';\nimport withPrivateRoute from 'HOCs/withPrivateRoute';\nimport CustomHeader from 'components/Header';\n\nconst { Sider, Content } = Layout;\nconst { SubMenu } = Menu;\n\nconst AdminLayout = () => {\n  const match = useRouteMatch();\n  const location = useLocation();\n  const path = match.path;\n\n  return (\n    <Layout>\n      <CustomHeader />\n      <Layout>\n        <Sider width={200} className=\"site-layout-background\">\n          <Menu\n            mode=\"inline\"\n            style={{ height: '100%', borderRight: 0 }}\n            selectedKeys={[location.pathname]}\n          >\n            <Menu.Item key=\"/admin/dashboard\" icon={<DashboardOutlined />}>\n              <Link to=\"/admin/dashboard\">Bảng điều khiển</Link>\n            </Menu.Item>\n            <SubMenu key=\"drug\" icon={<MedicineBoxOutlined />} title=\"Quản lý thuốc\">\n              <Menu.Item key=\"/admin/drug/category\">\n                <Link to=\"/admin/drug/category\">Loại thuốc</Link>\n              </Menu.Item>\n              <Menu.Item key=\"/admin/drug/unit\">\n                <Link to=\"/admin/drug/unit\">Đơn vị tính</Link>\n              </Menu.Item>\n              <Menu.Item key=\"/admin/drug\">\n                <Link to=\"/admin/drug\">Thuốc</Link>\n              </Menu.Item>\n              <Menu.Item key=\"/admin/drug/instruction\">\n                <Link to=\"/admin/drug/instruction\">Hướng dẫn sử dụng</Link>\n              </Menu.Item>\n            </SubMenu>\n            <SubMenu key=\"disease\" icon={<BugOutlined />} title=\"Quản lý bệnh\">\n              <Menu.Item key=\"/admin/disease/category\">\n                <Link to=\"/admin/disease/category\">Loại bệnh</Link>\n              </Menu.Item>\n              <Menu.Item key=\"/admin/disease\">\n                <Link to=\"/admin/disease\">Bệnh</Link>\n              </Menu.Item>\n            </SubMenu>\n\n            <Menu.Item key=\"/admin/notification\" icon={<NotificationOutlined />}>\n              <Link to=\"/admin/notification\">Thông báo</Link>\n            </Menu.Item>\n            <Menu.Item key=\"/admin/visit\" icon={<ContainerOutlined />}>\n              <Link to=\"/admin/visit\">Khám chữa bệnh</Link>\n            </Menu.Item>\n            <Menu.Item key=\"/admin/patient\" icon={<IdcardOutlined />}>\n              <Link to=\"/admin/patient\">Bệnh nhân</Link>\n            </Menu.Item>\n            <Menu.Item key=\"/admin/appointment\" icon={<CalendarOutlined />}>\n              <Link to=\"/admin/appointment\">Lịch hẹn</Link>\n            </Menu.Item>\n            <Menu.Item key=\"/admin/service\" icon={<DollarOutlined />}>\n              <Link to=\"/admin/service\">Dịch vụ</Link>\n            </Menu.Item>\n\n            <Menu.Item key=\"/admin/working-hour\" icon={<ClockCircleOutlined />}>\n              <Link to=\"/admin/working-hour\">Giờ làm việc</Link>\n            </Menu.Item>\n            <Menu.Item key=\"/admin/room\" icon={<AppstoreOutlined />}>\n              <Link to=\"/admin/room\">Phòng</Link>\n            </Menu.Item>\n\n            <Menu.Item key=\"/admin/account\" icon={<UserOutlined />}>\n              <Link to=\"/admin/account\">Tài khoản</Link>\n            </Menu.Item>\n            <Menu.Item key=\"/admin/setting\" icon={<SettingOutlined />}>\n              <Link to=\"/admin/setting\">Cài đặt</Link>\n            </Menu.Item>\n          </Menu>\n        </Sider>\n        <Layout style={{ padding: '0 24px 24px' }}>\n          <Content\n            className=\"site-layout-background\"\n            style={{\n              padding: 24,\n              margin: 0,\n              minHeight: 280,\n            }}\n          >\n            <Switch>\n              {/* Dashboard */}\n              <Route path={`${path}/dashboard`}>\n                <AdminDashboard />\n              </Route>\n\n              {/* Drug */}\n              <Route path={`${path}/drug/category`}>\n                <DrugCategoryPage />\n              </Route>\n              <Route path={`${path}/drug/unit`}>\n                <DrugUnitPage />\n              </Route>\n              <Route path={`${path}/drug`} exact>\n                <DrugPage />\n              </Route>\n              <Route path={`${path}/drug/instruction`}>\n                <DrugInstructionPage />\n              </Route>\n\n              {/* Disease */}\n              <Route path={`${path}/disease/category`}>\n                <DiseaseCategory />\n              </Route>\n              <Route path={`${path}/disease`}>\n                <DiseasePage />\n              </Route>\n\n              {/* Notification */}\n              <Route path={`${path}/notification`}>\n                <NotificationPage />\n              </Route>\n\n              {/* Visit */}\n              <Route path={`${path}/visit`}>\n                <VisitPage />\n              </Route>\n\n              {/* Patient */}\n              <Route path={`${path}/patient`}>\n                <PatientPage />\n              </Route>\n\n              {/* Appointment */}\n              <Route path={`${path}/appointment`}>\n                <AppointmentPage />\n              </Route>\n\n              {/* Service */}\n              <Route path={`${path}/service`}>\n                <ServicePage />\n              </Route>\n\n              {/* Service */}\n              <Route path={`${path}/working-hour`}>\n                <WorkingHourPage />\n              </Route>\n\n              {/* Room */}\n              <Route path={`${path}/room`}>\n                <RoomPage />\n              </Route>\n\n              {/* Room */}\n              <Route path={`${path}/account`}>\n                <AdminAccountPage />\n              </Route>\n\n              {/* Room */}\n              <Route path={`${path}/setting`}>\n                <AdminSettingPage />\n              </Route>\n\n              {/* Fallback */}\n              <Redirect to={`/admin/dashboard`} />\n            </Switch>\n          </Content>\n        </Layout>\n      </Layout>\n    </Layout>\n  )\n}\n\nexport default withPrivateRoute(AdminLayout, ['admin']);","import React from 'react';\nimport { Link, Redirect, Switch, Route, useRouteMatch, useLocation } from 'react-router-dom';\nimport { Layout, Menu } from 'antd';\nimport {\n  UserOutlined,\n  DashboardOutlined,\n  MedicineBoxOutlined,\n  BugOutlined,\n  DollarOutlined,\n  IdcardOutlined,\n  ClockCircleOutlined,\n  AppstoreOutlined,\n  CalendarOutlined,\n  ContainerOutlined,\n  SettingOutlined,\n  NotificationOutlined} from '@ant-design/icons';\nimport AdminDashboard from 'pages/admin/dashboard';\nimport DrugCategoryPage from 'pages/common/drug/drug-category';\nimport DrugUnitPage from 'pages/common/drug/drug-unit';\nimport DrugPage from 'pages/common/drug/drug';\nimport DrugInstructionPage from 'pages/common/drug/drug-instruction';\nimport DiseaseCategory from 'pages/common/disease/disease-category';\nimport DiseasePage from 'pages/common/disease/disease';\nimport NotificationPage from 'pages/common/notification/notification';\nimport VisitPage from 'pages/common/visit/visit';\nimport PatientPage from 'pages/common/patient/patient';\nimport AppointmentPage from 'pages/common/appointment/apointment';\nimport ServicePage from 'pages/common/service/service';\nimport RoomPage from 'pages/common/room/room';\nimport AdminAccountPage from 'pages/admin/account';\nimport AdminSettingPage from 'pages/admin/setting';\nimport withPrivateRoute from 'HOCs/withPrivateRoute';\nimport CustomHeader from 'components/Header';\n\nconst { Sider, Content } = Layout;\nconst { SubMenu } = Menu;\n\nconst PhysicianLayout = () => {\n  const match = useRouteMatch();\n  const location = useLocation();\n  const path = match.path;\n\n  return (\n    <Layout>\n      <CustomHeader />\n      <Layout>\n        <Sider width={200} className=\"site-layout-background\">\n          <Menu\n            mode=\"inline\"\n            style={{ height: '100%', borderRight: 0 }}\n            selectedKeys={[location.pathname]}\n          >\n            <Menu.Item key=\"/physician/dashboard\" icon={<DashboardOutlined />}>\n              <Link to=\"/physician/dashboard\">Bảng điều khiển</Link>\n            </Menu.Item>\n            <SubMenu key=\"drug\" icon={<MedicineBoxOutlined />} title=\"Quản lý thuốc\">\n              <Menu.Item key=\"/physician/drug/category\">\n                <Link to=\"/physician/drug/category\">Loại thuốc</Link>\n              </Menu.Item>\n              <Menu.Item key=\"/physician/drug/unit\">\n                <Link to=\"/physician/drug/unit\">Đơn vị tính</Link>\n              </Menu.Item>\n              <Menu.Item key=\"/physician/drug\">\n                <Link to=\"/physician/drug\">Thuốc</Link>\n              </Menu.Item>\n              <Menu.Item key=\"/physician/drug/instruction\">\n                <Link to=\"/physician/drug/instruction\">Hướng dẫn sử dụng</Link>\n              </Menu.Item>\n            </SubMenu>\n            <SubMenu key=\"disease\" icon={<BugOutlined />} title=\"Quản lý bệnh\">\n              <Menu.Item key=\"/physician/disease/category\">\n                <Link to=\"/physician/disease/category\">Loại bệnh</Link>\n              </Menu.Item>\n              <Menu.Item key=\"/physician/disease\">\n                <Link to=\"/physician/disease\">Bệnh</Link>\n              </Menu.Item>\n            </SubMenu>\n\n            <Menu.Item key=\"/physician/notification\" icon={<NotificationOutlined />}>\n              <Link to=\"/physician/notification\">Thông báo</Link>\n            </Menu.Item>\n            <Menu.Item key=\"/physician/visit\" icon={<ContainerOutlined />}>\n              <Link to=\"/physician/visit\">Khám chữa bệnh</Link>\n            </Menu.Item>\n            <Menu.Item key=\"/physician/patient\" icon={<IdcardOutlined />}>\n              <Link to=\"/physician/patient\">Bệnh nhân</Link>\n            </Menu.Item>\n            <Menu.Item key=\"/physician/appointment\" icon={<CalendarOutlined />}>\n              <Link to=\"/physician/appointment\">Lịch hẹn</Link>\n            </Menu.Item>\n            <Menu.Item key=\"/physician/service\" icon={<DollarOutlined />}>\n              <Link to=\"/physician/service\">Dịch vụ</Link>\n            </Menu.Item>\n\n            <Menu.Item key=\"/physician/room\" icon={<AppstoreOutlined />}>\n              <Link to=\"/physician/room\">Phòng</Link>\n            </Menu.Item>\n\n            <Menu.Item key=\"/physician/account\" icon={<UserOutlined />}>\n              <Link to=\"/physician/account\">Tài khoản</Link>\n            </Menu.Item>\n            <Menu.Item key=\"/physician/setting\" icon={<SettingOutlined />}>\n              <Link to=\"/physician/setting\">Cài đặt</Link>\n            </Menu.Item>\n          </Menu>\n        </Sider>\n        <Layout style={{ padding: '0 24px 24px' }}>\n          <Content\n            className=\"site-layout-background\"\n            style={{\n              padding: 24,\n              margin: 0,\n              minHeight: 280,\n            }}\n          >\n            <Switch>\n              {/* Dashboard */}\n              <Route path={`${path}/dashboard`}>\n                <AdminDashboard />\n              </Route>\n\n              {/* Drug */}\n              <Route path={`${path}/drug/category`}>\n                <DrugCategoryPage />\n              </Route>\n              <Route path={`${path}/drug/unit`}>\n                <DrugUnitPage />\n              </Route>\n              <Route path={`${path}/drug`} exact>\n                <DrugPage />\n              </Route>\n              <Route path={`${path}/drug/instruction`}>\n                <DrugInstructionPage />\n              </Route>\n\n              {/* Disease */}\n              <Route path={`${path}/disease/category`}>\n                <DiseaseCategory />\n              </Route>\n              <Route path={`${path}/disease`}>\n                <DiseasePage />\n              </Route>\n\n              {/* Notification */}\n              <Route path={`${path}/notification`}>\n                <NotificationPage />\n              </Route>\n\n              {/* Visit */}\n              <Route path={`${path}/visit`}>\n                <VisitPage />\n              </Route>\n\n              {/* Patient */}\n              <Route path={`${path}/patient`}>\n                <PatientPage />\n              </Route>\n\n              {/* Appointment */}\n              <Route path={`${path}/appointment`}>\n                <AppointmentPage />\n              </Route>\n\n              {/* Service */}\n              <Route path={`${path}/service`}>\n                <ServicePage />\n              </Route>\n\n              {/* Room */}\n              <Route path={`${path}/room`}>\n                <RoomPage />\n              </Route>\n\n              {/* Account */}\n              <Route path={`${path}/account`}>\n                <AdminAccountPage />\n              </Route>\n\n              {/* Room */}\n              <Route path={`${path}/setting`}>\n                <AdminSettingPage />\n              </Route>\n\n              {/* Fallback */}\n              <Redirect to={`/physician/dashboard`} />\n            </Switch>\n          </Content>\n        </Layout>\n      </Layout>\n    </Layout>\n  )\n}\n\nexport default withPrivateRoute(PhysicianLayout, ['physician']);","import axios from 'axios';\nimport { API_URL } from 'constant/apiUrl';\n\nconst endpointPrefix = `${API_URL}/user/patient`;\n\nexport function listAllPatientsAPI(search = \"\") {\n  const url = `${endpointPrefix}/?search=${search}`;\n  return axios.get(url);\n}","import React from 'react';\nimport { Form, Input } from 'antd';\n\nconst PatientForm = props => {\n  const { form, onFinish } = props;\n\n  return (\n    <Form\n      layout=\"vertical\"\n      onFinish={onFinish}\n      form={form}>\n      <Form.Item label=\"Tên bệnh nhân\">\n        <Input />\n      </Form.Item>\n    </Form>\n  )\n}\n\nexport default PatientForm;","import React, { useState, useEffect } from 'react';\nimport { Divider, Input, Table, Form, PageHeader, Button, Modal, Menu, Dropdown } from 'antd';\nimport { listAllPatientsAPI } from 'services/user/patient.service';\nimport { PlusOutlined } from '@ant-design/icons';\nimport PatientForm from 'forms/PatientForm/PatientForm';\nimport { getRoomAPI } from 'services/user/room.service';\nimport { createVisitAPI } from 'services/user/visit.service';\n\nconst ReceivePage = props => {\n\n  const [patientData, setPatientData] = useState(null);\n  const [patientLoading, setPatientLoading] = useState(false);\n  const [rooms, setRooms] = useState(null);\n  const [roomLoading, setRoomLoading] = useState(false);\n  const [roomModalVisible, setRoomModalVisible] = useState(false);\n  const [modalVisible, setModalVisible] = useState(false);\n  const [isCreatingVisit, setCreatingVisit] = useState(false);\n  const [patientForm] = Form.useForm();\n\n  function renderMenu(patientId) {\n    return (\n      <Menu>\n        {\n          rooms.map(room => (\n            <Menu.Item key={room.id} onClick={() => handleCreateVisit(patientId, room.id)}>{room.name}</Menu.Item>\n          ))\n        }\n      </Menu>\n    )\n  }\n\n  const tableColumns = [\n    {\n      title: '#',\n      key: 'index',\n      render: (text, record, index) => index + 1\n    },\n    {\n      title: 'Họ và tên',\n      key: 'fullname',\n      render: (text, { first_name, last_name }) => first_name + ' ' + last_name\n    },\n    {\n      title: 'Giới tính',\n      key: 'gender',\n      dataIndex: 'gender'\n    },\n    {\n      title: 'Ngày sinh',\n      key: 'DOB',\n      dataIndex: 'DOB'\n    },\n    {\n      title: 'Điện thoại',\n      key: 'phone',\n      dataIndex: 'phone'\n    },\n    {\n      title: 'Hành động',\n      key: 'action',\n      render: (text, record) => (\n        <Dropdown overlay={renderMenu(record.id)} overlayStyle={{ minWidth: 200 }} trigger=\"click\">\n          <Button>Tiếp nhận</Button>\n        </Dropdown>\n      )\n    }\n  ]\n\n\n  //\n  // Load initial data\n  //\n  async function listAllPatients(search) {\n    try {\n      setPatientLoading(true);\n      const patientResponse = await listAllPatientsAPI(search);\n      setPatientData(patientResponse.data);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setPatientLoading(false);\n    }\n  }\n\n  async function getRooms() {\n    try {\n      setRoomLoading(true);\n      const roomResponse = await getRoomAPI();\n      setRooms(roomResponse.data);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setRoomLoading(false);\n    }\n  }\n\n  async function getInitialData() {\n    await Promise.all([\n      listAllPatients(),\n      getRooms()\n    ])\n  }\n\n  useEffect(() => {\n    getInitialData();\n  }, []);\n\n  //\n  // Component functions\n  //\n  function handleAddClick() {\n    setModalVisible(true);\n  }\n\n  function handleCloseModal() {\n    setModalVisible(false);\n  }\n\n  function handleSearch(values) {\n    listAllPatients(values.search);\n  }\n\n  function handleSubmit() {\n\n  }\n\n  function handleReceiveClick(patientId) {\n    setRoomModalVisible(true);\n  }\n\n  async function handleCreateVisit(patientId, roomId) {\n    try {\n      setCreatingVisit(true);\n      const createVisitResponse = await createVisitAPI({ patientId, roomId });\n      console.log(createVisitResponse.data);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setCreatingVisit(false);\n    }\n  }\n\n  return (\n    <>\n      <PageHeader\n        title=\"Tiếp nhận bệnh nhân\"\n        className=\"pl-0\"\n        extra={<Button type=\"primary\" onClick={handleAddClick} icon={<PlusOutlined />}>Bệnh nhân mới</Button>} />\n\n      <Form onFinish={handleSearch}>\n        <Form.Item name=\"search\">\n          <Input.Search size=\"large\" placeholder=\"Tìm kiếm bệnh nhân theo tên/SĐT\" />\n        </Form.Item>\n      </Form>\n      <Table\n        rowKey=\"id\"\n        dataSource={patientData?.results}\n        loading={patientLoading || isCreatingVisit}\n        columns={tableColumns} />\n      <Modal\n        visible={modalVisible}\n        onCancel={handleCloseModal}\n        destroyOnClose={true}\n        title=\"Bệnh nhân mới\">\n        <PatientForm form={patientForm} onFinish={handleSubmit} />\n      </Modal>\n    </>\n  )\n}\n\nexport default ReceivePage;","import React from 'react';\n\nconst ProfilePage = props => {\n  return (\n    <div>Profile Page</div>\n  )\n}\n\nexport default ProfilePage;","import React from 'react';\nimport { Link, Redirect, Switch, Route, useRouteMatch, useLocation } from 'react-router-dom';\nimport { Layout, Menu } from 'antd';\nimport {\n  UserOutlined,\n  DashboardOutlined,\n  CalendarOutlined,\n} from '@ant-design/icons';\nimport AppointmentPage from 'pages/common/appointment/apointment';\nimport withPrivateRoute from 'HOCs/withPrivateRoute';\nimport CustomHeader from 'components/Header';\nimport ReceivePage from 'pages/receptionist/receive';\nimport ProfilePage from 'pages/common/profile/profile';\n\nconst { Sider, Content } = Layout;\nconst { SubMenu } = Menu;\n\nconst ReceptionistLayout = () => {\n  const match = useRouteMatch();\n  const location = useLocation();\n  const path = match.path;\n\n  return (\n    <Layout>\n      <CustomHeader />\n      <Layout>\n        <Sider width={200} className=\"site-layout-background\">\n          <Menu\n            mode=\"inline\"\n            style={{ height: '100%', borderRight: 0 }}\n            selectedKeys={[location.pathname]}\n          >\n            <Menu.Item key=\"/receptionist/receive\" icon={<DashboardOutlined />}>\n              <Link to=\"/receptionist/receive\">Tiếp đón</Link>\n            </Menu.Item>\n            <Menu.Item key=\"/receptionist/appointment\" icon={<CalendarOutlined />}>\n              <Link to=\"/receptionist/appointment\">Lịch hẹn</Link>\n            </Menu.Item>\n\n            <Menu.Item key=\"/receptionist/profile\" icon={<UserOutlined />}>\n              <Link to=\"/receptionist/profile\">Hồ sơ</Link>\n            </Menu.Item>\n          </Menu>\n        </Sider>\n        <Layout style={{ padding: '0 24px 24px' }}>\n          <Content\n            className=\"site-layout-background\"\n            style={{\n              padding: 24,\n              margin: 0,\n              minHeight: 280,\n            }}\n          >\n            <Switch>\n              {/* Dashboard */}\n              <Route path={`${path}/receive`}>\n                <ReceivePage />\n              </Route>\n\n              {/* Appointment */}\n              <Route path={`${path}/appointment`}>\n                <AppointmentPage />\n              </Route>\n\n              <Route path={`${path}/profile`}>\n                <ProfilePage />\n              </Route>\n\n              {/* Fallback */}\n              <Redirect to={`/receptionist/receive`} />\n            </Switch>\n          </Content>\n        </Layout>\n      </Layout>\n    </Layout>\n  )\n}\n\nexport default withPrivateRoute(ReceptionistLayout, ['receptionist']);","import React from 'react';\n\nconst EmailIcon = () => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" id=\"Capa_1\" enableBackground=\"new 0 0 512 512\" height=\"50\" viewBox=\"0 0 512 512\" width=\"50\"><g><g><path d=\"m497 15.243h-482c-8.284 0-15 6.716-15 15v330c0 8.284 6.716 15 15 15h121.019c-.006.505-.019 1.008-.019 1.515 0 66.168 53.832 120 120 120s120-53.832 120-120c0-.506-.013-1.01-.019-1.515h121.019c8.284 0 15-6.716 15-15v-330c0-8.285-6.716-15-15-15zm-43.122 30-197.878 147.792-197.878-147.792zm-197.878 421.514c-49.626 0-90-40.374-90-90s40.374-90 90-90 90 40.374 90 90-40.374 90-90 90zm226-121.514h-110.208c-13.876-50.929-60.527-88.485-115.792-88.485-55.266 0-101.916 37.557-115.792 88.485h-110.208v-283.56l217.024 162.092c2.662 1.988 5.819 2.982 8.976 2.982s6.314-.994 8.976-2.982l217.024-162.092zm-191.606 5.908-49.394 49.393-19.394-19.393c-5.857-5.858-15.355-5.858-21.213 0s-5.858 15.355 0 21.213l30 30c2.929 2.929 6.768 4.394 10.606 4.394s7.678-1.464 10.606-4.394l60-60c5.858-5.858 5.858-15.355 0-21.213-5.856-5.859-15.354-5.859-21.211 0z\" fill=\"currentColor\" /></g></g></svg>\n)\n\nexport default EmailIcon;","import React, { useState, useEffect } from 'react';\nimport EmailIcon from 'components/Icons/EmailIcon';\nimport Icon from '@ant-design/icons';\nimport { Alert, Button, Space, Spin } from 'antd';\nimport { Link, useLocation } from 'react-router-dom';\nimport { verifyEmailAPI } from 'services/auth/auth.service';\n\nconst VerifyPage = (props) => {\n\n  const [loading, setLoading] = useState(false);\n  const [success, setSuccess] = useState(false);\n  const [error, setError] = useState(null);\n  const { search } = useLocation();\n  const urlSearchParams = new URLSearchParams(search);\n  const token = urlSearchParams.get('token');\n\n  function isValidToken(token = \"\") {\n    const isValid = /[A-Za-z0-9-_=]+\\.[A-Za-z0-9-_=]+\\.?[A-Za-z0-9-_.+/=]*/.test(token);\n    console.log(isValid);\n    return isValid;\n  }\n\n  async function verifyEmail(token) {\n    try {\n      setLoading(true);\n      await verifyEmailAPI(token);\n      setSuccess(true);\n    } catch (error) {\n      setError(error);\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  useEffect(() => {\n    if (token && token.length > 0 && isValidToken(token)) {\n      verifyEmail(token);\n    }\n  }, [search, token]);\n\n  return (\n    <main className=\"login-page\">\n      <div className=\"auth\">\n        <div className=\"auth__header text-center\">\n          <Icon component={EmailIcon} />\n          <h1 className=\"text-3xl\">Xác thực email</h1>\n        </div>\n\n        {\n          loading &&\n          <Space align=\"center\" className=\"flex text-center justify-center\">\n            <Spin />\n            <span>Vui lòng đợi</span>\n          </Space>\n        }\n\n        {\n          success &&\n          <Alert\n            showIcon\n            type=\"success\"\n            message=\"Xác thực địa chỉ email thành công\"\n          />\n        }\n\n        {\n          !isValidToken(token) &&\n          <Alert\n            showIcon\n            type=\"error\"\n            message=\"URL không hợp lệ\"\n          />\n        }\n\n        {\n          !!error &&\n          <Alert\n            showIcon\n            type=\"error\"\n            message={error?.response?.data.message || \"Có lỗi khi xác thực email, vui lòng thử lại\"}\n          />\n        }\n\n        <div className=\"text-center mt-5\">\n          <Button type=\"link\">\n            <Link to=\"/\">Về trang chủ</Link>\n          </Button>\n        </div>\n      </div>\n    </main>\n  )\n}\n\nexport default VerifyPage;","import React, { useEffect } from 'react';\nimport { Route, HashRouter as Router, Switch, Redirect  } from 'react-router-dom';\nimport LoginPage from 'pages/login';\nimport Cookie from 'js-cookie';\nimport jwtDecode from 'jwt-decode';\nimport AdminLayout from 'layouts/AdminLayout/AdminLayout';\nimport PhysicianLayout from 'layouts/PhysicianLayout/PhysicianLayout';\nimport ReceptionistLayout from 'layouts/ReceptionistLayout/ReceptionistLayout';\nimport setupInterceptor from 'utils/interceptor';\nimport { useDispatch } from 'react-redux';\nimport { getProfileAction } from 'store/actions/user.action';\nimport { refreshToken } from 'services/auth/auth.service';\n\n// import \"normalize.css/normalize.css\";\n// import \"@blueprintjs/core/lib/css/blueprint.css\";\n// import \"@blueprintjs/icons/lib/css/blueprint-icons.css\";\nimport 'antd/dist/antd.css';\nimport 'styles/main.scss';\nimport VerifyPage from 'pages/verify-email';\n\n\nfunction App() {\n\n  setupInterceptor();\n\n  const dispatch = useDispatch();\n\n  function fetchProfile() {\n    try {\n      const token = Cookie.get('EMR_token');\n      if (token && jwtDecode(token)) {\n        dispatch(getProfileAction());\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async function checkRefresh() {\n    try {\n      const token = Cookie.get('EMR_token');\n      const refresh = Cookie.get('EMR_refresh');\n      if (!token && refresh) {\n        const newTokenReponse = await refreshToken(refresh);\n        const newToken = newTokenReponse.data;\n        Cookie.set('EMR_token', newToken.access_token, { expires: 3/24 });\n      }\n      fetchProfile();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  useEffect(() => {\n    checkRefresh();\n  });\n  \n  return (\n    <div className=\"app\">\n      <Router>\n        <Switch>\n          <Route path=\"/login\" component={LoginPage} />\n          <Route path=\"/verify-email\" component={VerifyPage} />\n\n          <Route path=\"/admin\" component={AdminLayout} />\n          <Route path=\"/physician\" component={PhysicianLayout} />\n          <Route path=\"/receptionist\" component={ReceptionistLayout} />\n\n          <Redirect to=\"/login\" />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import axios from 'axios';\nimport { message } from 'antd';\nimport Cookie from 'js-cookie';\nimport * as AuthService from 'services/auth/auth.service';\nimport jwtDecode from 'jwt-decode';\nimport { API_URL } from 'constant/apiUrl';\n\nexport default function setupInterceptor() {\n  axios.interceptors.request.use((config) => {\n\n    if (config.method === 'delete') {\n      message.loading('Đang thực hiện');\n    }\n\n    try {\n      const token = Cookie.get('EMR_token');\n      if (token && jwtDecode(token)) {\n        config.headers['Authorization'] = `Bearer ${token}`;\n      }\n    } catch (error) {\n      console.log(error);\n    }\n    return config;\n  }, (error) => Promise.reject(error));\n\n  axios.interceptors.response.use(((res) => {\n    switch (res.config.method) {\n      case \"post\":\n        if (res.data.id) {\n          // Check if new object created because login is also a post request\n          message.success({\n            content: \"Thao tác thành công\"\n          });\n        }\n\n        break;\n      case \"put\":\n      case \"patch\":\n        message.success({\n          content: \"Cập nhật thành công\"\n        });\n        break;\n      case \"delete\":\n        message.destroy();\n        message.success({\n          content: \"Xóa thành công\"\n        });\n        break;\n      default:\n      // Do nothing\n    }\n    return res;\n  }), async (error) => {\n    const originalRequest = error.config;\n\n    if (error.response.status === 401 && !originalRequest._retry && originalRequest.url !== `${API_URL}/auth/refresh-token/`) {\n      Cookie.remove(\"EMR_token\");\n\n      originalRequest._retry = true;\n\n      let refreshToken = Cookie.get('EMR_refresh');\n\n      if (refreshToken && refreshToken.length > 0) {\n        try {\n          const refreshResponse = await AuthService.refreshToken(refreshToken);\n          const newToken = refreshResponse.data.access_token;\n          Cookie.set('EMR_token', newToken);\n\n          const config = error.config;\n          config.headers['Authorization'] = `Bearer ${newToken}`;\n\n          return new Promise((resolve, reject) => {\n            return axios.request(config)\n              .then(res => resolve(res))\n              .catch(error => reject(error))\n          })\n        } catch (error) {\n          Cookie.remove(\"EMR_refresh\");\n          return Promise.reject(error);\n        }\n      }\n    } else {\n      // Do not show error alert on veirfy email page because it already have its own error messages\n      if (!originalRequest.url.includes('/api/auth/verify-email')) {\n        const errorMessage = error.response?.data.message || \"Unexpected error occurred\";\n        message.error(errorMessage);\n      }\n\n    }\n\n    return Promise.reject(error);\n  })\n}","import * as actionTypes from '../actionTypes';\n\nconst initialState = {\n  loginLoading: false\n}\n\nexport default function authReducer (state = initialState, action) {\n  switch(action.type) {\n    case actionTypes.LOGIN_PENDING:\n      return {\n        ...state,\n        loginLoading: true\n      }\n\n    case actionTypes.LOGIN_SUCCESS:\n      return {\n        ...state,\n        loginLoading: false\n      }\n\n    case actionTypes.LOGIN_FAILURE:\n      return {\n        ...state,\n        loginLoading: false\n      }\n\n    default:\n      return {\n        ...state\n      }\n  }\n}","import * as actionTypes from '../actionTypes';\n\nconst initialState = {\n  user: null,\n  getProfileLoading: false,\n}\n\nexport default function userReducer(state = initialState, action) {\n  switch (action.type) {\n    case actionTypes.GET_PROFILE_PENDING:\n      return {\n        ...state,\n        user: null,\n        getProfileLoading: true\n      }\n    case actionTypes.GET_PROFILE_SUCCESS:\n      return {\n        ...state,\n        user: action.payload,\n        getProfileLoading: false\n      }\n    case actionTypes.GET_PROFILE_FAILURE:\n      return {\n        ...state,\n        user: null,\n        getProfileLoading: false\n      }\n    \n    case actionTypes.LOGOUT:\n      return {\n        ...state,\n        user: null,\n        getProfileLoading: false\n      }\n    default:\n      return { ...state }\n  }\n}","import { combineReducers } from 'redux';\nimport authReducer from './reducers/auth.reducer';\nimport userReducer from './reducers/user.reducer';\n\nconst rootReducer = combineReducers({\n  userState: userReducer,\n  authState: authReducer\n})\n\nexport default rootReducer;","import { createStore, compose, applyMiddleware } from 'redux';\nimport rootReducer from './rootReducer';\nimport thunk from 'redux-thunk';\n\nconst middlewares = [thunk]\n\nconst composeEnhancers =\n  typeof window === 'object' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : compose;\n\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(...middlewares)));\n\nexport default store;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from 'store/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}