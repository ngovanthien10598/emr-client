{"version":3,"sources":["components/Icons/LoginIcon.jsx","store/actionTypes.js","constant/apiUrl.js","services/auth/auth.service.js","services/user/user.service.js","store/actions/user.action.js","store/actions/auth.action.js","forms/LoginForm/LoginForm.jsx","utils/routing.js","pages/login.jsx","pages/admin/dashboard.jsx","forms/DrugCategoryForm/DrugCategoryForm.jsx","services/admin/drug-category.service.js","constant/formActions.js","pages/common/drug/drug-category.jsx","forms/DrugUnitForm/DrugUnitForm.jsx","services/admin/drug-unit.service.js","pages/common/drug/drug-unit.jsx","services/admin/drug.service.js","forms/DrugForm/DrugForm.jsx","pages/common/drug/drug.jsx","forms/DrugInstructionForm/DrugInstructionForm.jsx","services/admin/drug-instruction.service.js","pages/common/drug/drug-instruction.jsx","forms/DiseaseCategoryForm/DiseaseCategoryForm.jsx","services/admin/disease-category.service.js","pages/common/disease/disease-category.jsx","services/admin/disease.service.js","forms/DiseaseForm/DiseaseForm.jsx","pages/common/disease/disease.jsx","pages/common/notification/notification.jsx","pages/common/visit/visit.jsx","pages/common/patient/patient.jsx","pages/common/appointment/apointment.jsx","services/admin/medical-service.service.js","forms/ServiceForm/ServiceForm.jsx","pages/common/service/service.jsx","pages/common/working-hour/working-hour.jsx","forms/RoomForm/RoomForm.jsx","services/admin/room.service.js","pages/common/room/room.jsx","services/admin/user.service.js","constant/roles.js","forms/UserForm/UserForm.jsx","pages/admin/account.jsx","pages/admin/setting.jsx","HOCs/withPrivateRoute.jsx","components/Header.jsx","layouts/AdminLayout/AdminLayout.jsx","layouts/PhysicianLayout/PhysicianLayout.jsx","layouts/ReceiptionistLayout/ReceiptionistLayout.jsx","App.jsx","utils/interceptor.js","store/reducers/auth.reducer.js","store/reducers/user.reducer.js","store/rootReducer.js","store/store.js","serviceWorker.js","index.jsx"],"names":["LoginIcon","width","height","xmlns","xmlnsXlink","version","id","x","y","viewBox","fill","xmlSpace","cx","cy","r","d","LOGIN_PENDING","LOGIN_SUCCESS","LOGIN_FAILURE","GET_PROFILE_PENDING","GET_PROFILE_SUCCESS","GET_PROFILE_FAILURE","LOGOUT","API_URL","endpointPrefix","login","email","password","url","axios","post","refreshToken","refresh_token","getProfile","get","getProfileSuccess","user","type","actionTypes","payload","getProfileAction","dispatch","a","profileRes","data","console","log","logoutAction","Cookie","remove","LoginForm","history","useHistory","useDispatch","authState","useSelector","state","userState","useEffect","role","redirectPath","getRedirectPath","replace","className","layout","autoComplete","onFinish","values","loginRes","loginData","accessToken","access_token","set","expires","Icon","component","Item","name","placeholder","Password","to","loading","loginLoading","getProfileLoading","block","size","htmlType","LoginPage","props","AdminDashboard","DrugCategoryForm","form","defaultCategory","label","initialValue","autoFocus","getDrugCategoryAPI","search","addDrugCategoryAPI","updateDrugCategoryAPI","put","deleteDrugCategoryAPI","delete","formActions","DrugCategoryPage","useState","modalVisible","setModalVisible","categories","setCategories","fetchingCategories","setFetchingCategories","modalLoading","setModalLoading","action","setAction","selectedCategory","setSelectedCategory","Form","useForm","drugCategoryForm","tableColumns","title","key","render","text","record","index","dataIndex","icon","EditOutlined","onClick","category","onConfirm","handleDelete","okText","okType","cancelText","DeleteOutlined","getDrugCategories","response","handleFormSubmit","validateFields","unit","justify","PlusOutlined","rowKey","columns","dataSource","visible","onCancel","confirmLoading","destroyOnClose","afterClose","resetFields","onOk","DrugUnitForm","defaultUnit","getDrugUnitsAPI","addDrugUnitAPI","updateDrugUnitAPI","deleteDrugUnitAPI","DrugUnitPage","drugUnits","setDrugUnits","fetchingDrugUnits","setFetchingDrugUnits","selectedUnit","setSelectedUnit","drugUnitForm","getDrugUnits","getDrugsAPI","getDrugDetailsAPI","addDrugAPI","code","drug_category","price","drug_unit","Number","updateDrugAPI","deleteDrugAPI","DrugForm","defaultDrug","units","setUnits","drugDetail","setDrugDetail","catLoading","setCatLoading","unitLoading","setUnitLoading","detailLoading","setDetailLoading","catResponse","unitResponse","getDrugDetail","detailResponse","prevCats","findIndex","cat","prevUnits","u","Promise","all","getData","setFieldsValue","spinning","suffix","map","Option","value","DrugPage","drugs","setDrugs","fetchingDrugs","setFetchingDrugs","selectedDrug","setSelectedDrug","drugForm","thousandSeparator","displayType","drug","getDrugs","results","DrugInstructionForm","defaultInstruction","instruction","getDrugInstructionsAPI","addDrugInstructionAPI","updateDrugInstructionAPI","deleteDrugInstructionAPI","DrugInstructionPage","drugInstructions","setDrugInstructions","fetchingDrugInstructions","setFetchingDrugInstructions","selectedInstruction","setSelectedInstruction","drugInstructionForm","ins","getDrugInstructions","DiseaseCategoryForm","getDiseaseCategoryAPI","addDiseaseCategoryAPI","updateDiseaseCategoryAPI","deleteDiseaseCategoryAPI","DiseaseCategoryPage","diseaseCategoryForm","getDiseaseCategories","getDiseasesAPI","getDiseaseDetailsAPI","addDiseaseAPI","disease_category","updateDiseaseAPI","deleteDiseaseAPI","DiseaseForm","defaultDisease","diseaseDetail","setDiseaseDetail","getDiseaseDetail","DiseasePage","diseases","setDiseases","fetchingDiseases","setFetchingDiseases","selectedDisease","setSelectedDisease","diseaseForm","disease","getDiseases","NotificationPage","VisitPage","PatientPage","AppointmentPage","getServicesAPI","getServiceDetailsAPI","addServiceAPI","updateServiceAPI","deleteServiceAPI","ServiceForm","defaultService","serviceDetail","setServiceDetail","getServiceDetail","ServicePage","services","setServices","fetchingServices","setFetchingServices","selectedService","setSelectedService","serviceForm","service","getServices","WorkingHourPage","RoomForm","defaultRoom","number","getRoomAPI","addRoomAPI","updateRoomAPI","deleteRoomAPI","RoomPage","rooms","selectedRoom","setSelectedRoom","roomForm","room","getRooms","getUsersAPI","query","qs","stringify","getUserDetailsAPI","addUserAPI","first_name","last_name","phone","DOB","gender","role_id","format","ROLES","display","ROLES_LIST","UserForm","defaultUser","userDetail","setUserDetail","getUserDetail","moment","rules","required","message","readOnly","flex","style","Group","AdminAccountPage","useLocation","pathname","urlSearchParams","URLSearchParams","currentPageOnURL","page","setPage","users","setUsers","fetchingUsers","setFetchingUsers","selectedUser","setSelectedUser","userForm","is_active","danger","LockOutlined","UnlockOutlined","getUsers","pagination","defaultCurrent","current","pageSize","total","count","onChange","push","AdminSettingPage","withPrivateRoute","Child","roles","token","userRole","includes","isValidRole","length","jwtDecode","error","Header","Layout","CustomHeader","ghost","LogoutOutlined","Modal","confirm","ExclamationCircleOutlined","content","Sider","Content","SubMenu","Menu","match","useRouteMatch","location","path","mode","borderRight","selectedKeys","DashboardOutlined","MedicineBoxOutlined","BugOutlined","NotificationOutlined","ContainerOutlined","IdcardOutlined","CalendarOutlined","DollarOutlined","ClockCircleOutlined","AppstoreOutlined","UserOutlined","SettingOutlined","padding","margin","minHeight","exact","App","interceptors","request","use","config","method","headers","reject","res","success","destroy","originalRequest","status","_retry","AuthService","refreshResponse","newToken","resolve","then","catch","errorMessage","fetchProfile","refresh","newTokenReponse","checkRefresh","AdminLayout","PhysicianLayout","ReceiptionistLayout","initialState","rootReducer","combineReducers","middlewares","thunk","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","Boolean","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bfe32ad6.chunk.js","sourcesContent":["import React from 'react';\n\nconst LoginIcon = () => (\n  <svg width=\"50\" height=\"50\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" version=\"1.1\" id=\"Capa_1\" x=\"0px\" y=\"0px\" viewBox=\"0 0 512.002 512.002\" fill=\"currentColor\" xmlSpace=\"preserve\">\n    <g>\n      <g>\n        <g>\n          <circle cx=\"338\" cy=\"346.001\" r=\"20\" />\n          <path d=\"M238,472.001H80c-22.056,0-40-17.944-40-40v-164c0-22.056,17.944-40,40-40h288c22.056,0,40,17.944,40,40v40     c0,11.046,8.954,20,20,20c11.046,0,20-8.954,20-20v-40c0-44.112-35.888-80-80-80h-24.037v-70.534     c0-64.771-53.832-117.466-120-117.466s-120,52.695-120,117.466v70.534H80c-44.112,0-80,35.888-80,80v164     c0,44.112,35.888,80,80,80h158c11.046,0,20-8.954,20-20S249.046,472.001,238,472.001z M143.963,117.467     c0-42.715,35.888-77.466,80-77.466s80,34.751,80,77.466v70.534h-160V117.467z\" />\n          <path d=\"M503.643,325.739c-8.982-6.431-21.477-4.362-27.904,4.62l-98.581,137.7c-2.692,3.122-6.066,3.796-7.874,3.916     c-1.854,0.123-5.424-0.112-8.567-3.061l-63.708-62.171c-7.906-7.716-20.568-7.559-28.282,0.345     c-7.715,7.905-7.561,20.567,0.345,28.282l63.82,62.281c0.06,0.058,0.119,0.116,0.18,0.173C342.639,506.933,355.41,512,368.55,512     c1.129,0,2.261-0.037,3.393-0.113c14.314-0.954,27.679-7.915,36.666-19.097c0.232-0.29,0.456-0.585,0.673-0.887l98.981-138.26     C514.692,344.662,512.624,332.168,503.643,325.739z\" />\n          <circle cx=\"262\" cy=\"346.001\" r=\"20\" />\n          <circle cx=\"112\" cy=\"346.001\" r=\"20\" />\n          <circle cx=\"187\" cy=\"346.001\" r=\"20\" />\n        </g>\n      </g>\n    </g>\n    <g>\n    </g>\n    <g>\n    </g>\n    <g>\n    </g>\n    <g>\n    </g>\n    <g>\n    </g>\n    <g>\n    </g>\n    <g>\n    </g>\n    <g>\n    </g>\n    <g>\n    </g>\n    <g>\n    </g>\n    <g>\n    </g>\n    <g>\n    </g>\n    <g>\n    </g>\n    <g>\n    </g>\n    <g>\n    </g>\n  </svg>\n)\n\nexport default LoginIcon;","export const LOGIN_PENDING = \"LOGIN_PENDING\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_FAILURE = \"LOGIN_FAILURE\";\n\nexport const GET_PROFILE_PENDING = \"GET_PROFILE_PENDING\";\nexport const GET_PROFILE_SUCCESS = \"GET_PROFILE_SUCCESS\";\nexport const GET_PROFILE_FAILURE = \"GET_PROFILE_FAILURE\";\n\nexport const LOGOUT = \"LOGOUT\";","export const API_URL = 'https://emr-2020.wl.r.appspot.com/api';","import { API_URL } from \"constant/apiUrl\";\nimport axios from 'axios';\n\n\nconst endpointPrefix = `${API_URL}/auth`;\n\n/**\n * Login to system\n * @param email\n * @param password\n */\nexport function login(email, password) {\n  const url = `${endpointPrefix}/login/`;\n  return axios.post(url, {\n    email: email,\n    password: password\n  });\n}\n\n/**\n * This function is used to get new access token from refresh token\n * when current access token is expired\n * @param refreshToken Refresh token from last login\n */\nexport function refreshToken(refreshToken) {\n  const url = `${endpointPrefix}/refresh-token/`;\n  return axios.post(url, {\n    refresh_token: refreshToken\n  });\n}\n","import { API_URL } from \"constant/apiUrl\";\nimport axios from 'axios';\n\nconst endpointPrefix = `${API_URL}/user`;\n\n/**\n* Get user profile\n* @param token Access token\n*/\nexport function getProfile() {\n  const url = `${endpointPrefix}/profile/`;\n  return axios.get(url);\n}","import * as actionTypes from '../actionTypes';\nimport { getProfile } from 'services/user/user.service';\n\nfunction getProfilePending() {\n  return {\n    type: actionTypes.GET_PROFILE_PENDING\n  }\n}\n\nfunction getProfileSuccess(user) {\n  return {\n    type: actionTypes.GET_PROFILE_SUCCESS,\n    payload: user\n  }\n}\n\nfunction getProfileFailure() {\n  return {\n    type: actionTypes.GET_PROFILE_FAILURE\n  }\n}\n\nexport function getProfileAction() {\n  return async dispatch => {\n    try {\n      dispatch(getProfilePending());\n      const profileRes = await getProfile();\n      const user = profileRes.data;\n      dispatch(getProfileSuccess(user));\n    } catch(error) {\n      console.log(error);\n      dispatch(getProfileFailure());\n    }\n  }\n}\n\nexport function removeUserAction() {\n  return {\n    type: actionTypes.LOGOUT\n  }\n}","import * as actionTypes from '../actionTypes';\nimport { login } from 'services/auth/auth.service';\nimport Cookie from 'js-cookie';\nimport { getProfileAction, removeUserAction } from './user.action';\n\nfunction loginPending() {\n  return {\n    type: actionTypes.LOGIN_PENDING\n  }\n}\n\nfunction loginSuccess() {\n  return {\n    type: actionTypes.LOGIN_SUCCESS,\n  }\n}\n\nfunction loginFailure() {\n  return {\n    type: actionTypes.LOGIN_FAILURE\n  }\n}\n\nexport function loginAction(email, password) {\n  return async dispatch => {\n    try {\n      dispatch(loginPending());\n      const loginRes = await login(email, password);\n      const loginData = loginRes.data;\n\n      const accessToken = loginData.access_token;\n      const refreshToken = loginData.refresh_token;\n      Cookie.set('EMR_token', accessToken, { expires: 3 / 24 }); // 3 hours\n      Cookie.set('EMR_refresh', refreshToken, { expires: 7 }); // 7 days\n      dispatch(loginSuccess());\n      dispatch(getProfileAction());\n    } catch (error) {\n      dispatch(loginFailure());\n    }\n  }\n}\n\nexport function logoutAction() {\n  Cookie.remove('EMR_token');\n  Cookie.remove('EMR_refresh');\n\n  return dispatch => {\n    dispatch(removeUserAction());\n  }\n}","import React, { useEffect } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { Form, Input, Button } from 'antd';\nimport Icon from '@ant-design/icons';\nimport LoginIcon from 'components/Icons/LoginIcon';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { loginAction } from 'store/actions/auth.action';\nimport { getRedirectPath } from 'utils/routing';\n\nconst LoginForm = () => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const authState = useSelector(state => state.authState);\n  const userState = useSelector(state => state.userState);\n  const user = userState.user;\n\n  function handleSubmit(values) {\n    dispatch(loginAction(values.email, values.password));\n  }\n\n  useEffect(() => {\n    if (user && user.role) {\n      const redirectPath = getRedirectPath(user.role);\n      console.log(redirectPath);\n      history.replace(redirectPath);\n    }\n  }, [user, history]);\n\n  return (\n    <Form\n      className=\"login-form\"\n      layout=\"vertical\"\n      autoComplete=\"off\"\n      onFinish={handleSubmit}>\n\n      <div className=\"text-center\">\n\n        <div className=\"login-form__header\">\n          <Icon component={LoginIcon} />\n          <h1 className=\"text-3xl\">Đăng nhập</h1>\n        </div>\n\n      </div>\n\n      <Form.Item name=\"email\">\n        <Input type=\"email\" placeholder=\"Email\" />\n      </Form.Item>\n\n      <Form.Item name=\"password\" className=\"m-0\">\n        <Input.Password placeholder=\"Mật khẩu\" />\n        {/* <Button type=\"link\"> */}\n        {/* </Button> */}\n      </Form.Item>\n      <Link className=\"block mt-2 mb-6\" to=\"/forgot-password\">Quên mật khẩu</Link>\n\n      <Form.Item>\n        <Button loading={authState.loginLoading || userState.getProfileLoading} block type=\"primary\" size=\"large\" htmlType=\"submit\">Đăng nhập</Button>\n      </Form.Item>\n    </Form>\n  )\n}\n\nexport default LoginForm;","export function getRedirectPath(role) {\n  if (!role) return \"/login\";\n\n  switch (role.id) {\n    case 1:\n      return \"/admin\";\n    case 2:\n      return \"/physician\";\n    case 3:\n      return \"/receitionist\";\n    case 4:\n      return \"/patient\";\n    default:\n      return \"\";\n  }\n}","import React from 'react';\nimport LoginForm from 'forms/LoginForm/LoginForm';\n\nconst LoginPage = (props) => {\n  return (\n    <main className=\"login-page\">\n      <LoginForm />\n    </main>\n  )\n}\n\nexport default LoginPage;","import React from 'react';\n\nconst AdminDashboard = () => {\n  return (\n    <div>Admin dashboard</div>\n  )\n}\n\nexport default AdminDashboard;","import React from 'react';\nimport { Form, Input } from 'antd';\n\nconst DrugCategoryForm = props => {\n  const { form, onFinish, defaultCategory } = props;\n\n  return (\n    <Form\n      layout=\"vertical\"\n      form={form}\n      onFinish={onFinish}>\n      <Form.Item label=\"Loại thuốc\" name=\"name\" initialValue={defaultCategory?.name}>\n        <Input autoFocus />\n      </Form.Item>\n    </Form>\n  )\n}\n\nexport default DrugCategoryForm;","import axios from 'axios';\n\nimport { API_URL } from \"constant/apiUrl\";\n\nconst endpointPrefix = `${API_URL}/admin/manage-drug-category`;\n\nexport function getDrugCategoryAPI(search = \"\") {\n  const url = `${endpointPrefix}/?search=${search}`;\n  return axios.get(url);\n}\n\nexport function addDrugCategoryAPI(name) {\n  const url = `${endpointPrefix}/`;\n  return axios.post(url, { name: name });\n}\n\nexport function updateDrugCategoryAPI(id, name) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.put(url, {\n    name: name\n  })\n}\n\nexport function deleteDrugCategoryAPI(id) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.delete(url);\n}","export const formActions = {\n  CREATE: 'CREATE',\n  UPDATE: 'UPDATE'\n}","import React, { useState, useEffect } from 'react';\nimport { Row, Col, Button, Modal, Table, Form, Popconfirm, Space } from 'antd';\nimport { PlusOutlined, EditOutlined, DeleteOutlined } from '@ant-design/icons';\nimport DrugCategoryForm from 'forms/DrugCategoryForm/DrugCategoryForm';\nimport { addDrugCategoryAPI, deleteDrugCategoryAPI, getDrugCategoryAPI, updateDrugCategoryAPI } from 'services/admin/drug-category.service';\nimport { formActions } from 'constant/formActions';\n\nconst DrugCategoryPage = () => {\n\n  const [modalVisible, setModalVisible] = useState(false);\n  const [categories, setCategories] = useState([]);\n  const [fetchingCategories, setFetchingCategories] = useState(false);\n  const [modalLoading, setModalLoading] = useState(false);\n  const [action, setAction] = useState(formActions.CREATE);\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [drugCategoryForm] = Form.useForm();\n\n  const tableColumns = [\n    {\n      title: '#',\n      key: '#',\n      render: (text, record, index) => index + 1\n    },\n    {\n      title: 'Tên',\n      key: 'name',\n      dataIndex: 'name'\n    },\n    {\n      title: 'Hành động',\n      key: 'action',\n      render: (text, record, index) => (\n        <Space size={10}>\n          <Button icon={<EditOutlined />} onClick={() => handleEditClick(record)}></Button>\n          <Popconfirm\n            onConfirm={() => handleDelete(record)} title=\"Bạn có chắc muốn xóa không?\"\n            okText=\"Xóa\"\n            okType=\"danger\"\n            cancelText=\"Hủy bỏ\">\n            <Button icon={<DeleteOutlined />}></Button>\n          </Popconfirm>\n        </Space>\n      )\n    }\n  ]\n\n  function handleOpenModal() {\n    setAction(formActions.CREATE);\n    setModalVisible(true);\n  }\n\n  function handleCloseModal() {\n    setModalVisible(false);\n  }\n\n  async function getDrugCategories() {\n    try {\n      setFetchingCategories(true);\n      const response = await getDrugCategoryAPI();\n      setCategories(response.data);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setFetchingCategories(false);\n    }\n  }\n\n  async function handleFormSubmit() {\n    try {\n      setModalLoading(true);\n      const values = await drugCategoryForm.validateFields();\n      if (action === formActions.CREATE) {\n        await addDrugCategoryAPI(values.name);\n      }\n\n      if (action === formActions.UPDATE) {\n        await updateDrugCategoryAPI(selectedCategory.id, values.name);\n      }\n\n      getDrugCategories();\n\n      setModalVisible(false);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setModalLoading(false);\n    }\n  }\n\n  function handleEditClick(category) {\n    setAction(formActions.UPDATE);\n    setSelectedCategory(category);\n    setModalVisible(true);\n  }\n\n  async function handleDelete(unit) {\n    try {\n      await deleteDrugCategoryAPI(unit.id);\n      getDrugCategories();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  function afterClose() {\n    drugCategoryForm.resetFields();\n    setSelectedCategory(null);\n  }\n\n  useEffect(() => {\n    getDrugCategories();\n  }, []);\n\n  return (\n    <>\n      <Row justify=\"space-between\">\n        <Col><h1 className=\"text-xl\">Quản lý loại thuốc</h1></Col>\n        <Col>\n          <Button type=\"primary\" icon={<PlusOutlined />} onClick={handleOpenModal}>Tạo mới</Button>\n        </Col>\n      </Row>\n      <Table\n        rowKey=\"id\"\n        columns={tableColumns}\n        dataSource={categories}\n        \n        loading={fetchingCategories} />\n      <Modal\n        visible={modalVisible}\n        title={action === formActions.CREATE ? 'Thêm loại thuốc' : 'Cập nhật loại thuốc'}\n        onCancel={handleCloseModal}\n        confirmLoading={modalLoading}\n        destroyOnClose={true}\n        afterClose={afterClose}\n        onOk={handleFormSubmit}>\n        <DrugCategoryForm onFinish={handleFormSubmit} form={drugCategoryForm} defaultCategory={selectedCategory} />\n      </Modal>\n    </>\n  )\n}\n\nexport default DrugCategoryPage;","import React from 'react';\nimport { Form, Input } from 'antd';\n\nconst DrugUnitForm = props => {\n  const { form, onFinish, defaultUnit } = props;\n\n  return (\n    <Form\n      layout=\"vertical\"\n      form={form}\n      onFinish={onFinish}>\n      <Form.Item label=\"Đơn vị tính\" name=\"name\" initialValue={defaultUnit?.name}>\n        <Input autoFocus />\n      </Form.Item>\n    </Form>\n  )\n}\n\nexport default DrugUnitForm;","import axios from 'axios';\n\nimport { API_URL } from \"constant/apiUrl\";\n\nconst endpointPrefix = `${API_URL}/admin/manage-drug-unit`;\n\nexport function getDrugUnitsAPI(search = \"\") {\n  const url = `${endpointPrefix}/?search=${search}`;\n  return axios.get(url);\n}\n\nexport function addDrugUnitAPI(name) {\n  const url = `${endpointPrefix}/`;\n  return axios.post(url, { name: name });\n}\n\nexport function updateDrugUnitAPI(id, name) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.put(url, {\n    name: name\n  })\n}\n\nexport function deleteDrugUnitAPI(id) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.delete(url);\n}","import React, { useState, useEffect } from 'react';\nimport { Row, Col, Button, Modal, Table, Form, Popconfirm, Space } from 'antd';\nimport { PlusOutlined, EditOutlined, DeleteOutlined } from '@ant-design/icons';\nimport DrugUnitForm from 'forms/DrugUnitForm/DrugUnitForm';\nimport { getDrugUnitsAPI, addDrugUnitAPI, updateDrugUnitAPI, deleteDrugUnitAPI } from 'services/admin/drug-unit.service';\nimport { formActions } from 'constant/formActions';\n\nconst DrugUnitPage = () => {\n\n  const [modalVisible, setModalVisible] = useState(false);\n  const [drugUnits, setDrugUnits] = useState([]);\n  const [fetchingDrugUnits, setFetchingDrugUnits] = useState(false);\n  const [modalLoading, setModalLoading] = useState(false);\n  const [action, setAction] = useState(formActions.CREATE);\n  const [selectedUnit, setSelectedUnit] = useState(null);\n  const [drugUnitForm] = Form.useForm();\n\n  const tableColumns = [\n    {\n      title: '#',\n      key: '#',\n      render: (text, record, index) => index + 1\n    },\n    {\n      title: 'Đơn vị tính',\n      key: 'name',\n      dataIndex: 'name'\n    },\n    {\n      title: 'Hành động',\n      key: 'action',\n      render: (text, record, index) => (\n        <Space size={10}>\n          <Button icon={<EditOutlined />} onClick={() => handleEditClick(record)}></Button>\n          <Popconfirm\n            onConfirm={() => handleDelete(record)} title=\"Bạn có chắc muốn xóa không?\"\n            okText=\"Xóa\"\n            okType=\"danger\"\n            cancelText=\"Hủy bỏ\">\n            <Button icon={<DeleteOutlined />}></Button>\n          </Popconfirm>\n        </Space>\n      )\n    }\n  ]\n\n  function handleOpenModal() {\n    setAction(formActions.CREATE);\n    setModalVisible(true);\n  }\n\n  function handleCloseModal() {\n    setModalVisible(false);\n  }\n\n  async function getDrugUnits() {\n    try {\n      setFetchingDrugUnits(true);\n      const response = await getDrugUnitsAPI();\n      setDrugUnits(response.data);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setFetchingDrugUnits(false);\n    }\n  }\n\n  async function handleFormSubmit() {\n    try {\n      setModalLoading(true);\n      const values = await drugUnitForm.validateFields();\n      if (action === formActions.CREATE) {\n        await addDrugUnitAPI(values.name);\n      }\n\n      if (action === formActions.UPDATE) {\n        await updateDrugUnitAPI(selectedUnit.id, values.name);\n      }\n\n      getDrugUnits();\n\n      setModalVisible(false);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setModalLoading(false);\n    }\n  }\n\n  function handleEditClick(unit) {\n    setAction(formActions.UPDATE);\n    setSelectedUnit(unit);\n    setModalVisible(true);\n  }\n\n  async function handleDelete(unit) {\n    try {\n      await deleteDrugUnitAPI(unit.id);\n      getDrugUnits();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  function afterClose() {\n    drugUnitForm.resetFields();\n    setSelectedUnit(null);\n  }\n\n  useEffect(() => {\n    getDrugUnits();\n  }, []);\n\n  return (\n    <>\n      <Row justify=\"space-between\">\n        <Col><h1 className=\"text-xl\">Quản lý đơn vị tính</h1></Col>\n        <Col>\n          <Button type=\"primary\" icon={<PlusOutlined />} onClick={handleOpenModal}>Tạo mới</Button>\n        </Col>\n      </Row>\n      <Table\n        rowKey=\"id\"\n        columns={tableColumns}\n        dataSource={drugUnits}\n        loading={fetchingDrugUnits} />\n      <Modal\n        visible={modalVisible}\n        title={action === formActions.CREATE ? 'Thêm đơn vị tính' : 'Cập nhật đơn vị tính'}\n        onCancel={handleCloseModal}\n        confirmLoading={modalLoading}\n        destroyOnClose={true}\n        afterClose={afterClose}\n        onOk={handleFormSubmit}>\n        <DrugUnitForm onFinish={handleFormSubmit} form={drugUnitForm} defaultUnit={selectedUnit} />\n      </Modal>\n    </>\n  )\n}\n\nexport default DrugUnitPage;","import axios from 'axios';\nimport { API_URL } from 'constant/apiUrl';\n\nconst endpointPrefix = `${API_URL}/admin/manage-drug`;\n\nexport function getDrugsAPI() {\n  const url = `${endpointPrefix}/`;\n  return axios.get(url);\n}\n\nexport function getDrugDetailsAPI(id) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.get(url);\n}\n\nexport function addDrugAPI({ code, name, drug_category, price, drug_unit }) {\n  const url = `${endpointPrefix}/`;\n  return axios.post(url, {\n    code,\n    name,\n    drug_category,\n    price: Number(price),\n    drug_unit\n  });\n}\n\nexport function updateDrugAPI(id, { code, name, drug_category, price, drug_unit }) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.put(url, {\n    code,\n    name,\n    drug_category,\n    price: Number(price),\n    drug_unit\n  });\n}\n\nexport function deleteDrugAPI(id) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.delete(url);\n}","import React, { useState, useEffect } from 'react';\nimport { Form, Input, Select, Spin } from 'antd';\nimport { getDrugCategoryAPI } from 'services/admin/drug-category.service';\nimport { getDrugUnitsAPI } from 'services/admin/drug-unit.service';\nimport { getDrugDetailsAPI } from 'services/admin/drug.service';\n\nconst DrugForm = props => {\n  const { form, onFinish, defaultDrug } = props;\n\n  const [categories, setCategories] = useState([]);\n  const [units, setUnits] = useState([]);\n  const [drugDetail, setDrugDetail] = useState(null);\n  const [catLoading, setCatLoading] = useState(false);\n  const [unitLoading, setUnitLoading] = useState(false);\n  const [detailLoading, setDetailLoading] = useState(false);\n\n  async function getDrugCategories() {\n    try {\n      setCatLoading(true);\n      const catResponse = await getDrugCategoryAPI();\n      setCategories(catResponse.data);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setCatLoading(false);\n    }\n  }\n\n  async function getDrugUnits() {\n    try {\n      setUnitLoading(true);\n      const unitResponse = await getDrugUnitsAPI();\n      setUnits(unitResponse.data);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setUnitLoading(false);\n    }\n  }\n\n  async function getDrugDetail(id) {\n    try {\n      setDetailLoading(true);\n      const detailResponse = await getDrugDetailsAPI(id);\n      const drugDetail = detailResponse.data;\n      setDrugDetail(drugDetail);\n      setCategories(prevCats => {\n        const index = prevCats.findIndex(cat => cat.id === defaultDrug.drug_category);\n        if (index > -1) {\n          prevCats[index] = drugDetail.drug_category;\n          return prevCats;\n        } else {\n          return [...[drugDetail.drug_category], ...prevCats];\n        }\n      });\n      setUnits(prevUnits => {\n        const index = prevUnits.findIndex(u => u.id === defaultDrug.drug_unit);\n        if (index > -1) {\n          prevUnits[index] = drugDetail.drug_unit;\n          return prevUnits;\n        } else {\n          return [...[drugDetail.drug_unit], ...prevUnits];\n        }\n      });\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setDetailLoading(false);\n    }\n  }\n\n  async function getData() {\n    if (defaultDrug?.id) {\n      await Promise.all([\n        getDrugDetail(defaultDrug.id),\n        getDrugCategories(),\n        getDrugUnits()\n      ]);\n\n    } else {\n      await Promise.all([\n        getDrugCategories(),\n        getDrugUnits()\n      ])\n    }\n\n  }\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  useEffect(() => {\n    if (drugDetail) {\n      form.setFieldsValue({\n        code: drugDetail.code,\n        name: drugDetail.name,\n        price: drugDetail.price,\n        drug_category: drugDetail.drug_category.id,\n        drug_unit: drugDetail.drug_unit.id\n      });\n    }\n  }, [drugDetail, defaultDrug, form]);\n\n  return (\n    <Spin spinning={detailLoading}>\n      <Form\n        layout=\"vertical\"\n        form={form}\n        onFinish={onFinish}>\n        <Form.Item label=\"Mã thuốc\" name=\"code\" initialValue={drugDetail?.code}>\n          <Input />\n        </Form.Item>\n\n        <Form.Item label=\"Tên thuốc\" name=\"name\" initialValue={drugDetail?.name}>\n          <Input />\n        </Form.Item>\n\n        <Form.Item label=\"Giá\" name=\"price\" initialValue={drugDetail?.price}>\n          <Input type=\"number\" suffix=\"VNĐ\" />\n        </Form.Item>\n\n        <Form.Item label=\"Loại thuốc\" name=\"drug_category\" initialValue={drugDetail?.drug_category.id}>\n          <Select loading={catLoading}>\n            {\n              categories.map(cat => (\n                <Select.Option key={cat.id} value={cat.id}>{cat.name}</Select.Option>\n              ))\n            }\n          </Select>\n        </Form.Item>\n\n        <Form.Item label=\"Đơn vị tính\" name=\"drug_unit\" initialValue={drugDetail?.drug_unit.id}>\n          <Select loading={unitLoading}>\n            {\n              units.map(cat => (\n                <Select.Option key={cat.id} value={cat.id}>{cat.name}</Select.Option>\n              ))\n            }\n          </Select>\n        </Form.Item>\n      </Form>\n    </Spin>\n  )\n}\n\nexport default DrugForm;","import React, { useState, useEffect } from 'react';\nimport { Row, Col, Button, Modal, Table, Form, Popconfirm, Space } from 'antd';\nimport { PlusOutlined, EditOutlined, DeleteOutlined } from '@ant-design/icons';\nimport DrugForm from 'forms/DrugForm/DrugForm';\nimport { getDrugsAPI, addDrugAPI, updateDrugAPI, deleteDrugAPI } from 'services/admin/drug.service';\nimport { formActions } from 'constant/formActions';\nimport NumberFormat from 'react-number-format';\n\nconst DrugPage = () => {\n\n  const [modalVisible, setModalVisible] = useState(false);\n  const [drugs, setDrugs] = useState();\n  const [fetchingDrugs, setFetchingDrugs] = useState(false);\n  const [modalLoading, setModalLoading] = useState(false);\n  const [action, setAction] = useState(formActions.CREATE);\n  const [selectedDrug, setSelectedDrug] = useState(null);\n  const [drugForm] = Form.useForm();\n\n  const tableColumns = [\n    {\n      title: '#',\n      key: '#',\n      render: (text, record, index) => index + 1\n    },\n    {\n      title: 'Mã thuốc',\n      key: 'code',\n      dataIndex: 'code'\n    },\n    {\n      title: 'Tên thuốc',\n      key: 'name',\n      dataIndex: 'name'\n    },\n    {\n      title: 'Giá',\n      key: 'price',\n      dataIndex: 'price',\n      render: (text, record, index) => (<NumberFormat thousandSeparator=\" \" suffix=\" VNĐ\" value={text} displayType=\"text\" />)\n    },\n    {\n      title: 'Hành động',\n      key: 'action',\n      render: (text, record, index) => (\n        <Space size={10}>\n          <Button icon={<EditOutlined />} onClick={() => handleEditClick(record)}></Button>\n          <Popconfirm\n            onConfirm={() => handleDelete(record)} title=\"Bạn có chắc muốn xóa không?\"\n            okText=\"Xóa\"\n            okType=\"danger\"\n            cancelText=\"Hủy bỏ\">\n            <Button icon={<DeleteOutlined />}></Button>\n          </Popconfirm>\n        </Space>\n      )\n    }\n  ]\n\n  function handleOpenModal() {\n    setAction(formActions.CREATE);\n    setModalVisible(true);\n  }\n\n  function handleCloseModal() {\n    setModalVisible(false);\n  }\n\n  async function getDrugs() {\n    try {\n      setFetchingDrugs(true);\n      const response = await getDrugsAPI();\n      setDrugs(response.data.results);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setFetchingDrugs(false);\n    }\n  }\n\n  async function handleFormSubmit() {\n    try {\n      setModalLoading(true);\n      const values = await drugForm.validateFields();\n      const data = {\n        code: values.code,\n        name: values.name,\n        price: values.price,\n        drug_category: values.drug_category,\n        drug_unit: values.drug_unit\n      }\n      if (action === formActions.CREATE) {\n        await addDrugAPI(data);\n      }\n\n      if (action === formActions.UPDATE) {\n        await updateDrugAPI(selectedDrug.id, data);\n      }\n\n      getDrugs();\n\n      setModalVisible(false);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setModalLoading(false);\n    }\n  }\n\n  function handleEditClick(drug) {\n    setAction(formActions.UPDATE);\n    setSelectedDrug(drug);\n    setModalVisible(true);\n  }\n\n  async function handleDelete(drug) {\n    try {\n      await deleteDrugAPI(drug.id);\n      getDrugs();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  function afterClose() {\n    drugForm.resetFields();\n    setSelectedDrug(null);\n  }\n\n  useEffect(() => {\n    getDrugs();\n  }, []);\n\n  return (\n    <>\n      <Row justify=\"space-between\">\n        <Col><h1 className=\"text-xl\">Quản lý thuốc</h1></Col>\n        <Col>\n          <Button type=\"primary\" icon={<PlusOutlined />} onClick={handleOpenModal}>Tạo mới</Button>\n        </Col>\n      </Row>\n      <Table\n        rowKey=\"id\"\n        columns={tableColumns}\n        dataSource={drugs}\n        loading={fetchingDrugs} />\n      <Modal\n        visible={modalVisible}\n        title={action === formActions.CREATE ? 'Thêm thuốc' : 'Cập nhật thuốc'}\n        onCancel={handleCloseModal}\n        confirmLoading={modalLoading}\n        destroyOnClose={true}\n        afterClose={afterClose}\n        onOk={handleFormSubmit}>\n        <DrugForm onFinish={handleFormSubmit} form={drugForm} defaultDrug={selectedDrug} />\n      </Modal>\n    </>\n  )\n}\n\nexport default DrugPage;","import React from 'react';\nimport { Form, Input } from 'antd';\n\nconst DrugInstructionForm = props => {\n  const { form, onFinish, defaultInstruction } = props;\n\n  return (\n    <Form\n      layout=\"vertical\"\n      form={form}\n      onFinish={onFinish}>\n      <Form.Item label=\"Hướng dẫn sử dụng\" name=\"instruction\" initialValue={defaultInstruction?.instruction}>\n        <Input autoFocus />\n      </Form.Item>\n    </Form>\n  )\n}\n\nexport default DrugInstructionForm;","import axios from 'axios';\n\nimport { API_URL } from \"constant/apiUrl\";\n\nconst endpointPrefix = `${API_URL}/admin/manage-drug-instruction`;\n\nexport function getDrugInstructionsAPI() {\n  const url = `${endpointPrefix}/`;\n  return axios.get(url);\n}\n\nexport function addDrugInstructionAPI(instruction) {\n  const url = `${endpointPrefix}/`;\n  return axios.post(url, { instruction: instruction });\n}\n\nexport function updateDrugInstructionAPI(id, instruction) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.put(url, {\n    instruction: instruction\n  })\n}\n\nexport function deleteDrugInstructionAPI(id) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.delete(url);\n}","import React, { useState, useEffect } from 'react';\nimport { Row, Col, Button, Modal, Table, Form, Popconfirm, Space } from 'antd';\nimport { PlusOutlined, EditOutlined, DeleteOutlined } from '@ant-design/icons';\nimport DrugInstructionForm from 'forms/DrugInstructionForm/DrugInstructionForm';\nimport { getDrugInstructionsAPI, addDrugInstructionAPI, updateDrugInstructionAPI, deleteDrugInstructionAPI } from 'services/admin/drug-instruction.service';\nimport { formActions } from 'constant/formActions';\n\nconst DrugInstructionPage = () => {\n\n  const [modalVisible, setModalVisible] = useState(false);\n  const [drugInstructions, setDrugInstructions] = useState([]);\n  const [fetchingDrugInstructions, setFetchingDrugInstructions] = useState(false);\n  const [modalLoading, setModalLoading] = useState(false);\n  const [action, setAction] = useState(formActions.CREATE);\n  const [selectedInstruction, setSelectedInstruction] = useState(null);\n  const [drugInstructionForm] = Form.useForm();\n\n  const tableColumns = [\n    {\n      title: '#',\n      key: '#',\n      render: (text, record, index) => index + 1\n    },\n    {\n      title: 'Hướng dẫn sử dụng',\n      key: 'instruction',\n      dataIndex: 'instruction'\n    },\n    {\n      title: 'Hành động',\n      key: 'action',\n      render: (text, record, index) => (\n        <Space size={10}>\n          <Button icon={<EditOutlined />} onClick={() => handleEditClick(record)}></Button>\n          <Popconfirm\n            onConfirm={() => handleDelete(record)} title=\"Bạn có chắc muốn xóa không?\"\n            okText=\"Xóa\"\n            okType=\"danger\"\n            cancelText=\"Hủy bỏ\">\n            <Button icon={<DeleteOutlined />}></Button>\n          </Popconfirm>\n        </Space>\n      )\n    }\n  ]\n\n  function handleOpenModal() {\n    setAction(formActions.CREATE);\n    setModalVisible(true);\n  }\n\n  function handleCloseModal() {\n    setModalVisible(false);\n  }\n\n  async function getDrugInstructions() {\n    try {\n      setFetchingDrugInstructions(true);\n      const response = await getDrugInstructionsAPI();\n      setDrugInstructions(response.data);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setFetchingDrugInstructions(false);\n    }\n  }\n\n  async function handleFormSubmit() {\n    try {\n      setModalLoading(true);\n      const values = await drugInstructionForm.validateFields();\n      if (action === formActions.CREATE) {\n        await addDrugInstructionAPI(values.instruction);\n      }\n\n      if (action === formActions.UPDATE) {\n        await updateDrugInstructionAPI(selectedInstruction.id, values.instruction);\n      }\n\n      getDrugInstructions();\n\n      setModalVisible(false);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setModalLoading(false);\n    }\n  }\n\n  function handleEditClick(ins) {\n    setAction(formActions.UPDATE);\n    setSelectedInstruction(ins);\n    setModalVisible(true);\n  }\n\n  async function handleDelete(unit) {\n    try {\n      await deleteDrugInstructionAPI(unit.id);\n      getDrugInstructions();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  function afterClose() {\n    drugInstructionForm.resetFields();\n    setSelectedInstruction(null);\n  }\n\n  useEffect(() => {\n    getDrugInstructions();\n  }, []);\n\n  return (\n    <>\n      <Row justify=\"space-between\">\n        <Col><h1 className=\"text-xl\">Quản lý hướng dẫn sử dụng</h1></Col>\n        <Col>\n          <Button type=\"primary\" icon={<PlusOutlined />} onClick={handleOpenModal}>Tạo mới</Button>\n        </Col>\n      </Row>\n      <Table\n        rowKey=\"id\"\n        columns={tableColumns}\n        dataSource={drugInstructions}\n        loading={fetchingDrugInstructions} />\n      <Modal\n        visible={modalVisible}\n        title={action === formActions.CREATE ? 'Thêm hướng dẫn sử dụng' : 'Cập nhật hướng dẫn sử dụng'}\n        onCancel={handleCloseModal}\n        confirmLoading={modalLoading}\n        destroyOnClose={true}\n        afterClose={afterClose}\n        onOk={handleFormSubmit}>\n        <DrugInstructionForm onFinish={handleFormSubmit} form={drugInstructionForm} defaultInstruction={selectedInstruction} />\n      </Modal>\n    </>\n  )\n}\n\nexport default DrugInstructionPage;","import React from 'react';\nimport { Form, Input } from 'antd';\n\nconst DiseaseCategoryForm = props => {\n  const { form, onFinish, defaultCategory } = props;\n\n  return (\n    <Form\n      layout=\"vertical\"\n      form={form}\n      onFinish={onFinish}>\n      <Form.Item label=\"Loại bệnh\" name=\"name\" initialValue={defaultCategory?.name}>\n        <Input autoFocus />\n      </Form.Item>\n    </Form>\n  )\n}\n\nexport default DiseaseCategoryForm;","import axios from 'axios';\n\nimport { API_URL } from \"constant/apiUrl\";\n\nconst endpointPrefix = `${API_URL}/admin/manage-disease-category`;\n\nexport function getDiseaseCategoryAPI(search = \"\") {\n  const url = `${endpointPrefix}/?search=${search}`;\n  return axios.get(url);\n}\n\nexport function addDiseaseCategoryAPI(name) {\n  const url = `${endpointPrefix}/`;\n  return axios.post(url, { name: name });\n}\n\nexport function updateDiseaseCategoryAPI(id, name) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.put(url, {\n    name: name\n  })\n}\n\nexport function deleteDiseaseCategoryAPI(id) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.delete(url);\n}","import React, { useState, useEffect } from 'react';\nimport { Row, Col, Button, Modal, Table, Form, Popconfirm, Space } from 'antd';\nimport { PlusOutlined, EditOutlined, DeleteOutlined } from '@ant-design/icons';\nimport DiseaseCategoryForm from 'forms/DiseaseCategoryForm/DiseaseCategoryForm';\nimport { addDiseaseCategoryAPI, deleteDiseaseCategoryAPI, getDiseaseCategoryAPI, updateDiseaseCategoryAPI } from 'services/admin/disease-category.service';\nimport { formActions } from 'constant/formActions';\n\nconst DiseaseCategoryPage = () => {\n\n  const [modalVisible, setModalVisible] = useState(false);\n  const [categories, setCategories] = useState([]);\n  const [fetchingCategories, setFetchingCategories] = useState(false);\n  const [modalLoading, setModalLoading] = useState(false);\n  const [action, setAction] = useState(formActions.CREATE);\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [diseaseCategoryForm] = Form.useForm();\n\n  const tableColumns = [\n    {\n      title: '#',\n      key: '#',\n      render: (text, record, index) => index + 1\n    },\n    {\n      title: 'Tên',\n      key: 'name',\n      dataIndex: 'name'\n    },\n    {\n      title: 'Hành động',\n      key: 'action',\n      render: (text, record, index) => (\n        <Space size={10}>\n          <Button icon={<EditOutlined />} onClick={() => handleEditClick(record)}></Button>\n          <Popconfirm\n            onConfirm={() => handleDelete(record)} title=\"Bạn có chắc muốn xóa không?\"\n            okText=\"Xóa\"\n            okType=\"danger\"\n            cancelText=\"Hủy bỏ\">\n            <Button icon={<DeleteOutlined />}></Button>\n          </Popconfirm>\n        </Space>\n      )\n    }\n  ]\n\n  function handleOpenModal() {\n    setAction(formActions.CREATE);\n    setModalVisible(true);\n  }\n\n  function handleCloseModal() {\n    setModalVisible(false);\n  }\n\n  async function getDiseaseCategories() {\n    try {\n      setFetchingCategories(true);\n      const response = await getDiseaseCategoryAPI();\n      setCategories(response.data);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setFetchingCategories(false);\n    }\n  }\n\n  async function handleFormSubmit() {\n    try {\n      setModalLoading(true);\n      const values = await diseaseCategoryForm.validateFields();\n      if (action === formActions.CREATE) {\n        await addDiseaseCategoryAPI(values.name);\n      }\n\n      if (action === formActions.UPDATE) {\n        await updateDiseaseCategoryAPI(selectedCategory.id, values.name);\n      }\n\n      getDiseaseCategories();\n\n      setModalVisible(false);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setModalLoading(false);\n    }\n  }\n\n  function handleEditClick(category) {\n    setAction(formActions.UPDATE);\n    setSelectedCategory(category);\n    setModalVisible(true);\n  }\n\n  async function handleDelete(unit) {\n    try {\n      await deleteDiseaseCategoryAPI(unit.id);\n      getDiseaseCategories();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  function afterClose() {\n    diseaseCategoryForm.resetFields();\n    setSelectedCategory(null);\n  }\n\n  useEffect(() => {\n    getDiseaseCategories();\n  }, []);\n\n  return (\n    <>\n      <Row justify=\"space-between\">\n        <Col><h1 className=\"text-xl\">Quản lý loại bệnh</h1></Col>\n        <Col>\n          <Button type=\"primary\" icon={<PlusOutlined />} onClick={handleOpenModal}>Tạo mới</Button>\n        </Col>\n      </Row>\n      <Table\n        rowKey=\"id\"\n        columns={tableColumns}\n        dataSource={categories}\n        \n        loading={fetchingCategories} />\n      <Modal\n        visible={modalVisible}\n        title={action === formActions.CREATE ? 'Thêm loại bệnh' : 'Cập nhật loại bệnh'}\n        onCancel={handleCloseModal}\n        confirmLoading={modalLoading}\n        destroyOnClose={true}\n        afterClose={afterClose}\n        onOk={handleFormSubmit}>\n        <DiseaseCategoryForm onFinish={handleFormSubmit} form={diseaseCategoryForm} defaultCategory={selectedCategory} />\n      </Modal>\n    </>\n  )\n}\n\nexport default DiseaseCategoryPage;","import axios from 'axios';\nimport { API_URL } from 'constant/apiUrl';\n\nconst endpointPrefix = `${API_URL}/admin/manage-disease`;\n\nexport function getDiseasesAPI() {\n  const url = `${endpointPrefix}/`;\n  return axios.get(url);\n}\n\nexport function getDiseaseDetailsAPI(id) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.get(url);\n}\n\nexport function addDiseaseAPI({ code, name, disease_category }) {\n  const url = `${endpointPrefix}/`;\n  return axios.post(url, {\n    code,\n    name,\n    disease_category\n  });\n}\n\nexport function updateDiseaseAPI(id, { code, name, disease_category }) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.put(url, {\n    code,\n    name,\n    disease_category\n  });\n}\n\nexport function deleteDiseaseAPI(id) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.delete(url);\n}","import React, { useState, useEffect } from 'react';\nimport { Form, Input, Select, Spin } from 'antd';\nimport { getDiseaseCategoryAPI } from 'services/admin/disease-category.service';\nimport { getDiseaseDetailsAPI } from 'services/admin/disease.service';\n\nconst DiseaseForm = props => {\n  const { form, onFinish, defaultDisease } = props;\n\n  const [categories, setCategories] = useState([]);\n  const [diseaseDetail, setDiseaseDetail] = useState(null);\n  const [catLoading, setCatLoading] = useState(false);\n  const [detailLoading, setDetailLoading] = useState(false);\n\n  async function getDiseaseCategories() {\n    try {\n      setCatLoading(true);\n      const catResponse = await getDiseaseCategoryAPI();\n      setCategories(catResponse.data);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setCatLoading(false);\n    }\n  }\n\n  async function getDiseaseDetail(id) {\n    try {\n      setDetailLoading(true);\n      const detailResponse = await getDiseaseDetailsAPI(id);\n      const diseaseDetail = detailResponse.data;\n      setDiseaseDetail(diseaseDetail);\n      setCategories(prevCats => {\n        const index = prevCats.findIndex(cat => cat.id === defaultDisease.disease_category);\n        if (index > -1) {\n          prevCats[index] = diseaseDetail.disease_category;\n          return prevCats;\n        } else {\n          return [...[diseaseDetail.disease_category], ...prevCats];\n        }\n      });\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setDetailLoading(false);\n    }\n  }\n\n  async function getData() {\n    if (defaultDisease?.id) {\n      await Promise.all([\n        getDiseaseDetail(defaultDisease.id),\n        getDiseaseCategories(),\n      ]);\n\n    } else {\n      await Promise.all([\n        getDiseaseCategories(),\n      ])\n    }\n\n  }\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  useEffect(() => {\n    if (diseaseDetail) {\n      form.setFieldsValue({\n        code: diseaseDetail.code,\n        name: diseaseDetail.name,\n        disease_category: diseaseDetail.disease_category.id,\n      });\n    }\n  }, [diseaseDetail, defaultDisease, form]);\n\n  return (\n    <Spin spinning={detailLoading}>\n      <Form\n        layout=\"vertical\"\n        form={form}\n        onFinish={onFinish}>\n        <Form.Item label=\"Mã bệnh\" name=\"code\" initialValue={diseaseDetail?.code}>\n          <Input />\n        </Form.Item>\n\n        <Form.Item label=\"Tên bệnh\" name=\"name\" initialValue={diseaseDetail?.name}>\n          <Input />\n        </Form.Item>\n\n        <Form.Item label=\"Loại bệnh\" name=\"disease_category\" initialValue={diseaseDetail?.disease_category.id}>\n          <Select loading={catLoading}>\n            {\n              categories.map(cat => (\n                <Select.Option key={cat.id} value={cat.id}>{cat.name}</Select.Option>\n              ))\n            }\n          </Select>\n        </Form.Item>\n      </Form>\n    </Spin>\n  )\n}\n\nexport default DiseaseForm;","import React, { useState, useEffect } from 'react';\nimport { Row, Col, Button, Modal, Table, Form, Popconfirm, Space } from 'antd';\nimport { PlusOutlined, EditOutlined, DeleteOutlined } from '@ant-design/icons';\nimport DiseaseForm from 'forms/DiseaseForm/DiseaseForm';\nimport { getDiseasesAPI, addDiseaseAPI, updateDiseaseAPI, deleteDiseaseAPI } from 'services/admin/disease.service';\nimport { formActions } from 'constant/formActions';\n\nconst DiseasePage = () => {\n\n  const [modalVisible, setModalVisible] = useState(false);\n  const [diseases, setDiseases] = useState();\n  const [fetchingDiseases, setFetchingDiseases] = useState(false);\n  const [modalLoading, setModalLoading] = useState(false);\n  const [action, setAction] = useState(formActions.CREATE);\n  const [selectedDisease, setSelectedDisease] = useState(null);\n  const [diseaseForm] = Form.useForm();\n\n  const tableColumns = [\n    {\n      title: '#',\n      key: '#',\n      render: (text, record, index) => index + 1\n    },\n    {\n      title: 'Mã bệnh',\n      key: 'code',\n      dataIndex: 'code'\n    },\n    {\n      title: 'Tên bệnh',\n      key: 'name',\n      dataIndex: 'name'\n    },\n    {\n      title: 'Hành động',\n      key: 'action',\n      render: (text, record, index) => (\n        <Space size={10}>\n          <Button icon={<EditOutlined />} onClick={() => handleEditClick(record)}></Button>\n          <Popconfirm\n            onConfirm={() => handleDelete(record)} title=\"Bạn có chắc muốn xóa không?\"\n            okText=\"Xóa\"\n            okType=\"danger\"\n            cancelText=\"Hủy bỏ\">\n            <Button icon={<DeleteOutlined />}></Button>\n          </Popconfirm>\n        </Space>\n      )\n    }\n  ]\n\n  function handleOpenModal() {\n    setAction(formActions.CREATE);\n    setModalVisible(true);\n  }\n\n  function handleCloseModal() {\n    setModalVisible(false);\n  }\n\n  async function getDiseases() {\n    try {\n      setFetchingDiseases(true);\n      const response = await getDiseasesAPI();\n      setDiseases(response.data.results);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setFetchingDiseases(false);\n    }\n  }\n\n  async function handleFormSubmit() {\n    try {\n      setModalLoading(true);\n      const values = await diseaseForm.validateFields();\n      const data = {\n        code: values.code,\n        name: values.name,\n        disease_category: values.disease_category,\n      }\n      if (action === formActions.CREATE) {\n        await addDiseaseAPI(data);\n      }\n\n      if (action === formActions.UPDATE) {\n        await updateDiseaseAPI(selectedDisease.id, data);\n      }\n\n      getDiseases();\n\n      setModalVisible(false);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setModalLoading(false);\n    }\n  }\n\n  function handleEditClick(disease) {\n    setAction(formActions.UPDATE);\n    setSelectedDisease(disease);\n    setModalVisible(true);\n  }\n\n  async function handleDelete(disease) {\n    try {\n      await deleteDiseaseAPI(disease.id);\n      getDiseases();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  function afterClose() {\n    diseaseForm.resetFields();\n    setSelectedDisease(null);\n  }\n\n  useEffect(() => {\n    getDiseases();\n  }, []);\n\n  return (\n    <>\n      <Row justify=\"space-between\">\n        <Col><h1 className=\"text-xl\">Quản lý bệnh</h1></Col>\n        <Col>\n          <Button type=\"primary\" icon={<PlusOutlined />} onClick={handleOpenModal}>Tạo mới</Button>\n        </Col>\n      </Row>\n      <Table\n        rowKey=\"id\"\n        columns={tableColumns}\n        dataSource={diseases}\n        loading={fetchingDiseases} />\n      <Modal\n        visible={modalVisible}\n        title={action === formActions.CREATE ? 'Thêm bệnh' : 'Cập nhật bệnh'}\n        onCancel={handleCloseModal}\n        confirmLoading={modalLoading}\n        destroyOnClose={true}\n        afterClose={afterClose}\n        onOk={handleFormSubmit}>\n        <DiseaseForm onFinish={handleFormSubmit} form={diseaseForm} defaultDisease={selectedDisease} />\n      </Modal>\n    </>\n  )\n}\n\nexport default DiseasePage;","import React from 'react';\n\nconst NotificationPage = () => {\n  return (\n    <div>Notification Page</div>\n  )\n}\n\nexport default NotificationPage;","import React from 'react';\n\nconst VisitPage = () => {\n  return (\n    <div>Visit page</div>\n  )\n}\n\nexport default VisitPage;","import React from 'react';\n\nconst PatientPage = () => {\n  return (\n    <div>Patient page</div>\n  )\n}\n\nexport default PatientPage; ","import React from 'react';\n\nconst AppointmentPage = () => {\n  return (\n    <div>Appointment Page</div>\n  )\n}\n\nexport default AppointmentPage;","import axios from 'axios';\n\nimport { API_URL } from \"constant/apiUrl\";\n\nconst endpointPrefix = `${API_URL}/admin/manage-service`;\n\nexport function getServicesAPI(search = \"\") {\n  const url = `${endpointPrefix}/?search=${search}`;\n  return axios.get(url);\n}\n\nexport function getServiceDetailsAPI(id) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.get(url);\n}\n\nexport function addServiceAPI({ name, price }) {\n  const url = `${endpointPrefix}/`;\n  return axios.post(url, { name, price: Number(price) });\n}\n\nexport function updateServiceAPI(id, { name, price }) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.put(url, {\n    name,\n    price: Number(price)\n  })\n}\n\nexport function deleteServiceAPI(id) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.delete(url);\n}","import React, { useState, useEffect } from 'react';\nimport { Form, Input, Spin } from 'antd';\nimport { getServiceDetailsAPI } from 'services/admin/medical-service.service';\n\nconst ServiceForm = props => {\n  const { form, onFinish, defaultService } = props;\n\n  const [serviceDetail, setServiceDetail] = useState(null);\n  const [detailLoading, setDetailLoading] = useState(false);\n\n  async function getServiceDetail(id) {\n    try {\n      setDetailLoading(true);\n      const detailResponse = await getServiceDetailsAPI(id);\n      const serviceDetail = detailResponse.data;\n      setServiceDetail(serviceDetail);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setDetailLoading(false);\n    }\n  }\n\n  async function getData() {\n    if (defaultService?.id) {\n      await Promise.all([\n        getServiceDetail(defaultService.id),\n      ]);\n    }\n  }\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  useEffect(() => {\n    if (serviceDetail) {\n      form.setFieldsValue({\n        name: serviceDetail.name,\n        price: serviceDetail.price,\n      });\n    }\n  }, [serviceDetail, defaultService, form]);\n\n  return (\n    <Spin spinning={detailLoading}>\n      <Form\n        layout=\"vertical\"\n        form={form}\n        onFinish={onFinish}>\n\n        <Form.Item label=\"Tên dịch vụ\" name=\"name\" initialValue={serviceDetail?.name}>\n          <Input />\n        </Form.Item>\n\n        <Form.Item label=\"Giá\" name=\"price\" initialValue={serviceDetail?.price}>\n          <Input type=\"number\" suffix=\"VNĐ\" />\n        </Form.Item>\n      </Form>\n    </Spin>\n  )\n}\n\nexport default ServiceForm;","import React, { useState, useEffect } from 'react';\nimport { Row, Col, Button, Modal, Table, Form, Popconfirm, Space } from 'antd';\nimport { PlusOutlined, EditOutlined, DeleteOutlined } from '@ant-design/icons';\nimport ServiceForm from 'forms/ServiceForm/ServiceForm';\nimport { getServicesAPI, addServiceAPI, updateServiceAPI, deleteServiceAPI } from 'services/admin/medical-service.service';\nimport { formActions } from 'constant/formActions';\nimport NumberFormat from 'react-number-format';\n\nconst ServicePage = () => {\n\n  const [modalVisible, setModalVisible] = useState(false);\n  const [services, setServices] = useState();\n  const [fetchingServices, setFetchingServices] = useState(false);\n  const [modalLoading, setModalLoading] = useState(false);\n  const [action, setAction] = useState(formActions.CREATE);\n  const [selectedService, setSelectedService] = useState(null);\n  const [serviceForm] = Form.useForm();\n\n  const tableColumns = [\n    {\n      title: '#',\n      key: '#',\n      render: (text, record, index) => index + 1\n    },\n    {\n      title: 'Tên dịch vụ',\n      key: 'name',\n      dataIndex: 'name'\n    },\n    {\n      title: 'Giá',\n      key: 'price',\n      dataIndex: 'price',\n      render: (text, record, index) => (<NumberFormat thousandSeparator=\" \" suffix=\" VNĐ\" value={text} displayType=\"text\" />)\n    },\n    {\n      title: 'Hành động',\n      key: 'action',\n      render: (text, record, index) => (\n        <Space size={10}>\n          <Button icon={<EditOutlined />} onClick={() => handleEditClick(record)}></Button>\n          <Popconfirm\n            onConfirm={() => handleDelete(record)} title=\"Bạn có chắc muốn xóa không?\"\n            okText=\"Xóa\"\n            okType=\"danger\"\n            cancelText=\"Hủy bỏ\">\n            <Button icon={<DeleteOutlined />}></Button>\n          </Popconfirm>\n        </Space>\n      )\n    }\n  ]\n\n  function handleOpenModal() {\n    setAction(formActions.CREATE);\n    setModalVisible(true);\n  }\n\n  function handleCloseModal() {\n    setModalVisible(false);\n  }\n\n  async function getServices() {\n    try {\n      setFetchingServices(true);\n      const response = await getServicesAPI();\n      setServices(response.data);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setFetchingServices(false);\n    }\n  }\n\n  async function handleFormSubmit() {\n    try {\n      setModalLoading(true);\n      const values = await serviceForm.validateFields();\n      const data = {\n        name: values.name,\n        price: values.price,\n      }\n      if (action === formActions.CREATE) {\n        await addServiceAPI(data);\n      }\n\n      if (action === formActions.UPDATE) {\n        await updateServiceAPI(selectedService.id, data);\n      }\n\n      getServices();\n\n      setModalVisible(false);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setModalLoading(false);\n    }\n  }\n\n  function handleEditClick(service) {\n    setAction(formActions.UPDATE);\n    setSelectedService(service);\n    setModalVisible(true);\n  }\n\n  async function handleDelete(service) {\n    try {\n      await deleteServiceAPI(service.id);\n      getServices();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  function afterClose() {\n    serviceForm.resetFields();\n    setSelectedService(null);\n  }\n\n  useEffect(() => {\n    getServices();\n  }, []);\n\n  return (\n    <>\n      <Row justify=\"space-between\">\n        <Col><h1 className=\"text-xl\">Quản lý thuốc</h1></Col>\n        <Col>\n          <Button type=\"primary\" icon={<PlusOutlined />} onClick={handleOpenModal}>Tạo mới</Button>\n        </Col>\n      </Row>\n      <Table\n        rowKey=\"id\"\n        columns={tableColumns}\n        dataSource={services}\n        loading={fetchingServices} />\n      <Modal\n        visible={modalVisible}\n        title={action === formActions.CREATE ? 'Thêm thuốc' : 'Cập nhật thuốc'}\n        onCancel={handleCloseModal}\n        confirmLoading={modalLoading}\n        destroyOnClose={true}\n        afterClose={afterClose}\n        onOk={handleFormSubmit}>\n        <ServiceForm onFinish={handleFormSubmit} form={serviceForm} defaultService={selectedService} />\n      </Modal>\n    </>\n  )\n}\n\nexport default ServicePage;","import React from 'react';\n\nconst WorkingHourPage = () => {\n  return (\n    <div>WorkingHour Page</div>\n  )\n}\n\nexport default WorkingHourPage;","import React from 'react';\nimport { Form, Input } from 'antd';\n\nconst RoomForm = props => {\n  const { form, onFinish, defaultRoom } = props;\n\n  return (\n    <Form\n      layout=\"vertical\"\n      form={form}\n      onFinish={onFinish}>\n      <Form.Item label=\"Số phòng\" name=\"number\" initialValue={defaultRoom?.number}>\n        <Input type=\"number\" autoFocus />\n      </Form.Item>\n      <Form.Item label=\"Tên phòng\" name=\"name\" initialValue={defaultRoom?.name}>\n        <Input />\n      </Form.Item>\n    </Form>\n  )\n}\n\nexport default RoomForm;","import axios from 'axios';\n\nimport { API_URL } from \"constant/apiUrl\";\n\nconst endpointPrefix = `${API_URL}/admin/manage-room`;\n\nexport function getRoomAPI() {\n  const url = `${endpointPrefix}/`;\n  return axios.get(url);\n}\n\nexport function addRoomAPI({ number, name }) {\n  const url = `${endpointPrefix}/`;\n  return axios.post(url, { number: Number(number), name });\n}\n\nexport function updateRoomAPI(id, { name, number }) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.put(url, {\n    number: Number(number),\n    name\n  })\n}\n\nexport function deleteRoomAPI(id) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.delete(url);\n}","import React, { useState, useEffect } from 'react';\nimport { Row, Col, Button, Modal, Table, Form, Popconfirm, Space } from 'antd';\nimport { PlusOutlined, EditOutlined, DeleteOutlined } from '@ant-design/icons';\nimport RoomForm from 'forms/RoomForm/RoomForm';\nimport { addRoomAPI, deleteRoomAPI, getRoomAPI, updateRoomAPI } from 'services/admin/room.service';\nimport { formActions } from 'constant/formActions';\n\nconst RoomPage = () => {\n\n  const [modalVisible, setModalVisible] = useState(false);\n  const [rooms, setCategories] = useState([]);\n  const [fetchingCategories, setFetchingCategories] = useState(false);\n  const [modalLoading, setModalLoading] = useState(false);\n  const [action, setAction] = useState(formActions.CREATE);\n  const [selectedRoom, setSelectedRoom] = useState(null);\n  const [roomForm] = Form.useForm();\n\n  const tableColumns = [\n    {\n      title: '#',\n      key: '#',\n      render: (text, record, index) => index + 1\n    },\n    {\n      title: 'Số phòng',\n      key: 'number',\n      dataIndex: 'number'\n    },\n    {\n      title: 'Tên',\n      key: 'name',\n      dataIndex: 'name'\n    },\n    {\n      title: 'Hành động',\n      key: 'action',\n      render: (text, record, index) => (\n        <Space size={10}>\n          <Button icon={<EditOutlined />} onClick={() => handleEditClick(record)}></Button>\n          <Popconfirm\n            onConfirm={() => handleDelete(record)} title=\"Bạn có chắc muốn xóa không?\"\n            okText=\"Xóa\"\n            okType=\"danger\"\n            cancelText=\"Hủy bỏ\">\n            <Button icon={<DeleteOutlined />}></Button>\n          </Popconfirm>\n        </Space>\n      )\n    }\n  ]\n\n  function handleOpenModal() {\n    setAction(formActions.CREATE);\n    setModalVisible(true);\n  }\n\n  function handleCloseModal() {\n    setModalVisible(false);\n  }\n\n  async function getRooms() {\n    try {\n      setFetchingCategories(true);\n      const response = await getRoomAPI();\n      setCategories(response.data);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setFetchingCategories(false);\n    }\n  }\n\n  async function handleFormSubmit() {\n    try {\n      setModalLoading(true);\n      const values = await roomForm.validateFields();\n      if (action === formActions.CREATE) {\n        await addRoomAPI(values);\n      }\n\n      if (action === formActions.UPDATE) {\n        await updateRoomAPI(selectedRoom.id, values);\n      }\n\n      getRooms();\n\n      setModalVisible(false);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setModalLoading(false);\n    }\n  }\n\n  function handleEditClick(room) {\n    setAction(formActions.UPDATE);\n    setSelectedRoom(room);\n    setModalVisible(true);\n  }\n\n  async function handleDelete(unit) {\n    try {\n      await deleteRoomAPI(unit.id);\n      getRooms();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  function afterClose() {\n    roomForm.resetFields();\n    setSelectedRoom(null);\n  }\n\n  useEffect(() => {\n    getRooms();\n  }, []);\n\n  return (\n    <>\n      <Row justify=\"space-between\">\n        <Col><h1 className=\"text-xl\">Quản lý phòng</h1></Col>\n        <Col>\n          <Button type=\"primary\" icon={<PlusOutlined />} onClick={handleOpenModal}>Tạo mới</Button>\n        </Col>\n      </Row>\n      <Table\n        rowKey=\"id\"\n        columns={tableColumns}\n        dataSource={rooms}\n        \n        loading={fetchingCategories} />\n      <Modal\n        visible={modalVisible}\n        title={action === formActions.CREATE ? 'Thêm phòng' : 'Cập nhật phòng'}\n        onCancel={handleCloseModal}\n        confirmLoading={modalLoading}\n        destroyOnClose={true}\n        afterClose={afterClose}\n        onOk={handleFormSubmit}>\n        <RoomForm onFinish={handleFormSubmit} form={roomForm} defaultRoom={selectedRoom} />\n      </Modal>\n    </>\n  )\n}\n\nexport default RoomPage;","import axios from 'axios';\nimport { API_URL } from 'constant/apiUrl';\nimport qs from 'qs';\n\nconst endpointPrefix = `${API_URL}/admin/manage-user`;\n\nexport function getUsersAPI(query) {\n  const url = `${endpointPrefix}/?${qs.stringify(query)}`;\n  return axios.get(url);\n}\n\nexport function getUserDetailsAPI(id) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.get(url);\n}\n\nexport function addUserAPI({ email, password, first_name, last_name, phone, DOB, gender, role_id }) {\n  const url = `${endpointPrefix}/`;\n  return axios.post(url, {\n    email,\n    password,\n    first_name,\n    last_name,\n    phone,\n    DOB: DOB.format('yyyy-MM-DD'),\n    gender,\n    role_id\n  });\n}\n\nexport function updateUserAPI() {\n\n}\n\nexport function deleteUserAPI() {}","export const ROLES = {\n  \"1\": {\n    name: \"admin\",\n    display: \"Quản trị viên\"\n  },\n  \"2\": {\n    name: \"physician\",\n    display: \"Bác sĩ\"\n  },\n  \"3\": {\n    name: \"receptionist\",\n    display: \"Lễ tân\"\n  },\n  \"4\": {\n    name: \"patient\",\n    display: \"Bệnh nhân\"\n  }\n}\n\nexport const ROLES_LIST = [1, 2, 3, 4];","import React, { useState, useEffect } from 'react';\nimport { Form, Input, Select, Space, Spin, Row, Col, DatePicker, Radio } from 'antd';\nimport { getUserDetailsAPI } from 'services/admin/user.service';\nimport { ROLES, ROLES_LIST } from 'constant/roles';\nimport moment from 'moment';\n\nconst UserForm = props => {\n  const { form, onFinish, defaultUser } = props;\n  const [userDetail, setUserDetail] = useState(null);\n  const [detailLoading, setDetailLoading] = useState(false);\n\n  async function getUserDetail(id) {\n    try {\n      setDetailLoading(true);\n      const detailResponse = await getUserDetailsAPI(id);\n      const userDetail = detailResponse.data;\n      setUserDetail(userDetail);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setDetailLoading(false);\n    }\n  }\n\n  async function getData() {\n    if (defaultUser?.id) {\n      await Promise.all([\n        getUserDetail(defaultUser.id),\n      ]);\n    }\n  }\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  useEffect(() => {\n    if (userDetail) {\n      form.setFieldsValue({\n        email: userDetail.email,\n        first_name: userDetail.first_name,\n        last_name: userDetail.last_name,\n        phone: userDetail.phone,\n        DOB: moment(userDetail.DOB),\n        gender: userDetail.gender,\n        role_id: userDetail.role.id\n      });\n    }\n  }, [userDetail, defaultUser, form]);\n\n  return (\n    <Spin spinning={detailLoading}>\n      <Form\n        layout=\"vertical\"\n        form={form}\n        autoComplete=\"off\"\n        onFinish={onFinish}>\n        <Form.Item label=\"Email\" name=\"email\" initialValue={userDetail?.email} rules={[\n          {\n            required: true,\n            message: \"Vui lòng điền vào trường này\"\n          }\n        ]}>\n          <Input type=\"email\" readOnly={userDetail?.id} />\n        </Form.Item>\n\n        <Form.Item label=\"Mật khẩu\" name=\"password\" rules={[\n          {\n            required: true,\n            message: \"Vui lòng điền vào trường này\"\n          }\n        ]}>\n          <Input.Password />\n        </Form.Item>\n\n        <Row>\n          <Col flex={1}>\n            <Form.Item label=\"Họ\" name=\"first_name\" rules={[\n              {\n                required: true,\n                message: \"Vui lòng điền vào trường này\"\n              }\n            ]}>\n              <Input />\n            </Form.Item>\n          </Col>\n          <div style={{ width: 20 }}></div>\n          <Col flex={1}>\n            <Form.Item label=\"Tên\" name=\"last_name\" rules={[\n              {\n                required: true,\n                message: \"Vui lòng điền vào trường này\"\n              }\n            ]}>\n              <Input />\n            </Form.Item>\n          </Col>\n        </Row>\n\n        <Form.Item label=\"Điện thoại\" name=\"phone\" initialValue={userDetail?.phone} rules={[\n          {\n            required: true,\n            message: \"Vui lòng điền vào trường này\"\n          }\n        ]}>\n          <Input type=\"tel\" />\n        </Form.Item>\n\n        <Row>\n          <Col>\n            <Form.Item label=\"Ngày sinh\" name=\"DOB\" rules={[\n              {\n                required: true,\n                message: \"Vui lòng chọn ngày sinh\"\n              }\n            ]}>\n              <DatePicker placeholder=\"Chọn ngày\" />\n            </Form.Item>\n          </Col>\n          <div style={{ width: 20 }}></div>\n          <Col flex={1}>\n            <Form.Item label=\"Giới tính\" name=\"gender\" rules={[\n              {\n                required: true,\n                message: \"Vui lòng chọn một giá trị\"\n              }\n            ]}>\n              <Radio.Group>\n                <Radio value=\"Nam\">Nam</Radio>\n                <Radio value=\"Nữ\">Nữ</Radio>\n                <Radio value=\"Khác\">Khác</Radio>\n              </Radio.Group>\n            </Form.Item>\n          </Col>\n        </Row>\n\n\n        <Form.Item label=\"Vai trò\" name=\"role_id\" initialValue={userDetail?.role_id} rules={[\n          {\n            required: true,\n            message: \"Vui lòng chọn vai trò\"\n          }\n        ]}>\n          <Select>\n            {\n              ROLES_LIST.map(role_id => (\n                <Select.Option key={role_id} value={role_id}>{ROLES[role_id].display}</Select.Option>\n              ))\n            }\n          </Select>\n        </Form.Item>\n      </Form>\n    </Spin>\n  )\n}\n\nexport default UserForm;","import React, { useState, useEffect } from 'react';\nimport { Row, Col, Button, Modal, Table, Form, Popconfirm, Space } from 'antd';\nimport { PlusOutlined, LockOutlined, UnlockOutlined, EditOutlined, DeleteOutlined } from '@ant-design/icons';\nimport UserForm from 'forms/UserForm/UserForm';\nimport { getUsersAPI, addUserAPI, updateUserAPI, deleteUserAPI } from 'services/admin/user.service';\nimport { formActions } from 'constant/formActions';\nimport NumberFormat from 'react-number-format';\nimport { ROLES } from 'constant/roles';\nimport { useHistory, useLocation } from 'react-router-dom';\n\nconst AdminAccountPage = () => {\n\n  const history = useHistory();\n  const { pathname, search } = useLocation();\n  const urlSearchParams = new URLSearchParams(search);\n  const currentPageOnURL = Number(urlSearchParams.get('page'));\n  const [page, setPage] = useState(currentPageOnURL || 1);\n  const [modalVisible, setModalVisible] = useState(false);\n  const [users, setUsers] = useState();\n  const [fetchingUsers, setFetchingUsers] = useState(false);\n  const [modalLoading, setModalLoading] = useState(false);\n  const [action, setAction] = useState(formActions.CREATE);\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [userForm] = Form.useForm();\n\n  const tableColumns = [\n    {\n      title: '#',\n      key: '#',\n      render: (text, record, index) => index + 1\n    },\n    {\n      title: 'Họ',\n      key: 'first_name',\n      dataIndex: 'first_name'\n    },\n    {\n      title: 'Tên',\n      key: 'last_name',\n      dataIndex: 'last_name'\n    },\n    {\n      title: 'Email',\n      key: 'email',\n      dataIndex: 'email'\n    },\n    {\n      title: 'Vai trò',\n      key: 'role',\n      render: (text, record) => <span>{ROLES[record.role.id].display}</span>\n    },\n    {\n      title: 'Hành động', key: 'action', render: (text, record) => {\n        return (\n          <Space size={10}>\n            {\n              record.is_active ?\n                <Button danger type=\"link\" icon={<LockOutlined />}>Khóa</Button>\n                :\n                <Button type=\"link\" icon={<UnlockOutlined />}>Mở khóa</Button>\n            }\n            <Button icon={<EditOutlined />} onClick={() => handleEditClick(record)}></Button>\n            <Popconfirm\n              onConfirm={() => handleDelete(record)} title=\"Bạn có chắc muốn xóa không?\"\n              okText=\"Xóa\"\n              okType=\"danger\"\n              cancelText=\"Hủy bỏ\">\n              <Button icon={<DeleteOutlined />}></Button>\n            </Popconfirm>\n          </Space>\n        )\n      }\n    }\n  ]\n\n  function handleOpenModal() {\n    setAction(formActions.CREATE);\n    setModalVisible(true);\n  }\n\n  function handleCloseModal() {\n    setModalVisible(false);\n  }\n\n  async function getUsers(page) {\n    try {\n      setFetchingUsers(true);\n      const response = await getUsersAPI({ page: page });\n      setUsers(response.data);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setFetchingUsers(false);\n    }\n  }\n\n  async function handleFormSubmit() {\n    try {\n      setModalLoading(true);\n      const values = await userForm.validateFields();\n      if (action === formActions.CREATE) {\n        await addUserAPI(values);\n      }\n\n      if (action === formActions.UPDATE) {\n        await updateUserAPI(selectedUser.id, values);\n      }\n\n      getUsers(page);\n\n      setModalVisible(false);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setModalLoading(false);\n    }\n  }\n\n  function handleEditClick(user) {\n    setAction(formActions.UPDATE);\n    setSelectedUser(user);\n    setModalVisible(true);\n  }\n\n  async function handleDelete(user) {\n    try {\n      await deleteUserAPI(user.id);\n      getUsers(page);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  function afterClose() {\n    userForm.resetFields();\n    setSelectedUser(null);\n  }\n\n  function handlePaginationChange(page) {\n    getUsers(page);\n    setPage(page);\n    history.push({\n      pathname: pathname,\n      search: `page=${page}`\n    })\n  }\n\n  useEffect(() => {\n    getUsers(page);\n  }, []);\n\n  return (\n    <>\n      <Row justify=\"space-between\">\n        <Col><h1 className=\"text-xl\">Quản lý tài khoản</h1></Col>\n        <Col>\n          <Button type=\"primary\" icon={<PlusOutlined />} onClick={handleOpenModal}>Tạo mới</Button>\n        </Col>\n      </Row>\n      <Table\n        rowKey=\"id\"\n        columns={tableColumns}\n        dataSource={users?.results}\n        pagination={{\n          defaultCurrent: page,\n          current: page,\n          pageSize: 10,\n          total: users?.count,\n          onChange: handlePaginationChange\n        }}\n        loading={fetchingUsers} />\n      <Modal\n        visible={modalVisible}\n        title={action === formActions.CREATE ? 'Thêm tài khoản' : 'Cập nhật tài khoản'}\n        onCancel={handleCloseModal}\n        confirmLoading={modalLoading}\n        destroyOnClose={true}\n        afterClose={afterClose}\n        onOk={handleFormSubmit}>\n        <UserForm onFinish={handleFormSubmit} form={userForm} defaultUser={selectedUser} />\n      </Modal>\n    </>\n  )\n}\n\nexport default AdminAccountPage;","import React from 'react';\n\nconst AdminSettingPage = () => {\n  return (\n    <div>Admin setting page</div>\n  )\n}\n\nexport default AdminSettingPage;","import React, { useEffect } from 'react';\nimport Cookie from 'js-cookie';\nimport { Redirect } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { logoutAction } from 'store/actions/auth.action';\nimport jwtDecode from 'jwt-decode';\n\nconst withPrivateRoute = (Child, roles) => {\n  const WrapperComponent = (props) => {\n\n    const dispatch = useDispatch();\n    const token = Cookie.get('EMR_token');\n    const user = useSelector((state) => state.userState.user);\n\n    function isValidRole(user) {\n      const userRole = user?.role.name;\n      const isValid = roles.includes(userRole);\n      return isValid;\n    }\n\n    useEffect(() => {\n      if (user && user.role) {\n        if (!isValidRole(user)) {\n          dispatch(logoutAction());\n        }\n      }\n    }, [user, dispatch]);\n\n    try {\n      if (!token || token.length === 0 || !jwtDecode(token)) {\n        return <Redirect to=\"/login\" />;\n      } else {\n        return <Child {...props} />\n      }\n      \n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  return WrapperComponent;\n}\n\nexport default withPrivateRoute;","import React from 'react';\nimport { Button, Layout, Modal } from 'antd';\nimport {\n  LogoutOutlined,\n  ExclamationCircleOutlined\n} from '@ant-design/icons';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { logoutAction } from 'store/actions/auth.action';\n\nconst { Header } = Layout;\n\nconst CustomHeader = () => {\n\n  const dispatch = useDispatch();\n  const user = useSelector((state) => state.userState.user);\n\n  function handleLogout() {\n    Modal.confirm({\n      title: \"Đăng xuất\",\n      icon: <ExclamationCircleOutlined />,\n      content: \"Bạn có chắc muốn đăng xuất không?\",\n      onOk() {\n        dispatch(logoutAction());\n      }\n    })\n  }\n\n  return (\n    <Header className=\"header flex items-center\">\n      <div className=\"text-2xl text-white\">EMR</div>\n      <div className=\"ml-auto\"></div>\n      <div className=\"text-white\">{user?.first_name} {user?.last_name} <span className=\"ml-3\">|</span></div>\n      <Button type=\"default\" ghost icon={<LogoutOutlined />} className=\"border-none\" onClick={handleLogout}>Đăng xuất</Button>\n    </Header>\n  )\n}\n\nexport default CustomHeader;","import React from 'react';\nimport { Link, Redirect, Switch, Route, useRouteMatch, useLocation } from 'react-router-dom';\nimport { Layout, Menu } from 'antd';\nimport {\n  UserOutlined,\n  DashboardOutlined,\n  MedicineBoxOutlined,\n  BugOutlined,\n  DollarOutlined,\n  IdcardOutlined,\n  ClockCircleOutlined,\n  AppstoreOutlined,\n  CalendarOutlined,\n  ContainerOutlined,\n  SettingOutlined,\n  NotificationOutlined} from '@ant-design/icons';\nimport AdminDashboard from 'pages/admin/dashboard';\nimport DrugCategoryPage from 'pages/common/drug/drug-category';\nimport DrugUnitPage from 'pages/common/drug/drug-unit';\nimport DrugPage from 'pages/common/drug/drug';\nimport DrugInstructionPage from 'pages/common/drug/drug-instruction';\nimport DiseaseCategory from 'pages/common/disease/disease-category';\nimport DiseasePage from 'pages/common/disease/disease';\nimport NotificationPage from 'pages/common/notification/notification';\nimport VisitPage from 'pages/common/visit/visit';\nimport PatientPage from 'pages/common/patient/patient';\nimport AppointmentPage from 'pages/common/appointment/apointment';\nimport ServicePage from 'pages/common/service/service';\nimport WorkingHourPage from 'pages/common/working-hour/working-hour';\nimport RoomPage from 'pages/common/room/room';\nimport AdminAccountPage from 'pages/admin/account';\nimport AdminSettingPage from 'pages/admin/setting';\nimport withPrivateRoute from 'HOCs/withPrivateRoute';\nimport CustomHeader from 'components/Header';\n\nconst { Sider, Content } = Layout;\nconst { SubMenu } = Menu;\n\nconst AdminLayout = () => {\n  const match = useRouteMatch();\n  const location = useLocation();\n  const path = match.path;\n\n  return (\n    <Layout>\n      <CustomHeader />\n      <Layout>\n        <Sider width={200} className=\"site-layout-background\">\n          <Menu\n            mode=\"inline\"\n            style={{ height: '100%', borderRight: 0 }}\n            selectedKeys={[location.pathname]}\n          >\n            <Menu.Item key=\"/admin/dashboard\" icon={<DashboardOutlined />}>\n              <Link to=\"/admin/dashboard\">Bảng điều khiển</Link>\n            </Menu.Item>\n            <SubMenu key=\"drug\" icon={<MedicineBoxOutlined />} title=\"Quản lý thuốc\">\n              <Menu.Item key=\"/admin/drug/category\">\n                <Link to=\"/admin/drug/category\">Loại thuốc</Link>\n              </Menu.Item>\n              <Menu.Item key=\"/admin/drug/unit\">\n                <Link to=\"/admin/drug/unit\">Đơn vị tính</Link>\n              </Menu.Item>\n              <Menu.Item key=\"/admin/drug\">\n                <Link to=\"/admin/drug\">Thuốc</Link>\n              </Menu.Item>\n              <Menu.Item key=\"/admin/drug/instruction\">\n                <Link to=\"/admin/drug/instruction\">Hướng dẫn sử dụng</Link>\n              </Menu.Item>\n            </SubMenu>\n            <SubMenu key=\"disease\" icon={<BugOutlined />} title=\"Quản lý bệnh\">\n              <Menu.Item key=\"/admin/disease/category\">\n                <Link to=\"/admin/disease/category\">Loại bệnh</Link>\n              </Menu.Item>\n              <Menu.Item key=\"/admin/disease\">\n                <Link to=\"/admin/disease\">Bệnh</Link>\n              </Menu.Item>\n            </SubMenu>\n\n            <Menu.Item key=\"/admin/notification\" icon={<NotificationOutlined />}>\n              <Link to=\"/admin/notification\">Thông báo</Link>\n            </Menu.Item>\n            <Menu.Item key=\"/admin/visit\" icon={<ContainerOutlined />}>\n              <Link to=\"/admin/visit\">Khám chữa bệnh</Link>\n            </Menu.Item>\n            <Menu.Item key=\"/admin/patient\" icon={<IdcardOutlined />}>\n              <Link to=\"/admin/patient\">Bệnh nhân</Link>\n            </Menu.Item>\n            <Menu.Item key=\"/admin/appointment\" icon={<CalendarOutlined />}>\n              <Link to=\"/admin/appointment\">Lịch hẹn</Link>\n            </Menu.Item>\n            <Menu.Item key=\"/admin/service\" icon={<DollarOutlined />}>\n              <Link to=\"/admin/service\">Dịch vụ</Link>\n            </Menu.Item>\n\n            <Menu.Item key=\"/admin/working-hour\" icon={<ClockCircleOutlined />}>\n              <Link to=\"/admin/working-hour\">Giờ làm việc</Link>\n            </Menu.Item>\n            <Menu.Item key=\"/admin/room\" icon={<AppstoreOutlined />}>\n              <Link to=\"/admin/room\">Phòng</Link>\n            </Menu.Item>\n\n            <Menu.Item key=\"/admin/account\" icon={<UserOutlined />}>\n              <Link to=\"/admin/account\">Tài khoản</Link>\n            </Menu.Item>\n            <Menu.Item key=\"/admin/setting\" icon={<SettingOutlined />}>\n              <Link to=\"/admin/setting\">Cài đặt</Link>\n            </Menu.Item>\n          </Menu>\n        </Sider>\n        <Layout style={{ padding: '0 24px 24px' }}>\n          <Content\n            className=\"site-layout-background\"\n            style={{\n              padding: 24,\n              margin: 0,\n              minHeight: 280,\n            }}\n          >\n            <Switch>\n              {/* Dashboard */}\n              <Route path={`${path}/dashboard`}>\n                <AdminDashboard />\n              </Route>\n\n              {/* Drug */}\n              <Route path={`${path}/drug/category`}>\n                <DrugCategoryPage />\n              </Route>\n              <Route path={`${path}/drug/unit`}>\n                <DrugUnitPage />\n              </Route>\n              <Route path={`${path}/drug`} exact>\n                <DrugPage />\n              </Route>\n              <Route path={`${path}/drug/instruction`}>\n                <DrugInstructionPage />\n              </Route>\n\n              {/* Disease */}\n              <Route path={`${path}/disease/category`}>\n                <DiseaseCategory />\n              </Route>\n              <Route path={`${path}/disease`}>\n                <DiseasePage />\n              </Route>\n\n              {/* Notification */}\n              <Route path={`${path}/notification`}>\n                <NotificationPage />\n              </Route>\n\n              {/* Visit */}\n              <Route path={`${path}/visit`}>\n                <VisitPage />\n              </Route>\n\n              {/* Patient */}\n              <Route path={`${path}/patient`}>\n                <PatientPage />\n              </Route>\n\n              {/* Appointment */}\n              <Route path={`${path}/appointment`}>\n                <AppointmentPage />\n              </Route>\n\n              {/* Service */}\n              <Route path={`${path}/service`}>\n                <ServicePage />\n              </Route>\n\n              {/* Service */}\n              <Route path={`${path}/working-hour`}>\n                <WorkingHourPage />\n              </Route>\n\n              {/* Room */}\n              <Route path={`${path}/room`}>\n                <RoomPage />\n              </Route>\n\n              {/* Room */}\n              <Route path={`${path}/account`}>\n                <AdminAccountPage />\n              </Route>\n\n              {/* Room */}\n              <Route path={`${path}/setting`}>\n                <AdminSettingPage />\n              </Route>\n\n              {/* Fallback */}\n              <Redirect to={`/admin/dashboard`} />\n            </Switch>\n          </Content>\n        </Layout>\n      </Layout>\n    </Layout>\n  )\n}\n\nexport default withPrivateRoute(AdminLayout, ['admin']);","import React from 'react';\nimport { Link, Redirect, Switch, Route, useRouteMatch, useLocation } from 'react-router-dom';\nimport { Layout, Menu } from 'antd';\nimport {\n  UserOutlined,\n  DashboardOutlined,\n  MedicineBoxOutlined,\n  BugOutlined,\n  DollarOutlined,\n  IdcardOutlined,\n  ClockCircleOutlined,\n  AppstoreOutlined,\n  CalendarOutlined,\n  ContainerOutlined,\n  SettingOutlined,\n  NotificationOutlined} from '@ant-design/icons';\nimport AdminDashboard from 'pages/admin/dashboard';\nimport DrugCategoryPage from 'pages/common/drug/drug-category';\nimport DrugUnitPage from 'pages/common/drug/drug-unit';\nimport DrugPage from 'pages/common/drug/drug';\nimport DrugInstructionPage from 'pages/common/drug/drug-instruction';\nimport DiseaseCategory from 'pages/common/disease/disease-category';\nimport DiseasePage from 'pages/common/disease/disease';\nimport NotificationPage from 'pages/common/notification/notification';\nimport VisitPage from 'pages/common/visit/visit';\nimport PatientPage from 'pages/common/patient/patient';\nimport AppointmentPage from 'pages/common/appointment/apointment';\nimport ServicePage from 'pages/common/service/service';\nimport WorkingHourPage from 'pages/common/working-hour/working-hour';\nimport RoomPage from 'pages/common/room/room';\nimport AdminAccountPage from 'pages/admin/account';\nimport AdminSettingPage from 'pages/admin/setting';\nimport withPrivateRoute from 'HOCs/withPrivateRoute';\nimport CustomHeader from 'components/Header';\n\nconst { Sider, Content } = Layout;\nconst { SubMenu } = Menu;\n\nconst PhysicianLayout = () => {\n  const match = useRouteMatch();\n  const location = useLocation();\n  const path = match.path;\n\n  return (\n    <Layout>\n      <CustomHeader />\n      <Layout>\n        <Sider width={200} className=\"site-layout-background\">\n          <Menu\n            mode=\"inline\"\n            style={{ height: '100%', borderRight: 0 }}\n            selectedKeys={[location.pathname]}\n          >\n            <Menu.Item key=\"/admin/dashboard\" icon={<DashboardOutlined />}>\n              <Link to=\"/admin/dashboard\">Bảng điều khiển</Link>\n            </Menu.Item>\n            <SubMenu key=\"drug\" icon={<MedicineBoxOutlined />} title=\"Quản lý thuốc\">\n              <Menu.Item key=\"/admin/drug/category\">\n                <Link to=\"/admin/drug/category\">Loại thuốc</Link>\n              </Menu.Item>\n              <Menu.Item key=\"/admin/drug/unit\">\n                <Link to=\"/admin/drug/unit\">Đơn vị tính</Link>\n              </Menu.Item>\n              <Menu.Item key=\"/admin/drug\">\n                <Link to=\"/admin/drug\">Thuốc</Link>\n              </Menu.Item>\n              <Menu.Item key=\"/admin/drug/instruction\">\n                <Link to=\"/admin/drug/instruction\">Hướng dẫn sử dụng</Link>\n              </Menu.Item>\n            </SubMenu>\n            <SubMenu key=\"disease\" icon={<BugOutlined />} title=\"Quản lý bệnh\">\n              <Menu.Item key=\"/admin/disease/category\">\n                <Link to=\"/admin/disease/category\">Loại bệnh</Link>\n              </Menu.Item>\n              <Menu.Item key=\"/admin/disease\">\n                <Link to=\"/admin/disease\">Bệnh</Link>\n              </Menu.Item>\n            </SubMenu>\n\n            <Menu.Item key=\"/admin/notification\" icon={<NotificationOutlined />}>\n              <Link to=\"/admin/notification\">Thông báo</Link>\n            </Menu.Item>\n            <Menu.Item key=\"/admin/visit\" icon={<ContainerOutlined />}>\n              <Link to=\"/admin/visit\">Khám chữa bệnh</Link>\n            </Menu.Item>\n            <Menu.Item key=\"/admin/patient\" icon={<IdcardOutlined />}>\n              <Link to=\"/admin/patient\">Bệnh nhân</Link>\n            </Menu.Item>\n            <Menu.Item key=\"/admin/appointment\" icon={<CalendarOutlined />}>\n              <Link to=\"/admin/appointment\">Lịch hẹn</Link>\n            </Menu.Item>\n            <Menu.Item key=\"/admin/service\" icon={<DollarOutlined />}>\n              <Link to=\"/admin/service\">Dịch vụ</Link>\n            </Menu.Item>\n\n            <Menu.Item key=\"/admin/working-hour\" icon={<ClockCircleOutlined />}>\n              <Link to=\"/admin/working-hour\">Giờ làm việc</Link>\n            </Menu.Item>\n            <Menu.Item key=\"/admin/room\" icon={<AppstoreOutlined />}>\n              <Link to=\"/admin/room\">Phòng</Link>\n            </Menu.Item>\n\n            <Menu.Item key=\"/admin/account\" icon={<UserOutlined />}>\n              <Link to=\"/admin/account\">Tài khoản</Link>\n            </Menu.Item>\n            <Menu.Item key=\"/admin/setting\" icon={<SettingOutlined />}>\n              <Link to=\"/admin/setting\">Cài đặt</Link>\n            </Menu.Item>\n          </Menu>\n        </Sider>\n        <Layout style={{ padding: '0 24px 24px' }}>\n          <Content\n            className=\"site-layout-background\"\n            style={{\n              padding: 24,\n              margin: 0,\n              minHeight: 280,\n            }}\n          >\n            <Switch>\n              {/* Dashboard */}\n              <Route path={`${path}/dashboard`}>\n                <AdminDashboard />\n              </Route>\n\n              {/* Drug */}\n              <Route path={`${path}/drug/category`}>\n                <DrugCategoryPage />\n              </Route>\n              <Route path={`${path}/drug/unit`}>\n                <DrugUnitPage />\n              </Route>\n              <Route path={`${path}/drug`} exact>\n                <DrugPage />\n              </Route>\n              <Route path={`${path}/drug/instruction`}>\n                <DrugInstructionPage />\n              </Route>\n\n              {/* Disease */}\n              <Route path={`${path}/disease/category`}>\n                <DiseaseCategory />\n              </Route>\n              <Route path={`${path}/disease`}>\n                <DiseasePage />\n              </Route>\n\n              {/* Notification */}\n              <Route path={`${path}/notification`}>\n                <NotificationPage />\n              </Route>\n\n              {/* Visit */}\n              <Route path={`${path}/visit`}>\n                <VisitPage />\n              </Route>\n\n              {/* Patient */}\n              <Route path={`${path}/patient`}>\n                <PatientPage />\n              </Route>\n\n              {/* Appointment */}\n              <Route path={`${path}/appointment`}>\n                <AppointmentPage />\n              </Route>\n\n              {/* Service */}\n              <Route path={`${path}/service`}>\n                <ServicePage />\n              </Route>\n\n              {/* Service */}\n              <Route path={`${path}/working-hour`}>\n                <WorkingHourPage />\n              </Route>\n\n              {/* Room */}\n              <Route path={`${path}/room`}>\n                <RoomPage />\n              </Route>\n\n              {/* Room */}\n              <Route path={`${path}/account`}>\n                <AdminAccountPage />\n              </Route>\n\n              {/* Room */}\n              <Route path={`${path}/setting`}>\n                <AdminSettingPage />\n              </Route>\n\n              {/* Fallback */}\n              <Redirect to={`/admin/dashboard`} />\n            </Switch>\n          </Content>\n        </Layout>\n      </Layout>\n    </Layout>\n  )\n}\n\nexport default withPrivateRoute(PhysicianLayout, ['admin']);","import React from 'react';\nimport { Link, Redirect, Switch, Route, useRouteMatch, useLocation } from 'react-router-dom';\nimport { Layout, Menu } from 'antd';\nimport {\n  UserOutlined,\n  DashboardOutlined,\n  MedicineBoxOutlined,\n  BugOutlined,\n  DollarOutlined,\n  IdcardOutlined,\n  ClockCircleOutlined,\n  AppstoreOutlined,\n  CalendarOutlined,\n  ContainerOutlined,\n  SettingOutlined,\n  NotificationOutlined} from '@ant-design/icons';\nimport AdminDashboard from 'pages/admin/dashboard';\nimport DrugCategoryPage from 'pages/common/drug/drug-category';\nimport DrugUnitPage from 'pages/common/drug/drug-unit';\nimport DrugPage from 'pages/common/drug/drug';\nimport DrugInstructionPage from 'pages/common/drug/drug-instruction';\nimport DiseaseCategory from 'pages/common/disease/disease-category';\nimport DiseasePage from 'pages/common/disease/disease';\nimport NotificationPage from 'pages/common/notification/notification';\nimport VisitPage from 'pages/common/visit/visit';\nimport PatientPage from 'pages/common/patient/patient';\nimport AppointmentPage from 'pages/common/appointment/apointment';\nimport ServicePage from 'pages/common/service/service';\nimport WorkingHourPage from 'pages/common/working-hour/working-hour';\nimport RoomPage from 'pages/common/room/room';\nimport AdminAccountPage from 'pages/admin/account';\nimport AdminSettingPage from 'pages/admin/setting';\nimport withPrivateRoute from 'HOCs/withPrivateRoute';\nimport CustomHeader from 'components/Header';\n\nconst { Sider, Content } = Layout;\nconst { SubMenu } = Menu;\n\nconst AdminLayout = () => {\n  const match = useRouteMatch();\n  const location = useLocation();\n  const path = match.path;\n\n  return (\n    <Layout>\n      <CustomHeader />\n      <Layout>\n        <Sider width={200} className=\"site-layout-background\">\n          <Menu\n            mode=\"inline\"\n            style={{ height: '100%', borderRight: 0 }}\n            selectedKeys={[location.pathname]}\n          >\n            <Menu.Item key=\"/admin/dashboard\" icon={<DashboardOutlined />}>\n              <Link to=\"/admin/dashboard\">Bảng điều khiển</Link>\n            </Menu.Item>\n            <SubMenu key=\"drug\" icon={<MedicineBoxOutlined />} title=\"Quản lý thuốc\">\n              <Menu.Item key=\"/admin/drug/category\">\n                <Link to=\"/admin/drug/category\">Loại thuốc</Link>\n              </Menu.Item>\n              <Menu.Item key=\"/admin/drug/unit\">\n                <Link to=\"/admin/drug/unit\">Đơn vị tính</Link>\n              </Menu.Item>\n              <Menu.Item key=\"/admin/drug\">\n                <Link to=\"/admin/drug\">Thuốc</Link>\n              </Menu.Item>\n              <Menu.Item key=\"/admin/drug/instruction\">\n                <Link to=\"/admin/drug/instruction\">Hướng dẫn sử dụng</Link>\n              </Menu.Item>\n            </SubMenu>\n            <SubMenu key=\"disease\" icon={<BugOutlined />} title=\"Quản lý bệnh\">\n              <Menu.Item key=\"/admin/disease/category\">\n                <Link to=\"/admin/disease/category\">Loại bệnh</Link>\n              </Menu.Item>\n              <Menu.Item key=\"/admin/disease\">\n                <Link to=\"/admin/disease\">Bệnh</Link>\n              </Menu.Item>\n            </SubMenu>\n\n            <Menu.Item key=\"/admin/notification\" icon={<NotificationOutlined />}>\n              <Link to=\"/admin/notification\">Thông báo</Link>\n            </Menu.Item>\n            <Menu.Item key=\"/admin/visit\" icon={<ContainerOutlined />}>\n              <Link to=\"/admin/visit\">Khám chữa bệnh</Link>\n            </Menu.Item>\n            <Menu.Item key=\"/admin/patient\" icon={<IdcardOutlined />}>\n              <Link to=\"/admin/patient\">Bệnh nhân</Link>\n            </Menu.Item>\n            <Menu.Item key=\"/admin/appointment\" icon={<CalendarOutlined />}>\n              <Link to=\"/admin/appointment\">Lịch hẹn</Link>\n            </Menu.Item>\n            <Menu.Item key=\"/admin/service\" icon={<DollarOutlined />}>\n              <Link to=\"/admin/service\">Dịch vụ</Link>\n            </Menu.Item>\n\n            <Menu.Item key=\"/admin/working-hour\" icon={<ClockCircleOutlined />}>\n              <Link to=\"/admin/working-hour\">Giờ làm việc</Link>\n            </Menu.Item>\n            <Menu.Item key=\"/admin/room\" icon={<AppstoreOutlined />}>\n              <Link to=\"/admin/room\">Phòng</Link>\n            </Menu.Item>\n\n            <Menu.Item key=\"/admin/account\" icon={<UserOutlined />}>\n              <Link to=\"/admin/account\">Tài khoản</Link>\n            </Menu.Item>\n            <Menu.Item key=\"/admin/setting\" icon={<SettingOutlined />}>\n              <Link to=\"/admin/setting\">Cài đặt</Link>\n            </Menu.Item>\n          </Menu>\n        </Sider>\n        <Layout style={{ padding: '0 24px 24px' }}>\n          <Content\n            className=\"site-layout-background\"\n            style={{\n              padding: 24,\n              margin: 0,\n              minHeight: 280,\n            }}\n          >\n            <Switch>\n              {/* Dashboard */}\n              <Route path={`${path}/dashboard`}>\n                <AdminDashboard />\n              </Route>\n\n              {/* Drug */}\n              <Route path={`${path}/drug/category`}>\n                <DrugCategoryPage />\n              </Route>\n              <Route path={`${path}/drug/unit`}>\n                <DrugUnitPage />\n              </Route>\n              <Route path={`${path}/drug`} exact>\n                <DrugPage />\n              </Route>\n              <Route path={`${path}/drug/instruction`}>\n                <DrugInstructionPage />\n              </Route>\n\n              {/* Disease */}\n              <Route path={`${path}/disease/category`}>\n                <DiseaseCategory />\n              </Route>\n              <Route path={`${path}/disease`}>\n                <DiseasePage />\n              </Route>\n\n              {/* Notification */}\n              <Route path={`${path}/notification`}>\n                <NotificationPage />\n              </Route>\n\n              {/* Visit */}\n              <Route path={`${path}/visit`}>\n                <VisitPage />\n              </Route>\n\n              {/* Patient */}\n              <Route path={`${path}/patient`}>\n                <PatientPage />\n              </Route>\n\n              {/* Appointment */}\n              <Route path={`${path}/appointment`}>\n                <AppointmentPage />\n              </Route>\n\n              {/* Service */}\n              <Route path={`${path}/service`}>\n                <ServicePage />\n              </Route>\n\n              {/* Service */}\n              <Route path={`${path}/working-hour`}>\n                <WorkingHourPage />\n              </Route>\n\n              {/* Room */}\n              <Route path={`${path}/room`}>\n                <RoomPage />\n              </Route>\n\n              {/* Room */}\n              <Route path={`${path}/account`}>\n                <AdminAccountPage />\n              </Route>\n\n              {/* Room */}\n              <Route path={`${path}/setting`}>\n                <AdminSettingPage />\n              </Route>\n\n              {/* Fallback */}\n              <Redirect to={`/admin/dashboard`} />\n            </Switch>\n          </Content>\n        </Layout>\n      </Layout>\n    </Layout>\n  )\n}\n\nexport default withPrivateRoute(AdminLayout, ['admin']);","import React, { useEffect } from 'react';\nimport { Route, HashRouter as Router, Switch, Redirect  } from 'react-router-dom';\nimport LoginPage from 'pages/login';\nimport Cookie from 'js-cookie';\nimport jwtDecode from 'jwt-decode';\nimport AdminLayout from 'layouts/AdminLayout/AdminLayout';\nimport PhysicianLayout from 'layouts/PhysicianLayout/PhysicianLayout';\nimport ReceiptionistLayout from 'layouts/ReceiptionistLayout/ReceiptionistLayout';\nimport setupInterceptor from 'utils/interceptor';\nimport { useDispatch } from 'react-redux';\nimport { getProfileAction } from 'store/actions/user.action';\nimport { refreshToken } from 'services/auth/auth.service';\n\n// import \"normalize.css/normalize.css\";\n// import \"@blueprintjs/core/lib/css/blueprint.css\";\n// import \"@blueprintjs/icons/lib/css/blueprint-icons.css\";\nimport 'antd/dist/antd.css';\nimport 'styles/main.scss';\n\n\nfunction App() {\n\n  setupInterceptor();\n\n  const dispatch = useDispatch();\n\n  function fetchProfile() {\n    try {\n      const token = Cookie.get('EMR_token');\n      if (token && jwtDecode(token)) {\n        dispatch(getProfileAction());\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async function checkRefresh() {\n    try {\n      const token = Cookie.get('EMR_token');\n      const refresh = Cookie.get('EMR_refresh');\n      if (!token && refresh) {\n        const newTokenReponse = await refreshToken(refresh);\n        const newToken = newTokenReponse.data;\n        Cookie.set('EMR_token', newToken.access_token, { expires: 3/24 });\n      }\n      fetchProfile();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  useEffect(() => {\n    checkRefresh();\n  });\n  \n  return (\n    <div className=\"app\">\n      <Router>\n        <Switch>\n          <Route path=\"/login\">\n            <LoginPage />\n          </Route>\n\n          <Route path=\"/admin\" component={AdminLayout} />\n          <Route path=\"/physician\" component={PhysicianLayout} />\n          <Route path=\"/receiptionist\" component={ReceiptionistLayout} />\n\n          <Redirect to=\"/login\" />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import axios from 'axios';\nimport { message } from 'antd';\nimport Cookie from 'js-cookie';\nimport * as AuthService from 'services/auth/auth.service';\nimport jwtDecode from 'jwt-decode';\nimport { API_URL } from 'constant/apiUrl';\n\nexport default function setupInterceptor() {\n  axios.interceptors.request.use((config) => {\n\n    if (config.method === 'delete') {\n      message.loading('Đang thực hiện');\n    }\n\n    try {\n      const token = Cookie.get('EMR_token');\n      if (token && jwtDecode(token)) {\n        config.headers['Authorization'] = `Bearer ${token}`;\n      }\n    } catch (error) {\n      console.log(error);\n    }\n    return config;\n  }, (error) => Promise.reject(error));\n\n  axios.interceptors.response.use(((res) => {\n    switch (res.config.method) {\n      case \"post\":\n        console.log(res.data);\n        if (res.data.id) {\n          // Check if new object created because login is also a post request\n          message.success({\n            content: \"Tạo thành công\"\n          });\n        }\n\n        break;\n      case \"put\":\n      case \"patch\":\n        message.success({\n          content: \"Cập nhật thành công\"\n        });\n        break;\n      case \"delete\":\n        message.destroy();\n        message.success({\n          content: \"Xóa thành công\"\n        });\n        break;\n      default:\n        // Do nothing\n    }\n    return res;\n  }), async (error) => {\n    const originalRequest = error.config;\n\n    if (error.response.status === 401 && !originalRequest._retry && originalRequest.url !== `${API_URL}/auth/refresh-token/`) {\n      Cookie.remove(\"EMR_token\");\n\n      originalRequest._retry = true;\n\n      let refreshToken = Cookie.get('EMR_refresh');\n\n      if (refreshToken && refreshToken.length > 0) {\n        try {\n          const refreshResponse = await AuthService.refreshToken(refreshToken);\n          const newToken = refreshResponse.data.access_token;\n          Cookie.set('EMR_token', newToken);\n\n          const config = error.config;\n          config.headers['Authorization'] = `Bearer ${newToken}`;\n\n          return new Promise((resolve, reject) => {\n            return axios.request(config)\n              .then(res => resolve(res))\n              .catch(error => reject(error))\n          })\n        } catch (error) {\n          Cookie.remove(\"EMR_refresh\");\n          return Promise.reject(error);\n        }\n      }\n    } else {\n      const errorMessage = error.response?.data.message || \"Unexpected error occurred\";\n      message.error(errorMessage);\n    }\n\n    return Promise.reject(error);\n  })\n}","import * as actionTypes from '../actionTypes';\n\nconst initialState = {\n  loginLoading: false\n}\n\nexport default function authReducer (state = initialState, action) {\n  switch(action.type) {\n    case actionTypes.LOGIN_PENDING:\n      return {\n        ...state,\n        loginLoading: true\n      }\n\n    case actionTypes.LOGIN_SUCCESS:\n      return {\n        ...state,\n        loginLoading: false\n      }\n\n    case actionTypes.LOGIN_FAILURE:\n      return {\n        ...state,\n        loginLoading: false\n      }\n\n    default:\n      return {\n        ...state\n      }\n  }\n}","import * as actionTypes from '../actionTypes';\n\nconst initialState = {\n  user: null,\n  getProfileLoading: false,\n}\n\nexport default function userReducer(state = initialState, action) {\n  switch (action.type) {\n    case actionTypes.GET_PROFILE_PENDING:\n      return {\n        ...state,\n        user: null,\n        getProfileLoading: true\n      }\n    case actionTypes.GET_PROFILE_SUCCESS:\n      return {\n        ...state,\n        user: action.payload,\n        getProfileLoading: false\n      }\n    case actionTypes.GET_PROFILE_FAILURE:\n      return {\n        ...state,\n        user: null,\n        getProfileLoading: false\n      }\n    \n    case actionTypes.LOGOUT:\n      return {\n        ...state,\n        user: null,\n        getProfileLoading: false\n      }\n    default:\n      return { ...state }\n  }\n}","import { combineReducers } from 'redux';\nimport authReducer from './reducers/auth.reducer';\nimport userReducer from './reducers/user.reducer';\n\nconst rootReducer = combineReducers({\n  userState: userReducer,\n  authState: authReducer\n})\n\nexport default rootReducer;","import { createStore, compose, applyMiddleware } from 'redux';\nimport rootReducer from './rootReducer';\nimport thunk from 'redux-thunk';\n\nconst middlewares = [thunk]\n\nconst composeEnhancers =\n  typeof window === 'object' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : compose;\n\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(...middlewares)));\n\nexport default store;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from 'store/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}