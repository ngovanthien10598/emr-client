{"version":3,"sources":["components/Circle/Circle.module.scss","components/Icons/LoginIcon.jsx","store/actionTypes.js","constant/apiUrl.js","services/auth/auth.service.js","services/user/user.service.js","store/actions/user.action.js","store/actions/auth.action.js","forms/LoginForm/LoginForm.jsx","utils/routing.js","pages/login.jsx","pages/admin/dashboard.jsx","forms/DrugCategoryForm/DrugCategoryForm.jsx","services/admin/drug-category.service.js","constant/formActions.js","pages/common/drug/drug-category.jsx","forms/DrugUnitForm/DrugUnitForm.jsx","services/admin/drug-unit.service.js","pages/common/drug/drug-unit.jsx","forms/DrugRouteForm/DrugRouteForm.jsx","services/admin/drug-route.service.js","pages/common/drug/drug-route.jsx","utils/string.js","services/admin/drug.service.js","services/admin/drug-dosage-form.service.js","forms/DrugForm/DrugForm.jsx","pages/common/drug/drug.jsx","forms/DrugInstructionForm/DrugInstructionForm.jsx","services/admin/drug-instruction.service.js","pages/common/drug/drug-instruction.jsx","forms/DiseaseCategoryForm/DiseaseCategoryForm.jsx","services/admin/disease-category.service.js","pages/common/disease/disease-category.jsx","services/admin/disease.service.js","forms/DiseaseForm/DiseaseForm.jsx","pages/common/disease/disease.jsx","pages/common/notification/notification.jsx","services/user/room.service.js","services/admin/room.service.js","services/user/visit.service.js","services/admin/visit.service.js","services/user/emr.service.js","pages/common/visit/visit.jsx","services/user/patient.service.js","pages/common/patient/patient.jsx","pages/common/appointment/apointment.jsx","services/admin/medical-service.service.js","forms/ServiceForm/ServiceForm.jsx","pages/common/service/service.jsx","services/admin/working-hours.service.js","pages/admin/working-hour.jsx","forms/RoomForm/RoomForm.jsx","pages/common/room/room.jsx","services/admin/user.service.js","constant/roles.js","constant/formRules.js","forms/UserForm/UserForm.jsx","components/Circle/Circle.jsx","pages/admin/account.jsx","pages/admin/setting.jsx","HOCs/withPrivateRoute.jsx","components/Header.jsx","forms/DrugDosageFormForm/DrugDosageFormForm.jsx","pages/common/drug/drug-dosage-form.jsx","layouts/AdminLayout/AdminLayout.jsx","services/user/disease.service.js","services/user/drug.service.js","forms/Visit/VisitDiseaseForm.jsx","forms/Visit/VisitServiceForm.jsx","forms/Visit/VisitDrugForm.jsx","utils/image.js","forms/Visit/VisitImagesForm.jsx","services/user/disease-category.service.js","services/user/medical-service.service.js","services/user/drug-category.service.js","services/user/drug-instruction.service.js","pages/common/examination/examination.jsx","pages/common/profile/profile.jsx","pages/common/patient/patient-details.jsx","components/EmrDesc/EmrDesc.jsx","pages/common/patient/emr-details.jsx","layouts/PhysicianLayout/PhysicianLayout.jsx","forms/PatientForm/PatientForm.jsx","pages/receptionist/receive.jsx","layouts/ReceptionistLayout/ReceptionistLayout.jsx","components/Icons/EmailIcon.jsx","pages/verify-email.jsx","services/patient/emr.service.js","pages/patient/emr.jsx","pages/patient/patient-emr-details.jsx","layouts/PatientLayout/PatientLayout.jsx","App.jsx","utils/interceptor.js","store/reducers/auth.reducer.js","store/reducers/user.reducer.js","store/rootReducer.js","store/store.js","serviceWorker.js","index.jsx"],"names":["module","exports","LoginIcon","width","height","xmlns","xmlnsXlink","version","id","x","y","viewBox","fill","xmlSpace","cx","cy","r","d","LOGIN_PENDING","LOGIN_SUCCESS","LOGIN_FAILURE","GET_PROFILE_PENDING","GET_PROFILE_SUCCESS","GET_PROFILE_FAILURE","LOGOUT","API_URL","NODE_URL","endpointPrefix","login","username","password","url","axios","post","includes","refreshToken","refresh_token","verifyEmailAPI","token","get","changePasswordAPI","body","put","getProfile","addBlockChainUserAPI","userId","role","Promise","reject","Error","updateProfile","getProfileSuccess","user","type","actionTypes","payload","getProfileAction","dispatch","a","profileRes","data","console","log","logoutAction","Cookie","remove","LoginForm","history","useHistory","useDispatch","authState","useSelector","state","userState","useEffect","redirectPath","getRedirectPath","replace","className","layout","autoComplete","noValidate","onFinish","values","email","loginRes","loginData","accessToken","access_token","set","expires","Icon","component","Item","name","placeholder","Password","to","loading","loginLoading","getProfileLoading","block","size","htmlType","LoginPage","props","AdminDashboard","DrugCategoryForm","form","defaultCategory","label","initialValue","autoFocus","getDrugCategoryAPI","search","addDrugCategoryAPI","updateDrugCategoryAPI","deleteDrugCategoryAPI","delete","formActions","DrugCategoryPage","useState","modalVisible","setModalVisible","categories","setCategories","fetchingCategories","setFetchingCategories","modalLoading","setModalLoading","action","setAction","selectedCategory","setSelectedCategory","Form","useForm","drugCategoryForm","tableColumns","title","key","render","text","record","index","dataIndex","icon","EditOutlined","onClick","category","onConfirm","handleDelete","okText","okType","cancelText","DeleteOutlined","getDrugCategories","response","handleFormSubmit","validateFields","indexOf","cut","substr","convertedStr","charAt","toUpperCase","toLowerCase","unit","justify","PlusOutlined","rowKey","columns","dataSource","pagination","visible","onCancel","confirmLoading","destroyOnClose","afterClose","resetFields","onOk","DrugUnitForm","defaultUnit","getDrugUnitsAPI","addDrugUnitAPI","updateDrugUnitAPI","deleteDrugUnitAPI","DrugUnitPage","drugUnits","setDrugUnits","fetchingDrugUnits","setFetchingDrugUnits","selectedUnit","setSelectedUnit","drugUnitForm","getDrugUnits","DrugRouteForm","defaultRoute","getDrugRouteAPI","addDrugRouteAPI","updateDrugRouteAPI","deleteDrugRouteAPI","DrugRoutePage","routes","setRoutes","fetchingRoutes","setFetchingRoutes","selectedRoute","setSelectedRoute","drugRouteForm","route","getDrugRoutes","getQueryString","queryObj","Object","keys","map","join","getDrugsAPI","params","getDrugDetailsAPI","addDrugAPI","updateDrugAPI","deleteDrugAPI","getDrugDosageFormAPI","addDrugDosageFormAPI","updateDrugDosageFormAPI","deleteDrugDosageFormAPI","DrugForm","defaultDrug","units","setUnits","forms","setForms","drugDetail","setDrugDetail","catLoading","setCatLoading","unitLoading","setUnitLoading","routeLoading","setRouteLoading","formLoading","setFormLoading","detailLoading","setDetailLoading","catResponse","unitResponse","routeResponse","getDrugDosageForms","formResponse","getDrugDetail","detailResponse","prevCats","findIndex","cat","drug_category","prevUnits","u","drug_unit","prevRoutes","drug_route","prevForms","f","drug_dosage_form","all","getData","setFieldsValue","code","price","strength","spinning","hidden","suffix","value","Option","DrugPage","drugs","setDrugs","fetchingDrugs","setFetchingDrugs","selectedDrug","setSelectedDrug","drugForm","drug","getDrugs","results","DrugInstructionForm","defaultInstruction","instruction","getDrugInstructionsAPI","addDrugInstructionAPI","updateDrugInstructionAPI","deleteDrugInstructionAPI","DrugInstructionPage","drugInstructions","setDrugInstructions","fetchingDrugInstructions","setFetchingDrugInstructions","selectedInstruction","setSelectedInstruction","drugInstructionForm","ins","getDrugInstructions","DiseaseCategoryForm","getDiseaseCategoryAPI","addDiseaseCategoryAPI","updateDiseaseCategoryAPI","deleteDiseaseCategoryAPI","DiseaseCategoryPage","diseaseCategoryForm","getDiseaseCategories","getDiseasesAPI","getDiseaseDetailsAPI","addDiseaseAPI","disease_category","updateDiseaseAPI","deleteDiseaseAPI","DiseaseForm","defaultDisease","diseaseDetail","setDiseaseDetail","getDiseaseDetail","DiseasePage","diseases","setDiseases","fetchingDiseases","setFetchingDiseases","selectedDisease","setSelectedDisease","diseaseForm","disease","getDiseases","NotificationPage","getRoomAPI","addRoomAPI","number","Number","updateRoomAPI","deleteRoomAPI","getVisitDataAPI","query","createVisitAPI","patientId","roomId","room_id","patient_id","deleteVisitAPI","visitId","listEMRAPI","addEMRAPI","emr","getEMRHistoryAPI","emrId","updateEMRAPI","completeEMRAPI","connect","pathname","useLocation","rooms","setRooms","roomLoading","setRoomLoading","visitData","setVisitData","visitLoading","setVisitLoading","createEMRLoading","setCreateEMRLoading","selectedRoom","setSelectedRoom","visitList","filter","visit","createdAt","Date","created_at","today","getDate","getMonth","getFullYear","room","_","patient","first_name","last_name","gender","moment","DOB","format","ken","handlePatientClick","getRooms","adminGetRoomAPI","roomResponse","prevSelected","localStorage","getItem","getVisitData","adminGetVisitDataAPI","visitDataResponse","createEmr","prev","visit_id","resolve","cloneArr","splice","checkExistEMR","historyResponse","existEmr","find","completed_at","emrObj","physician","medical_record","administrative","fullname","dayOfBirth","job","ethnicity","expatriate","address","workplace","object","insurance_expirity","insurance_number","family_member_and_address","phone","checkin_at","previous_diagnose","come_from","present_complaint","ask","pathological_process","self_medical_history","family_medical_history","examination","heartbeat","temperature","blood_pressure","breathing","weight","partials","subclinical_summary","initial_diagnose","processed","diagnose","from_date","to_date","summary","pathological_process_and_clinical_course","valuable_subclinical_summary","primary_disease","sub_disease","treatment_method","patient_status","direction_of_treatment","services","attachments","push","handleChangeRoom","getInitialData","setItem","style","onChange","flex","listAllPatientsAPI","getPatientDetailsAPI","createPatientAPI","path","useRouteMatch","patientData","setPatientData","patientLoading","setPatientLoading","EyeOutlined","listAllPatient","patientResults","AppointmentPage","mode","locale","getServicesAPI","getServiceDetailsAPI","addServiceAPI","updateServiceAPI","deleteServiceAPI","ServiceForm","defaultService","serviceDetail","setServiceDetail","getServiceDetail","ServicePage","setServices","fetchingServices","setFetchingServices","selectedService","setSelectedService","serviceForm","thousandSeparator","displayType","service","getServices","getWorkingHoursAPI","updateWorkingHourAPI","weekday","isClosed","is_closed","WorkingHourPage","workingHours","setWorkingHours","setLoading","checked","handleWorkingHourChange","getWorkingHours","workingHoursResponse","sort","b","wh","RoomForm","defaultRoom","RoomPage","roomForm","getUsersAPI","qs","stringify","getUserDetailsAPI","addUserAPI","role_id","updateUserAPI","deleteUserAPI","blockUserAPI","unblockUserAPI","ROLES","display","ROLES_LIST","requiredRule","message","required","UserForm","defaultUser","userDetail","setUserDetail","getUserDetail","rules","Group","Circle","classes","classnames","styles","circle","color","AdminAccountPage","urlSearchParams","URLSearchParams","currentPageOnURL","page","setPage","users","setUsers","fetchingUsers","setFetchingUsers","selectedUser","setSelectedUser","userForm","is_verified_email","handleBlockUnblock","is_active","danger","LockOutlined","UnlockOutlined","getUsers","addReponse","responseData","defaultCurrent","current","pageSize","total","count","AdminSettingPage","withPrivateRoute","Child","roles","userRole","isValidRole","length","jwtDecode","error","Header","Layout","CustomHeader","avatar","src","backgroundColor","ghost","LogoutOutlined","Modal","confirm","ExclamationCircleOutlined","content","DrugDosageFormForm","defaultDosageForm","DrugDosageFormPage","dosageForms","setDosageForms","fetchingDosageForms","setFetchingDosageForms","selectedDosageForm","setSelectedDosageForm","drugDosageFormForm","dosageForm","Sider","Content","SubMenu","Menu","match","location","borderRight","selectedKeys","DashboardOutlined","MedicineBoxOutlined","BugOutlined","ContainerOutlined","IdcardOutlined","CalendarOutlined","DollarOutlined","ClockCircleOutlined","AppstoreOutlined","UserOutlined","SettingOutlined","padding","margin","minHeight","exact","List","Select","getBase64","file","reader","FileReader","readAsDataURL","onload","result","onerror","VisitImagesForm","previewVisible","setPreviewVisible","previewImage","setPreviewImage","previewTitle","setPreviewTitle","fileList","setFileList","uploadButton","marginTop","uploadEvent","event","preview","originFileObj","substring","lastIndexOf","listType","headers","Authorization","onPreview","footer","alt","useParams","setDiseaseCategories","drugCategories","setDrugCategories","setEmr","drugLoading","setDrugLoading","finishLoading","setFinishLoading","isSavingEmr","setIsSavingEmr","emrForm","adminGetDiseaseCategoryAPI","diseaseCategoryResponse","diseaseCategoriesData","adminGetServicesAPI","servicesResponse","servicesData","adminGetDrugCategoryAPI","drugCategoryResponse","drugCategoriesData","drugCategory","adminGetDrugsAPI","drugResponse","drugData","adminGetDrugInstructionsAPI","drugInsResponse","drugInsData","getEmrDetail","emrList","handleChangeDrugCategory","goBack","emrBody","checkin","success","status","fileListElement","uid","cloneEmr","onBack","initialValues","gutter","readOnly","defaultActiveKey","Panel","header","TextArea","rows","dateStr","momentObj","hour","minute","date","month","year","getDateString","autoSize","minRows","maxRows","addonBefore","fields","add","field","align","fieldKey","minWidth","MinusCircleOutlined","e","handleUploadChange","SaveOutlined","handleFinishExamination","FileDoneOutlined","updateLoading","setUpdateLoading","changePasswordLoading","setChangePasswordLoading","imageUrl","setImageUrl","changePasswordForm","LoadingOutlined","isMoment","method","showUploadList","info","family_member_name","family_member_address","Descriptions","PatientDetails","setPatient","EMRs","setEMRs","EMRLoading","setEMRLoading","__","row","Record","Key","getPatientDetails","patientResponse","getPatientEMRs","EMRResponse","colon","EmrDesc","bordered","column","span","dangerouslySetInnerHTML","__html","drugInstruction","s","i","EmrDetailsPage","emrHistory","setEmrHistory","emrLoading","setEmrLoading","selectedTab","setSelectedTab","getEmrHistory","res","updated_at","val","h","TabPane","tab","ProfileOutlined","PatientForm","ReceivePage","isCreatingPatient","setCreatingPatient","isCreatingVisit","setCreatingVisit","patientForm","renderMenu","handleCreateVisit","overlay","overlayStyle","trigger","listAllPatients","handleSubmit","createResponse","extra","Search","EmailIcon","enableBackground","VerifyPage","setSuccess","setError","isValidToken","isValid","test","verifyEmail","showIcon","listAllEmrs","PatientEmrPage","emrs","setEmrs","getEmrs","PatientEmrDetailsPage","App","interceptors","request","use","config","originalRequest","_retry","AuthService","refreshResponse","newToken","then","catch","errorMessage","fetchProfile","refresh","newTokenReponse","checkRefresh","AdminLayout","PhysicianLayout","ReceptionistLayout","PatientLayout","initialState","rootReducer","combineReducers","middlewares","thunk","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","Boolean","hostname","ReactDOM","viVN","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.83bd6d5c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"circle\":\"Circle_circle__3fC-i\",\"circle--success\":\"Circle_circle--success__1IfvS\"};","import React from 'react';\n\nconst LoginIcon = () => (\n  <svg width=\"50\" height=\"50\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" version=\"1.1\" id=\"Capa_1\" x=\"0px\" y=\"0px\" viewBox=\"0 0 512.002 512.002\" fill=\"currentColor\" xmlSpace=\"preserve\">\n    <g>\n      <g>\n        <g>\n          <circle cx=\"338\" cy=\"346.001\" r=\"20\" />\n          <path d=\"M238,472.001H80c-22.056,0-40-17.944-40-40v-164c0-22.056,17.944-40,40-40h288c22.056,0,40,17.944,40,40v40     c0,11.046,8.954,20,20,20c11.046,0,20-8.954,20-20v-40c0-44.112-35.888-80-80-80h-24.037v-70.534     c0-64.771-53.832-117.466-120-117.466s-120,52.695-120,117.466v70.534H80c-44.112,0-80,35.888-80,80v164     c0,44.112,35.888,80,80,80h158c11.046,0,20-8.954,20-20S249.046,472.001,238,472.001z M143.963,117.467     c0-42.715,35.888-77.466,80-77.466s80,34.751,80,77.466v70.534h-160V117.467z\" />\n          <path d=\"M503.643,325.739c-8.982-6.431-21.477-4.362-27.904,4.62l-98.581,137.7c-2.692,3.122-6.066,3.796-7.874,3.916     c-1.854,0.123-5.424-0.112-8.567-3.061l-63.708-62.171c-7.906-7.716-20.568-7.559-28.282,0.345     c-7.715,7.905-7.561,20.567,0.345,28.282l63.82,62.281c0.06,0.058,0.119,0.116,0.18,0.173C342.639,506.933,355.41,512,368.55,512     c1.129,0,2.261-0.037,3.393-0.113c14.314-0.954,27.679-7.915,36.666-19.097c0.232-0.29,0.456-0.585,0.673-0.887l98.981-138.26     C514.692,344.662,512.624,332.168,503.643,325.739z\" />\n          <circle cx=\"262\" cy=\"346.001\" r=\"20\" />\n          <circle cx=\"112\" cy=\"346.001\" r=\"20\" />\n          <circle cx=\"187\" cy=\"346.001\" r=\"20\" />\n        </g>\n      </g>\n    </g>\n    <g>\n    </g>\n    <g>\n    </g>\n    <g>\n    </g>\n    <g>\n    </g>\n    <g>\n    </g>\n    <g>\n    </g>\n    <g>\n    </g>\n    <g>\n    </g>\n    <g>\n    </g>\n    <g>\n    </g>\n    <g>\n    </g>\n    <g>\n    </g>\n    <g>\n    </g>\n    <g>\n    </g>\n    <g>\n    </g>\n  </svg>\n)\n\nexport default LoginIcon;","export const LOGIN_PENDING = \"LOGIN_PENDING\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_FAILURE = \"LOGIN_FAILURE\";\n\nexport const GET_PROFILE_PENDING = \"GET_PROFILE_PENDING\";\nexport const GET_PROFILE_SUCCESS = \"GET_PROFILE_SUCCESS\";\nexport const GET_PROFILE_FAILURE = \"GET_PROFILE_FAILURE\";\n\nexport const LOGOUT = \"LOGOUT\";","export const API_URL = 'https://emr-2020.wl.r.appspot.com/api';\nexport const NODE_URL = 'https://api.emr-client.tech';","import { API_URL } from \"constant/apiUrl\";\nimport axios from 'axios';\n\n\nconst endpointPrefix = `${API_URL}/auth`;\n\n/**\n * Login to system\n * @param email\n * @param password\n */\nexport function login(username, password) {\n  const url = `${endpointPrefix}/login/`;\n  return axios.post(url, {\n    [username.includes('+84') ? 'phone' : 'email']: username,\n    password: password\n  });\n}\n\n/**\n * This function is used to get new access token from refresh token\n * when current access token is expired\n * @param refreshToken Refresh token from last login\n */\nexport function refreshToken(refreshToken) {\n  const url = `${endpointPrefix}/refresh-token/`;\n  return axios.post(url, {\n    refresh_token: refreshToken\n  });\n}\n\n\nexport function verifyEmailAPI(token) {\n  const url = `${endpointPrefix}/verify-email/${token}/`;\n  return axios.get(url);\n}\n\nexport function changePasswordAPI(body) {\n  const url = `${endpointPrefix}/change-password/`;\n  return axios.put(url, body);\n}","import { API_URL, NODE_URL } from \"constant/apiUrl\";\nimport axios from 'axios';\n\nconst endpointPrefix = `${API_URL}/user`;\n\n/**\n* Get user profile\n* @param token Access token\n*/\nexport function getProfile() {\n  const url = `${endpointPrefix}/profile/`;\n  return axios.get(url);\n}\n\nexport function addBlockChainUserAPI(userId, role = \"user\") {\n  if (role !== \"user\" && role !== \"patient\") return Promise.reject(new Error('Unknown role'));\n  const url = `${NODE_URL}/api/register-${role}`;\n  return axios.post(url, { [`${role}_id`]: userId });\n}\n\nexport function updateProfile(body) {\n  const url = `${endpointPrefix}/profile/`;\n  return axios.put(url, body);\n}","import * as actionTypes from '../actionTypes';\nimport { getProfile } from 'services/user/user.service';\n\nfunction getProfilePending() {\n  return {\n    type: actionTypes.GET_PROFILE_PENDING\n  }\n}\n\nfunction getProfileSuccess(user) {\n  return {\n    type: actionTypes.GET_PROFILE_SUCCESS,\n    payload: user\n  }\n}\n\nfunction getProfileFailure() {\n  return {\n    type: actionTypes.GET_PROFILE_FAILURE\n  }\n}\n\nexport function getProfileAction() {\n  return async dispatch => {\n    try {\n      dispatch(getProfilePending());\n      const profileRes = await getProfile();\n      const user = profileRes.data;\n      dispatch(getProfileSuccess(user));\n    } catch(error) {\n      console.log(error);\n      dispatch(getProfileFailure());\n    }\n  }\n}\n\nexport function removeUserAction() {\n  return {\n    type: actionTypes.LOGOUT\n  }\n}","import * as actionTypes from '../actionTypes';\nimport { login } from 'services/auth/auth.service';\nimport Cookie from 'js-cookie';\nimport { getProfileAction, removeUserAction } from './user.action';\n\nfunction loginPending() {\n  return {\n    type: actionTypes.LOGIN_PENDING\n  }\n}\n\nfunction loginSuccess() {\n  return {\n    type: actionTypes.LOGIN_SUCCESS,\n  }\n}\n\nfunction loginFailure() {\n  return {\n    type: actionTypes.LOGIN_FAILURE\n  }\n}\n\nexport function loginAction(email, password) {\n  return async dispatch => {\n    try {\n      dispatch(loginPending());\n      const loginRes = await login(email, password);\n      const loginData = loginRes.data;\n\n      const accessToken = loginData.access_token;\n      const refreshToken = loginData.refresh_token;\n      Cookie.set('EMR_token', accessToken, { expires: 3 / 24 }); // 3 hours\n      Cookie.set('EMR_refresh', refreshToken, { expires: 7 }); // 7 days\n      dispatch(loginSuccess());\n      dispatch(getProfileAction());\n    } catch (error) {\n      dispatch(loginFailure());\n    }\n  }\n}\n\nexport function logoutAction() {\n  Cookie.remove('EMR_token');\n  Cookie.remove('EMR_refresh');\n\n  return dispatch => {\n    dispatch(removeUserAction());\n  }\n}","import React, { useEffect } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { Form, Input, Button } from 'antd';\nimport Icon from '@ant-design/icons';\nimport LoginIcon from 'components/Icons/LoginIcon';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { loginAction } from 'store/actions/auth.action';\nimport { getRedirectPath } from 'utils/routing';\n\nconst LoginForm = () => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const authState = useSelector(state => state.authState);\n  const userState = useSelector(state => state.userState);\n  const user = userState.user;\n\n  function handleSubmit(values) {\n    dispatch(loginAction(values.email, values.password));\n  }\n\n  useEffect(() => {\n    if (user && user.role) {\n      const redirectPath = getRedirectPath(user.role);\n      console.log(redirectPath);\n      history.replace(redirectPath);\n    }\n  }, [user, history]);\n\n  return (\n    <Form\n      className=\"auth\"\n      layout=\"vertical\"\n      autoComplete=\"off\"\n      noValidate\n      onFinish={handleSubmit}>\n\n      <div className=\"auth__header text-center\">\n        <Icon component={LoginIcon} />\n        <h1 className=\"text-3xl\">Đăng nhập</h1>\n      </div>\n\n      <Form.Item name=\"email\">\n        <Input type=\"email\" placeholder=\"Email\" />\n      </Form.Item>\n\n      <Form.Item name=\"password\" className=\"m-0\">\n        <Input.Password placeholder=\"Mật khẩu\" />\n        {/* <Button type=\"link\"> */}\n        {/* </Button> */}\n      </Form.Item>\n      <Link className=\"block mt-2 mb-6\" to=\"/forgot-password\">Quên mật khẩu</Link>\n\n      <Form.Item>\n        <Button loading={authState.loginLoading || userState.getProfileLoading} block type=\"primary\" size=\"large\" htmlType=\"submit\">Đăng nhập</Button>\n      </Form.Item>\n    </Form>\n  )\n}\n\nexport default LoginForm;","export function getRedirectPath(role) {\n  if (!role) return \"/login\";\n\n  switch (role.id) {\n    case 1:\n      return \"/admin\";\n    case 2:\n      return \"/physician\";\n    case 3:\n      return \"/receptionist\";\n    case 4:\n      return \"/patient\";\n    default:\n      return \"\";\n  }\n}","import React from 'react';\nimport LoginForm from 'forms/LoginForm/LoginForm';\n\nconst LoginPage = (props) => {\n  return (\n    <main className=\"login-page\">\n      <LoginForm />\n    </main>\n  )\n}\n\nexport default LoginPage;","import React from 'react';\n\nconst AdminDashboard = () => {\n  return (\n    <div>Admin dashboard</div>\n  )\n}\n\nexport default AdminDashboard;","import React from 'react';\nimport { Form, Input } from 'antd';\n\nconst DrugCategoryForm = props => {\n  const { form, onFinish, defaultCategory } = props;\n\n  return (\n    <Form\n      layout=\"vertical\"\n      form={form}\n      onFinish={onFinish}>\n      <Form.Item label=\"Loại thuốc\" name=\"name\" initialValue={defaultCategory?.name}>\n        <Input autoFocus />\n      </Form.Item>\n    </Form>\n  )\n}\n\nexport default DrugCategoryForm;","import axios from 'axios';\n\nimport { API_URL } from \"constant/apiUrl\";\n\nconst endpointPrefix = `${API_URL}/admin/manage-drug-category`;\n\nexport function getDrugCategoryAPI(search = \"\") {\n  const url = `${endpointPrefix}/?search=${search}`;\n  return axios.get(url);\n}\n\nexport function addDrugCategoryAPI(name) {\n  const url = `${endpointPrefix}/`;\n  return axios.post(url, { name: name });\n}\n\nexport function updateDrugCategoryAPI(id, name) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.put(url, {\n    name: name\n  })\n}\n\nexport function deleteDrugCategoryAPI(id) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.delete(url);\n}","export const formActions = {\n  CREATE: 'CREATE',\n  UPDATE: 'UPDATE'\n}","import React, { useState, useEffect } from 'react';\nimport { Row, Col, Button, Modal, Table, Form, Popconfirm, Space } from 'antd';\nimport { PlusOutlined, EditOutlined, DeleteOutlined } from '@ant-design/icons';\nimport DrugCategoryForm from 'forms/DrugCategoryForm/DrugCategoryForm';\nimport { addDrugCategoryAPI, deleteDrugCategoryAPI, getDrugCategoryAPI, updateDrugCategoryAPI } from 'services/admin/drug-category.service';\nimport { formActions } from 'constant/formActions';\n\nconst DrugCategoryPage = () => {\n\n  const [modalVisible, setModalVisible] = useState(false);\n  const [categories, setCategories] = useState([]);\n  const [fetchingCategories, setFetchingCategories] = useState(false);\n  const [modalLoading, setModalLoading] = useState(false);\n  const [action, setAction] = useState(formActions.CREATE);\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [drugCategoryForm] = Form.useForm();\n\n  const tableColumns = [\n    {\n      title: '#',\n      key: '#',\n      render: (text, record, index) => index + 1\n    },\n    {\n      title: 'Tên',\n      key: 'name',\n      dataIndex: 'name'\n    },\n    {\n      title: 'Hành động',\n      key: 'action',\n      render: (text, record, index) => (\n        <Space size={10}>\n          <Button icon={<EditOutlined />} onClick={() => handleEditClick(record)}></Button>\n          <Popconfirm\n            onConfirm={() => handleDelete(record)} title=\"Bạn có chắc muốn xóa không?\"\n            okText=\"Xóa\"\n            okType=\"danger\"\n            cancelText=\"Hủy bỏ\">\n            <Button icon={<DeleteOutlined />}></Button>\n          </Popconfirm>\n        </Space>\n      )\n    }\n  ]\n\n  function handleOpenModal() {\n    setAction(formActions.CREATE);\n    setModalVisible(true);\n  }\n\n  function handleCloseModal() {\n    setModalVisible(false);\n  }\n\n  async function getDrugCategories() {\n    try {\n      setFetchingCategories(true);\n      const response = await getDrugCategoryAPI();\n      setCategories(response.data);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setFetchingCategories(false);\n    }\n  }\n\n  async function handleFormSubmit() {\n    try {\n      setModalLoading(true);\n      const values = await drugCategoryForm.validateFields();\n      const name = values.name;\n      const index = name.indexOf(\". \");\n      let cut = name.substr(index > -1 ? index + 2 : 0);\n      const indexOfNhom = cut.indexOf(\"Nhóm\");\n      if (indexOfNhom === -1) {\n        cut = \"Nhóm \" + cut;\n      }\n      const convertedStr = cut.charAt(0).toUpperCase() + cut.substr(1).toLowerCase();\n      if (action === formActions.CREATE) {\n        await addDrugCategoryAPI(convertedStr);\n      }\n\n      if (action === formActions.UPDATE) {\n        await updateDrugCategoryAPI(selectedCategory.id, convertedStr);\n      }\n\n      getDrugCategories();\n\n      setModalVisible(false);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setModalLoading(false);\n    }\n  }\n\n  function handleEditClick(category) {\n    setAction(formActions.UPDATE);\n    setSelectedCategory(category);\n    setModalVisible(true);\n  }\n\n  async function handleDelete(unit) {\n    try {\n      await deleteDrugCategoryAPI(unit.id);\n      getDrugCategories();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  function afterClose() {\n    drugCategoryForm.resetFields();\n    setSelectedCategory(null);\n  }\n\n  useEffect(() => {\n    getDrugCategories();\n  }, []);\n\n  return (\n    <>\n      <Row justify=\"space-between\">\n        <Col><h1 className=\"text-xl\">Quản lý nhóm thuốc</h1></Col>\n        <Col>\n          <Button type=\"primary\" icon={<PlusOutlined />} onClick={handleOpenModal}>Tạo mới</Button>\n        </Col>\n      </Row>\n      <Table\n        rowKey=\"id\"\n        columns={tableColumns}\n        dataSource={categories}\n        pagination={false}\n        loading={fetchingCategories} />\n      <Modal\n        visible={modalVisible}\n        title={action === formActions.CREATE ? 'Thêm nhóm thuốc' : 'Cập nhật nhóm thuốc'}\n        onCancel={handleCloseModal}\n        confirmLoading={modalLoading}\n        destroyOnClose={true}\n        afterClose={afterClose}\n        onOk={handleFormSubmit}>\n        <DrugCategoryForm onFinish={handleFormSubmit} form={drugCategoryForm} defaultCategory={selectedCategory} />\n      </Modal>\n    </>\n  )\n}\n\nexport default DrugCategoryPage;","import React from 'react';\nimport { Form, Input } from 'antd';\n\nconst DrugUnitForm = props => {\n  const { form, onFinish, defaultUnit } = props;\n\n  return (\n    <Form\n      layout=\"vertical\"\n      form={form}\n      onFinish={onFinish}>\n      <Form.Item label=\"Đơn vị tính\" name=\"name\" initialValue={defaultUnit?.name}>\n        <Input autoFocus />\n      </Form.Item>\n    </Form>\n  )\n}\n\nexport default DrugUnitForm;","import axios from 'axios';\n\nimport { API_URL } from \"constant/apiUrl\";\n\nconst endpointPrefix = `${API_URL}/admin/manage-drug-unit`;\n\nexport function getDrugUnitsAPI(search = \"\") {\n  const url = `${endpointPrefix}/?search=${search}`;\n  return axios.get(url);\n}\n\nexport function addDrugUnitAPI(name) {\n  const url = `${endpointPrefix}/`;\n  return axios.post(url, { name: name });\n}\n\nexport function updateDrugUnitAPI(id, name) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.put(url, {\n    name: name\n  })\n}\n\nexport function deleteDrugUnitAPI(id) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.delete(url);\n}","import React, { useState, useEffect } from 'react';\nimport { Row, Col, Button, Modal, Table, Form, Popconfirm, Space } from 'antd';\nimport { PlusOutlined, EditOutlined, DeleteOutlined } from '@ant-design/icons';\nimport DrugUnitForm from 'forms/DrugUnitForm/DrugUnitForm';\nimport { getDrugUnitsAPI, addDrugUnitAPI, updateDrugUnitAPI, deleteDrugUnitAPI } from 'services/admin/drug-unit.service';\nimport { formActions } from 'constant/formActions';\n\nconst DrugUnitPage = () => {\n\n  const [modalVisible, setModalVisible] = useState(false);\n  const [drugUnits, setDrugUnits] = useState([]);\n  const [fetchingDrugUnits, setFetchingDrugUnits] = useState(false);\n  const [modalLoading, setModalLoading] = useState(false);\n  const [action, setAction] = useState(formActions.CREATE);\n  const [selectedUnit, setSelectedUnit] = useState(null);\n  const [drugUnitForm] = Form.useForm();\n\n  const tableColumns = [\n    {\n      title: '#',\n      key: '#',\n      render: (text, record, index) => index + 1\n    },\n    {\n      title: 'Đơn vị tính',\n      key: 'name',\n      dataIndex: 'name'\n    },\n    {\n      title: 'Hành động',\n      key: 'action',\n      render: (text, record, index) => (\n        <Space size={10}>\n          <Button icon={<EditOutlined />} onClick={() => handleEditClick(record)}></Button>\n          <Popconfirm\n            onConfirm={() => handleDelete(record)} title=\"Bạn có chắc muốn xóa không?\"\n            okText=\"Xóa\"\n            okType=\"danger\"\n            cancelText=\"Hủy bỏ\">\n            <Button icon={<DeleteOutlined />}></Button>\n          </Popconfirm>\n        </Space>\n      )\n    }\n  ]\n\n  function handleOpenModal() {\n    setAction(formActions.CREATE);\n    setModalVisible(true);\n  }\n\n  function handleCloseModal() {\n    setModalVisible(false);\n  }\n\n  async function getDrugUnits() {\n    try {\n      setFetchingDrugUnits(true);\n      const response = await getDrugUnitsAPI();\n      setDrugUnits(response.data);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setFetchingDrugUnits(false);\n    }\n  }\n\n  async function handleFormSubmit() {\n    try {\n      setModalLoading(true);\n      const values = await drugUnitForm.validateFields();\n      if (action === formActions.CREATE) {\n        await addDrugUnitAPI(values.name);\n      }\n\n      if (action === formActions.UPDATE) {\n        await updateDrugUnitAPI(selectedUnit.id, values.name);\n      }\n\n      getDrugUnits();\n\n      setModalVisible(false);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setModalLoading(false);\n    }\n  }\n\n  function handleEditClick(unit) {\n    setAction(formActions.UPDATE);\n    setSelectedUnit(unit);\n    setModalVisible(true);\n  }\n\n  async function handleDelete(unit) {\n    try {\n      await deleteDrugUnitAPI(unit.id);\n      getDrugUnits();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  function afterClose() {\n    drugUnitForm.resetFields();\n    setSelectedUnit(null);\n  }\n\n  useEffect(() => {\n    getDrugUnits();\n  }, []);\n\n  return (\n    <>\n      <Row justify=\"space-between\">\n        <Col><h1 className=\"text-xl\">Quản lý đơn vị tính</h1></Col>\n        <Col>\n          <Button type=\"primary\" icon={<PlusOutlined />} onClick={handleOpenModal}>Tạo mới</Button>\n        </Col>\n      </Row>\n      <Table\n        rowKey=\"id\"\n        columns={tableColumns}\n        dataSource={drugUnits}\n        loading={fetchingDrugUnits}\n        pagination={false} />\n      <Modal\n        visible={modalVisible}\n        title={action === formActions.CREATE ? 'Thêm đơn vị tính' : 'Cập nhật đơn vị tính'}\n        onCancel={handleCloseModal}\n        confirmLoading={modalLoading}\n        destroyOnClose={true}\n        afterClose={afterClose}\n        onOk={handleFormSubmit}>\n        <DrugUnitForm onFinish={handleFormSubmit} form={drugUnitForm} defaultUnit={selectedUnit} />\n      </Modal>\n    </>\n  )\n}\n\nexport default DrugUnitPage;","import React from 'react';\nimport { Form, Input } from 'antd';\n\nconst DrugRouteForm = props => {\n  const { form, onFinish, defaultRoute } = props;\n\n  return (\n    <Form\n      layout=\"vertical\"\n      form={form}\n      onFinish={onFinish}>\n      <Form.Item label=\"Đường dùng thuốc\" name=\"name\" initialValue={defaultRoute?.name}>\n        <Input autoFocus />\n      </Form.Item>\n    </Form>\n  )\n}\n\nexport default DrugRouteForm;","import axios from 'axios';\n\nimport { API_URL } from \"constant/apiUrl\";\n\nconst endpointPrefix = `${API_URL}/admin/manage-drug-route`;\n\nexport function getDrugRouteAPI(search = \"\") {\n  const url = `${endpointPrefix}/?search=${search}`;\n  return axios.get(url);\n}\n\nexport function addDrugRouteAPI(name) {\n  const url = `${endpointPrefix}/`;\n  return axios.post(url, { name: name });\n}\n\nexport function updateDrugRouteAPI(id, name) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.put(url, {\n    name: name\n  })\n}\n\nexport function deleteDrugRouteAPI(id) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.delete(url);\n}","import React, { useState, useEffect } from 'react';\nimport { Row, Col, Button, Modal, Table, Form, Popconfirm, Space } from 'antd';\nimport { PlusOutlined, EditOutlined, DeleteOutlined } from '@ant-design/icons';\nimport DrugRouteForm from 'forms/DrugRouteForm/DrugRouteForm';\nimport { addDrugRouteAPI, deleteDrugRouteAPI, getDrugRouteAPI, updateDrugRouteAPI } from 'services/admin/drug-route.service';\nimport { formActions } from 'constant/formActions';\n\nconst DrugRoutePage = () => {\n\n  const [modalVisible, setModalVisible] = useState(false);\n  const [routes, setRoutes] = useState([]);\n  const [fetchingRoutes, setFetchingRoutes] = useState(false);\n  const [modalLoading, setModalLoading] = useState(false);\n  const [action, setAction] = useState(formActions.CREATE);\n  const [selectedRoute, setSelectedRoute] = useState(null);\n  const [drugRouteForm] = Form.useForm();\n\n  const tableColumns = [\n    {\n      title: '#',\n      key: '#',\n      render: (text, record, index) => index + 1\n    },\n    {\n      title: 'Tên',\n      key: 'name',\n      dataIndex: 'name'\n    },\n    {\n      title: 'Hành động',\n      key: 'action',\n      render: (text, record, index) => (\n        <Space size={10}>\n          <Button icon={<EditOutlined />} onClick={() => handleEditClick(record)}></Button>\n          <Popconfirm\n            onConfirm={() => handleDelete(record)} title=\"Bạn có chắc muốn xóa không?\"\n            okText=\"Xóa\"\n            okType=\"danger\"\n            cancelText=\"Hủy bỏ\">\n            <Button icon={<DeleteOutlined />}></Button>\n          </Popconfirm>\n        </Space>\n      )\n    }\n  ]\n\n  function handleOpenModal() {\n    setAction(formActions.CREATE);\n    setModalVisible(true);\n  }\n\n  function handleCloseModal() {\n    setModalVisible(false);\n  }\n\n  async function getDrugRoutes() {\n    try {\n      setFetchingRoutes(true);\n      const response = await getDrugRouteAPI();\n      setRoutes(response.data);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setFetchingRoutes(false);\n    }\n  }\n\n  async function handleFormSubmit() {\n    try {\n      setModalLoading(true);\n      const values = await drugRouteForm.validateFields();\n      if (action === formActions.CREATE) {\n        await addDrugRouteAPI(values.name);\n      }\n\n      if (action === formActions.UPDATE) {\n        await updateDrugRouteAPI(selectedRoute.id, values.name);\n      }\n\n      getDrugRoutes();\n\n      setModalVisible(false);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setModalLoading(false);\n    }\n  }\n\n  function handleEditClick(route) {\n    setAction(formActions.UPDATE);\n    setSelectedRoute(route);\n    setModalVisible(true);\n  }\n\n  async function handleDelete(unit) {\n    try {\n      await deleteDrugRouteAPI(unit.id);\n      getDrugRoutes();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  function afterClose() {\n    drugRouteForm.resetFields();\n    setSelectedRoute(null);\n  }\n\n  useEffect(() => {\n    getDrugRoutes();\n  }, []);\n\n  return (\n    <>\n      <Row justify=\"space-between\">\n        <Col><h1 className=\"text-xl\">Quản lý đường dùng thuốc</h1></Col>\n        <Col>\n          <Button type=\"primary\" icon={<PlusOutlined />} onClick={handleOpenModal}>Tạo mới</Button>\n        </Col>\n      </Row>\n      <Table\n        rowKey=\"id\"\n        columns={tableColumns}\n        dataSource={routes}\n        pagination={false}\n        loading={fetchingRoutes} />\n      <Modal\n        visible={modalVisible}\n        title={action === formActions.CREATE ? 'Thêm đường dùng thuốc' : 'Cập nhật đường dùng thuốc'}\n        onCancel={handleCloseModal}\n        confirmLoading={modalLoading}\n        destroyOnClose={true}\n        afterClose={afterClose}\n        onOk={handleFormSubmit}>\n        <DrugRouteForm onFinish={handleFormSubmit} form={drugRouteForm} defaultRoute={selectedRoute} />\n      </Modal>\n    </>\n  )\n}\n\nexport default DrugRoutePage;","export function getQueryString(queryObj) {\n  if (!queryObj) return \"\";\n  return Object.keys(queryObj).map(key => `${key}=${queryObj[key]}`).join('&');\n}","import axios from 'axios';\nimport { API_URL } from 'constant/apiUrl';\nimport { getQueryString } from 'utils/string';\n\nconst endpointPrefix = `${API_URL}/admin/manage-drug`;\n\nexport function getDrugsAPI(params) {\n  const url = `${endpointPrefix}/`;\n\n  if (params) {\n    return axios.get(`${url}?${getQueryString(params)}`);\n  }\n  return axios.get(url);\n}\n\nexport function getDrugDetailsAPI(id) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.get(url);\n}\n\nexport function addDrugAPI(body) {\n  const url = `${endpointPrefix}/`;\n  return axios.post(url, body);\n}\n\nexport function updateDrugAPI(id, body) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.put(url, body);\n}\n\nexport function deleteDrugAPI(id) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.delete(url);\n}","import axios from 'axios';\n\nimport { API_URL } from \"constant/apiUrl\";\n\nconst endpointPrefix = `${API_URL}/admin/manage-drug-dosage-form`;\n\nexport function getDrugDosageFormAPI(search = \"\") {\n  const url = `${endpointPrefix}/?search=${search}`;\n  return axios.get(url);\n}\n\nexport function addDrugDosageFormAPI(name) {\n  const url = `${endpointPrefix}/`;\n  return axios.post(url, { name: name });\n}\n\nexport function updateDrugDosageFormAPI(id, name) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.put(url, {\n    name: name\n  })\n}\n\nexport function deleteDrugDosageFormAPI(id) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.delete(url);\n}","import React, { useState, useEffect } from 'react';\nimport { Form, Input, Select, Spin } from 'antd';\nimport { getDrugCategoryAPI } from 'services/admin/drug-category.service';\nimport { getDrugUnitsAPI } from 'services/admin/drug-unit.service';\nimport { getDrugDetailsAPI } from 'services/admin/drug.service';\nimport { getDrugRouteAPI } from 'services/admin/drug-route.service';\nimport { getDrugDosageFormAPI } from 'services/admin/drug-dosage-form.service';\n\nconst DrugForm = props => {\n  const { form, onFinish, defaultDrug } = props;\n\n  const [categories, setCategories] = useState([]);\n  const [units, setUnits] = useState([]);\n  const [routes, setRoutes] = useState([]);\n  const [forms, setForms] = useState([]);\n  const [drugDetail, setDrugDetail] = useState(null);\n\n  const [catLoading, setCatLoading] = useState(false);\n  const [unitLoading, setUnitLoading] = useState(false);\n  const [routeLoading, setRouteLoading] = useState(false);\n  const [formLoading, setFormLoading] = useState(false);\n  const [detailLoading, setDetailLoading] = useState(false);\n\n  async function getDrugCategories() {\n    try {\n      setCatLoading(true);\n      const catResponse = await getDrugCategoryAPI();\n      setCategories(catResponse.data);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setCatLoading(false);\n    }\n  }\n\n  async function getDrugUnits() {\n    try {\n      setUnitLoading(true);\n      const unitResponse = await getDrugUnitsAPI();\n      setUnits(unitResponse.data);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setUnitLoading(false);\n    }\n  }\n\n  async function getDrugRoutes() {\n    try {\n      setRouteLoading(true);\n      const routeResponse = await getDrugRouteAPI();\n      setRoutes(routeResponse.data);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setRouteLoading(false);\n    }\n  }\n\n  async function getDrugDosageForms() {\n    try {\n      setFormLoading(true);\n      const formResponse = await getDrugDosageFormAPI();\n      setForms(formResponse.data);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setFormLoading(false);\n    }\n  }\n\n\n\n  async function getDrugDetail(id) {\n    try {\n      setDetailLoading(true);\n      const detailResponse = await getDrugDetailsAPI(id);\n      const drugDetail = detailResponse.data;\n      setDrugDetail(drugDetail);\n      setCategories(prevCats => {\n        const index = prevCats.findIndex(cat => cat.id === defaultDrug.drug_category.id);\n        if (index > -1) {\n          prevCats[index] = drugDetail.drug_category;\n          return prevCats;\n        } else {\n          return [...[drugDetail.drug_category], ...prevCats];\n        }\n      });\n      setUnits(prevUnits => {\n        const index = prevUnits.findIndex(u => u.id === defaultDrug.drug_unit.id);\n        if (index > -1) {\n          prevUnits[index] = drugDetail.drug_unit;\n          return prevUnits;\n        } else {\n          return [...[drugDetail.drug_unit], ...prevUnits];\n        }\n      });\n      setRoutes(prevRoutes => {\n        const index = prevRoutes.findIndex(r => r.id === defaultDrug.drug_route.id);\n        if (index > -1) {\n          prevRoutes[index] = drugDetail.drug_route;\n          return prevRoutes;\n        } else {\n          return [...[drugDetail.drug_route], ...prevRoutes];\n        }\n      });\n      setForms(prevForms => {\n        const index = prevForms.findIndex(f => f.id === defaultDrug.drug_dosage_form.id);\n        if (index > -1) {\n          prevForms[index] = drugDetail.drug_dosage_form;\n          return prevForms;\n        } else {\n          return [...[drugDetail.drug_dosage_form], ...prevForms];\n        }\n      });\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setDetailLoading(false);\n    }\n  }\n\n  async function getData() {\n    if (defaultDrug?.id) {\n      await Promise.all([\n        getDrugDetail(defaultDrug.id),\n        getDrugCategories(),\n        getDrugUnits(),\n        getDrugRoutes(),\n        getDrugDosageForms()\n      ]);\n\n    } else {\n      await Promise.all([\n        getDrugCategories(),\n        getDrugUnits(),\n        getDrugRoutes(),\n        getDrugDosageForms()\n      ])\n    }\n  }\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  useEffect(() => {\n    if (drugDetail) {\n      form.setFieldsValue({\n        code: drugDetail.code,\n        name: drugDetail.name,\n        price: drugDetail.price || 0,\n        drug_category: drugDetail.drug_category.id,\n        drug_unit: drugDetail.drug_unit.id,\n        drug_dosage_form: drugDetail.drug_dosage_form.id,\n        drug_route: drugDetail.drug_route.id,\n        strength: drugDetail.strength\n      });\n    }\n  }, [drugDetail, defaultDrug, form]);\n\n  return (\n    <Spin spinning={detailLoading}>\n      <Form\n        layout=\"vertical\"\n        form={form}\n        onFinish={onFinish}>\n        <Form.Item label=\"Mã thuốc\" name=\"code\" initialValue={drugDetail?.code}>\n          <Input />\n        </Form.Item>\n\n        <Form.Item label=\"Tên thuốc\" name=\"name\" initialValue={drugDetail?.name}>\n          <Input />\n        </Form.Item>\n\n        <Form.Item label=\"Giá\" name=\"price\" initialValue={0} hidden>\n          <Input type=\"number\" suffix=\"VNĐ\" value={0} />\n        </Form.Item>\n\n        <Form.Item label=\"Nhóm thuốc\" name=\"drug_category\" initialValue={drugDetail?.drug_category.id}>\n          <Select loading={catLoading}>\n            {\n              categories.map(cat => (\n                <Select.Option key={cat.id} value={cat.id}>{cat.name}</Select.Option>\n              ))\n            }\n          </Select>\n        </Form.Item>\n\n        <Form.Item label=\"Đơn vị tính\" name=\"drug_unit\" initialValue={drugDetail?.drug_unit.id}>\n          <Select loading={unitLoading}>\n            {\n              units.map(cat => (\n                <Select.Option key={cat.id} value={cat.id}>{cat.name}</Select.Option>\n              ))\n            }\n          </Select>\n        </Form.Item>\n\n        <Form.Item label=\"Đường dùng\" name=\"drug_route\" initialValue={drugDetail?.drug_route.id}>\n          <Select loading={routeLoading}>\n            {\n              routes.map(route => (\n                <Select.Option key={route.id} value={route.id}>{route.name}</Select.Option>\n              ))\n            }\n          </Select>\n        </Form.Item>\n        <Form.Item label=\"Dạng bào chế\" name=\"drug_dosage_form\" initialValue={drugDetail?.drug_dosage_form.id}>\n          <Select loading={formLoading}>\n            {\n              forms.map(f => (\n                <Select.Option key={f.id} value={f.id}>{f.name}</Select.Option>\n              ))\n            }\n          </Select>\n        </Form.Item>\n        <Form.Item label=\"Hàm lượng/nồng độ\" name=\"strength\" initialValue={drugDetail?.strength}>\n          <Input />\n        </Form.Item>\n      </Form>\n    </Spin>\n  )\n}\n\nexport default DrugForm;","import React, { useState, useEffect } from 'react';\nimport { Row, Col, Button, Modal, Table, Form, Popconfirm, Space } from 'antd';\nimport { PlusOutlined, EditOutlined, DeleteOutlined } from '@ant-design/icons';\nimport DrugForm from 'forms/DrugForm/DrugForm';\nimport { getDrugsAPI, addDrugAPI, updateDrugAPI, deleteDrugAPI } from 'services/admin/drug.service';\nimport { formActions } from 'constant/formActions';\nimport NumberFormat from 'react-number-format';\n\nconst DrugPage = () => {\n\n  const [modalVisible, setModalVisible] = useState(false);\n  const [drugs, setDrugs] = useState();\n  const [fetchingDrugs, setFetchingDrugs] = useState(false);\n  const [modalLoading, setModalLoading] = useState(false);\n  const [action, setAction] = useState(formActions.CREATE);\n  const [selectedDrug, setSelectedDrug] = useState(null);\n  const [drugForm] = Form.useForm();\n\n  const tableColumns = [\n    {\n      title: '#',\n      key: '#',\n      render: (text, record, index) => index + 1\n    },\n    {\n      title: 'Mã thuốc',\n      key: 'code',\n      dataIndex: 'code'\n    },\n    {\n      title: 'Tên thuốc',\n      key: 'name',\n      dataIndex: 'name'\n    },\n    {\n      title: 'Hàm lượng/nồng độ',\n      key: 'strength',\n      dataIndex: 'strength'\n    },\n    {\n      title: 'Hành động',\n      key: 'action',\n      render: (text, record, index) => (\n        <Space size={10}>\n          <Button icon={<EditOutlined />} onClick={() => handleEditClick(record)}></Button>\n          <Popconfirm\n            onConfirm={() => handleDelete(record)} title=\"Bạn có chắc muốn xóa không?\"\n            okText=\"Xóa\"\n            okType=\"danger\"\n            cancelText=\"Hủy bỏ\">\n            <Button icon={<DeleteOutlined />}></Button>\n          </Popconfirm>\n        </Space>\n      )\n    }\n  ]\n\n  function handleOpenModal() {\n    setAction(formActions.CREATE);\n    setModalVisible(true);\n  }\n\n  function handleCloseModal() {\n    setModalVisible(false);\n  }\n\n  async function getDrugs() {\n    try {\n      setFetchingDrugs(true);\n      const response = await getDrugsAPI();\n      setDrugs(response.data.results);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setFetchingDrugs(false);\n    }\n  }\n\n  async function handleFormSubmit() {\n    try {\n      setModalLoading(true);\n      const values = await drugForm.validateFields();\n      console.log(values);\n      const data = {\n        code: values.code,\n        name: values.name,\n        price: values.price,\n        drug_category: values.drug_category,\n        drug_unit: values.drug_unit,\n        drug_route: values.drug_route,\n        drug_dosage_form: values.drug_dosage_form,\n        strength: values.strength\n      }\n      if (action === formActions.CREATE) {\n        await addDrugAPI(values);\n      }\n\n      if (action === formActions.UPDATE) {\n        await updateDrugAPI(selectedDrug.id, values);\n      }\n\n      getDrugs();\n\n      setModalVisible(false);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setModalLoading(false);\n    }\n  }\n\n  function handleEditClick(drug) {\n    setAction(formActions.UPDATE);\n    setSelectedDrug(drug);\n    setModalVisible(true);\n  }\n\n  async function handleDelete(drug) {\n    try {\n      await deleteDrugAPI(drug.id);\n      getDrugs();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  function afterClose() {\n    drugForm.resetFields();\n    setSelectedDrug(null);\n  }\n\n  useEffect(() => {\n    getDrugs();\n  }, []);\n\n  return (\n    <>\n      <Row justify=\"space-between\">\n        <Col><h1 className=\"text-xl\">Quản lý thuốc</h1></Col>\n        <Col>\n          <Button type=\"primary\" icon={<PlusOutlined />} onClick={handleOpenModal}>Tạo mới</Button>\n        </Col>\n      </Row>\n      <Table\n        rowKey=\"id\"\n        columns={tableColumns}\n        dataSource={drugs}\n        loading={fetchingDrugs}\n        pagination={false} />\n      <Modal\n        visible={modalVisible}\n        title={action === formActions.CREATE ? 'Thêm thuốc' : 'Cập nhật thuốc'}\n        onCancel={handleCloseModal}\n        confirmLoading={modalLoading}\n        destroyOnClose={true}\n        afterClose={afterClose}\n        onOk={handleFormSubmit}>\n        <DrugForm onFinish={handleFormSubmit} form={drugForm} defaultDrug={selectedDrug} />\n      </Modal>\n    </>\n  )\n}\n\nexport default DrugPage;","import React from 'react';\nimport { Form, Input } from 'antd';\n\nconst DrugInstructionForm = props => {\n  const { form, onFinish, defaultInstruction } = props;\n\n  return (\n    <Form\n      layout=\"vertical\"\n      form={form}\n      onFinish={onFinish}>\n      <Form.Item label=\"Hướng dẫn sử dụng\" name=\"instruction\" initialValue={defaultInstruction?.instruction}>\n        <Input autoFocus />\n      </Form.Item>\n    </Form>\n  )\n}\n\nexport default DrugInstructionForm;","import axios from 'axios';\n\nimport { API_URL } from \"constant/apiUrl\";\n\nconst endpointPrefix = `${API_URL}/admin/manage-drug-instruction`;\n\nexport function getDrugInstructionsAPI() {\n  const url = `${endpointPrefix}/`;\n  return axios.get(url);\n}\n\nexport function addDrugInstructionAPI(instruction) {\n  const url = `${endpointPrefix}/`;\n  return axios.post(url, { instruction: instruction });\n}\n\nexport function updateDrugInstructionAPI(id, instruction) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.put(url, {\n    instruction: instruction\n  })\n}\n\nexport function deleteDrugInstructionAPI(id) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.delete(url);\n}","import React, { useState, useEffect } from 'react';\nimport { Row, Col, Button, Modal, Table, Form, Popconfirm, Space } from 'antd';\nimport { PlusOutlined, EditOutlined, DeleteOutlined } from '@ant-design/icons';\nimport DrugInstructionForm from 'forms/DrugInstructionForm/DrugInstructionForm';\nimport { getDrugInstructionsAPI, addDrugInstructionAPI, updateDrugInstructionAPI, deleteDrugInstructionAPI } from 'services/admin/drug-instruction.service';\nimport { formActions } from 'constant/formActions';\n\nconst DrugInstructionPage = () => {\n\n  const [modalVisible, setModalVisible] = useState(false);\n  const [drugInstructions, setDrugInstructions] = useState([]);\n  const [fetchingDrugInstructions, setFetchingDrugInstructions] = useState(false);\n  const [modalLoading, setModalLoading] = useState(false);\n  const [action, setAction] = useState(formActions.CREATE);\n  const [selectedInstruction, setSelectedInstruction] = useState(null);\n  const [drugInstructionForm] = Form.useForm();\n\n  const tableColumns = [\n    {\n      title: '#',\n      key: '#',\n      render: (text, record, index) => index + 1\n    },\n    {\n      title: 'Hướng dẫn sử dụng',\n      key: 'instruction',\n      dataIndex: 'instruction'\n    },\n    {\n      title: 'Hành động',\n      key: 'action',\n      render: (text, record, index) => (\n        <Space size={10}>\n          <Button icon={<EditOutlined />} onClick={() => handleEditClick(record)}></Button>\n          <Popconfirm\n            onConfirm={() => handleDelete(record)} title=\"Bạn có chắc muốn xóa không?\"\n            okText=\"Xóa\"\n            okType=\"danger\"\n            cancelText=\"Hủy bỏ\">\n            <Button icon={<DeleteOutlined />}></Button>\n          </Popconfirm>\n        </Space>\n      )\n    }\n  ]\n\n  function handleOpenModal() {\n    setAction(formActions.CREATE);\n    setModalVisible(true);\n  }\n\n  function handleCloseModal() {\n    setModalVisible(false);\n  }\n\n  async function getDrugInstructions() {\n    try {\n      setFetchingDrugInstructions(true);\n      const response = await getDrugInstructionsAPI();\n      setDrugInstructions(response.data);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setFetchingDrugInstructions(false);\n    }\n  }\n\n  async function handleFormSubmit() {\n    try {\n      setModalLoading(true);\n      const values = await drugInstructionForm.validateFields();\n      if (action === formActions.CREATE) {\n        await addDrugInstructionAPI(values.instruction);\n      }\n\n      if (action === formActions.UPDATE) {\n        await updateDrugInstructionAPI(selectedInstruction.id, values.instruction);\n      }\n\n      getDrugInstructions();\n\n      setModalVisible(false);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setModalLoading(false);\n    }\n  }\n\n  function handleEditClick(ins) {\n    setAction(formActions.UPDATE);\n    setSelectedInstruction(ins);\n    setModalVisible(true);\n  }\n\n  async function handleDelete(unit) {\n    try {\n      await deleteDrugInstructionAPI(unit.id);\n      getDrugInstructions();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  function afterClose() {\n    drugInstructionForm.resetFields();\n    setSelectedInstruction(null);\n  }\n\n  useEffect(() => {\n    getDrugInstructions();\n  }, []);\n\n  return (\n    <>\n      <Row justify=\"space-between\">\n        <Col><h1 className=\"text-xl\">Quản lý hướng dẫn sử dụng</h1></Col>\n        <Col>\n          <Button type=\"primary\" icon={<PlusOutlined />} onClick={handleOpenModal}>Tạo mới</Button>\n        </Col>\n      </Row>\n      <Table\n        rowKey=\"id\"\n        columns={tableColumns}\n        dataSource={drugInstructions}\n        loading={fetchingDrugInstructions}\n        pagination={false} />\n      <Modal\n        visible={modalVisible}\n        title={action === formActions.CREATE ? 'Thêm hướng dẫn sử dụng' : 'Cập nhật hướng dẫn sử dụng'}\n        onCancel={handleCloseModal}\n        confirmLoading={modalLoading}\n        destroyOnClose={true}\n        afterClose={afterClose}\n        onOk={handleFormSubmit}>\n        <DrugInstructionForm onFinish={handleFormSubmit} form={drugInstructionForm} defaultInstruction={selectedInstruction} />\n      </Modal>\n    </>\n  )\n}\n\nexport default DrugInstructionPage;","import React from 'react';\nimport { Form, Input } from 'antd';\n\nconst DiseaseCategoryForm = props => {\n  const { form, onFinish, defaultCategory } = props;\n\n  return (\n    <Form\n      layout=\"vertical\"\n      form={form}\n      onFinish={onFinish}>\n      <Form.Item label=\"Loại bệnh\" name=\"name\" initialValue={defaultCategory?.name}>\n        <Input autoFocus />\n      </Form.Item>\n    </Form>\n  )\n}\n\nexport default DiseaseCategoryForm;","import axios from 'axios';\n\nimport { API_URL } from \"constant/apiUrl\";\n\nconst endpointPrefix = `${API_URL}/admin/manage-disease-category`;\n\nexport function getDiseaseCategoryAPI(search = \"\") {\n  const url = `${endpointPrefix}/?search=${search}`;\n  return axios.get(url);\n}\n\nexport function addDiseaseCategoryAPI(name) {\n  const url = `${endpointPrefix}/`;\n  return axios.post(url, { name: name });\n}\n\nexport function updateDiseaseCategoryAPI(id, name) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.put(url, {\n    name: name\n  })\n}\n\nexport function deleteDiseaseCategoryAPI(id) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.delete(url);\n}","import React, { useState, useEffect } from 'react';\nimport { Row, Col, Button, Modal, Table, Form, Popconfirm, Space } from 'antd';\nimport { PlusOutlined, EditOutlined, DeleteOutlined } from '@ant-design/icons';\nimport DiseaseCategoryForm from 'forms/DiseaseCategoryForm/DiseaseCategoryForm';\nimport { addDiseaseCategoryAPI, deleteDiseaseCategoryAPI, getDiseaseCategoryAPI, updateDiseaseCategoryAPI } from 'services/admin/disease-category.service';\nimport { formActions } from 'constant/formActions';\n\nconst DiseaseCategoryPage = () => {\n\n  const [modalVisible, setModalVisible] = useState(false);\n  const [categories, setCategories] = useState([]);\n  const [fetchingCategories, setFetchingCategories] = useState(false);\n  const [modalLoading, setModalLoading] = useState(false);\n  const [action, setAction] = useState(formActions.CREATE);\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [diseaseCategoryForm] = Form.useForm();\n\n  const tableColumns = [\n    {\n      title: '#',\n      key: '#',\n      render: (text, record, index) => index + 1\n    },\n    {\n      title: 'Tên',\n      key: 'name',\n      dataIndex: 'name'\n    },\n    {\n      title: 'Hành động',\n      key: 'action',\n      render: (text, record, index) => (\n        <Space size={10}>\n          <Button icon={<EditOutlined />} onClick={() => handleEditClick(record)}></Button>\n          <Popconfirm\n            onConfirm={() => handleDelete(record)} title=\"Bạn có chắc muốn xóa không?\"\n            okText=\"Xóa\"\n            okType=\"danger\"\n            cancelText=\"Hủy bỏ\">\n            <Button icon={<DeleteOutlined />}></Button>\n          </Popconfirm>\n        </Space>\n      )\n    }\n  ]\n\n  function handleOpenModal() {\n    setAction(formActions.CREATE);\n    setModalVisible(true);\n  }\n\n  function handleCloseModal() {\n    setModalVisible(false);\n  }\n\n  async function getDiseaseCategories() {\n    try {\n      setFetchingCategories(true);\n      const response = await getDiseaseCategoryAPI();\n      setCategories(response.data);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setFetchingCategories(false);\n    }\n  }\n\n  async function handleFormSubmit() {\n    try {\n      setModalLoading(true);\n      const values = await diseaseCategoryForm.validateFields();\n      if (action === formActions.CREATE) {\n        await addDiseaseCategoryAPI(values.name);\n      }\n\n      if (action === formActions.UPDATE) {\n        await updateDiseaseCategoryAPI(selectedCategory.id, values.name);\n      }\n\n      getDiseaseCategories();\n\n      setModalVisible(false);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setModalLoading(false);\n    }\n  }\n\n  function handleEditClick(category) {\n    setAction(formActions.UPDATE);\n    setSelectedCategory(category);\n    setModalVisible(true);\n  }\n\n  async function handleDelete(unit) {\n    try {\n      await deleteDiseaseCategoryAPI(unit.id);\n      getDiseaseCategories();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  function afterClose() {\n    diseaseCategoryForm.resetFields();\n    setSelectedCategory(null);\n  }\n\n  useEffect(() => {\n    getDiseaseCategories();\n  }, []);\n\n  return (\n    <>\n      <Row justify=\"space-between\">\n        <Col><h1 className=\"text-xl\">Quản lý nhóm bệnh</h1></Col>\n        <Col>\n          <Button type=\"primary\" icon={<PlusOutlined />} onClick={handleOpenModal}>Tạo mới</Button>\n        </Col>\n      </Row>\n      <Table\n        rowKey=\"id\"\n        columns={tableColumns}\n        dataSource={categories}\n        pagination={false}\n        loading={fetchingCategories} />\n      <Modal\n        visible={modalVisible}\n        title={action === formActions.CREATE ? 'Thêm loại bệnh' : 'Cập nhật loại bệnh'}\n        onCancel={handleCloseModal}\n        confirmLoading={modalLoading}\n        destroyOnClose={true}\n        afterClose={afterClose}\n        onOk={handleFormSubmit}>\n        <DiseaseCategoryForm onFinish={handleFormSubmit} form={diseaseCategoryForm} defaultCategory={selectedCategory} />\n      </Modal>\n    </>\n  )\n}\n\nexport default DiseaseCategoryPage;","import axios from 'axios';\nimport { API_URL } from 'constant/apiUrl';\n\nconst endpointPrefix = `${API_URL}/admin/manage-disease`;\n\nexport function getDiseasesAPI() {\n  const url = `${endpointPrefix}/`;\n  return axios.get(url);\n}\n\nexport function getDiseaseDetailsAPI(id) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.get(url);\n}\n\nexport function addDiseaseAPI({ code, name, disease_category }) {\n  const url = `${endpointPrefix}/`;\n  return axios.post(url, {\n    code,\n    name,\n    disease_category\n  });\n}\n\nexport function updateDiseaseAPI(id, { code, name, disease_category }) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.put(url, {\n    code,\n    name,\n    disease_category\n  });\n}\n\nexport function deleteDiseaseAPI(id) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.delete(url);\n}","import React, { useState, useEffect } from 'react';\nimport { Form, Input, Select, Spin } from 'antd';\nimport { getDiseaseCategoryAPI } from 'services/admin/disease-category.service';\nimport { getDiseaseDetailsAPI } from 'services/admin/disease.service';\n\nconst DiseaseForm = props => {\n  const { form, onFinish, defaultDisease } = props;\n\n  const [categories, setCategories] = useState([]);\n  const [diseaseDetail, setDiseaseDetail] = useState(null);\n  const [catLoading, setCatLoading] = useState(false);\n  const [detailLoading, setDetailLoading] = useState(false);\n\n  async function getDiseaseCategories() {\n    try {\n      setCatLoading(true);\n      const catResponse = await getDiseaseCategoryAPI();\n      setCategories(catResponse.data);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setCatLoading(false);\n    }\n  }\n\n  async function getDiseaseDetail(id) {\n    try {\n      setDetailLoading(true);\n      const detailResponse = await getDiseaseDetailsAPI(id);\n      const diseaseDetail = detailResponse.data;\n      setDiseaseDetail(diseaseDetail);\n      setCategories(prevCats => {\n        const index = prevCats.findIndex(cat => cat.id === defaultDisease.disease_category);\n        if (index > -1) {\n          prevCats[index] = diseaseDetail.disease_category;\n          return prevCats;\n        } else {\n          return [...[diseaseDetail.disease_category], ...prevCats];\n        }\n      });\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setDetailLoading(false);\n    }\n  }\n\n  async function getData() {\n    if (defaultDisease?.id) {\n      await Promise.all([\n        getDiseaseDetail(defaultDisease.id),\n        getDiseaseCategories(),\n      ]);\n\n    } else {\n      await Promise.all([\n        getDiseaseCategories(),\n      ])\n    }\n\n  }\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  useEffect(() => {\n    if (diseaseDetail) {\n      form.setFieldsValue({\n        code: diseaseDetail.code,\n        name: diseaseDetail.name,\n        disease_category: diseaseDetail.disease_category.id,\n      });\n    }\n  }, [diseaseDetail, defaultDisease, form]);\n\n  return (\n    <Spin spinning={detailLoading}>\n      <Form\n        layout=\"vertical\"\n        form={form}\n        onFinish={onFinish}>\n        <Form.Item label=\"Mã bệnh\" name=\"code\" initialValue={diseaseDetail?.code}>\n          <Input />\n        </Form.Item>\n\n        <Form.Item label=\"Tên bệnh\" name=\"name\" initialValue={diseaseDetail?.name}>\n          <Input />\n        </Form.Item>\n\n        <Form.Item label=\"Loại bệnh\" name=\"disease_category\" initialValue={diseaseDetail?.disease_category.id}>\n          <Select loading={catLoading}>\n            {\n              categories.map(cat => (\n                <Select.Option key={cat.id} value={cat.id}>{cat.name}</Select.Option>\n              ))\n            }\n          </Select>\n        </Form.Item>\n      </Form>\n    </Spin>\n  )\n}\n\nexport default DiseaseForm;","import React, { useState, useEffect } from 'react';\nimport { Row, Col, Button, Modal, Table, Form, Popconfirm, Space } from 'antd';\nimport { PlusOutlined, EditOutlined, DeleteOutlined } from '@ant-design/icons';\nimport DiseaseForm from 'forms/DiseaseForm/DiseaseForm';\nimport { getDiseasesAPI, addDiseaseAPI, updateDiseaseAPI, deleteDiseaseAPI } from 'services/admin/disease.service';\nimport { formActions } from 'constant/formActions';\n\nconst DiseasePage = () => {\n\n  const [modalVisible, setModalVisible] = useState(false);\n  const [diseases, setDiseases] = useState();\n  const [fetchingDiseases, setFetchingDiseases] = useState(false);\n  const [modalLoading, setModalLoading] = useState(false);\n  const [action, setAction] = useState(formActions.CREATE);\n  const [selectedDisease, setSelectedDisease] = useState(null);\n  const [diseaseForm] = Form.useForm();\n\n  const tableColumns = [\n    {\n      title: '#',\n      key: '#',\n      render: (text, record, index) => index + 1\n    },\n    {\n      title: 'Mã bệnh',\n      key: 'code',\n      dataIndex: 'code'\n    },\n    {\n      title: 'Tên bệnh',\n      key: 'name',\n      dataIndex: 'name'\n    },\n    {\n      title: 'Hành động',\n      key: 'action',\n      render: (text, record, index) => (\n        <Space size={10}>\n          <Button icon={<EditOutlined />} onClick={() => handleEditClick(record)}></Button>\n          <Popconfirm\n            onConfirm={() => handleDelete(record)} title=\"Bạn có chắc muốn xóa không?\"\n            okText=\"Xóa\"\n            okType=\"danger\"\n            cancelText=\"Hủy bỏ\">\n            <Button icon={<DeleteOutlined />}></Button>\n          </Popconfirm>\n        </Space>\n      )\n    }\n  ]\n\n  function handleOpenModal() {\n    setAction(formActions.CREATE);\n    setModalVisible(true);\n  }\n\n  function handleCloseModal() {\n    setModalVisible(false);\n  }\n\n  async function getDiseases() {\n    try {\n      setFetchingDiseases(true);\n      const response = await getDiseasesAPI();\n      setDiseases(response.data.results);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setFetchingDiseases(false);\n    }\n  }\n\n  async function handleFormSubmit() {\n    try {\n      setModalLoading(true);\n      const values = await diseaseForm.validateFields();\n      const data = {\n        code: values.code,\n        name: values.name,\n        disease_category: values.disease_category,\n      }\n      if (action === formActions.CREATE) {\n        await addDiseaseAPI(data);\n      }\n\n      if (action === formActions.UPDATE) {\n        await updateDiseaseAPI(selectedDisease.id, data);\n      }\n\n      getDiseases();\n\n      setModalVisible(false);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setModalLoading(false);\n    }\n  }\n\n  function handleEditClick(disease) {\n    setAction(formActions.UPDATE);\n    setSelectedDisease(disease);\n    setModalVisible(true);\n  }\n\n  async function handleDelete(disease) {\n    try {\n      await deleteDiseaseAPI(disease.id);\n      getDiseases();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  function afterClose() {\n    diseaseForm.resetFields();\n    setSelectedDisease(null);\n  }\n\n  useEffect(() => {\n    getDiseases();\n  }, []);\n\n  return (\n    <>\n      <Row justify=\"space-between\">\n        <Col><h1 className=\"text-xl\">Quản lý bệnh</h1></Col>\n        <Col>\n          <Button type=\"primary\" icon={<PlusOutlined />} onClick={handleOpenModal}>Tạo mới</Button>\n        </Col>\n      </Row>\n      <Table\n        rowKey=\"id\"\n        columns={tableColumns}\n        dataSource={diseases}\n        loading={fetchingDiseases} />\n      <Modal\n        visible={modalVisible}\n        title={action === formActions.CREATE ? 'Thêm bệnh' : 'Cập nhật bệnh'}\n        onCancel={handleCloseModal}\n        confirmLoading={modalLoading}\n        destroyOnClose={true}\n        afterClose={afterClose}\n        onOk={handleFormSubmit}>\n        <DiseaseForm onFinish={handleFormSubmit} form={diseaseForm} defaultDisease={selectedDisease} />\n      </Modal>\n    </>\n  )\n}\n\nexport default DiseasePage;","import React from 'react';\n\nconst NotificationPage = () => {\n  return (\n    <div>Notification Page</div>\n  )\n}\n\nexport default NotificationPage;","import axios from 'axios';\n\nimport { API_URL } from \"constant/apiUrl\";\n\nconst endpointPrefix = `${API_URL}/user/room`;\n\nexport function getRoomAPI() {\n  const url = `${endpointPrefix}/`;\n  return axios.get(url);\n}\n\nexport function getRoomDetailsAPI(roomId) {\n  const url = `${endpointPrefix}/${roomId}/`;\n  return axios.get(url);\n}","import axios from 'axios';\n\nimport { API_URL } from \"constant/apiUrl\";\n\nconst endpointPrefix = `${API_URL}/admin/manage-room`;\n\nexport function getRoomAPI() {\n  const url = `${endpointPrefix}/`;\n  return axios.get(url);\n}\n\nexport function addRoomAPI({ number, name }) {\n  const url = `${endpointPrefix}/`;\n  return axios.post(url, { number: Number(number), name });\n}\n\nexport function updateRoomAPI(id, { name, number }) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.put(url, {\n    number: Number(number),\n    name\n  })\n}\n\nexport function deleteRoomAPI(id) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.delete(url);\n}","import axios from 'axios';\nimport { API_URL } from 'constant/apiUrl';\nimport { getQueryString } from 'utils/string';\n\nconst endpointPrefix = `${API_URL}/user/visit`;\n\nexport function getVisitDataAPI(query) {\n  const url = `${endpointPrefix}/`;\n  if (query) {\n    return axios.get(`${url}?${getQueryString(query)}`);\n  }\n  return axios.get(url);\n}\n\nexport function createVisitAPI({ patientId, roomId }) {\n  const url = `${endpointPrefix}/`;\n  return axios.post(url, {\n    room_id: roomId,\n    patient_id: patientId\n  })\n}\n\nexport function deleteVisitAPI(visitId) {\n  const url = `${endpointPrefix}/${visitId}/`;\n  return axios.delete(url);\n}","import axios from 'axios';\nimport { API_URL } from 'constant/apiUrl';\nimport { getQueryString } from 'utils/string';\n\nconst endpointPrefix = `${API_URL}/admin/manage-visit`;\n\nexport function getVisitDataAPI(query) {\n  const url = `${endpointPrefix}/`;\n  if (query) {\n    return axios.get(`${url}?${getQueryString(query)}`);\n  }\n  return axios.get(url);\n}\n\nexport function createVisitAPI({ patientId, roomId }) {\n  const url = `${endpointPrefix}/`;\n  return axios.post(url, {\n    room_id: roomId,\n    patient_id: patientId\n  })\n}","import axios from 'axios';\nimport { NODE_URL } from 'constant/apiUrl';\nimport { getQueryString } from 'utils/string';\n\nconst endpointPrefix = `${NODE_URL}/api`;\n\nexport function listEMRAPI(query) {\n  const url = `${endpointPrefix}/physician/emrs/`;\n  if (query) {\n    return axios.get(`${url}?${getQueryString(query)}`);\n  }\n\n  return axios.get(url);\n}\n\nexport function addEMRAPI(emr) {\n  const url = `${endpointPrefix}/physician/emrs/`;\n  return axios.post(url, emr);\n}\n\nexport function getEMRHistoryAPI(emrId) {\n  const url = `${endpointPrefix}/physician/emrs/${emrId}`;\n  return axios.get(url);\n}\n\nexport function updateEMRAPI(emrId, body) {\n  const url = `${endpointPrefix}/physician/emrs/${emrId}`;\n  return axios.put(url, body);\n}\n\nexport function completeEMRAPI(emrId) {\n  const url = `${endpointPrefix}/physician/emrs/${emrId}/complete`;\n  return axios.get(url);\n}","import React, { useState, useEffect } from 'react';\nimport { Row, Col, Select, Empty, Table, Button } from 'antd';\nimport { connect } from 'react-redux';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { removeDuplicates } from 'utils/array';\nimport moment from 'moment';\n\n// APIs\nimport { getRoomAPI } from 'services/user/room.service';\nimport { getRoomAPI as adminGetRoomAPI } from 'services/admin/room.service';\nimport { getVisitDataAPI } from 'services/user/visit.service';\nimport { getVisitDataAPI as adminGetVisitDataAPI } from 'services/admin/visit.service';\nimport { addEMRAPI, getEMRHistoryAPI } from 'services/user/emr.service';\n\n\nconst VisitPage = props => {\n  const user = props.user;\n  const { pathname } = useLocation();\n\n  const history = useHistory();\n  const [rooms, setRooms] = useState([]);\n  const [roomLoading, setRoomLoading] = useState(false);\n  const [visitData, setVisitData] = useState(null);\n  const [visitLoading, setVisitLoading] = useState(false);\n  const [createEMRLoading, setCreateEMRLoading] = useState([]);\n\n  const [selectedRoom, setSelectedRoom] = useState(\"\");\n\n  const visitList = visitData?.results.filter(visit => {\n    const createdAt = new Date(visit.created_at);\n    const today = new Date();\n    const isToday = createdAt.getDate() === today.getDate() &&\n      createdAt.getMonth() === today.getMonth() &&\n      createdAt.getFullYear() === today.getFullYear();\n    return (isToday && visit.room.id === selectedRoom)\n  });\n\n  const tableColumns = [\n    {\n      title: 'Số thứ tự',\n      key: '#',\n      dataIndex: 'visit_number'\n    },\n    {\n      title: 'Họ và tên',\n      key: 'fullname',\n      render: (_, record) => record.patient.first_name + \" \" + record.patient.last_name\n    },\n    {\n      title: 'Giới tính',\n      key: 'gender',\n      render: (_, record) => record.patient.gender\n    },\n    {\n      title: 'Ngày sinh',\n      key: 'DOB',\n      render: (_, record) => moment(record.patient.DOB).format('DD/MM/YYYY')\n    },\n    {\n      ken: 'action',\n      render: (_, record) => <Button onClick={() => handlePatientClick(record)} loading={createEMRLoading.includes(record.id)}>Khám bệnh</Button>\n    }\n  ]\n\n  async function getRooms() {\n    try {\n      setRoomLoading(true);\n      let roomResponse;\n      if (user.role.name === \"admin\") {\n        roomResponse = await adminGetRoomAPI();\n      } else if (user.role.name === \"physician\" || user?.role?.name === \"receptionist\") {\n        roomResponse = await getRoomAPI();\n      }\n      setRooms(roomResponse.data);\n\n      const prevSelected = localStorage.getItem(\"selectedRoom\");\n      if (prevSelected) {\n        setSelectedRoom(prevSelected);\n        getVisitData(prevSelected);\n      }\n\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setRoomLoading(false);\n    }\n  }\n\n  async function getVisitData(roomId) {\n    try {\n      let visitDataResponse;\n      setVisitLoading(true);\n      if (user.role.name === \"admin\") {\n        visitDataResponse = await adminGetVisitDataAPI({ room_id: roomId });\n      } else {\n        visitDataResponse = await getVisitDataAPI({ room_id: roomId })\n      }\n      const visitData = visitDataResponse.data;\n      setVisitData(visitData);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setVisitLoading(false);\n    }\n  }\n\n  async function getInitialData() {\n    await Promise.all([\n      getRooms(),\n    ]);\n  }\n\n  useEffect(() => {\n    if (user) {\n      getInitialData();\n    }\n  }, [user]);\n\n  useEffect(() => {\n    if (selectedRoom) {\n      localStorage.setItem(\"selectedRoom\", selectedRoom);\n    }\n  }, [selectedRoom])\n\n  async function createEmr(emr) {\n    try {\n      setCreateEMRLoading(prev => [...prev, ...[emr.visit_id]]);\n      const response = await addEMRAPI(emr);\n      return Promise.resolve(response);\n    } catch (error) {\n      console.log(error);\n      return Promise.reject(error);\n    } finally {\n      setCreateEMRLoading(prev => {\n        const cloneArr = [...prev];\n        cloneArr.splice(cloneArr.indexOf(emr.visit_id), 1);\n        return cloneArr\n      });\n    }\n  }\n\n  async function checkExistEMR(emrId) {\n    try {\n      setCreateEMRLoading(prev => [...prev, ...[emrId]]);\n      const historyResponse = await getEMRHistoryAPI(emrId);\n      const data = historyResponse.data.data;\n      const existEmr = data.find(emr => emr.id === emrId && emr.completed_at === null);\n      return !!(existEmr);\n    } catch (error) {\n\n    } finally {\n      setCreateEMRLoading(prev => {\n        const cloneArr = [...prev];\n        cloneArr.splice(cloneArr.indexOf(emrId), 1);\n        return cloneArr\n      });\n    }\n  }\n\n  async function handlePatientClick(visit) {\n    const { patient } = visit;\n    const existVisit = await checkExistEMR(visit.id);\n\n    if (!existVisit) {\n\n      const emrObj = {\n        visit_id: visit.id,\n        patient: visit.patient,\n        physician: user,\n        room: visit.room,\n        medical_record: {\n          administrative: {\n            fullname: null,\n            dayOfBirth: null,\n            gender: null,\n            job: null,\n            ethnicity: null,\n            expatriate: null,\n            address: null,\n            workplace: null,\n            object: null,\n            insurance_expirity: null,\n            insurance_number: null,\n            family_member_and_address: null,\n            phone: null,\n            checkin_at: null,\n            previous_diagnose: null,\n            come_from: null\n          },\n          present_complaint: null,\n          ask: {\n            pathological_process: null,\n            self_medical_history: null,\n            family_medical_history: null\n          },\n          examination: {\n            heartbeat: null,\n            temperature: null,\n            blood_pressure: null,\n            breathing: null,\n            weight: null,\n            body: null,\n            partials: null,\n            subclinical_summary: null,\n            initial_diagnose: null,\n            drugs: null,\n            processed: null,\n            diagnose: null,\n            from_date: null,\n            to_date: null,\n          },\n          summary: {\n            pathological_process_and_clinical_course: null,\n            valuable_subclinical_summary: null,\n            primary_disease: null,\n            sub_disease: null,\n            treatment_method: null,\n            patient_status: null,\n            direction_of_treatment: null,\n            services: null,\n            attachments: []\n          }\n        }\n      }\n\n      try {\n          await createEmr(emrObj);\n          history.push(`${pathname}/${visit.id}`);\n        } catch(error) {\n          console.log(error);\n        }\n      } else {\n        history.push(`${pathname}/${visit.id}`);\n    }\n  }\n\n  function handleChangeRoom(value) {\n    setSelectedRoom(value);\n    getVisitData(value);\n  }\n\n  return (\n    <>\n      <Row className=\"flex-no-wrap\">\n        <Col style={{ width: 350 }} className=\"flex-shrink-0\">\n          <div className=\"mb-5\">\n            <h3 className=\"text-xl\">Khoa</h3>\n            <Select loading={roomLoading} style={{ width: '100%' }} value={selectedRoom} onChange={handleChangeRoom}>\n              {\n                rooms.map(room => (\n                  <Select.Option key={room.id} value={room.id} onChange={handleChangeRoom}>{room.name}</Select.Option>\n                ))\n              }\n            </Select>\n          </div>\n        </Col>\n        <Col flex=\"0 0 45px\"></Col>\n        <Col flex={1}>\n          <h3 className=\"text-xl\">Bệnh nhân đang chờ khám</h3>\n          <Table dataSource={visitList} columns={tableColumns} rowKey=\"id\" loading={visitLoading} pagination={false} />\n        </Col>\n      </Row>\n    </>\n  )\n}\n\nconst mapStateToProps = state => ({\n  user: state.userState.user\n})\n\nexport default connect(mapStateToProps)(VisitPage);","import axios from 'axios';\nimport { API_URL } from 'constant/apiUrl';\n\nconst endpointPrefix = `${API_URL}/user/patient`;\n\nexport function listAllPatientsAPI(search = \"\") {\n  const url = `${endpointPrefix}/?search=${search}`;\n  return axios.get(url);\n}\n\nexport function getPatientDetailsAPI(patientId) {\n  const url = `${endpointPrefix}/${patientId}/`;\n  return axios.get(url);\n}\n\nexport function createPatientAPI(body) {\n  const url = `${endpointPrefix}/`;\n  return axios.post(url, body)\n}\n\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { PageHeader, Table, Space, Button } from 'antd';\nimport { EyeOutlined } from '@ant-design/icons';\nimport { Link, useRouteMatch } from 'react-router-dom';\nimport moment from 'moment';\n\n// API\nimport { listAllPatientsAPI } from 'services/user/patient.service';\n\nconst PatientPage = props => {\n  const { user } = props;\n  const { path } = useRouteMatch();\n\n  const [patientData, setPatientData] = useState(null);\n  const [patientLoading, setPatientLoading] = useState(false);\n\n  const tableColumns = [\n    {\n      title: '#',\n      key: '#',\n      render: (text, record, index) => index + 1\n    },\n    {\n      title: 'Họ và tên',\n      key: 'fullname',\n      render: (text, record) => record.first_name + \" \" + record.last_name\n    },\n    {\n      title: 'Giới tính',\n      key: 'gender',\n      dataIndex: 'gender'\n    },\n    {\n      title: 'Ngày sinh',\n      key: 'DOB',\n      render: (text, record) => moment(record.DOB).format('DD/MM/YYYY')\n    },\n    {\n      title: 'Địa chỉ',\n      key: 'address',\n      render: (text, record) => record.address || <i className=\"text-gray-500\">Đang cập nhật...</i>\n    },\n    {\n      title: 'Hành động',\n      key: 'action',\n      render: (text, record) => (\n        <Space>\n          <Link to={`${path}/${record.id}`}>\n            <Button icon={<EyeOutlined />}>Xem chi tiết</Button>\n          </Link>\n        </Space>\n      )\n    }\n  ]\n\n  async function listAllPatient() {\n    try {\n      setPatientLoading(true);\n      const patientResults = await listAllPatientsAPI();\n      const patientData = patientResults.data;\n      setPatientData(patientData);\n    } catch (error) {\n\n    } finally {\n      setPatientLoading(false);\n    }\n  }\n\n  async function getInitialData() {\n    await Promise.all([\n      listAllPatient()\n    ])\n  }\n\n  useEffect(() => {\n    getInitialData()\n  }, []);\n\n  return (\n    <>\n      <PageHeader title=\"Bệnh nhân\" />\n      <Table columns={tableColumns} dataSource={patientData?.results} loading={patientLoading} rowKey=\"id\" />\n    </>\n  )\n}\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.userState.user\n  }\n}\n\nexport default connect(mapStateToProps)(PatientPage); ","import React from 'react';\nimport { Calendar, PageHeader, Row, Col } from 'antd';\n\nconst AppointmentPage = () => {\n  return (\n    <>\n      <h3 className=\"text-xl\">Lịch hẹn</h3>\n      <Row>\n        <Col flex=\"1\">\n          <Calendar mode=\"month\" locale=\"vi\" />\n        </Col>\n\n        <Col flex=\"0 0 300px\">\n\n        </Col>\n      </Row>\n    </>\n  )\n}\n\nexport default AppointmentPage;","import axios from 'axios';\n\nimport { API_URL } from \"constant/apiUrl\";\n\nconst endpointPrefix = `${API_URL}/admin/manage-service`;\n\nexport function getServicesAPI(search = \"\") {\n  const url = `${endpointPrefix}/?search=${search}`;\n  return axios.get(url);\n}\n\nexport function getServiceDetailsAPI(id) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.get(url);\n}\n\nexport function addServiceAPI({ name, price }) {\n  const url = `${endpointPrefix}/`;\n  return axios.post(url, { name, price: Number(price) });\n}\n\nexport function updateServiceAPI(id, { name, price }) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.put(url, {\n    name,\n    price: Number(price)\n  })\n}\n\nexport function deleteServiceAPI(id) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.delete(url);\n}","import React, { useState, useEffect } from 'react';\nimport { Form, Input, Spin } from 'antd';\nimport { getServiceDetailsAPI } from 'services/admin/medical-service.service';\n\nconst ServiceForm = props => {\n  const { form, onFinish, defaultService } = props;\n\n  const [serviceDetail, setServiceDetail] = useState(null);\n  const [detailLoading, setDetailLoading] = useState(false);\n\n  async function getServiceDetail(id) {\n    try {\n      setDetailLoading(true);\n      const detailResponse = await getServiceDetailsAPI(id);\n      const serviceDetail = detailResponse.data;\n      setServiceDetail(serviceDetail);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setDetailLoading(false);\n    }\n  }\n\n  async function getData() {\n    if (defaultService?.id) {\n      await Promise.all([\n        getServiceDetail(defaultService.id),\n      ]);\n    }\n  }\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  useEffect(() => {\n    if (serviceDetail) {\n      form.setFieldsValue({\n        name: serviceDetail.name,\n        price: serviceDetail.price,\n      });\n    }\n  }, [serviceDetail, defaultService, form]);\n\n  return (\n    <Spin spinning={detailLoading}>\n      <Form\n        layout=\"vertical\"\n        form={form}\n        onFinish={onFinish}>\n\n        <Form.Item label=\"Tên dịch vụ\" name=\"name\" initialValue={serviceDetail?.name}>\n          <Input />\n        </Form.Item>\n\n        <Form.Item label=\"Giá\" name=\"price\" initialValue={serviceDetail?.price}>\n          <Input type=\"number\" suffix=\"VNĐ\" />\n        </Form.Item>\n      </Form>\n    </Spin>\n  )\n}\n\nexport default ServiceForm;","import React, { useState, useEffect } from 'react';\nimport { Row, Col, Button, Modal, Table, Form, Popconfirm, Space } from 'antd';\nimport { PlusOutlined, EditOutlined, DeleteOutlined } from '@ant-design/icons';\nimport ServiceForm from 'forms/ServiceForm/ServiceForm';\nimport { getServicesAPI, addServiceAPI, updateServiceAPI, deleteServiceAPI } from 'services/admin/medical-service.service';\nimport { formActions } from 'constant/formActions';\nimport NumberFormat from 'react-number-format';\n\nconst ServicePage = () => {\n\n  const [modalVisible, setModalVisible] = useState(false);\n  const [services, setServices] = useState();\n  const [fetchingServices, setFetchingServices] = useState(false);\n  const [modalLoading, setModalLoading] = useState(false);\n  const [action, setAction] = useState(formActions.CREATE);\n  const [selectedService, setSelectedService] = useState(null);\n  const [serviceForm] = Form.useForm();\n\n  const tableColumns = [\n    {\n      title: '#',\n      key: '#',\n      render: (text, record, index) => index + 1\n    },\n    {\n      title: 'Tên dịch vụ',\n      key: 'name',\n      dataIndex: 'name'\n    },\n    {\n      title: 'Giá',\n      key: 'price',\n      dataIndex: 'price',\n      render: (text, record, index) => (<NumberFormat thousandSeparator=\" \" suffix=\" VNĐ\" value={text} displayType=\"text\" />)\n    },\n    {\n      title: 'Hành động',\n      key: 'action',\n      render: (text, record, index) => (\n        <Space size={10}>\n          <Button icon={<EditOutlined />} onClick={() => handleEditClick(record)}></Button>\n          <Popconfirm\n            onConfirm={() => handleDelete(record)} title=\"Bạn có chắc muốn xóa không?\"\n            okText=\"Xóa\"\n            okType=\"danger\"\n            cancelText=\"Hủy bỏ\">\n            <Button icon={<DeleteOutlined />}></Button>\n          </Popconfirm>\n        </Space>\n      )\n    }\n  ]\n\n  function handleOpenModal() {\n    setAction(formActions.CREATE);\n    setModalVisible(true);\n  }\n\n  function handleCloseModal() {\n    setModalVisible(false);\n  }\n\n  async function getServices() {\n    try {\n      setFetchingServices(true);\n      const response = await getServicesAPI();\n      setServices(response.data);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setFetchingServices(false);\n    }\n  }\n\n  async function handleFormSubmit() {\n    try {\n      setModalLoading(true);\n      const values = await serviceForm.validateFields();\n      const data = {\n        name: values.name,\n        price: values.price,\n      }\n      if (action === formActions.CREATE) {\n        await addServiceAPI(data);\n      }\n\n      if (action === formActions.UPDATE) {\n        await updateServiceAPI(selectedService.id, data);\n      }\n\n      getServices();\n\n      setModalVisible(false);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setModalLoading(false);\n    }\n  }\n\n  function handleEditClick(service) {\n    setAction(formActions.UPDATE);\n    setSelectedService(service);\n    setModalVisible(true);\n  }\n\n  async function handleDelete(service) {\n    try {\n      await deleteServiceAPI(service.id);\n      getServices();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  function afterClose() {\n    serviceForm.resetFields();\n    setSelectedService(null);\n  }\n\n  useEffect(() => {\n    getServices();\n  }, []);\n\n  return (\n    <>\n      <Row justify=\"space-between\">\n        <Col><h1 className=\"text-xl\">Quản lý thuốc</h1></Col>\n        <Col>\n          <Button type=\"primary\" icon={<PlusOutlined />} onClick={handleOpenModal}>Tạo mới</Button>\n        </Col>\n      </Row>\n      <Table\n        rowKey=\"id\"\n        columns={tableColumns}\n        dataSource={services}\n        loading={fetchingServices} />\n      <Modal\n        visible={modalVisible}\n        title={action === formActions.CREATE ? 'Thêm thuốc' : 'Cập nhật thuốc'}\n        onCancel={handleCloseModal}\n        confirmLoading={modalLoading}\n        destroyOnClose={true}\n        afterClose={afterClose}\n        onOk={handleFormSubmit}>\n        <ServiceForm onFinish={handleFormSubmit} form={serviceForm} defaultService={selectedService} />\n      </Modal>\n    </>\n  )\n}\n\nexport default ServicePage;","import axios from 'axios';\nimport { API_URL } from 'constant/apiUrl';\n\nconst endpointPrefix = `${API_URL}/admin/manage-working-hours`;\n\nexport function getWorkingHoursAPI() {\n  const url = `${endpointPrefix}/`;\n  return axios.get(url);\n}\n\nexport function updateWorkingHourAPI(id, { weekday, isClosed }) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.put(url, {\n    weekday: weekday,\n    is_closed: isClosed\n  })\n}","import React, { useState, useEffect } from 'react';\nimport { Table, Switch } from 'antd';\nimport { getWorkingHoursAPI, updateWorkingHourAPI } from 'services/admin/working-hours.service';\n\nconst WorkingHourPage = () => {\n\n  const [workingHours, setWorkingHours] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const tableColumns = [\n    {\n      title: 'Ngày',\n      key: 'weekday',\n      dataIndex: 'weekday'\n    },\n    {\n      title: 'Đóng cửa',\n      key: 'is_closed',\n      render: (text, record) => (\n        <Switch\n          checked={record.is_closed}\n          onChange={() => handleWorkingHourChange(record)} />\n      )\n    }\n  ]\n\n  async function getWorkingHours() {\n    try {\n      setLoading(true);\n      const workingHoursResponse = await getWorkingHoursAPI();\n      setWorkingHours(workingHoursResponse.data.sort((a, b) => {\n        if (a.id < b.id) {\n          return -1\n        } else {\n          return 1\n        }\n      }));\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  async function handleWorkingHourChange(wh) {\n    try {\n      setLoading(true);\n      await updateWorkingHourAPI(wh.id, {\n        weekday: wh.weekday,\n        isClosed: !wh.is_closed\n      });\n      getWorkingHours();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  useEffect(() => {\n    getWorkingHours();\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"text-xl\">Quản lý giờ làm việc</h1>\n      <div style={{width: 400}}>\n      <Table\n        rowKey=\"weekday\"\n        dataSource={workingHours}\n        columns={tableColumns}\n        loading={loading}\n        pagination={false} />\n      </div>\n      \n    </>\n  )\n}\n\nexport default WorkingHourPage;","import React from 'react';\nimport { Form, Input } from 'antd';\n\nconst RoomForm = props => {\n  const { form, onFinish, defaultRoom } = props;\n\n  return (\n    <Form\n      layout=\"vertical\"\n      form={form}\n      onFinish={onFinish}>\n      <Form.Item label=\"Mã\" name=\"number\" initialValue={defaultRoom?.number}>\n        <Input type=\"number\" autoFocus />\n      </Form.Item>\n      <Form.Item label=\"Tên khoa\" name=\"name\" initialValue={defaultRoom?.name}>\n        <Input />\n      </Form.Item>\n    </Form>\n  )\n}\n\nexport default RoomForm;","import React, { useState, useEffect } from 'react';\nimport { Row, Col, Button, Modal, Table, Form, Popconfirm, Space } from 'antd';\nimport { PlusOutlined, EditOutlined, DeleteOutlined } from '@ant-design/icons';\nimport RoomForm from 'forms/RoomForm/RoomForm';\nimport { addRoomAPI, deleteRoomAPI, getRoomAPI, updateRoomAPI } from 'services/admin/room.service';\nimport { formActions } from 'constant/formActions';\n\nconst RoomPage = () => {\n\n  const [modalVisible, setModalVisible] = useState(false);\n  const [rooms, setCategories] = useState([]);\n  const [fetchingCategories, setFetchingCategories] = useState(false);\n  const [modalLoading, setModalLoading] = useState(false);\n  const [action, setAction] = useState(formActions.CREATE);\n  const [selectedRoom, setSelectedRoom] = useState(null);\n  const [roomForm] = Form.useForm();\n\n  const tableColumns = [\n    {\n      title: 'Mã khoa',\n      key: 'number',\n      dataIndex: 'number',\n      width: '150px'\n    },\n    {\n      title: 'Tên',\n      key: 'name',\n      dataIndex: 'name'\n    },\n    {\n      title: 'Hành động',\n      key: 'action',\n      width: '150px',\n      render: (text, record, index) => (\n        <Space size={10}>\n          <Button icon={<EditOutlined />} onClick={() => handleEditClick(record)}></Button>\n          <Popconfirm\n            onConfirm={() => handleDelete(record)} title=\"Bạn có chắc muốn xóa không?\"\n            okText=\"Xóa\"\n            okType=\"danger\"\n            cancelText=\"Hủy bỏ\">\n            <Button icon={<DeleteOutlined />}></Button>\n          </Popconfirm>\n        </Space>\n      )\n    }\n  ]\n\n  function handleOpenModal() {\n    setAction(formActions.CREATE);\n    setModalVisible(true);\n  }\n\n  function handleCloseModal() {\n    setModalVisible(false);\n  }\n\n  async function getRooms() {\n    try {\n      setFetchingCategories(true);\n      const response = await getRoomAPI();\n      setCategories(response.data);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setFetchingCategories(false);\n    }\n  }\n\n  async function handleFormSubmit() {\n    try {\n      setModalLoading(true);\n      const values = await roomForm.validateFields();\n      if (action === formActions.CREATE) {\n        await addRoomAPI(values);\n      }\n\n      if (action === formActions.UPDATE) {\n        await updateRoomAPI(selectedRoom.id, values);\n      }\n\n      getRooms();\n\n      setModalVisible(false);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setModalLoading(false);\n    }\n  }\n\n  function handleEditClick(room) {\n    setAction(formActions.UPDATE);\n    setSelectedRoom(room);\n    setModalVisible(true);\n  }\n\n  async function handleDelete(unit) {\n    try {\n      await deleteRoomAPI(unit.id);\n      getRooms();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  function afterClose() {\n    roomForm.resetFields();\n    setSelectedRoom(null);\n  }\n\n  useEffect(() => {\n    getRooms();\n  }, []);\n\n  return (\n    <>\n      <Row justify=\"space-between\">\n        <Col><h1 className=\"text-xl\">Quản lý khoa</h1></Col>\n        <Col>\n          <Button type=\"primary\" icon={<PlusOutlined />} onClick={handleOpenModal}>Tạo mới</Button>\n        </Col>\n      </Row>\n      <Table\n        rowKey=\"id\"\n        columns={tableColumns}\n        dataSource={rooms}\n        \n        loading={fetchingCategories} />\n      <Modal\n        visible={modalVisible}\n        title={action === formActions.CREATE ? 'Thêm khoa' : 'Cập nhật khoa'}\n        onCancel={handleCloseModal}\n        confirmLoading={modalLoading}\n        destroyOnClose={true}\n        afterClose={afterClose}\n        onOk={handleFormSubmit}>\n        <RoomForm onFinish={handleFormSubmit} form={roomForm} defaultRoom={selectedRoom} />\n      </Modal>\n    </>\n  )\n}\n\nexport default RoomPage;","import axios from 'axios';\nimport { API_URL } from 'constant/apiUrl';\nimport qs from 'qs';\n\nconst endpointPrefix = `${API_URL}/admin/manage-user`;\n\nexport function getUsersAPI(query) {\n  const url = `${endpointPrefix}/?${qs.stringify(query)}`;\n  return axios.get(url);\n}\n\nexport function getUserDetailsAPI(id) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.get(url);\n}\n\nexport function addUserAPI({ email, password, first_name, last_name, phone, DOB, gender, role_id }) {\n  const url = `${endpointPrefix}/`;\n  return axios.post(url, {\n    email,\n    password,\n    first_name,\n    last_name,\n    phone,\n    DOB: DOB.format('yyyy-MM-DD'),\n    gender,\n    role_id\n  });\n}\n\nexport function updateUserAPI(id, { email, password, first_name, last_name, phone, DOB, gender, role_id }) {\n  const url = `${endpointPrefix}/${id}/`;\n  if (password) {\n    return axios.put(url, {\n      email,\n      password,\n      first_name,\n      last_name,\n      phone,\n      DOB: DOB.format('yyyy-MM-DD'),\n      gender,\n      role_id\n    })\n  }\n\n  return axios.put(url, {\n    email,\n    first_name,\n    last_name,\n    phone,\n    DOB: DOB.format('yyyy-MM-DD'),\n    gender,\n    role_id\n  })\n}\n\nexport function deleteUserAPI(id) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.delete(url);\n}\n\nexport function blockUserAPI(userId) {\n  const url = `${endpointPrefix}/${userId}/block/`;\n  return axios.get(url);\n}\n\nexport function unblockUserAPI(userId) {\n  const url = `${endpointPrefix}/${userId}/unblock/`;\n  return axios.get(url);\n}","export const ROLES = {\n  \"1\": {\n    name: \"admin\",\n    display: \"Quản trị viên\"\n  },\n  \"2\": {\n    name: \"physician\",\n    display: \"Bác sĩ\"\n  },\n  \"3\": {\n    name: \"receptionist\",\n    display: \"Lễ tân\"\n  },\n  \"4\": {\n    name: \"patient\",\n    display: \"Bệnh nhân\"\n  }\n}\n\nexport const ROLES_LIST = [1, 2, 3, 4];","export const requiredRule = (message = \"Vui lòng điền vào trường này\") => {\n  return {\n    required: true,\n    message: message\n  }\n}","import React, { useState, useEffect } from 'react';\nimport { Form, Input, Select, Spin, Row, Col, DatePicker, Radio } from 'antd';\nimport { getUserDetailsAPI } from 'services/admin/user.service';\nimport { ROLES, ROLES_LIST } from 'constant/roles';\nimport moment from 'moment';\nimport { requiredRule } from 'constant/formRules';\n\nconst UserForm = props => {\n  const { form, onFinish, defaultUser } = props;\n  const [userDetail, setUserDetail] = useState(null);\n  const [detailLoading, setDetailLoading] = useState(false);\n\n  async function getUserDetail(id) {\n    try {\n      setDetailLoading(true);\n      const detailResponse = await getUserDetailsAPI(id);\n      const userDetail = detailResponse.data;\n      setUserDetail(userDetail);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setDetailLoading(false);\n    }\n  }\n\n  async function getData() {\n    if (defaultUser?.id) {\n      await Promise.all([\n        getUserDetail(defaultUser.id),\n      ]);\n    }\n  }\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  useEffect(() => {\n    if (userDetail) {\n      form.setFieldsValue({\n        email: userDetail.email,\n        first_name: userDetail.first_name,\n        last_name: userDetail.last_name,\n        phone: userDetail.phone,\n        DOB: moment(userDetail.DOB),\n        gender: userDetail.gender,\n        role_id: userDetail.role.id\n      });\n    }\n  }, [userDetail, defaultUser, form]);\n\n  return (\n    <Spin spinning={detailLoading}>\n      <Form\n        layout=\"vertical\"\n        form={form}\n        autoComplete=\"off\"\n        onFinish={onFinish}>\n        <Form.Item label=\"Email\" name=\"email\" initialValue={userDetail?.email} rules={[\n          {\n            required: !userDetail || (userDetail && userDetail.role.id != 4),\n            message: \"Vui lòng điền vào trường này\"\n          }\n        ]}>\n          <Input type=\"email\" />\n        </Form.Item>\n\n        <Form.Item label=\"Mật khẩu\" name=\"password\" rules={[\n          {\n            required: !userDetail?.id,\n            message: \"Vui lòng điền vào trường này\"\n          }\n        ]}>\n          <Input.Password autoComplete=\"new-password\" placeholder={userDetail ? \"Nhập mật khẩu mới\" : \"\"} />\n        </Form.Item>\n\n        <Row>\n          <Col flex={1}>\n            <Form.Item label=\"Họ\" name=\"first_name\" rules={[requiredRule()]}>\n              <Input />\n            </Form.Item>\n          </Col>\n          <div style={{ width: 20 }}></div>\n          <Col flex={1}>\n            <Form.Item label=\"Tên\" name=\"last_name\" rules={[requiredRule()]}>\n              <Input />\n            </Form.Item>\n          </Col>\n        </Row>\n\n        <Form.Item label=\"Điện thoại\" name=\"phone\" initialValue={userDetail?.phone} rules={[requiredRule()]}>\n          <Input type=\"tel\" />\n        </Form.Item>\n\n        <Row>\n          <Col>\n            <Form.Item label=\"Ngày sinh\" name=\"DOB\" rules={[requiredRule()]}>\n              <DatePicker placeholder=\"Chọn ngày\" />\n            </Form.Item>\n          </Col>\n          <div style={{ width: 15 }}></div>\n          <Col flex={1}>\n            <Form.Item label=\"Giới tính\" name=\"gender\" rules={[requiredRule()]}>\n              <Radio.Group>\n                <Radio value=\"Nam\">Nam</Radio>\n                <Radio value=\"Nữ\">Nữ</Radio>\n                <Radio value=\"Khác\">Khác</Radio>\n              </Radio.Group>\n            </Form.Item>\n          </Col>\n        </Row>\n\n\n        <Form.Item label=\"Vai trò\" name=\"role_id\" initialValue={userDetail?.role_id} rules={[requiredRule()]}>\n          <Select>\n            {\n              ROLES_LIST.map(role_id => (\n                <Select.Option key={role_id} value={role_id}>{ROLES[role_id].display}</Select.Option>\n              ))\n            }\n          </Select>\n        </Form.Item>\n      </Form>\n    </Spin>\n  )\n}\n\nexport default UserForm;","import React from 'react';\nimport classnames from 'classnames';\nimport styles from './Circle.module.scss';\n\nconst Circle = props => {\n\n  const classes = classnames(\n    styles.circle,\n    { [styles['circle--success']]: props.color === 'success' }\n  )\n\n  return (\n    <div className={classes}></div>\n  )\n}\n\nexport default Circle;","import React, { useState, useEffect } from 'react';\nimport { Row, Col, Button, Modal, Table, Form, Popconfirm, Space } from 'antd';\nimport { PlusOutlined, LockOutlined, UnlockOutlined, EditOutlined, DeleteOutlined, EyeOutlined } from '@ant-design/icons';\nimport UserForm from 'forms/UserForm/UserForm';\nimport { formActions } from 'constant/formActions';\nimport NumberFormat from 'react-number-format';\nimport { ROLES } from 'constant/roles';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport Circle from 'components/Circle/Circle';\n\n// APIs\nimport { getUsersAPI, addUserAPI, updateUserAPI, deleteUserAPI, blockUserAPI, unblockUserAPI } from 'services/admin/user.service';\nimport { addBlockChainUserAPI } from 'services/user/user.service';\n\n\nconst AdminAccountPage = () => {\n\n  const history = useHistory();\n  const { pathname, search } = useLocation();\n  const urlSearchParams = new URLSearchParams(search);\n  const currentPageOnURL = Number(urlSearchParams.get('page'));\n  const [page, setPage] = useState(currentPageOnURL || 1);\n  const [modalVisible, setModalVisible] = useState(false);\n  const [users, setUsers] = useState();\n  const [fetchingUsers, setFetchingUsers] = useState(false);\n  const [modalLoading, setModalLoading] = useState(false);\n  const [action, setAction] = useState(formActions.CREATE);\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [userForm] = Form.useForm();\n\n  const tableColumns = [\n    {\n      title: '#',\n      key: '#',\n      render: (text, record, index) => index + 1\n    },\n    {\n      title: 'Họ và tên',\n      key: 'fullname',\n      render: (text, record) => record.first_name + \" \" + record.last_name\n    },\n    {\n      title: 'Email',\n      key: 'email',\n      dataIndex: 'email',\n      render: (text, record) => (\n        <Space>\n          <Circle color={record.is_verified_email ? 'success' : ''} />\n          <span>{record.email}</span>\n        </Space>\n      )\n    },\n    // {\n    //   title: 'Điện thoại',\n    //   key: 'phone',\n    //   dataIndex: 'phone',\n    //   render: (text, record) => (\n    //     <Space>\n    //       <Circle color={record.is_verified_phone ? 'success' : ''} />\n    //       <span>{record.phone}</span>\n    //     </Space>\n    //   )\n    // },\n    {\n      title: 'Vai trò',\n      key: 'role',\n      render: (text, record) => <span>{ROLES[record.role.id].display}</span>\n    },\n    {\n      title: 'Hành động', key: 'action', render: (text, record) => {\n        return (\n          <Space size={10}>\n            <Button icon={<EyeOutlined />} onClick={() => handleViewClick(record)}></Button>\n            <Button icon={<EditOutlined />} onClick={() => handleEditClick(record)}></Button>\n            <Popconfirm\n              onConfirm={() => handleDelete(record)}\n              title=\"Bạn có chắc muốn xóa không?\"\n              okText=\"Xóa\"\n              okType=\"danger\"\n              cancelText=\"Hủy bỏ\">\n              <Button icon={<DeleteOutlined />}></Button>\n            </Popconfirm>\n            {\n              <Popconfirm\n                onConfirm={() => handleBlockUnblock(record)}\n                title={`Bạn có chắc muốn ${record.is_active ? 'khóa' : 'mở khóa'} tài khoản này không?`}\n                okText={record.is_active ? \"Khóa\" : \"Mở khóa\"}\n                okType={record.is_active ? \"danger\" : \"primary\"}\n                cancelText=\"Hủy bỏ\">\n                {\n                  record.is_active ?\n                    <Button danger type=\"link\" icon={<LockOutlined />}>Khóa</Button>\n                    :\n                    <Button type=\"link\" icon={<UnlockOutlined />}>Mở khóa</Button>\n                }\n              </Popconfirm>\n            }\n          </Space>\n        )\n      }\n    }\n  ]\n\n  function handleOpenModal() {\n    setAction(formActions.CREATE);\n    setModalVisible(true);\n  }\n\n  function handleCloseModal() {\n    setModalVisible(false);\n  }\n\n  async function getUsers(page) {\n    try {\n      setFetchingUsers(true);\n      const response = await getUsersAPI({ page: page });\n      setUsers(response.data);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setFetchingUsers(false);\n    }\n  }\n\n  async function handleFormSubmit() {\n    try {\n      setModalLoading(true);\n      const values = await userForm.validateFields();\n\n      if (action === formActions.CREATE) {\n        const addReponse = await addUserAPI(values);\n        const responseData = addReponse.data;\n        const userId = responseData.id;\n        await addBlockChainUserAPI(userId, \"user\");\n        // await addBlockChainUserAPI(\"af6e0eb2-639b-471d-8394-74b0dfce3395\", \"user\");\n      }\n\n      if (action === formActions.UPDATE) {\n        if (!values.password) {\n          delete values.password;\n        }\n        await updateUserAPI(selectedUser.id, values);\n      }\n\n      getUsers(page);\n\n      setModalVisible(false);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setModalLoading(false);\n    }\n  }\n\n  async function handleBlockUnblock(user) {\n    try {\n      setFetchingUsers(true);\n      if (user.is_active) {\n        await blockUserAPI(user.id);\n      } else {\n        await unblockUserAPI(user.id);\n      }\n      getUsers();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  function handleViewClick(user) {\n\n  }\n\n  function handleEditClick(user) {\n    setAction(formActions.UPDATE);\n    setSelectedUser(user);\n    setModalVisible(true);\n  }\n\n  async function handleDelete(user) {\n    try {\n      await deleteUserAPI(user.id);\n      getUsers(page);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  function afterClose() {\n    userForm.resetFields();\n    setSelectedUser(null);\n  }\n\n  function handlePaginationChange(page) {\n    getUsers(page);\n    setPage(page);\n    history.push({\n      pathname: pathname,\n      search: `page=${page}`\n    })\n  }\n\n  useEffect(() => {\n    getUsers(page);\n  }, []);\n\n  return (\n    <>\n      <Row justify=\"space-between\">\n        <Col><h1 className=\"text-xl\">Quản lý tài khoản</h1></Col>\n        <Col>\n          <Button type=\"primary\" icon={<PlusOutlined />} onClick={handleOpenModal}>Tạo mới</Button>\n        </Col>\n      </Row>\n      <Table\n        rowKey=\"id\"\n        columns={tableColumns}\n        dataSource={users?.results}\n        pagination={{\n          defaultCurrent: page,\n          current: page,\n          pageSize: 10,\n          total: users?.count,\n          onChange: handlePaginationChange\n        }}\n        loading={fetchingUsers} />\n      <Modal\n        visible={modalVisible}\n        title={action === formActions.CREATE ? 'Thêm tài khoản' : 'Cập nhật tài khoản'}\n        onCancel={handleCloseModal}\n        confirmLoading={modalLoading}\n        destroyOnClose={true}\n        afterClose={afterClose}\n        onOk={handleFormSubmit}>\n        <UserForm onFinish={handleFormSubmit} form={userForm} defaultUser={selectedUser} />\n      </Modal>\n    </>\n  )\n}\n\nexport default AdminAccountPage;","import React from 'react';\n\nconst AdminSettingPage = () => {\n  return (\n    <div>Admin setting page</div>\n  )\n}\n\nexport default AdminSettingPage;","import React, { useEffect } from 'react';\nimport Cookie from 'js-cookie';\nimport { Redirect } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { logoutAction } from 'store/actions/auth.action';\nimport jwtDecode from 'jwt-decode';\n\nconst withPrivateRoute = (Child, roles) => {\n  const WrapperComponent = (props) => {\n\n    const dispatch = useDispatch();\n    const token = Cookie.get('EMR_token');\n    const user = useSelector((state) => state.userState.user);\n\n    function isValidRole(user) {\n      const userRole = user?.role.name;\n      const isValid = roles.includes(userRole);\n      return isValid;\n    }\n\n    useEffect(() => {\n      if (user && user.role) {\n        if (!isValidRole(user)) {\n          dispatch(logoutAction());\n        }\n      }\n    }, [user, dispatch]);\n\n    try {\n      if (!token || token.length === 0 || !jwtDecode(token)) {\n        return <Redirect to=\"/login\" />;\n      } else {\n        return <Child {...props} />\n      }\n      \n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  return WrapperComponent;\n}\n\nexport default withPrivateRoute;","import React from 'react';\nimport { Button, Layout, Modal, Spin, Space, Avatar } from 'antd';\nimport {\n  LogoutOutlined,\n  ExclamationCircleOutlined\n} from '@ant-design/icons';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { logoutAction } from 'store/actions/auth.action';\nimport { ROLES } from 'constant/roles';\n\nconst { Header } = Layout;\n\nconst CustomHeader = () => {\n\n  const dispatch = useDispatch();\n  const user = useSelector((state) => state.userState.user);\n\n  function handleLogout() {\n    Modal.confirm({\n      title: \"Đăng xuất\",\n      icon: <ExclamationCircleOutlined />,\n      content: \"Bạn có chắc muốn đăng xuất không?\",\n      onOk() {\n        dispatch(logoutAction());\n      }\n    })\n  }\n\n  return (\n    <Header className=\"header flex items-center\">\n      <div className=\"text-2xl text-white\">EMR</div>\n      <div className=\"ml-auto\"></div>\n      <div className=\"text-white\">\n        {\n          user ?\n            <Space>\n              {\n                user.avatar ?\n                  <Avatar src={user.avatar} />\n                  :\n                  <Avatar style={{ backgroundColor: '#1890ff' }}>{user.last_name.charAt(0)}</Avatar>\n              }\n              <span>{ user.first_name } { user.last_name } ({ ROLES[user.role.id].display })</span>\n            </Space>\n            :\n            \"Đang tải...\"\n        }\n\n        <span className=\"ml-3\">|</span>\n      </div>\n      <Button type=\"default\" ghost icon={<LogoutOutlined />} className=\"border-none\" onClick={handleLogout}>Đăng xuất</Button>\n    </Header>\n  )\n}\n\nexport default CustomHeader;","import React from 'react';\nimport { Form, Input } from 'antd';\n\nconst DrugDosageFormForm = props => {\n  const { form, onFinish, defaultDosageForm } = props;\n\n  return (\n    <Form\n      layout=\"vertical\"\n      form={form}\n      onFinish={onFinish}>\n      <Form.Item label=\"Dạng bào chế\" name=\"name\" initialValue={defaultDosageForm?.name}>\n        <Input autoFocus />\n      </Form.Item>\n    </Form>\n  )\n}\n\nexport default DrugDosageFormForm;","import React, { useState, useEffect } from 'react';\nimport { Row, Col, Button, Modal, Table, Form, Popconfirm, Space } from 'antd';\nimport { PlusOutlined, EditOutlined, DeleteOutlined } from '@ant-design/icons';\nimport DrugDosageFormForm from 'forms/DrugDosageFormForm/DrugDosageFormForm';\nimport { addDrugDosageFormAPI, deleteDrugDosageFormAPI, getDrugDosageFormAPI, updateDrugDosageFormAPI } from 'services/admin/drug-dosage-form.service';\nimport { formActions } from 'constant/formActions';\n\nconst DrugDosageFormPage = () => {\n\n  const [modalVisible, setModalVisible] = useState(false);\n  const [dosageForms, setDosageForms] = useState([]);\n  const [fetchingDosageForms, setFetchingDosageForms] = useState(false);\n  const [modalLoading, setModalLoading] = useState(false);\n  const [action, setAction] = useState(formActions.CREATE);\n  const [selectedDosageForm, setSelectedDosageForm] = useState(null);\n  const [drugDosageFormForm] = Form.useForm();\n\n  const tableColumns = [\n    {\n      title: '#',\n      key: '#',\n      render: (text, record, index) => index + 1\n    },\n    {\n      title: 'Tên',\n      key: 'name',\n      dataIndex: 'name'\n    },\n    {\n      title: 'Hành động',\n      key: 'action',\n      render: (text, record, index) => (\n        <Space size={10}>\n          <Button icon={<EditOutlined />} onClick={() => handleEditClick(record)}></Button>\n          <Popconfirm\n            onConfirm={() => handleDelete(record)} title=\"Bạn có chắc muốn xóa không?\"\n            okText=\"Xóa\"\n            okType=\"danger\"\n            cancelText=\"Hủy bỏ\">\n            <Button icon={<DeleteOutlined />}></Button>\n          </Popconfirm>\n        </Space>\n      )\n    }\n  ]\n\n  function handleOpenModal() {\n    setAction(formActions.CREATE);\n    setModalVisible(true);\n  }\n\n  function handleCloseModal() {\n    setModalVisible(false);\n  }\n\n  async function getDrugDosageForms() {\n    try {\n      setFetchingDosageForms(true);\n      const response = await getDrugDosageFormAPI();\n      setDosageForms(response.data);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setFetchingDosageForms(false);\n    }\n  }\n\n  async function handleFormSubmit() {\n    try {\n      setModalLoading(true);\n      const values = await drugDosageFormForm.validateFields();\n      if (action === formActions.CREATE) {\n        await addDrugDosageFormAPI(values.name);\n      }\n\n      if (action === formActions.UPDATE) {\n        await updateDrugDosageFormAPI(selectedDosageForm.id, values.name);\n      }\n\n      getDrugDosageForms();\n\n      setModalVisible(false);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setModalLoading(false);\n    }\n  }\n\n  function handleEditClick(dosageForm) {\n    setAction(formActions.UPDATE);\n    setSelectedDosageForm(dosageForm);\n    setModalVisible(true);\n  }\n\n  async function handleDelete(unit) {\n    try {\n      await deleteDrugDosageFormAPI(unit.id);\n      getDrugDosageForms();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  function afterClose() {\n    drugDosageFormForm.resetFields();\n    setSelectedDosageForm(null);\n  }\n\n  useEffect(() => {\n    getDrugDosageForms();\n  }, []);\n\n  return (\n    <>\n      <Row justify=\"space-between\">\n        <Col><h1 className=\"text-xl\">Quản lý đường dùng thuốc</h1></Col>\n        <Col>\n          <Button type=\"primary\" icon={<PlusOutlined />} onClick={handleOpenModal}>Tạo mới</Button>\n        </Col>\n      </Row>\n      <Table\n        rowKey=\"id\"\n        columns={tableColumns}\n        dataSource={dosageForms}\n        pagination={false}\n        loading={fetchingDosageForms} />\n      <Modal\n        visible={modalVisible}\n        title={action === formActions.CREATE ? 'Thêm đường dùng thuốc' : 'Cập nhật đường dùng thuốc'}\n        onCancel={handleCloseModal}\n        confirmLoading={modalLoading}\n        destroyOnClose={true}\n        afterClose={afterClose}\n        onOk={handleFormSubmit}>\n        <DrugDosageFormForm onFinish={handleFormSubmit} form={drugDosageFormForm} defaultDosageForm={selectedDosageForm} />\n      </Modal>\n    </>\n  )\n}\n\nexport default DrugDosageFormPage;","import React from 'react';\nimport { Link, Redirect, Switch, Route, useRouteMatch, useLocation } from 'react-router-dom';\nimport { Layout, Menu } from 'antd';\nimport {\n  UserOutlined,\n  DashboardOutlined,\n  MedicineBoxOutlined,\n  BugOutlined,\n  DollarOutlined,\n  IdcardOutlined,\n  ClockCircleOutlined,\n  AppstoreOutlined,\n  CalendarOutlined,\n  ContainerOutlined,\n  SettingOutlined,\n  NotificationOutlined} from '@ant-design/icons';\nimport AdminDashboard from 'pages/admin/dashboard';\nimport DrugCategoryPage from 'pages/common/drug/drug-category';\nimport DrugUnitPage from 'pages/common/drug/drug-unit';\nimport DrugRoutePage from 'pages/common/drug/drug-route';\nimport DrugPage from 'pages/common/drug/drug';\nimport DrugInstructionPage from 'pages/common/drug/drug-instruction';\nimport DiseaseCategory from 'pages/common/disease/disease-category';\nimport DiseasePage from 'pages/common/disease/disease';\nimport NotificationPage from 'pages/common/notification/notification';\nimport VisitPage from 'pages/common/visit/visit';\nimport PatientPage from 'pages/common/patient/patient';\nimport AppointmentPage from 'pages/common/appointment/apointment';\nimport ServicePage from 'pages/common/service/service';\nimport WorkingHourPage from 'pages/admin/working-hour';\nimport RoomPage from 'pages/common/room/room';\nimport AdminAccountPage from 'pages/admin/account';\nimport AdminSettingPage from 'pages/admin/setting';\nimport withPrivateRoute from 'HOCs/withPrivateRoute';\nimport CustomHeader from 'components/Header';\nimport DrugDosageFormPage from 'pages/common/drug/drug-dosage-form';\n\nconst { Sider, Content } = Layout;\nconst { SubMenu } = Menu;\n\nconst AdminLayout = () => {\n  const match = useRouteMatch();\n  const location = useLocation();\n  const path = match.path;\n\n  return (\n    <Layout>\n      <CustomHeader />\n      <Layout>\n        <Sider width={200} className=\"site-layout-background\">\n          <Menu\n            mode=\"inline\"\n            style={{ height: '100%', borderRight: 0 }}\n            selectedKeys={[location.pathname]}\n          >\n            <Menu.Item key=\"/admin/dashboard\" icon={<DashboardOutlined />}>\n              <Link to=\"/admin/dashboard\">Bảng điều khiển</Link>\n            </Menu.Item>\n            <SubMenu key=\"drug\" icon={<MedicineBoxOutlined />} title=\"Quản lý thuốc\">\n              <Menu.Item key=\"/admin/drug/category\">\n                <Link to=\"/admin/drug/category\">Loại thuốc</Link>\n              </Menu.Item>\n              <Menu.Item key=\"/admin/drug/unit\">\n                <Link to=\"/admin/drug/unit\">Đơn vị tính</Link>\n              </Menu.Item>\n              <Menu.Item key=\"/admin/drug/route\">\n                <Link to=\"/admin/drug/route\">Đường dùng</Link>\n              </Menu.Item>\n              <Menu.Item key=\"/admin/drug/dosage-form\">\n                <Link to=\"/admin/drug/dosage-form\">Dạng bào chế</Link>\n              </Menu.Item>\n              <Menu.Item key=\"/admin/drug\">\n                <Link to=\"/admin/drug\">Thuốc</Link>\n              </Menu.Item>\n              <Menu.Item key=\"/admin/drug/instruction\">\n                <Link to=\"/admin/drug/instruction\">Hướng dẫn sử dụng</Link>\n              </Menu.Item>\n            </SubMenu>\n            <SubMenu key=\"disease\" icon={<BugOutlined />} title=\"Quản lý bệnh\">\n              <Menu.Item key=\"/admin/disease/category\">\n                <Link to=\"/admin/disease/category\">Nhóm bệnh</Link>\n              </Menu.Item>\n              <Menu.Item key=\"/admin/disease\">\n                <Link to=\"/admin/disease\">Bệnh</Link>\n              </Menu.Item>\n            </SubMenu>\n\n            {/* <Menu.Item key=\"/admin/notification\" icon={<NotificationOutlined />}>\n              <Link to=\"/admin/notification\">Thông báo</Link>\n            </Menu.Item> */}\n            <Menu.Item key=\"/admin/visit\" icon={<ContainerOutlined />}>\n              <Link to=\"/admin/visit\">Nhóm bệnh</Link>\n            </Menu.Item>\n            <Menu.Item key=\"/admin/patient\" icon={<IdcardOutlined />}>\n              <Link to=\"/admin/patient\">Bệnh nhân</Link>\n            </Menu.Item>\n            <Menu.Item key=\"/admin/appointment\" icon={<CalendarOutlined />}>\n              <Link to=\"/admin/appointment\">Lịch hẹn</Link>\n            </Menu.Item>\n            <Menu.Item key=\"/admin/service\" icon={<DollarOutlined />}>\n              <Link to=\"/admin/service\">Dịch vụ</Link>\n            </Menu.Item>\n\n            <Menu.Item key=\"/admin/working-hour\" icon={<ClockCircleOutlined />}>\n              <Link to=\"/admin/working-hour\">Giờ làm việc</Link>\n            </Menu.Item>\n            <Menu.Item key=\"/admin/room\" icon={<AppstoreOutlined />}>\n              <Link to=\"/admin/room\">Khoa</Link>\n            </Menu.Item>\n\n            <Menu.Item key=\"/admin/account\" icon={<UserOutlined />}>\n              <Link to=\"/admin/account\">Tài khoản</Link>\n            </Menu.Item>\n            <Menu.Item key=\"/admin/setting\" icon={<SettingOutlined />}>\n              <Link to=\"/admin/setting\">Cài đặt</Link>\n            </Menu.Item>\n          </Menu>\n        </Sider>\n        <Layout style={{ padding: '0 24px 24px' }}>\n          <Content\n            className=\"site-layout-background\"\n            style={{\n              padding: 24,\n              margin: 0,\n              minHeight: 280,\n            }}\n          >\n            <Switch>\n              {/* Dashboard */}\n              <Route path={`${path}/dashboard`}>\n                <AdminDashboard />\n              </Route>\n\n              {/* Drug */}\n              <Route path={`${path}/drug/category`}>\n                <DrugCategoryPage />\n              </Route>\n              <Route path={`${path}/drug/unit`}>\n                <DrugUnitPage />\n              </Route>\n              <Route path={`${path}/drug/route`}>\n                <DrugRoutePage />\n              </Route>\n              <Route path={`${path}/drug/dosage-form`}>\n                <DrugDosageFormPage />\n              </Route>\n              <Route path={`${path}/drug`} exact>\n                <DrugPage />\n              </Route>\n              <Route path={`${path}/drug/instruction`}>\n                <DrugInstructionPage />\n              </Route>\n\n              {/* Disease */}\n              <Route path={`${path}/disease/category`}>\n                <DiseaseCategory />\n              </Route>\n              <Route path={`${path}/disease`}>\n                <DiseasePage />\n              </Route>\n\n              {/* Notification */}\n              <Route path={`${path}/notification`}>\n                <NotificationPage />\n              </Route>\n\n              {/* Visit */}\n              <Route path={`${path}/visit`}>\n                <VisitPage />\n              </Route>\n\n              {/* Patient */}\n              <Route path={`${path}/patient`}>\n                <PatientPage />\n              </Route>\n\n              {/* Appointment */}\n              <Route path={`${path}/appointment`}>\n                <AppointmentPage />\n              </Route>\n\n              {/* Service */}\n              <Route path={`${path}/service`}>\n                <ServicePage />\n              </Route>\n\n              {/* Service */}\n              <Route path={`${path}/working-hour`}>\n                <WorkingHourPage />\n              </Route>\n\n              {/* Room */}\n              <Route path={`${path}/room`}>\n                <RoomPage />\n              </Route>\n\n              {/* Room */}\n              <Route path={`${path}/account`}>\n                <AdminAccountPage />\n              </Route>\n\n              {/* Room */}\n              <Route path={`${path}/setting`}>\n                <AdminSettingPage />\n              </Route>\n\n              {/* Fallback */}\n              <Redirect to={`/admin/dashboard`} />\n            </Switch>\n          </Content>\n        </Layout>\n      </Layout>\n    </Layout>\n  )\n}\n\nexport default withPrivateRoute(AdminLayout, ['admin']);","import axios from 'axios';\nimport { API_URL } from 'constant/apiUrl';\n\nconst endpointPrefix = `${API_URL}/user/disease`;\n\nexport function getDiseasesAPI(categoryId) {\n  const url = `${endpointPrefix}/`;\n  if (categoryId) {\n    return axios.get(`${url}?disease_category=${categoryId}`);\n  }\n  return axios.get(url);\n}\n\nexport function getDiseaseDetailsAPI(id) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.get(url);\n}","import axios from 'axios';\nimport { API_URL } from 'constant/apiUrl';\nimport { getQueryString } from 'utils/string';\n\nconst endpointPrefix = `${API_URL}/user/drug`;\n\nexport function getDrugsAPI(params) {\n  const url = `${endpointPrefix}/`;\n\n  if (params) {\n    return axios.get(`${url}?${getQueryString(params)}`);\n  }\n  return axios.get(url);\n}\n\nexport function getDrugDetailsAPI(id) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.get(url);\n}","import React, { useState, useEffect } from 'react';\nimport { Form, Select, Row, Col, Button } from 'antd';\nimport { getDiseasesAPI } from 'services/user/disease.service';\nimport { getDiseasesAPI as adminGetDiseasesAPI } from 'services/admin/disease.service';\nimport { SaveOutlined, MinusCircleOutlined } from '@ant-design/icons';\n\nconst { Item, List } = Form;\nconst { Option } = Select;\n\nconst VisitDiseaseForm = props => {\n  const { form, categories, user, currentValues, loading } = props;\n  const [localCategories, setLocalCategories] = useState(categories);\n  const [diseases, setDiseases] = useState(null);\n  const [diseaseLoading, setDiseaseLoading] = useState(false);\n\n  async function getDiseasesByCategory(category) {\n    try {\n      setDiseaseLoading(true);\n      setDiseases(null);\n      let diseaseResponse;\n      if (user.role === \"admin\") {\n        diseaseResponse = await adminGetDiseasesAPI(category);\n      } else {\n        diseaseResponse = await getDiseasesAPI(category);\n      }\n      setDiseases(diseaseResponse.data);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setDiseaseLoading(false);\n    }\n  }\n\n  useEffect(() => {\n    setLocalCategories(categories);\n  }, [categories])\n\n  function handleCatSearch(value) {\n    console.log(value);\n\n    if (value) {\n      const filterArr = categories.filter(cat => cat.name.includes(value));\n      console.log(filterArr);\n      setLocalCategories(filterArr);\n    } else {\n      setLocalCategories(categories);\n    }\n  }\n\n  function handleCatChange(value) {\n    if (value) {\n      getDiseasesByCategory(value);\n    }\n  }\n\n  function onFinish(values) {\n    props.onFinish(values);\n  }\n\n  return (\n    <Form form={form} name=\"dynamic_form\" layout=\"vertical\" onFinish={onFinish} initialValues={currentValues}>\n      <List name=\"emr_diseases\">\n        {(fields, { add, remove }) => (\n          <>\n            {\n              fields.map((field, index) => (\n                <Row gutter={15} key={field.key} align=\"middle\" className=\"mb-5\">\n                  <Col>{index + 1}</Col>\n                  <Col flex=\"0 0 300px\">\n                    <Item\n                      {...field}\n                      name={[field.name, 'diseaseCategory']}\n                      fieldKey={[field.fieldKey, 'diseaseCategory']}\n                      rules={[{ required: true, message: \"Trường này là bắt buộc\" }]}\n                      style={{margin: 0}}>\n                      <Select\n                        showSearch onSearch={handleCatSearch}\n                        placeholder=\"Nhóm bệnh\"\n                        onChange={handleCatChange}>\n                        {\n                          localCategories.map(cat => (\n                            <Option key={cat.id} value={cat.id}>{cat.name}</Option>\n                          ))\n                        }\n                      </Select>\n                    </Item>\n                  </Col>\n                  <Col flex={5}>\n                    <Item\n                      {...field}\n                      name={[field.name, 'disease']}\n                      fieldKey={[field.fieldKey, 'disease']}\n                      rules={[{ required: true, message: \"Trường này là bắt buộc\" }]}\n                      style={{margin: 0}}>\n                      <Select loading={diseaseLoading} placeholder=\"Bệnh\">\n                        {\n                          diseases?.results.map(disease => (\n                            <Option key={disease.id} value={disease.name}>{disease.name}</Option>\n                          ))\n                        }\n                      </Select>\n                    </Item>\n                  </Col>\n                  <Col>\n                    <MinusCircleOutlined onClick={() => remove(field.name)} />\n                  </Col>\n                </Row>\n              ))\n            }\n            <Item>\n              <Button type=\"dashed\" block onClick={() => add()}>Thêm bệnh</Button>\n            </Item>\n          </>\n        )\n        }\n      </List>\n\n      <div>\n        <Button loading={loading} htmlType=\"submit\" icon={<SaveOutlined />}>Lưu</Button>\n      </div>\n    </Form>\n  )\n}\n\nexport default VisitDiseaseForm;","import React from 'react';\nimport { Form, Row, Col, Select, Button } from 'antd';\nimport { SaveOutlined, PlusOutlined, MinusCircleOutlined } from '@ant-design/icons';\n\nconst { Item, List } = Form;\nconst { Option } = Select;\n\nconst VisitServiceForm = props => {\n\n  const { services, currentValues, loading } = props;\n\n  function onFinish(values) {\n    values.emr_services = values.emr_services.map(service => services.find(s => s.id === service.id));\n    props.onFinish(values);\n  }\n\n  return (\n    <Form onFinish={onFinish} initialValues={currentValues}>\n      <List name=\"emr_services\">\n        {\n          (fields, { add, remove }) => (\n            <>\n              {\n                fields.map((field, index) => (\n                  <Row gutter={15} key={field.key} align=\"middle\" className=\"mb-5\">\n                    <Col>{index + 1}</Col>\n                    <Col flex={1}>\n                      <Item {...field} name={[field.name, 'id']} fieldKey={[field.fieldKey, 'id']} style={{margin: 0}} rules={[{ required: true, message: \"Trường này là bắt buộc\" }]}>\n                        <Select placeholder=\"Chọn dịch vụ\">\n                          {\n                            services.map((service, index) => (\n                              <Option value={service.id} key={service.id}>\n                                {service.name}\n                              </Option>\n                            ))\n                          }\n                        </Select>\n                      </Item>\n                    </Col>\n                    <Col>\n                          <MinusCircleOutlined onClick={() => remove(field.name)} />\n                    </Col>\n                  </Row>\n                ))\n              }\n              <Item>\n                <Button type=\"dashed\" block onClick={() => add()} icon={<PlusOutlined />}>Thêm dịch vụ</Button>\n              </Item>\n            </>\n          )\n        }\n      </List>\n\n      <div>\n        <Button loading={loading} htmlType=\"submit\" icon={<SaveOutlined />}>Lưu</Button>\n      </div>\n    </Form>\n  )\n}\n\nexport default VisitServiceForm;","import React, { useState, useEffect } from 'react';\nimport { Form, Input, Select, Row, Col, Button } from 'antd';\nimport { getDrugsAPI as adminGetDrugsAPI } from 'services/admin/drug.service';\nimport { getDrugsAPI } from 'services/user/drug.service';\nimport { PlusOutlined, MinusCircleOutlined, SaveOutlined } from '@ant-design/icons';\n\nconst { Item, List, useForm } = Form;\nconst { Option } = Select;\n\nconst VisitDrugForm = props => {\n  const { user, categories, instructions, currentValues, loading } = props;\n\n  const [drugs, setDrugs] = useState([]);\n  const [drugLoading, setDrugLoading] = useState(false);\n  const [form] = useForm();\n\n  async function getDrugsByCategory(category) {\n    try {\n      setDrugLoading(true);\n      let drugResponse;\n      if (user.role === \"admin\") {\n        drugResponse = await adminGetDrugsAPI({ drug_category: category });\n      } else {\n        drugResponse = await getDrugsAPI({ drug_category: category });\n      }\n      setDrugs(drugResponse.data.results);\n    } catch (error) {\n\n    } finally {\n      setDrugLoading(false);\n    }\n  }\n\n  function handleCategoryChange(category) {\n    getDrugsByCategory(category);\n  }\n\n  function handleTotalFocus() {\n    console.log(form.getFieldValue('numberOfDays'));\n    console.log(form.getFieldValue('morning'));\n    console.log(form.getFieldValue('afternoon'));\n    console.log(form.getFieldValue('evening'));\n    console.log(form.getFieldValue('night'));\n  }\n\n  function onFinish(values) {\n    values.emr_drugs = values.emr_drugs.map(drug => {\n      const currentDrug = drugs.find(d => d.name === drug.drug);\n      drug.price = currentDrug.price;\n      return drug;\n    })\n    props.onFinish(values);\n  }\n\n  return (\n    <Form layout=\"vertical\" onFinish={onFinish} form={form} initialValues={currentValues}>\n      <List name=\"emr_drugs\">\n        {(fields, { add, remove }) => (\n          <>\n            {\n              fields.map((field, index) => (\n                <Row gutter={15} key={field.key} align=\"middle\">\n                  <Col>{index + 1}</Col>\n                  <Col flex=\"0 0 220px\">\n                    <Item\n                      {...field}\n                      label=\"Nhóm thuốc\"\n                      name={[field.name, 'drugCategory']}\n                      fieldKey={[field.fieldKey, 'drugCategory']}\n                      rules={[{ required: true, message: \"Trường này là bắt buộc\" }]}>\n                      <Select onChange={handleCategoryChange}>\n                        {\n                          categories.map(cat => (\n                            <Option key={cat.id} value={cat.id}>{cat.name}</Option>\n                          ))\n                        }\n                      </Select>\n                    </Item>\n                  </Col>\n                  <Col flex=\"1 0 220px\">\n                    <Item\n                      {...field}\n                      label=\"Thuốc\"\n                      name={[field.name, 'drug']}\n                      fieldKey={[field.fieldKey, 'drug']}\n                      rules={[{ required: true, message: \"Trường này là bắt buộc\" }]}>\n                      <Select loading={drugLoading}>\n                        {\n                          drugs.map(drug => (\n                            <Option key={drug.id} value={drug.name}>{drug.code}. {drug.name}</Option>\n                          ))\n                        }\n                      </Select>\n                    </Item>\n                  </Col>\n                  <Col flex=\"0 0 120px\">\n                    <Item\n                      {...field}\n                      name={[field.name, 'drugInstruction']}\n                      fieldKey={[field.fieldKey, 'drugInstruction']}\n                      rules={[{ required: true, message: \"Trường này là bắt buộc\" }]}\n                      label=\"Cách dùng\"\n                      style={{ minWidth: 200 }}>\n                      <Select>\n                        {\n                          instructions.map(ins => (\n                            <Option key={ins.id} value={ins.instruction}>{ins.instruction}</Option>\n                          ))\n                        }\n                      </Select>\n                    </Item>\n                  </Col>\n                  {/* </Row> */}\n                  {/* <Row gutter={15}> */}\n                  <Col flex=\"0 0 80px\">\n                    <Item\n                      {...field}\n                      name={[field.name, 'numberOfDays']}\n                      fieldKey={[field.fieldKey, 'numberOfDays']}\n                      rules={[{ required: true, message: \"Trường này là bắt buộc\" }]}\n                      label=\"Số ngày\">\n                      <Input type=\"number\" />\n                    </Item>\n                  </Col>\n                  <Col flex=\"0 0 80px\">\n                    <Item label=\"Sáng\" name={[field.name, 'morning']}>\n                      <Input type=\"number\" />\n                    </Item>\n                  </Col>\n                  <Col flex=\"0 0 80px\">\n                    <Item label=\"Trưa\" name={[field.name, 'afternoon']}>\n                      <Input type=\"number\" />\n                    </Item>\n                  </Col>\n                  <Col flex=\"0 0 80px\">\n                    <Item label=\"Chiều\" name={[field.name, 'evening']}>\n                      <Input type=\"number\" />\n                    </Item>\n                  </Col>\n                  <Col flex=\"0 0 80px\">\n                    <Item label=\"Tối\" name={[field.name, 'night']}>\n                      <Input type=\"number\" />\n                    </Item>\n                  </Col>\n                  <Col flex=\"0 0 80px\">\n                    <Item\n                      {...field}\n                      label=\"Số lượng\"\n                      name={[field.name, 'total']}\n                      fieldKey={[field.fieldKey, 'total']}>\n                      <Input type=\"number\" onFocus={handleTotalFocus} />\n                    </Item>\n                  </Col>\n                  <Col>\n                    <MinusCircleOutlined onClick={() => remove(field.name)} />\n                  </Col>\n                </Row>\n              ))\n\n            }\n            <Item>\n              <Button type=\"dashed\" block onClick={() => add()} icon={<PlusOutlined />}>Thêm đơn thuốc</Button>\n            </Item>\n          </>\n        )}\n      </List>\n\n      <div>\n        <Button loading={loading} htmlType=\"submit\" icon={<SaveOutlined />}>Lưu</Button>\n      </div>\n    </Form>\n  )\n}\n\nexport default VisitDrugForm;","export function getBase64(file) {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = () => resolve(reader.result);\n    reader.onerror = error => reject(error);\n  });\n}","import React, { useState } from 'react';\nimport { Upload, Modal } from 'antd';\nimport { PlusOutlined } from '@ant-design/icons';\nimport { API_URL } from 'constant/apiUrl';\nimport Cookie from 'js-cookie';\nimport { getBase64 } from 'utils/image';\n\n// APIs\n// import { removeImageAPI } from 'services/user/emr.service';\n\nconst VisitImagesForm = props => {\n\n  const { emrId } = props;\n\n  const [previewVisible, setPreviewVisible] = useState(false);\n  const [previewImage, setPreviewImage] = useState('');\n  const [previewTitle, setPreviewTitle] = useState('');\n  const [fileList, setFileList] = useState([...props.fileList]);\n  const token = Cookie.get('EMR_token');\n\n  const uploadButton = (\n    <div>\n      <PlusOutlined />\n      <div style={{ marginTop: 8 }}>Tải lên</div>\n    </div>\n  );\n\n  async function handleChange(uploadEvent) {\n    const { event, file, fileList } = uploadEvent;\n    setFileList(fileList);\n    props.onChange(uploadEvent);\n  }\n\n  async function handlePreview(file) {\n    if (!file.url && !file.preview) {\n      file.preview = await getBase64(file.originFileObj);\n    }\n\n    setPreviewImage(file.url || file.preview);\n    setPreviewVisible(true);\n    setPreviewTitle(file.name || file.url.substring(file.url.lastIndexOf('/') + 1),);\n  }\n\n  function handleCancel() {\n    setPreviewVisible(false);\n  }\n\n  return (\n    <>\n      <Upload\n        onChange={handleChange}\n        listType=\"picture-card\"\n        fileList={fileList}\n        action={`${API_URL}/user/emr/image/`}\n        name=\"image\"\n        headers={{ Authorization: `Bearer ${token}` }}\n        onPreview={handlePreview}>\n        {uploadButton}\n      </Upload>\n      <Modal\n        visible={previewVisible}\n        title={previewTitle}\n        footer={null}\n        onCancel={handleCancel}>\n        <img src={previewImage} alt=\"\" style={{ width: '100%' }} />\n      </Modal>\n    </>\n  )\n}\n\nexport default VisitImagesForm;","import axios from 'axios';\n\nimport { API_URL } from \"constant/apiUrl\";\n\nconst endpointPrefix = `${API_URL}/user/disease-category`;\n\nexport function getDiseaseCategoryAPI(search = \"\") {\n  const url = `${endpointPrefix}/?search=${search}`;\n  return axios.get(url);\n}","import axios from 'axios';\n\nimport { API_URL } from \"constant/apiUrl\";\n\nconst endpointPrefix = `${API_URL}/user/service`;\n\nexport function getServicesAPI(search = \"\") {\n  const url = `${endpointPrefix}/?search=${search}`;\n  return axios.get(url);\n}\n\nexport function getServiceDetailsAPI(id) {\n  const url = `${endpointPrefix}/${id}/`;\n  return axios.get(url);\n}","import axios from 'axios';\n\nimport { API_URL } from \"constant/apiUrl\";\n\nconst endpointPrefix = `${API_URL}/user/drug-category`;\n\nexport function getDrugCategoryAPI(search = \"\") {\n  const url = `${endpointPrefix}/?search=${search}`;\n  return axios.get(url);\n}","import axios from 'axios';\n\nimport { API_URL } from \"constant/apiUrl\";\n\nconst endpointPrefix = `${API_URL}/user/drug-instruction`;\n\nexport function getDrugInstructionsAPI() {\n  const url = `${endpointPrefix}/`;\n  return axios.get(url);\n}","import React, { useState, useEffect } from 'react';\nimport {\n  Collapse,\n  PageHeader,\n  message,\n  Divider,\n  Button,\n  Row,\n  Col,\n  Space,\n  Spin,\n  Form,\n  Input,\n  DatePicker,\n  Select,\n  Radio,\n  Tabs\n} from 'antd';\nimport moment from 'moment';\nimport { connect } from 'react-redux';\nimport VisitDiseaseForm from 'forms/Visit/VisitDiseaseForm';\nimport VisitServiceForm from 'forms/Visit/VisitServiceForm';\nimport VisitDrugForm from 'forms/Visit/VisitDrugForm';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { removeDuplicates } from 'utils/array';\nimport VisitImagesForm from 'forms/Visit/VisitImagesForm';\nimport { FileDoneOutlined, SaveOutlined, DeleteOutlined, MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\n\n// APIs\nimport { getDiseaseCategoryAPI } from 'services/user/disease-category.service';\nimport { getServicesAPI } from 'services/user/medical-service.service';\nimport { getDrugCategoryAPI } from 'services/user/drug-category.service';\nimport { getDrugInstructionsAPI } from 'services/user/drug-instruction.service';\nimport { getDiseaseCategoryAPI as adminGetDiseaseCategoryAPI } from 'services/admin/disease-category.service';\nimport { getServicesAPI as adminGetServicesAPI } from 'services/admin/medical-service.service';\nimport { getDrugCategoryAPI as adminGetDrugCategoryAPI } from 'services/admin/drug-category.service';\nimport { getDrugInstructionsAPI as adminGetDrugInstructionsAPI } from 'services/admin/drug-instruction.service';\nimport { getEMRHistoryAPI, updateEMRAPI, completeEMRAPI } from 'services/user/emr.service';\nimport { deleteVisitAPI } from 'services/user/visit.service';\nimport { getDrugsAPI as adminGetDrugsAPI } from 'services/admin/drug.service';\nimport { getDrugsAPI } from 'services/user/drug.service';\n\nconst { Option } = Select;\nconst { useForm } = Form;\n\nconst ExaminationPage = props => {\n\n  const user = props.user;\n  const history = useHistory();\n  const params = useParams();\n\n  const [diseaseCategories, setDiseaseCategories] = useState([]);\n  const [services, setServices] = useState([]);\n  const [drugCategories, setDrugCategories] = useState([]);\n  const [drugs, setDrugs] = useState([]);\n  const [drugInstructions, setDrugInstructions] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [emr, setEmr] = useState(null);\n\n  const [livingFncLoading, setLivingFncLoading] = useState(false);\n  const [diseaseLoading, setDiseaseLoading] = useState(false);\n  const [serviceLoading, setServiceLoading] = useState(false);\n  const [drugLoading, setDrugLoading] = useState(false);\n  const [finishLoading, setFinishLoading] = useState(false);\n  const [isSavingEmr, setIsSavingEmr] = useState(false);\n\n  const [emrForm] = useForm();\n\n  async function getDiseaseCategories() {\n    try {\n      let diseaseCategoryResponse;\n      if (user.role.name === \"admin\") {\n        diseaseCategoryResponse = await adminGetDiseaseCategoryAPI();\n      } else {\n        diseaseCategoryResponse = await getDiseaseCategoryAPI()\n      }\n      const diseaseCategoriesData = diseaseCategoryResponse.data;\n      setDiseaseCategories(diseaseCategoriesData);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async function getServices() {\n    try {\n      let servicesResponse;\n      if (user.role.name === \"admin\") {\n        servicesResponse = await adminGetServicesAPI();\n      } else {\n        servicesResponse = await getServicesAPI()\n      }\n      const servicesData = servicesResponse.data;\n      setServices(servicesData);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async function getDrugCategories() {\n    try {\n      let drugCategoryResponse;\n      if (user.role.name === \"admin\") {\n        drugCategoryResponse = await adminGetDrugCategoryAPI();\n      } else {\n        drugCategoryResponse = await getDrugCategoryAPI()\n      }\n      const drugCategoriesData = drugCategoryResponse.data;\n      setDrugCategories(drugCategoriesData);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async function getDrugs(drugCategory) {\n    try {\n      setDrugLoading(true);\n      let drugResponse;\n      if (user.role.name === \"admin\") {\n        drugResponse = await adminGetDrugsAPI({ drug_category: drugCategory });\n      } else {\n        drugResponse = await getDrugsAPI({ drug_category: drugCategory })\n      }\n      const drugData = drugResponse.data;\n      setDrugs(drugData);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setDrugLoading(false);\n    }\n  }\n\n  async function getDrugInstructions() {\n    try {\n      let drugInsResponse;\n      if (user.role.name === \"admin\") {\n        drugInsResponse = await adminGetDrugInstructionsAPI();\n      } else {\n        drugInsResponse = await getDrugInstructionsAPI()\n      }\n      const drugInsData = drugInsResponse.data;\n      setDrugInstructions(drugInsData);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async function getEmrDetail(emrId) {\n    try {\n      setLoading(true);\n      const emrList = await getEMRHistoryAPI(emrId);\n      const data = emrList.data.data;\n      const emr = data.find(emr => emr.id === emrId && emr.completed_at === null);\n      setEmr(emr);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  async function getInitialData() {\n    const emr = params.emr;\n    await Promise.all([\n      getEmrDetail(emr),\n      getDiseaseCategories(),\n      getServices(),\n      getDrugCategories(),\n      getDrugInstructions()\n    ]);\n  }\n\n  useEffect(() => {\n    if (user) {\n      getInitialData();\n    }\n  }, [user]);\n\n  async function handleChangeDrugCategory(category) {\n    await getDrugs(category);\n  }\n\n  async function handleFinishExamination(visitId) {\n    try {\n      setFinishLoading(true);\n      const completeResponse = await completeEMRAPI(visitId);\n      const deleteResponse = await deleteVisitAPI(visitId);\n      history.goBack();\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setFinishLoading(false);\n    }\n  }\n\n  async function handleSaveEmr() {\n\n    const values = await emrForm.validateFields();\n\n    const emrBody = {\n      patient: emr.patient,\n      physician: user,\n      room: emr.room,\n      medical_record: {\n        administrative: {\n          fullname: values.fullname || null,\n          dayOfBirth: values.dayOfBirth?.format('DD/MM/YYYY') || null,\n          gender: values.gender || null,\n          job: values.job || null,\n          ethnicity: values.ethnicity || null,\n          expatriate: values.expatriate || null,\n          address: values.address || null,\n          workplace: values.workplace || null,\n          object: values.object || null,\n          insurance_expirity: values.insurance_expirity?.format('DD/MM/YYYY') || null,\n          insurance_number: values.insurance_number || null,\n          family_member_and_address: values.family_member_and_address || null,\n          phone: values.phone || null,\n          checkin_at: values.checkin || null,\n          previous_diagnose: values.previous_diagnose || null,\n          come_from: values.come_from || null\n        },\n        present_complaint: values.present_complaint || null,\n        ask: {\n          pathological_process: values.pathological_process || null,\n          self_medical_history: values.self_medical_history || null,\n          family_medical_history: values.family_medical_history || null\n        },\n        examination: {\n          heartbeat: values.heartbeat || null,\n          temperature: values.temperature || null,\n          blood_pressure: values.blood_pressure || null,\n          breathing: values.breathing || null,\n          weight: values.weight || null,\n          body: values.body || null,\n          partials: values.partials || null,\n          subclinical_summary: values.subclinical_summary || null,\n          initial_diagnose: values.initial_diagnose || null,\n          drugs: values.drugs || null,\n          processed: values.processed || null,\n          diagnose: values.diagnose || null,\n          from_date: values.from_date?.format('DD/MM/YYYY') || null,\n          to_date: values.to_date?.format('DD/MM/YYYY') || null,\n        },\n        summary: {\n          pathological_process_and_clinical_course: values.pathological_process_and_clinical_course || null,\n          valuable_subclinical_summary: values.valuable_subclinical_summary || null,\n          primary_disease: values.primary_disease || null,\n          sub_disease: values.sub_disease || null,\n          treatment_method: values.treatment_method || null,\n          patient_status: values.patient_status || null,\n          direction_of_treatment: values.direction_of_treatment || null,\n          services: values.services || null,\n          attachments: emr.medical_record.summary.attachments || null\n        }\n      }\n    }\n    try {\n      setIsSavingEmr(true);\n      await updateEMRAPI(emr.id, emrBody);\n      message.success(\"Lưu bệnh án thành công\");\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setIsSavingEmr(false);\n    }\n\n\n  }\n\n  async function handleUploadChange({ event, file, fileList }, emrId) {\n    console.log(\"change\");\n\n    if (file && file.status === \"done\") {\n\n      try {\n\n        // Upload image\n        const response = file.response;\n        const fileListElement = { uid: response.url, id: response.url, url: response.url };\n        const cloneEmr = { ...emr };\n        cloneEmr.medical_record.summary.attachments = [...cloneEmr.medical_record.summary.attachments, ...[fileListElement]];\n        const updateRes = await updateEMRAPI(emrId, cloneEmr);\n        setEmr(cloneEmr);\n        message.success({ content: \"Lưu thành công\" });\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    if (file && file.status === \"removed\") {\n      try {\n        const cloneEmr = { ...emr };\n        cloneEmr.medical_record.summary.attachments = fileList;\n        const updateRes = await updateEMRAPI(emrId, cloneEmr);\n        setEmr(cloneEmr);\n        message.success({ content: \"Lưu thành công\" });\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  }\n\n  // useEffect(() => {\n  //   console.log(emr);\n  // }, [emr]);\n\n  function getDateString(dateStr) {\n    let result = \"\";\n    const momentObj = moment(dateStr);\n    result = `${momentObj.hour()} giờ ${momentObj.minute()} phút ngày ${momentObj.date()} tháng ${momentObj.month()} năm ${momentObj.year()}`;\n    return result;\n  }\n\n  function getTodayString() {\n    const now = new Date();\n    return `Ngày ${now.getDate()} tháng ${now.getMonth() + 1}, năm ${now.getFullYear()}`\n  }\n\n  return (\n    <>\n      <PageHeader title=\"Bệnh án ngoại trú\" onBack={() => history.goBack()} />\n      {\n        emr ?\n          <>\n            <Spin spinning={isSavingEmr}>\n              <Form layout=\"vertical\" form={emrForm} initialValues={\n                { drugs: emr.medical_record.examination.drugs },\n                { services: emr.medical_record.summary.services }\n              }>\n\n                {/* <Descriptions title=\"Thông tin bệnh nhân\">\n              <Descriptions.Item span={1} label=\"Họ và tên\">\n                {emr.patient.first_name} {emr.patient.last_name} ({emr.patient.gender})\n                    </Descriptions.Item>\n              <Descriptions.Item span={1} label=\"Ngày sinh\">\n                {emr.patient.DOB}\n              </Descriptions.Item>\n            </Descriptions>\n\n            <Descriptions title={`Thông tin khám bệnh (Phòng khám: ${emr.room})`}>\n              <Descriptions.Item span={1} label=\"Ngày vào khám\">{moment(emr.created_at).format(\"DD/MM/YYYY HH:mm:ss\")}</Descriptions.Item>\n              <Descriptions.Item span={1} label=\"Bác sĩ khám bệnh\">\n                {emr.physician.first_name} {emr.physician.last_name}\n              </Descriptions.Item>\n            </Descriptions>\n\n            <Collapse defaultActiveKey={[\"living-function\", \"diseases\", \"services\", \"drugs\", \"images\"]}>\n              <Collapse.Panel header=\"Dấu hiệu sinh tồn\" key=\"living-function\">\n                <VisitLivingFunctionForm\n                  onFinish={(values) => handleSaveLivingFunctions(emr.id, values)}\n                  loading={livingFncLoading}\n                  currentValues={emr.living_functions} />\n              </Collapse.Panel>\n\n              <Collapse.Panel header=\"Bệnh\" key=\"diseases\">\n                <VisitDiseaseForm\n                  categories={diseaseCategories}\n                  user={user}\n                  loading={diseaseLoading}\n                  onFinish={(values) => handleSaveDiseases(emr.id, values)}\n                  currentValues={emr} />\n              </Collapse.Panel>\n              <Collapse.Panel header=\"Chỉ định dịch vụ\" key=\"services\">\n                <VisitServiceForm\n                  user={user}\n                  loading={serviceLoading}\n                  services={services}\n                  onFinish={(values) => handleSaveServices(emr.id, values)}\n                  currentValues={emr} />\n              </Collapse.Panel>\n              <Collapse.Panel header=\"Kê đơn thuốc\" key=\"drugs\">\n                <VisitDrugForm\n                  user={user}\n                  categories={drugCategories}\n                  loading={drugLoading}\n                  instructions={drugInstructions}\n                  onFinish={(values) => handleSaveDrugs(emr.id, values)}\n                  currentValues={emr} />\n              </Collapse.Panel>\n              <Collapse.Panel header=\"Hình ảnh\" key=\"images\">\n                <VisitImagesForm\n                  emrId=\"288e8054-fe90-45da-acb1-62c76a8c102c\"\n                  onChange={(e) => handleUploadChange(e, emr.id)}\n                  fileList={emr.images} />\n              </Collapse.Panel>\n            </Collapse> */}\n\n                <Row gutter={15}>\n                  <Col flex={1}>\n                    <Form.Item label=\"Sở y tế\" name=\"health_service_dept\">\n                      <Input />\n                    </Form.Item>\n                  </Col>\n                  <Col flex={1}>\n                    <Form.Item label=\"Bệnh viện\" name=\"hospital\">\n                      <Input />\n                    </Form.Item>\n                  </Col>\n                  <Col flex={1}>\n                    <Form.Item label=\"Khoa\" name=\"room\" initialValue={emr.room.name}>\n                      <Input readOnly />\n                    </Form.Item>\n                  </Col>\n                </Row>\n\n                <Collapse defaultActiveKey={[\"administrative\", \"present-complaint\", \"ask\", \"examination\", \"summary\"]}>\n                  <Collapse.Panel header={<strong className=\"uppercase\">i. Hành chính</strong>} key=\"administrative\">\n                    <Row gutter={15}>\n                      <Col flex=\"0 0 33.33%\">\n                        <Form.Item label=\"1. Họ và tên\" name=\"fullname\" initialValue={(emr.patient.first_name + \" \" + emr.patient.last_name).toUpperCase()}>\n                          <Input />\n                        </Form.Item>\n                      </Col>\n                      <Col flex=\"0 0 33.33%\">\n                        <Form.Item label=\"2. Sinh ngày\" name=\"dayOfBirth\" initialValue={moment(emr.patient.DOB)}>\n                          <DatePicker format=\"DD/MM/YYYY\" style={{ width: '100%' }} />\n                        </Form.Item>\n                      </Col>\n                      <Col flex=\"0 0 33.33%\">\n                        <Form.Item label=\"3. Giới tính\" name=\"gender\" initialValue={emr.patient.gender}>\n                          <Select>\n                            <Select.Option value=\"Nam\">Nam</Select.Option>\n                            <Select.Option value=\"Nữ\">Nữ</Select.Option>\n                          </Select>\n                        </Form.Item>\n                      </Col>\n                    </Row>\n                    <Row gutter={15}>\n                      <Col flex=\"0 0 33.33%\">\n                        <Form.Item label=\"4. Nghề nghiệp\" name=\"job\">\n                          <Input />\n                        </Form.Item>\n                      </Col>\n                      <Col flex=\"0 0 33.33%\">\n                        <Form.Item label=\"5. Dân tộc\" name=\"ethnicity\">\n                          <Input />\n                        </Form.Item>\n                      </Col>\n                      <Col flex=\"0 0 33.33%\">\n                        <Form.Item label=\"6. Ngoại kiều\" name=\"expatriate\">\n                          <Input />\n                        </Form.Item>\n                      </Col>\n                    </Row>\n\n                    <Form.Item label=\"7. Địa chỉ\" name=\"address\">\n                      <Input />\n                    </Form.Item>\n\n                    <Row gutter={15}>\n                      <Col flex=\"0 0 50%\">\n                        <Form.Item label=\"8. Nơi làm việc\" name=\"workplace\">\n                          <Input />\n                        </Form.Item>\n                      </Col>\n                      <Col>\n                        <Form.Item label=\"9. Đối tượng\" name=\"object\">\n                          <Radio.Group>\n                            <Radio value=\"BHYT\">1. BHYT</Radio>\n                            <Radio value=\"Thu phí\">2. Thu phí</Radio>\n                            <Radio value=\"Miễn phí\">3. Miễn phí</Radio>\n                            <Radio value=\"Khác\">4. Khác</Radio>\n                          </Radio.Group>\n                        </Form.Item>\n                      </Col>\n                    </Row>\n\n                    <Row gutter={15}>\n                      <Col flex=\"0 0 50%\">\n                        <Form.Item label=\"10. Giá trị BHYT\" name=\"insurance_expirity\">\n                          <DatePicker style={{ width: '100%' }} format=\"DD/MM/YYYY\" />\n                        </Form.Item>\n                      </Col>\n                      <Col flex=\"0 0 50%\">\n                        <Form.Item label=\"Số thẻ BHYT\" name=\"insurance_number\">\n                          <Input />\n                        </Form.Item>\n                      </Col>\n                    </Row>\n\n                    <Row gutter={15}>\n                      <Col flex=\"0 0 50%\">\n                        <Form.Item label=\"11. Họ tên, địa chỉ người nhà khi cần báo tin\" name=\"family_member_and_address\">\n                          <Input.TextArea rows={2} />\n                        </Form.Item>\n                      </Col>\n                      <Col flex=\"0 0 50%\">\n                        <Form.Item label=\"Điện thoại\" initialValue={emr.patient.phone} name=\"phone\">\n                          <Input />\n                        </Form.Item>\n                      </Col>\n                    </Row>\n\n\n                    <Form.Item label=\"12. Đến khám bệnh lúc\" initialValue={getDateString(emr.created_at)} name=\"checkin\">\n                      <Input readOnly />\n                    </Form.Item>\n\n                    <Row gutter={15}>\n                      <Col flex={1}>\n                        <Form.Item label=\"13. Chẩn đoán của nơi giới thiệu\" name=\"previous_diagnose\" initialValue={emr.medical_record.administrative.previous_diagnose}>\n                          <Input />\n                        </Form.Item>\n                      </Col>\n                      <Col>\n                        <Form.Item label=\"Nơi giới thiệu\" name=\"come_from\" initialValue={emr.medical_record.administrative.come_from}>\n                          <Radio.Group>\n                            <Radio value=\"Y tế\">1. Y tế</Radio>\n                            <Radio value=\"Tự đến\">2. Tự đến</Radio>\n                          </Radio.Group>\n                        </Form.Item>\n                      </Col>\n                    </Row>\n\n                  </Collapse.Panel>\n                  <Collapse.Panel header={<strong className=\"uppercase\">II. Lý do vào viện</strong>} key=\"present-complaint\">\n                    <Form.Item label=\"Lý do vào viện\" name=\"present_complaint\" initialValue={emr.medical_record.present_complaint}>\n                      <Input />\n                    </Form.Item>\n                  </Collapse.Panel>\n                  <Collapse.Panel header={<strong className=\"uppercase\">iii. hỏi bệnh</strong>} key=\"ask\">\n                    <Form.Item label=\"1. Quá trình bệnh lý\" name=\"pathological_process\" initialValue={emr.medical_record.ask.pathological_process}>\n                      <Input.TextArea autoSize={{ minRows: 3, maxRows: 7 }} />\n                    </Form.Item>\n                    <Form.Item label=\"2. Tiền sử bệnh\" name=\"self_medical_history\" className=\"mb-3\" initialValue={emr.medical_record.ask.self_medical_history}>\n                      <Input placeholder=\"Bản thân\" />\n                    </Form.Item>\n                    <Form.Item name=\"family_medical_history\" initialValue={emr.medical_record.ask.family_medical_history}>\n                      <Input placeholder=\"Gia đình\" />\n                    </Form.Item>\n                  </Collapse.Panel>\n                  <Collapse.Panel header={<strong className=\"uppercase\">iv. khám bệnh</strong>} key=\"examination\">\n                    <Row gutter={15}>\n                      <Col flex={1}>\n                        <Form.Item label=\"1. Toàn thân\" name=\"body\" initialValue={emr.medical_record.examination.body}>\n                          <Input.TextArea rows={7} />\n                        </Form.Item>\n                      </Col>\n                      <Col>\n                        <div className=\"border border-solid border-gray-400 p-2\">\n                          <Form.Item className=\"mb-2\" name=\"heartbeat\" initialValue={emr.medical_record.examination.heartbeat}>\n                            <Input addonBefore={<div style={{ width: 80 }}>Mạch</div>} suffix=\"lần/ph\" />\n                          </Form.Item>\n                          <Form.Item className=\"mb-2\" name=\"temperature\" initialValue={emr.medical_record.examination.temperature}>\n                            <Input addonBefore={<div style={{ width: 80 }}>Nhiệt độ</div>} suffix=\"°C\" />\n                          </Form.Item>\n                          <Form.Item className=\"mb-2\" name=\"blood_pressure\" initialValue={emr.medical_record.examination.blood_pressure}>\n                            <Input addonBefore={<div style={{ width: 80 }}>Huyết áp</div>} suffix=\"mmHg\" />\n                          </Form.Item>\n                          <Form.Item className=\"mb-2\" name=\"breathing\" initialValue={emr.medical_record.examination.breathing}>\n                            <Input addonBefore={<div style={{ width: 80 }}>Nhịp thở</div>} suffix=\"lần/ph\" />\n                          </Form.Item>\n                          <Form.Item className=\"mb-0\" name=\"weight\" initialValue={emr.medical_record.examination.weight}>\n                            <Input addonBefore={<div style={{ width: 80 }}>Câng nặng</div>} suffix=\"kg\" />\n                          </Form.Item>\n                        </div>\n                      </Col>\n                    </Row>\n\n                    <Form.Item label=\"2. Các bộ phận\" name=\"partials\" initialValue={emr.medical_record.examination.partials}>\n                      <Input.TextArea rows={6} />\n                    </Form.Item>\n\n                    <Form.Item label=\"3. Tóm tắt kết quả cận lâm sàng\" name=\"subclinical_summary\" initialValue={emr.medical_record.examination.subclinical_summary}>\n                      <Input.TextArea rows={6} />\n                    </Form.Item>\n\n                    <Form.Item label=\"4. Chẩn đoán ban đầu\" name=\"initial_diagnose\" initialValue={emr.medical_record.examination.initial_diagnose}>\n                      <Input />\n                    </Form.Item>\n\n                    <div className=\"mb-3\">5. Đã xử lý (thuốc, chăm sóc)</div>\n\n                    <Form.List name=\"drugs\">\n                      {(fields, { add, remove }) => (\n                        <>\n                          {\n                            fields.map((field, index) => (\n                              <Row gutter={15} key={field.key} align=\"middle\">\n                                <Col>{index + 1}</Col>\n                                <Col flex=\"0 0 220px\">\n                                  <Form.Item\n                                    {...field}\n                                    label=\"Nhóm thuốc\"\n                                    name={[field.name, 'drugCategory']}\n                                    fieldKey={[field.fieldKey, 'drugCategory']}\n                                    rules={[{ required: true, message: \"Trường này là bắt buộc\" }]}>\n                                    <Select onChange={handleChangeDrugCategory}>\n                                      {\n                                        drugCategories.map(cat => (\n                                          <Option key={cat.id} value={cat.id}>{cat.name}</Option>\n                                        ))\n                                      }\n                                    </Select>\n                                  </Form.Item>\n                                </Col>\n                                <Col flex=\"1 0 220px\">\n                                  <Form.Item\n                                    {...field}\n                                    label=\"Thuốc\"\n                                    name={[field.name, 'drug']}\n                                    fieldKey={[field.fieldKey, 'drug']}\n                                    rules={[{ required: true, message: \"Trường này là bắt buộc\" }]}>\n                                    <Select loading={drugLoading}>\n                                      {\n                                        drugs.map(drug => (\n                                          <Option key={drug.id} value={`${drug.name} ${drug.strength}`}>{drug.name} {drug.strength}</Option>\n                                        ))\n                                      }\n                                    </Select>\n                                  </Form.Item>\n                                </Col>\n                                <Col flex=\"0 0 120px\">\n                                  <Form.Item\n                                    {...field}\n                                    name={[field.name, 'drugInstruction']}\n                                    fieldKey={[field.fieldKey, 'drugInstruction']}\n                                    rules={[{ required: true, message: \"Trường này là bắt buộc\" }]}\n                                    label=\"Cách dùng\"\n                                    style={{ minWidth: 200 }}>\n                                    <Select>\n                                      {\n                                        drugInstructions.map(ins => (\n                                          <Option key={ins.id} value={ins.instruction}>{ins.instruction}</Option>\n                                        ))\n                                      }\n                                    </Select>\n                                  </Form.Item>\n                                </Col>\n                                {/* </Row> */}\n                                {/* <Row gutter={15}> */}\n                                {/* <Col flex=\"0 0 80px\">\n                                <Form.Item\n                                  {...field}\n                                  name={[field.name, 'numberOfDays']}\n                                  fieldKey={[field.fieldKey, 'numberOfDays']}\n                                  rules={[{ required: true, message: \"Trường này là bắt buộc\" }]}\n                                  label=\"Số ngày\">\n                                  <Input type=\"number\" />\n                                </Form.Item>\n                              </Col>\n                              <Col flex=\"0 0 80px\">\n                                <Form.Item label=\"Sáng\" name={[field.name, 'morning']}>\n                                  <Input type=\"number\" />\n                                </Form.Item>\n                              </Col>\n                              <Col flex=\"0 0 80px\">\n                                <Form.Item label=\"Trưa\" name={[field.name, 'afternoon']}>\n                                  <Input type=\"number\" />\n                                </Form.Item>\n                              </Col>\n                              <Col flex=\"0 0 80px\">\n                                <Form.Item label=\"Chiều\" name={[field.name, 'evening']}>\n                                  <Input type=\"number\" />\n                                </Form.Item>\n                              </Col>\n                              <Col flex=\"0 0 80px\">\n                                <Form.Item label=\"Tối\" name={[field.name, 'night']}>\n                                  <Input type=\"number\" />\n                                </Form.Item>\n                              </Col> */}\n                                <Col flex=\"0 0 80px\">\n                                  <Form.Item\n                                    {...field}\n                                    label=\"Số lượng\"\n                                    name={[field.name, 'total']}\n                                    fieldKey={[field.fieldKey, 'total']}>\n                                    <Input type=\"number\" />\n                                  </Form.Item>\n                                </Col>\n                                <Col>\n                                  <MinusCircleOutlined onClick={() => remove(field.name)} />\n                                </Col>\n                              </Row>\n                            ))\n\n                          }\n                          <Form.Item>\n                            <Button type=\"dashed\" block onClick={() => add()} icon={<PlusOutlined />}>Thêm thuốc</Button>\n                          </Form.Item>\n                        </>\n                      )}\n                    </Form.List>\n\n                    <Form.Item name=\"processed\" initialValue={emr.medical_record.examination.processed}>\n                      <Input.TextArea rows={6} />\n                    </Form.Item>\n\n                    <Form.Item label=\"6. Chẩn đoán khi ra viện\" name=\"diagnose\" initialValue={emr.medical_record.examination.diagnose}>\n                      <Input />\n                    </Form.Item>\n\n                    <Row gutter={15}>\n                      <Col>\n                        <Form.Item label=\"7. Điều trị ngoại trú từ ngày\" initialValue={moment(emr.created_at)} name=\"from_date\">\n                          <DatePicker format=\"DD/MM/YYYY\" />\n                        </Form.Item>\n                      </Col>\n                      <Col>\n                        <Form.Item label=\"Đến ngày\" name=\"to_date\" initialValue={moment(emr.medical_record.examination.to_date, \"DD/MM/YYYY\")}>\n                          <DatePicker format=\"DD/MM/YYYY\" />\n                        </Form.Item>\n                      </Col>\n                    </Row>\n                  </Collapse.Panel>\n                  <Collapse.Panel header={<strong className=\"uppercase\">tổng kết bệnh án</strong>} key=\"summary\">\n                    <Form.Item label=\"1. Quá trình bệnh lý và diễn biến lâm sàng\" name=\"pathological_process_and_clinical_course\" initialValue={emr.medical_record.summary.pathological_process_and_clinical_course}>\n                      <Input.TextArea rows={6} />\n                    </Form.Item>\n\n                    <Form.Item label=\"2. Tóm tắt kết quả xét nghiệm cận lâm sàng có giá trị chẩn đoán\" name=\"valuable_subclinical_summary\" initialValue={emr.medical_record.summary.valuable_subclinical_summary}>\n                      <Input.TextArea rows={6} />\n                    </Form.Item>\n\n                    <Form.Item label=\"3. Chuẩn đoán ra viện\" className=\"mb-3\" name=\"primary_disease\" initialValue={emr.medical_record.summary.primary_disease}>\n                      <Input addonBefore=\"Bệnh chính\" />\n                    </Form.Item>\n                    <Form.Item name=\"sub_disease\" initialValue={emr.medical_record.summary.sub_disease}>\n                      <Input addonBefore=\"Bệnh phụ (nếu có)\" />\n                    </Form.Item>\n\n                    <Form.Item label=\"4. Phương pháp điều trị\" name=\"treatment_method\" initialValue={emr.medical_record.summary.treatment_method}>\n                      <Input.TextArea rows={6} />\n                    </Form.Item>\n\n                    <Form.Item label=\"5. Tình trạng người bệnh ra viện\" name=\"patient_status\" initialValue={emr.medical_record.summary.patient_status}>\n                      <Input.TextArea rows={6} />\n                    </Form.Item>\n\n                    <Form.Item label=\"6. Hướng điều trị và các chế độ tiếp theo\" name=\"direction_of_treatment\" initialValue={emr.medical_record.summary.direction_of_treatment}>\n                      <Input.TextArea rows={6} />\n                    </Form.Item>\n\n\n\n                    <Row gutter={15} className=\"mb-5\">\n                      <Col flex=\"0 0 50%\">\n                        <div className=\"mb-3\">Chỉ định dịch vụ</div>\n                        <Form.List name=\"services\">\n                          {\n                            (fields, { add, remove }) => (\n                              <>\n                                {\n                                  fields.map((field, index) => (\n                                    <Row gutter={15} key={field.key} align=\"middle\" className=\"mb-5\">\n                                      <Col>{index + 1}</Col>\n                                      <Col flex={1}>\n                                        <Form.Item {...field} name={[field.name, 'name']} fieldKey={[field.fieldKey, 'name']} style={{ margin: 0 }} rules={[{ required: true, message: \"Trường này là bắt buộc\" }]}>\n                                          <Select placeholder=\"Chọn dịch vụ\">\n                                            {\n                                              services.map((service, index) => (\n                                                <Option value={service.name} key={service.id}>\n                                                  {service.name}\n                                                </Option>\n                                              ))\n                                            }\n                                          </Select>\n                                        </Form.Item>\n                                      </Col>\n                                      <Col>\n                                        <MinusCircleOutlined onClick={() => remove(field.name)} />\n                                      </Col>\n                                    </Row>\n                                  ))\n                                }\n                                <Form.Item>\n                                  <Button type=\"dashed\" block onClick={() => add()} icon={<PlusOutlined />}>Thêm dịch vụ</Button>\n                                </Form.Item>\n                              </>\n                            )\n                          }\n                        </Form.List>\n                      </Col>\n                      <Col flex=\"0 0 50%\">\n                        <div className=\"mb-3\">Tệp đính kèm</div>\n                        <VisitImagesForm onChange={(e) => handleUploadChange(e, emr.id)} fileList={emr.medical_record.summary.attachments || []} />\n                      </Col>\n                    </Row>\n                  </Collapse.Panel>\n                </Collapse>\n\n                <Divider />\n\n\n                <div className=\"text-right\">\n                  <Space>\n                    {/* <Button danger type=\"default\" size=\"large\" icon={<DeleteOutlined />}>Hủy đơn</Button> */}\n                    <Button type=\"default\" size=\"large\" onClick={handleSaveEmr} icon={<SaveOutlined />}>Lưu lại</Button>\n                    <Button type=\"primary\" size=\"large\" onClick={() => handleFinishExamination(emr.id)} loading={finishLoading} icon={<FileDoneOutlined />}>Kết thúc khám</Button>\n                  </Space>\n                </div>\n              </Form>\n            </Spin>\n          </>\n\n          :\n          <div className=\"py-10 text-center\"><Spin spinning={loading} /></div>\n      }\n    </>\n  )\n}\n\nconst mapStateToProps = state => ({\n  user: state.userState.user\n})\n\nexport default connect(mapStateToProps)(ExaminationPage);","import { Avatar, Row, Col, Spin, Upload, Form, Input, Select, DatePicker, Button, message } from 'antd';\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { LoadingOutlined, PlusOutlined } from '@ant-design/icons';\nimport { getBase64 } from 'utils/image';\nimport { API_URL } from 'constant/apiUrl';\nimport Cookie from 'js-cookie';\nimport moment from 'moment';\n\n\n// APIs\nimport { updateProfile } from 'services/user/user.service';\nimport { changePasswordAPI } from 'services/auth/auth.service';\n\nconst { Item, useForm } = Form;\n\nconst ProfilePage = props => {\n  const { user } = props;\n  const token = Cookie.get('EMR_token');\n\n  const [loading, setLoading] = useState(false);\n  const [updateLoading, setUpdateLoading] = useState(false);\n  const [changePasswordLoading, setChangePasswordLoading] = useState(false);\n  const [imageUrl, setImageUrl] = useState(user?.avatar);\n\n  const [changePasswordForm] = useForm();\n\n  useEffect(() => {\n    if (user && user.avatar) {\n      setImageUrl(user.avatar);\n    }\n  }, [user]);\n\n  const uploadButton = (\n    <div>\n      {loading ? <LoadingOutlined /> : <PlusOutlined />}\n      <div style={{ marginTop: 8 }}>Upload</div>\n    </div>\n  )\n\n  function handleChange(info) {\n    if (info.file.status === 'uploading') {\n      setLoading(true);\n      return;\n    }\n    if (info.file.status === 'done') {\n      setImageUrl(info.file.response.avatar);\n      setLoading(false);\n    }\n  };\n\n  async function handleSaveProfile(values) {\n    if (moment.isMoment(values.DOB)) {\n      values.DOB = values.DOB.format('YYYY-MM-DD');\n    }\n\n    try {\n      setUpdateLoading(true);\n      await updateProfile(values);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setUpdateLoading(false);\n    }\n  }\n\n  async function handleChangePassword(values) {\n    try {\n      setChangePasswordLoading(true);\n      await changePasswordAPI(values);\n      message.success(\"Đổi mật khẩu thành công\");\n      changePasswordForm.resetFields();\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setChangePasswordLoading(false);\n    }\n  }\n\n  return !user ? <Spin spinning={true} /> : (\n    <>\n      <Row gutter={60}>\n        <Col flex=\"0 0 50%\">\n          <h3 className=\"text-xl mb-3\">Hồ sơ cá nhân</h3>\n          <Upload\n            name=\"image\"\n            action={`${API_URL}/user/profile/avatar/`}\n            headers={{ Authorization: `Bearer ${token}` }}\n            method=\"PATCH\"\n            listType=\"picture-card\"\n            className=\"avatar-uploader\"\n            showUploadList={false}\n\n            onChange={handleChange} >\n            {imageUrl ? <img src={imageUrl} alt=\"avatar\" style={{ width: '100%' }} /> : uploadButton}\n          </Upload>\n\n          <Spin spinning={updateLoading}>\n            <Form layout=\"vertical\" onFinish={handleSaveProfile}>\n              <Row gutter={15}>\n                <Col flex=\"0 0 50%\">\n                  <Item label=\"Họ\" name=\"first_name\" initialValue={user.first_name}>\n                    <Input />\n                  </Item>\n                </Col>\n                <Col flex=\"0 0 50%\">\n                  <Item label=\"Tên\" name=\"last_name\" initialValue={user.last_name}>\n                    <Input />\n                  </Item>\n                </Col>\n              </Row>\n              <Row gutter={15}>\n                <Col flex=\"0 0 50%\">\n                  <Item label=\"Giới tính\" name=\"gender\" initialValue={user.gender}>\n                    <Select>\n                      <Select.Option value=\"Nam\">Nam</Select.Option>\n                      <Select.Option value=\"Nữ\">Nữ</Select.Option>\n                      <Select.Option value=\"Khác\">Khác</Select.Option>\n                    </Select>\n                  </Item>\n                </Col>\n                <Col flex=\"0 0 50%\">\n                  <Item label=\"Ngày sinh\" name=\"DOB\" initialValue={moment(user.DOB)}>\n                    <DatePicker style={{ width: '100%' }} format=\"DD/MM/YYYY\" />\n                  </Item>\n                </Col>\n              </Row>\n              <Row gutter={15}>\n                <Col flex=\"0 0 50%\">\n                  <Item label=\"Địa chỉ email\">\n                    <Input value={user.email} readOnly />\n                  </Item>\n                </Col>\n                <Col flex=\"0 0 50%\">\n                  <Item label=\"Điện thoại\" name=\"phone\" initialValue={user.phone}>\n                    <Input />\n                  </Item>\n                </Col>\n              </Row>\n              <Row gutter={15}>\n                <Col flex=\"0 0 50%\">\n                  <Item label=\"Nghề nghiệp\" name=\"job\" initialValue={user.job}>\n                    <Input />\n                  </Item>\n                </Col>\n                <Col flex=\"0 0 50%\">\n                  <Item label=\"Nơi làm việc\" name=\"workplace\" initialValue={user.workplace}>\n                    <Input />\n                  </Item>\n                </Col>\n              </Row>\n              <Row gutter={15}>\n                <Col flex=\"0 0 50%\">\n                  <Item label=\"Dân tộc\" name=\"ethnicity\" initialValue={user.ethnicity}>\n                    <Input />\n                  </Item>\n                </Col>\n                <Col flex=\"0 0 50%\">\n                  <Item label=\"Ngoại kiều\" name=\"expatriate\" initialValue={user.expatriate}>\n                    <Input />\n                  </Item>\n                </Col>\n              </Row>\n\n              <Form.Item label=\"Họ và tên người nhà\" name=\"family_member_name\" initialValue={user.family_member_name}>\n                <Input />\n              </Form.Item>\n\n              <Form.Item label=\"Địa chỉ\" name=\"address\" initialValue={user.address}>\n                <Input.TextArea autoSize={{ minRows: 2, maxRows: 4 }} />\n              </Form.Item>\n\n              <Form.Item label=\"Địa chỉ người nhà\" name=\"family_member_address\" initialValue={user.family_member_address}>\n                <Input.TextArea autoSize={{ minRows: 2, maxRows: 4 }} />\n              </Form.Item>\n\n              <Button type=\"primary\" htmlType=\"submit\">Cập nhật</Button>\n            </Form>\n          </Spin>\n\n        </Col>\n        <Col flex=\"0 0 50%\">\n          <h3 className=\"text-xl mb-3\">Đổi mật khẩu</h3>\n\n          <Spin spinning={changePasswordLoading}>\n            <Form layout=\"vertical\" onFinish={handleChangePassword} autoComplete=\"new-password\" form={changePasswordForm}>\n              <Item label=\"Mật khẩu cũ\" name=\"old_password\">\n                <Input.Password />\n              </Item>\n\n              <Item label=\"Mật khẩu mới\" name=\"new_password\">\n                <Input.Password />\n              </Item>\n\n              <Item label=\"Nhập lại mật khẩu mới\" name=\"confirm_password\">\n                <Input.Password />\n              </Item>\n\n              <Button type=\"primary\" htmlType=\"submit\">Đổi mật khẩu</Button>\n            </Form>\n          </Spin>\n\n        </Col>\n      </Row>\n\n    </>\n  )\n}\n\nconst mapStateToProps = state => ({\n  user: state.userState.user\n})\n\nexport default connect(mapStateToProps)(ProfilePage);","import React, { useState, useEffect } from 'react';\nimport { PageHeader, Descriptions, Spin, Table, Space, Button } from 'antd';\nimport { Link, useHistory, useRouteMatch } from 'react-router-dom';\nimport moment from 'moment';\nimport { EyeOutlined } from '@ant-design/icons';\n\n// APIs\nimport { getPatientDetailsAPI } from 'services/user/patient.service';\nimport { listEMRAPI } from 'services/user/emr.service';\nimport Circle from 'components/Circle/Circle';\n\nconst { Item } = Descriptions;\n\nconst PatientDetails = props => {\n\n  const { goBack } = useHistory();\n  const { params, url } = useRouteMatch();\n  const patientId = params.patientId;\n\n  const [patient, setPatient] = useState(null);\n  const [patientLoading, setPatientLoading] = useState(false);\n  const [EMRs, setEMRs] = useState(null);\n  const [EMRLoading, setEMRLoading] = useState(false);\n\n  const tableColumns = [\n    {\n      title: '#',\n      key: '#',\n      render: (_, __, index) => index + 1\n    },\n    {\n      title: 'Ngày khám bệnh',\n      key: 'date',\n      render: (_, row) => moment(row.Record.created_at).format(\"DD/MM/YYYY\")\n    },\n    {\n      title: 'Bác sĩ khám bệnh',\n      key: 'physician',\n      render: (_, row) => row.Record.physician.first_name + \" \" + row.Record.physician.last_name\n    },\n    {\n      title: 'Khoa khám',\n      key: 'room',\n      render: (_, row) => \"Khoa \" + row.Record.room.name\n    },\n    {\n      title: 'Trạng thái',\n      key: 'status',\n      render: (_, row) => <div className=\"flex items-center\">\n        <Circle color={row.Record.completed_at !== null ? 'success' : ''} />\n        <span className=\"ml-2\">{row.Record.completed_at !== null ? ' Đã đóng' : ' Chưa đóng'}</span>\n      </div>\n    },\n    {\n      title: 'Hành động',\n      key: 'actions',\n      render: (_, row) => <Space>\n        <Link to={`${url}/${row.Key}`}>\n          <Button icon={<EyeOutlined />}>Xem</Button>\n        </Link>\n\n      </Space>\n    }\n  ]\n\n  async function getPatientDetails(patientId) {\n    try {\n      setPatientLoading(true);\n      const patientResponse = await getPatientDetailsAPI(patientId);\n      setPatient(patientResponse.data);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setPatientLoading(false);\n    }\n  }\n\n  async function getPatientEMRs(patientId) {\n    try {\n      setEMRLoading(true);\n      const EMRResponse = await listEMRAPI({ patient_id: patientId });\n      setEMRs(EMRResponse.data.data);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setEMRLoading(false);\n    }\n  }\n\n  async function getInitialData() {\n    await Promise.all([\n      getPatientDetails(patientId),\n      getPatientEMRs(patientId)\n    ])\n  }\n\n  useEffect(() => {\n    getInitialData();\n  }, []);\n\n  return (\n    <>\n      <PageHeader onBack={goBack} title={patient ? patient.first_name + \" \" + patient.last_name : \"Chi tiết bệnh nhân\"} />\n\n      <Spin spinning={patientLoading}>\n        <Descriptions title=\"Thông tin cá nhân\" colon>\n          <Item label=\"Họ và tên\">{patient ? patient.first_name + \" \" + patient.last_name : \"Đang tải...\"}</Item>\n          <Item label=\"Giới tính\">{patient?.gender || \"Đang tải\"}</Item>\n          <Item label=\"Ngày sinh\">{patient ? moment(patient.DOB).format(\"DD/MM/YYYY\") : \"Đang tải\"}</Item>\n          <Item label=\"Điện thoại\">{patient?.phone || \"Đang tải\"}</Item>\n          <Item label=\"Địa chỉ\">{patient?.address || \"Đang cập nhật\"}</Item>\n        </Descriptions>\n      </Spin>\n\n      <div className=\"ant-descriptions-title mb-3\">Lịch sử khám bệnh</div>\n      <Table rowKey=\"id\" dataSource={EMRs} loading={EMRLoading} columns={tableColumns} />\n\n    </>\n  )\n}\n\nexport default PatientDetails;","import { Descriptions } from 'antd';\nimport React from 'react';\n\nconst { Item } = Descriptions;\n\nconst EmrDesc = props => {\n  const { emr } = props;\n  const {\n    medical_record: {\n      administrative: {\n        fullname,\n        dayOfBirth,\n        gender,\n        job,\n        ethnicity,\n        expatriate,\n        address,\n        workplace,\n        object,\n        insurance_expirity,\n        insurance_number,\n        family_member_name,\n        family_member_address,\n        phone,\n        checkin_at,\n        previous_diagnose,\n        come_from\n      },\n      present_complaint,\n      ask: {\n        pathological_process,\n        self_medical_history,\n        family_medical_history\n      },\n      examination: {\n        heartbeat,\n        temperature,\n        blood_pressure,\n        breathing,\n        weight,\n        body,\n        partials,\n        subclinical_summary,\n        initial_diagnose,\n        drugs,\n        processed,\n        diagnose,\n        from_date,\n        to_date\n      },\n      summary: {\n        pathological_process_and_clinical_course,\n        valuable_subclinical_summary,\n        primary_disease,\n        sub_disease,\n        treatment_method,\n        patient_status,\n        direction_of_treatment,\n        services,\n        attachments\n      }\n    }\n  } = emr;\n\n  return (\n    <div>\n      <div className=\"mb-2\">Khoa: Khoa {emr.room.name}</div>\n      <Descriptions title=\"I. Hành chính\" size=\"middle\" bordered column={2} className=\"mb-5\">\n        <Item label=\"1. Họ và tên\">{fullname}</Item>\n        <Item label=\"2. Ngày sinh\">{dayOfBirth}</Item>\n        <Item label=\"3. Giới tính\">{gender}</Item>\n        <Item label=\"4. Nghề nghiệp\">{job}</Item>\n        <Item label=\"5. Dân tộc\">{ethnicity}</Item>\n        <Item label=\"6. Ngoại kiều\">{expatriate}</Item>\n        <Item label=\"7. Địa chỉ\" span={2}>{address}</Item>\n        <Item label=\"8. Nơi làm việc\">{workplace}</Item>\n        <Item label=\"9. Đối tượng\">{object}</Item>\n        <Item label=\"10. BHYT giá trị đến ngày\">{insurance_expirity}</Item>\n        <Item label=\"Số thẻ BHYT\">{insurance_number}</Item>\n        <Item label=\"11. Họ tên, địa chỉ người nhà khi cần báo tin\" span={2}>{family_member_name}, {family_member_address}</Item>\n        <Item label=\"Điện thoại số\">{phone}</Item>\n        <Item label=\"12. Đến khám bệnh lúc\">{checkin_at}</Item>\n        <Item label=\"13. Chẩn đoán của nơi giới thiệu\">{previous_diagnose} ({come_from})</Item>\n      </Descriptions>\n      <Descriptions title=\"II. Lý do vào viện\" bordered size=\"middle\" className=\"mb-5\">\n        <Item label=\"Lý do vào viện\">{present_complaint}</Item>\n      </Descriptions>\n\n      <Descriptions title=\"III. Hỏi bệnh\" bordered layout=\"vertical\" column={2} className=\"mb-5\">\n        <Item label=\"1. Quá trình bệnh lý\" span={2}>\n          <div dangerouslySetInnerHTML={{ __html: pathological_process }} className=\"whitespace-pre-line\"></div>\n        </Item>\n        <Item label=\"2. Tiền sử bệnh bản thân\">{self_medical_history}</Item>\n        <Item label=\"Gia đình\">{family_medical_history}</Item>\n      </Descriptions>\n\n      <Descriptions title=\"IV. Khám bệnh\" bordered column={2} layout=\"vertical\" className=\"mb-5\">\n        <Item label=\"1. Toàn thân\" className=\"align-baseline\">\n          <div dangerouslySetInnerHTML={{ __html: body }} className=\"whitespace-pre-line\"></div>\n        </Item>\n        <Item label=\"Dấu hiệu sinh tồn\">\n          <div>Mạch: {heartbeat} <i className=\"ml-auto\">lần/ph</i></div>\n          <div>Nhiệt độ: {temperature} <i className=\"ml-auto\">°C</i></div>\n          <div>Huyết áp: {blood_pressure} <i className=\"ml-auto\">mmHg</i></div>\n          <div>Nhịp thở: {breathing} <i className=\"ml-auto\">lần/ph</i></div>\n          <div>Cân nặng: {weight} <i className=\"ml-auto\">kg</i></div>\n        </Item>\n        <Item label=\"2. Các bộ phận\" span={2} className=\"align-baseline\">\n          <div dangerouslySetInnerHTML={{ __html: partials }} className=\"whitespace-pre-line\"></div>\n        </Item>\n        <Item label=\"3. Tóm tắt kết quả cận lâm sàng\" span={2}>\n          <div dangerouslySetInnerHTML={{ __html: subclinical_summary }} className=\"whitespace-pre-line\"></div>\n        </Item>\n        <Item label=\"4. Chẩn đoán ban đầu\" span={2}>{initial_diagnose}</Item>\n        <Item label=\"5. Thuốc\">\n          {\n            drugs?.map((d, index) => {\n              return <div key={index}>{d.drug} x {d.total} ({d.drugInstruction})</div>\n            })\n          }\n        </Item>\n        <Item label=\"Đã xử lý\">\n          <div dangerouslySetInnerHTML={{ __html: processed }} className=\"whitespace-pre-line\"></div>\n        </Item>\n        <Item label=\"6. Chẩn đoán khi ra viện\" span={2}>{diagnose}</Item>\n        <Item label=\"7. Điều trị ngoại trú\">Từ ngày {from_date} đến ngày {to_date}</Item>\n      </Descriptions>\n\n      <Descriptions title=\"Tổng kết bệnh án\" bordered layout=\"vertical\" column={2}>\n        <Item label=\"1. Quá trình bệnh lý và diễn biến lâm sàng\" span={2}>\n          <div dangerouslySetInnerHTML={{ __html: pathological_process_and_clinical_course }} className=\"whitespace-pre-line\"></div>\n        </Item>\n        <Item label=\"2. Tóm tắt kết quả xét nghiệm cận lâm sàng có giá trị chẩn đoán\" span={2}>\n          <div dangerouslySetInnerHTML={{ __html: valuable_subclinical_summary }} className=\"whitespace-pre-line\"></div>\n        </Item>\n        <Item label=\"3. Chẩn đoán ra viện\" span={2}>\n          <div>Bệnh chính: {primary_disease}</div>\n          <div>Bệnh kèm theo (nếu có): {sub_disease}</div>\n        </Item>\n        <Item label=\"4. Phương pháp điều trị\" span={2}>\n          <div dangerouslySetInnerHTML={{ __html: treatment_method }} className=\"whitespace-pre-line\"></div>\n        </Item>\n        <Item label=\"5. Tình trạng người bệnh ra viện\">\n          <div dangerouslySetInnerHTML={{ __html: patient_status }} className=\"whitespace-pre-line\"></div>\n        </Item>\n        <Item label=\"6. Hướng điều trị và các chế độ tiếp theo\">\n          <div dangerouslySetInnerHTML={{ __html: direction_of_treatment }} className=\"whitespace-pre-line\"></div>\n        </Item>\n        <Item label=\"Dịch vụ\">\n          {\n            services?.map((s, i) => (\n              <div key={i}>{s.name || s.id}</div>\n            ))\n          }\n        </Item>\n        <Item label=\"Tệp đính kèm\">\n          {\n            attachments?.map((a, i) => (\n              <img src={a.url} key={i} style={{width: 200}} />\n            ))\n          }\n        </Item>\n      </Descriptions>\n    </div>\n  )\n}\n\nexport default EmrDesc;","import { Empty, PageHeader, Spin, Tabs } from 'antd';\nimport EmrDesc from 'components/EmrDesc/EmrDesc';\nimport React, { useState, useEffect } from 'react';\nimport { useHistory, useRouteMatch } from 'react-router-dom';\nimport { getEMRHistoryAPI } from 'services/user/emr.service';\n\nconst EmrDetailsPage = props => {\n\n  const { goBack } = useHistory();\n  const { params } = useRouteMatch();\n\n  const [emrHistory, setEmrHistory] = useState([]);\n  const [emrLoading, setEmrLoading] = useState(false);\n  const [selectedTab, setSelectedTab] = useState(\"\");\n\n  async function getEmrHistory(emrId) {\n    try {\n      setEmrLoading(true);\n      const res = await getEMRHistoryAPI(emrId);\n      const data = res.data.data;\n      setEmrHistory(data);\n      setSelectedTab(data.completed_at || data.updated_at || data.created_at);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setEmrLoading(false);\n    }\n  }\n\n  async function getInitialData() {\n    const emrId = params.emrId;\n    return await Promise.all([\n      getEmrHistory(emrId)\n    ])\n  }\n\n  useEffect(() => {\n    getInitialData();\n  }, []);\n\n  return (\n    <div className=\"bg-white p-3\">\n      <PageHeader onBack={goBack} title=\"Chi tiết bệnh án\" />\n      {\n        emrLoading ? <Spin spinning={true} /> :\n          emrHistory.length > 0 ?\n            <Tabs defaultActiveKey={selectedTab} onChange={(val) => setSelectedTab(val)}>\n              {\n                emrHistory.map(h => {\n                  return <Tabs.TabPane key={h.completed_at || h.updated_at || h.created_at} tab={h.completed_at || h.updated_at || h.created_at}>\n                    <EmrDesc emr={h} />\n                  </Tabs.TabPane>\n                })\n              }\n            </Tabs>\n            :\n            <Empty />\n      }\n    </div>\n  )\n}\n\nexport default EmrDetailsPage;","import React from 'react';\nimport { Link, Redirect, Switch, Route, useRouteMatch, useLocation } from 'react-router-dom';\nimport { Layout, Menu } from 'antd';\nimport {\n  IdcardOutlined,\n  CalendarOutlined,\n  ContainerOutlined,\n  ProfileOutlined,\n  NotificationOutlined} from '@ant-design/icons';\nimport NotificationPage from 'pages/common/notification/notification';\nimport VisitPage from 'pages/common/visit/visit';\nimport PatientPage from 'pages/common/patient/patient';\nimport AppointmentPage from 'pages/common/appointment/apointment';\nimport withPrivateRoute from 'HOCs/withPrivateRoute';\nimport CustomHeader from 'components/Header';\nimport ExaminationPage from 'pages/common/examination/examination';\nimport ProfilePage from 'pages/common/profile/profile';\nimport PatientDetails from 'pages/common/patient/patient-details';\nimport EmrDetailsPage from 'pages/common/patient/emr-details';\n\nconst { Sider, Content } = Layout;\n\nconst PhysicianLayout = () => {\n  const match = useRouteMatch();\n  const location = useLocation();\n  const path = match.path;\n\n  return (\n    <Layout>\n      <CustomHeader />\n      <Layout>\n        <Sider width={200} className=\"site-layout-background\">\n          <Menu\n            mode=\"inline\"\n            style={{ height: '100%', borderRight: 0 }}\n            selectedKeys={[location.pathname]}\n          >\n            <Menu.Item key=\"/physician/visit\" icon={<ContainerOutlined />}>\n              <Link to=\"/physician/visit\">Khám bệnh</Link>\n            </Menu.Item>\n            <Menu.Item key=\"/physician/patient\" icon={<IdcardOutlined />}>\n              <Link to=\"/physician/patient\">Bệnh nhân</Link>\n            </Menu.Item>\n            <Menu.Item key=\"/physician/appointment\" icon={<CalendarOutlined />}>\n              <Link to=\"/physician/appointment\">Lịch hẹn</Link>\n            </Menu.Item>\n            <Menu.Item key=\"/physician/profile\" icon={<ProfileOutlined />}>\n              <Link to=\"/physician/profile\">Hồ sơ</Link>\n            </Menu.Item>\n          </Menu>\n        </Sider>\n        <Layout style={{ padding: '0 24px 24px' }}>\n          <Content\n            className=\"site-layout-background\"\n            style={{\n              padding: 24,\n              margin: 0,\n              minHeight: 280,\n            }}\n          >\n            <Switch>\n\n              {/* Visit */}\n              <Route path={`${path}/visit`} exact>\n                <VisitPage />\n              </Route>\n\n              <Route path={`${path}/visit/:emr`}>\n                <ExaminationPage />\n              </Route>\n\n              {/* Patient */}\n              <Route path={`${path}/patient`} exact>\n                <PatientPage />\n              </Route>\n              \n              <Route path={`${path}/patient/:patientId`} exact>\n                <PatientDetails />\n              </Route>\n\n              <Route path={`${path}/patient/:patientId/:emrId`}>\n                <EmrDetailsPage />\n              </Route>\n\n              {/* Appointment */}\n              <Route path={`${path}/appointment`}>\n                <AppointmentPage />\n              </Route>\n\n              <Route path={`${path}/profile`}>\n                <ProfilePage />\n              </Route>\n\n              {/* Fallback */}\n              <Redirect to={`/physician/visit`} />\n            </Switch>\n          </Content>\n        </Layout>\n      </Layout>\n    </Layout>\n  )\n}\n\nexport default withPrivateRoute(PhysicianLayout, ['physician']);","import React from 'react';\nimport { Form, Input, Row, Col, DatePicker, Radio } from 'antd';\nimport { requiredRule } from 'constant/formRules';\n\nconst PatientForm = props => {\n  const { form, onFinish } = props;\n\n  return (\n    <Form\n      layout=\"vertical\"\n      onFinish={onFinish}\n      form={form}>\n      <Row>\n        <Col flex={1}>\n          <Form.Item label=\"Họ\" name=\"first_name\" rules={[requiredRule()]}>\n            <Input autoFocus />\n          </Form.Item>\n        </Col>\n        <Col flex=\"0 0 15px\"></Col>\n        <Col flex={1}>\n          <Form.Item label=\"Tên\" name=\"last_name\" rules={[requiredRule()]}>\n            <Input />\n          </Form.Item>\n        </Col>\n      </Row>\n      <Form.Item name=\"phone\" label=\"Số điện thoại\" rules={[requiredRule()]}>\n        <Input />\n      </Form.Item>\n      <Row>\n        <Col>\n          <Form.Item name=\"DOB\" label=\"Ngày sinh\" rules={[requiredRule()]}>\n            <DatePicker placeholder=\"Chọn ngày\" />\n          </Form.Item>\n\n        </Col>\n        <Col flex=\"0 0 15px\"></Col>\n        <Col flex={1}>\n          <Form.Item name=\"gender\" label=\"Giới tính\" rules={[requiredRule()]}>\n            <Radio.Group>\n              <Radio value=\"Nam\">Nam</Radio>\n              <Radio value=\"Nữ\">Nữ</Radio>\n              <Radio value=\"Khác\">Khác</Radio>\n            </Radio.Group>\n          </Form.Item>\n        </Col>\n      </Row>\n\n      <Row gutter={15}>\n        <Col flex=\"0 0 50%\">\n          <Form.Item name=\"job\" label=\"Nghề nghiệp\">\n            <Input />\n          </Form.Item>\n        </Col>\n        <Col flex=\"0 0 50%\">\n          <Form.Item name=\"workplace\" label=\"Nơi làm việc\">\n            <Input />\n          </Form.Item>\n        </Col>\n      </Row>\n\n      <Row gutter={15}>\n        <Col flex=\"0 0 50%\">\n          <Form.Item name=\"ethnicity\" label=\"Dân tộc\">\n            <Input />\n          </Form.Item>\n        </Col>\n        <Col flex=\"0 0 50%\">\n          <Form.Item name=\"expatriate\" label=\"Ngoại kiều\">\n            <Input />\n          </Form.Item>\n        </Col>\n      </Row>\n\n      <Form.Item label=\"Họ và tên người nhà\" name=\"family_member_name\">\n        <Input />\n      </Form.Item>\n\n      <Form.Item label=\"Địa chỉ\" name=\"address\">\n        <Input.TextArea autoSize={{ minRows: 2 }} />\n      </Form.Item>\n\n      <Form.Item label=\"Địa chỉ người nhà\" name=\"family_member_address\">\n        <Input.TextArea autoSize={{ minRows: 2 }} />\n      </Form.Item>\n\n    </Form>\n  )\n}\n\nexport default PatientForm;","import React, { useState, useEffect } from 'react';\nimport { Input, Table, Form, PageHeader, Button, Modal, Menu, Dropdown, message } from 'antd';\nimport { PlusOutlined } from '@ant-design/icons';\nimport PatientForm from 'forms/PatientForm/PatientForm';\n\n// APIs\nimport { getRoomAPI } from 'services/user/room.service';\nimport { createVisitAPI } from 'services/user/visit.service';\nimport { listAllPatientsAPI, createPatientAPI } from 'services/user/patient.service';\nimport { addBlockChainUserAPI } from 'services/user/user.service';\n\nconst ReceivePage = props => {\n\n  const [patientData, setPatientData] = useState(null);\n  const [patientLoading, setPatientLoading] = useState(false);\n  const [rooms, setRooms] = useState(null);\n  const [roomLoading, setRoomLoading] = useState(false);\n  const [roomModalVisible, setRoomModalVisible] = useState(false);\n  const [isCreatingPatient, setCreatingPatient] = useState(false);\n  const [modalVisible, setModalVisible] = useState(false);\n  const [isCreatingVisit, setCreatingVisit] = useState(false);\n  const [patientForm] = Form.useForm();\n\n  function renderMenu(patient) {\n    return (\n      <Menu>\n        {\n          rooms?.map(room => (\n            <Menu.Item key={room.id} onClick={() => handleCreateVisit(patient, room)}>Khoa {room.name}</Menu.Item>\n          ))\n        }\n      </Menu>\n    )\n  }\n\n  const tableColumns = [\n    {\n      title: '#',\n      key: 'index',\n      render: (text, record, index) => index + 1\n    },\n    {\n      title: 'Họ và tên',\n      key: 'fullname',\n      render: (text, { first_name, last_name }) => first_name + ' ' + last_name\n    },\n    {\n      title: 'Giới tính',\n      key: 'gender',\n      dataIndex: 'gender'\n    },\n    {\n      title: 'Ngày sinh',\n      key: 'DOB',\n      dataIndex: 'DOB'\n    },\n    {\n      title: 'Điện thoại',\n      key: 'phone',\n      dataIndex: 'phone'\n    },\n    {\n      title: 'Hành động',\n      key: 'action',\n      render: (text, record) => (\n        <Dropdown overlay={renderMenu(record)} overlayStyle={{ minWidth: 200 }} trigger=\"click\">\n          <Button>Tiếp nhận</Button>\n        </Dropdown>\n      )\n    }\n  ]\n\n\n  //\n  // Load initial data\n  //\n  async function listAllPatients(search) {\n    try {\n      setPatientLoading(true);\n      const patientResponse = await listAllPatientsAPI(search);\n      setPatientData(patientResponse.data);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setPatientLoading(false);\n    }\n  }\n\n  async function getRooms() {\n    try {\n      setRoomLoading(true);\n      const roomResponse = await getRoomAPI();\n      setRooms(roomResponse.data);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setRoomLoading(false);\n    }\n  }\n\n  async function getInitialData() {\n    await Promise.all([\n      listAllPatients(),\n      getRooms()\n    ])\n  }\n\n  useEffect(() => {\n    getInitialData();\n  }, []);\n\n  //\n  // Component functions\n  //\n  function handleAddClick() {\n    setModalVisible(true);\n  }\n\n  function handleCloseModal() {\n    setModalVisible(false);\n  }\n\n  function handleSearch(values) {\n    listAllPatients(values.search);\n  }\n\n  async function handleSubmit() {\n    try {\n      setCreatingPatient(true);\n      const values = await patientForm.validateFields();\n      values.DOB = values.DOB.format('YYYY-MM-DD');\n      const createResponse = await createPatientAPI(values);\n      const userId = createResponse.data.id;\n      await addBlockChainUserAPI(userId, \"patient\");\n      message.success(\"Tạo bệnh nhân thành công\");\n      setModalVisible(false);\n      await listAllPatients();\n      // await addBlockChainUserAPI(\"4f31587e-40cc-43a9-a3bf-a7e5fa731955\", \"patient\");\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setCreatingPatient(false);\n    }\n  }\n\n  async function handleCreateVisit(patient, room) {\n    try {\n      setCreatingVisit(true);\n      await createVisitAPI({ patientId: patient.id, roomId: room.id });\n      message.success(`Đã tiếp nhận bệnh nhân ${patient.first_name} ${patient.last_name} vào ${room.name}`);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setCreatingVisit(false);\n    }\n  }\n\n  return (\n    <>\n      <PageHeader\n        title=\"Tiếp nhận bệnh nhân\"\n        className=\"pl-0\"\n        extra={<Button type=\"primary\" onClick={handleAddClick} icon={<PlusOutlined />}>Bệnh nhân mới</Button>} />\n\n      <Form onFinish={handleSearch}>\n        <Form.Item name=\"search\">\n          <Input.Search size=\"large\" placeholder=\"Tìm kiếm bệnh nhân theo tên/SĐT\" />\n        </Form.Item>\n      </Form>\n      <Table\n        rowKey=\"id\"\n        dataSource={patientData?.results}\n        loading={patientLoading || isCreatingVisit}\n        columns={tableColumns} />\n      <Modal\n        visible={modalVisible}\n        confirmLoading={isCreatingPatient}\n        onCancel={handleCloseModal}\n        onOk={handleSubmit}\n        destroyOnClose={true}\n        title=\"Bệnh nhân mới\">\n        <PatientForm form={patientForm} onFinish={handleSubmit} />\n      </Modal>\n    </>\n  )\n}\n\nexport default ReceivePage;","import React from 'react';\nimport { Link, Redirect, Switch, Route, useRouteMatch, useLocation } from 'react-router-dom';\nimport { Layout, Menu } from 'antd';\nimport {\n  UserOutlined,\n  DashboardOutlined,\n  CalendarOutlined,\n} from '@ant-design/icons';\nimport AppointmentPage from 'pages/common/appointment/apointment';\nimport withPrivateRoute from 'HOCs/withPrivateRoute';\nimport CustomHeader from 'components/Header';\nimport ReceivePage from 'pages/receptionist/receive';\nimport ProfilePage from 'pages/common/profile/profile';\n\nconst { Sider, Content } = Layout;\n\nconst ReceptionistLayout = () => {\n  const match = useRouteMatch();\n  const location = useLocation();\n  const path = match.path;\n\n  return (\n    <Layout>\n      <CustomHeader />\n      <Layout>\n        <Sider width={200} className=\"site-layout-background\">\n          <Menu\n            mode=\"inline\"\n            style={{ height: '100%', borderRight: 0 }}\n            selectedKeys={[location.pathname]}\n          >\n            <Menu.Item key=\"/receptionist/receive\" icon={<DashboardOutlined />}>\n              <Link to=\"/receptionist/receive\">Tiếp nhận bệnh</Link>\n            </Menu.Item>\n            <Menu.Item key=\"/receptionist/appointment\" icon={<CalendarOutlined />}>\n              <Link to=\"/receptionist/appointment\">Lịch hẹn</Link>\n            </Menu.Item>\n\n            <Menu.Item key=\"/receptionist/profile\" icon={<UserOutlined />}>\n              <Link to=\"/receptionist/profile\">Hồ sơ</Link>\n            </Menu.Item>\n          </Menu>\n        </Sider>\n        <Layout style={{ padding: '0 24px 24px' }}>\n          <Content\n            className=\"site-layout-background\"\n            style={{\n              padding: 24,\n              margin: 0,\n              minHeight: 280,\n            }}\n          >\n            <Switch>\n              {/* Dashboard */}\n              <Route path={`${path}/receive`}>\n                <ReceivePage />\n              </Route>\n\n              {/* Appointment */}\n              <Route path={`${path}/appointment`}>\n                <AppointmentPage />\n              </Route>\n\n              <Route path={`${path}/profile`}>\n                <ProfilePage />\n              </Route>\n\n              {/* Fallback */}\n              <Redirect to={`/receptionist/receive`} />\n            </Switch>\n          </Content>\n        </Layout>\n      </Layout>\n    </Layout>\n  )\n}\n\nexport default withPrivateRoute(ReceptionistLayout, ['receptionist']);","import React from 'react';\n\nconst EmailIcon = () => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" id=\"Capa_1\" enableBackground=\"new 0 0 512 512\" height=\"50\" viewBox=\"0 0 512 512\" width=\"50\"><g><g><path d=\"m497 15.243h-482c-8.284 0-15 6.716-15 15v330c0 8.284 6.716 15 15 15h121.019c-.006.505-.019 1.008-.019 1.515 0 66.168 53.832 120 120 120s120-53.832 120-120c0-.506-.013-1.01-.019-1.515h121.019c8.284 0 15-6.716 15-15v-330c0-8.285-6.716-15-15-15zm-43.122 30-197.878 147.792-197.878-147.792zm-197.878 421.514c-49.626 0-90-40.374-90-90s40.374-90 90-90 90 40.374 90 90-40.374 90-90 90zm226-121.514h-110.208c-13.876-50.929-60.527-88.485-115.792-88.485-55.266 0-101.916 37.557-115.792 88.485h-110.208v-283.56l217.024 162.092c2.662 1.988 5.819 2.982 8.976 2.982s6.314-.994 8.976-2.982l217.024-162.092zm-191.606 5.908-49.394 49.393-19.394-19.393c-5.857-5.858-15.355-5.858-21.213 0s-5.858 15.355 0 21.213l30 30c2.929 2.929 6.768 4.394 10.606 4.394s7.678-1.464 10.606-4.394l60-60c5.858-5.858 5.858-15.355 0-21.213-5.856-5.859-15.354-5.859-21.211 0z\" fill=\"currentColor\" /></g></g></svg>\n)\n\nexport default EmailIcon;","import React, { useState, useEffect } from 'react';\nimport EmailIcon from 'components/Icons/EmailIcon';\nimport Icon from '@ant-design/icons';\nimport { Alert, Button, Space, Spin } from 'antd';\nimport { Link, useLocation } from 'react-router-dom';\nimport { verifyEmailAPI } from 'services/auth/auth.service';\n\nconst VerifyPage = (props) => {\n\n  const [loading, setLoading] = useState(false);\n  const [success, setSuccess] = useState(false);\n  const [error, setError] = useState(null);\n  const { search } = useLocation();\n  const urlSearchParams = new URLSearchParams(search);\n  const token = urlSearchParams.get('token');\n\n  function isValidToken(token = \"\") {\n    const isValid = /[A-Za-z0-9-_=]+\\.[A-Za-z0-9-_=]+\\.?[A-Za-z0-9-_.+/=]*/.test(token);\n    console.log(isValid);\n    return isValid;\n  }\n\n  async function verifyEmail(token) {\n    try {\n      setLoading(true);\n      await verifyEmailAPI(token);\n      setSuccess(true);\n    } catch (error) {\n      setError(error);\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  useEffect(() => {\n    if (token && token.length > 0 && isValidToken(token)) {\n      verifyEmail(token);\n    }\n  }, [search, token]);\n\n  return (\n    <main className=\"login-page\">\n      <div className=\"auth\">\n        <div className=\"auth__header text-center\">\n          <Icon component={EmailIcon} />\n          <h1 className=\"text-3xl\">Xác thực email</h1>\n        </div>\n\n        {\n          loading &&\n          <Space align=\"center\" className=\"flex text-center justify-center\">\n            <Spin />\n            <span>Vui lòng đợi</span>\n          </Space>\n        }\n\n        {\n          success &&\n          <Alert\n            showIcon\n            type=\"success\"\n            message=\"Xác thực địa chỉ email thành công\"\n          />\n        }\n\n        {\n          !isValidToken(token) &&\n          <Alert\n            showIcon\n            type=\"error\"\n            message=\"URL không hợp lệ\"\n          />\n        }\n\n        {\n          !!error &&\n          <Alert\n            showIcon\n            type=\"error\"\n            message={error?.response?.data.message || \"Có lỗi khi xác thực email, vui lòng thử lại\"}\n          />\n        }\n\n        <div className=\"text-center mt-5\">\n          <Button type=\"link\">\n            <Link to=\"/\">Về trang chủ</Link>\n          </Button>\n        </div>\n      </div>\n    </main>\n  )\n}\n\nexport default VerifyPage;","import { NODE_URL } from \"constant/apiUrl\";\nimport axios from 'axios';\n\n\nconst endpointPrefix = `${NODE_URL}/api/patient/emrs`;\n\nexport function listAllEmrs() {\n  const url = `${endpointPrefix}/`;\n  return axios.get(url);\n}\n\nexport function getEMRHistoryAPI(emrId) {\n  const url = `${endpointPrefix}/${emrId}`;\n  return axios.get(url);\n}","import { Button, Space, Table } from 'antd';\nimport React, { useState, useEffect } from 'react';\nimport { listAllEmrs } from 'services/patient/emr.service';\nimport moment from 'moment';\nimport Circle from 'components/Circle/Circle';\nimport { Link, useRouteMatch } from 'react-router-dom';\nimport { EyeOutlined } from '@ant-design/icons';\n\nconst PatientEmrPage = props => {\n\n  const { url } = useRouteMatch();\n  const [emrs, setEmrs] = useState(null);\n  const [emrLoading, setEmrLoading] = useState(false);\n\n  const tableColumns = [\n    {\n      title: '#',\n      key: '#',\n      render: (_, __, index) => index + 1\n    },\n    {\n      title: 'Ngày khám bệnh',\n      key: 'date',\n      render: (_, row) => moment(row.Record.created_at).format(\"DD/MM/YYYY\")\n    },\n    {\n      title: 'Bác sĩ khám bệnh',\n      key: 'physician',\n      render: (_, row) => row.Record.physician.first_name + \" \" + row.Record.physician.last_name\n    },\n    {\n      title: 'Khoa khám',\n      key: 'room',\n      render: (_, row) => \"Khoa \" + row.Record.room.name\n    },\n    {\n      title: 'Trạng thái',\n      key: 'status',\n      render: (_, row) => <div className=\"flex items-center\">\n        <Circle color={row.Record.completed_at !== null ? 'success' : ''} />\n        <span className=\"ml-2\">{row.Record.completed_at !== null ? ' Đã đóng' : ' Chưa đóng'}</span>\n      </div>\n    },\n    {\n      title: 'Hành động',\n      key: 'actions',\n      render: (_, row) => <Space>\n        <Link to={`${url}/${row.Key}`}>\n          <Button icon={<EyeOutlined />}>Xem</Button>\n        </Link>\n      </Space>\n    }\n  ]\n\n  async function getEmrs() {\n    try {\n      setEmrLoading(true);\n      const res = await listAllEmrs();\n      const data = res.data.data;\n      setEmrs(data);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setEmrLoading(false);\n    }\n  }\n\n  async function getInitialData() {\n    return await Promise.all([\n      getEmrs()\n    ])\n  }\n\n  useEffect(() => {\n    getInitialData();\n  }, [])\n\n  return (\n    <>\n      <h1 className=\"text-xl\">Lịch sử khám bệnh</h1>\n      <Table rowKey=\"Key\" dataSource={emrs} loading={emrLoading} columns={tableColumns} />\n    </>\n  )\n}\n\nexport default PatientEmrPage;","import { Empty, PageHeader, Spin, Tabs } from 'antd';\nimport EmrDesc from 'components/EmrDesc/EmrDesc';\nimport React, { useState, useEffect } from 'react';\nimport { useHistory, useRouteMatch } from 'react-router-dom';\nimport { getEMRHistoryAPI } from 'services/patient/emr.service';\n\nconst PatientEmrDetailsPage = props => {\n\n  const { goBack } = useHistory();\n  const { params } = useRouteMatch();\n\n  const [emrHistory, setEmrHistory] = useState([]);\n  const [emrLoading, setEmrLoading] = useState(false);\n  const [selectedTab, setSelectedTab] = useState(\"\");\n\n  async function getEmrHistory(emrId) {\n    try {\n      setEmrLoading(true);\n      const res = await getEMRHistoryAPI(emrId);\n      const data = res.data.data;\n      setEmrHistory(data);\n      setSelectedTab(data.completed_at || data.updated_at || data.created_at);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setEmrLoading(false);\n    }\n  }\n\n  async function getInitialData() {\n    const emrId = params.emrId;\n    return await Promise.all([\n      getEmrHistory(emrId)\n    ])\n  }\n\n  useEffect(() => {\n    getInitialData();\n  }, []);\n\n  return (\n    <div className=\"bg-white p-3\">\n      <PageHeader onBack={goBack} title=\"Chi tiết bệnh án\" />\n      {\n        emrLoading ? <Spin spinning={true} /> :\n          emrHistory.length > 0 ?\n            <Tabs defaultActiveKey={selectedTab} onChange={(val) => setSelectedTab(val)}>\n              {\n                emrHistory.map(h => {\n                  return <Tabs.TabPane key={h.completed_at || h.updated_at || h.created_at} tab={h.completed_at || h.updated_at || h.created_at}>\n                    <EmrDesc emr={h} />\n                  </Tabs.TabPane>\n                })\n              }\n            </Tabs>\n            :\n            <Empty />\n      }\n    </div>\n  )\n}\n\nexport default PatientEmrDetailsPage;","import React from 'react';\nimport { Link, Redirect, Switch, Route, useRouteMatch, useLocation } from 'react-router-dom';\nimport { Layout, Menu } from 'antd';\nimport {\n  UserOutlined,\n  DashboardOutlined,\n  CalendarOutlined,\n} from '@ant-design/icons';\nimport withPrivateRoute from 'HOCs/withPrivateRoute';\nimport CustomHeader from 'components/Header';\nimport ProfilePage from 'pages/common/profile/profile';\nimport PatientEmrPage from 'pages/patient/emr';\nimport PatientEmrDetailsPage from 'pages/patient/patient-emr-details';\n\nconst { Sider, Content } = Layout;\n\nconst PatientLayout = () => {\n  const match = useRouteMatch();\n  const location = useLocation();\n  const path = match.path;\n\n  return (\n    <Layout>\n      <CustomHeader />\n      <Layout>\n        <Sider width={200} className=\"site-layout-background\">\n          <Menu\n            mode=\"inline\"\n            style={{ height: '100%', borderRight: 0 }}\n            selectedKeys={[location.pathname]}\n          >\n            <Menu.Item key=\"/patient/emr\" icon={<DashboardOutlined />}>\n              <Link to=\"/patient/emr\">Bệnh án</Link>\n            </Menu.Item>\n\n            <Menu.Item key=\"/patient/profile\" icon={<UserOutlined />}>\n              <Link to=\"/patient/profile\">Hồ sơ</Link>\n            </Menu.Item>\n          </Menu>\n        </Sider>\n        <Layout style={{ padding: '0 24px 24px' }}>\n          <Content\n            className=\"site-layout-background\"\n            style={{\n              padding: 24,\n              margin: 0,\n              minHeight: 280,\n            }}\n          >\n            <Switch>\n              {/* Dashboard */}\n              <Route path={`${path}/emr`} exact>\n                <PatientEmrPage />\n              </Route>\n\n              <Route path={`${path}/emr/:emrId`}>\n                <PatientEmrDetailsPage />\n              </Route>\n\n              <Route path={`${path}/profile`}>\n                <ProfilePage />\n              </Route>\n\n              {/* Fallback */}\n              <Redirect to={`/patient/emr`} />\n            </Switch>\n          </Content>\n        </Layout>\n      </Layout>\n    </Layout>\n  )\n}\n\nexport default withPrivateRoute(PatientLayout, ['patient']);","import React, { useEffect } from 'react';\nimport { Route, HashRouter as Router, Switch, Redirect  } from 'react-router-dom';\nimport LoginPage from 'pages/login';\nimport Cookie from 'js-cookie';\nimport jwtDecode from 'jwt-decode';\nimport AdminLayout from 'layouts/AdminLayout/AdminLayout';\nimport PhysicianLayout from 'layouts/PhysicianLayout/PhysicianLayout';\nimport ReceptionistLayout from 'layouts/ReceptionistLayout/ReceptionistLayout';\nimport setupInterceptor from 'utils/interceptor';\nimport { useDispatch } from 'react-redux';\nimport { getProfileAction } from 'store/actions/user.action';\nimport { refreshToken } from 'services/auth/auth.service';\nimport moment from 'moment';\nimport 'moment/locale/vi';\n\n// import \"normalize.css/normalize.css\";\n// import \"@blueprintjs/core/lib/css/blueprint.css\";\n// import \"@blueprintjs/icons/lib/css/blueprint-icons.css\";\nimport 'antd/dist/antd.css';\nimport 'styles/main.scss';\nimport VerifyPage from 'pages/verify-email';\nimport PatientLayout from 'layouts/PatientLayout/PatientLayout';\n\nmoment.locale('vi');\n\n\nfunction App() {\n\n  setupInterceptor();\n\n  const dispatch = useDispatch();\n\n  function fetchProfile() {\n    try {\n      const token = Cookie.get('EMR_token');\n      if (token && jwtDecode(token)) {\n        dispatch(getProfileAction());\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async function checkRefresh() {\n    try {\n      const token = Cookie.get('EMR_token');\n      const refresh = Cookie.get('EMR_refresh');\n      if (!token && refresh) {\n        const newTokenReponse = await refreshToken(refresh);\n        const newToken = newTokenReponse.data;\n        Cookie.set('EMR_token', newToken.access_token, { expires: 3/24 });\n      }\n      fetchProfile();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  useEffect(() => {\n    checkRefresh();\n  });\n  \n  return (\n    <div className=\"app\">\n      <Router>\n        <Switch>\n          <Route path=\"/login\" component={LoginPage} />\n          <Route path=\"/verify-email\" component={VerifyPage} />\n\n          <Route path=\"/admin\" component={AdminLayout} />\n          <Route path=\"/physician\" component={PhysicianLayout} />\n          <Route path=\"/receptionist\" component={ReceptionistLayout} />\n          <Route path=\"/patient\" component={PatientLayout} />\n\n          <Redirect to=\"/login\" />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import axios from 'axios';\nimport { message } from 'antd';\nimport Cookie from 'js-cookie';\nimport * as AuthService from 'services/auth/auth.service';\nimport jwtDecode from 'jwt-decode';\nimport { API_URL } from 'constant/apiUrl';\n\nexport default function setupInterceptor() {\n  axios.interceptors.request.use((config) => {\n\n    if (config.method === 'delete') {\n      message.loading('Đang thực hiện');\n    }\n\n    try {\n      const token = Cookie.get('EMR_token');\n      if (token && jwtDecode(token)) {\n        config.headers['Authorization'] = `Bearer ${token}`;\n      }\n    } catch (error) {\n      console.log({ error });\n    }\n    return config;\n  }, (error) => Promise.reject(error));\n\n  axios.interceptors.response.use(((res) => {\n    return res;\n  }), async (error) => {\n    const originalRequest = error.config;\n\n    if (error.response.status === 401 && !originalRequest._retry && originalRequest.url !== `${API_URL}/auth/refresh-token/`) {\n      Cookie.remove(\"EMR_token\");\n\n      originalRequest._retry = true;\n\n      let refreshToken = Cookie.get('EMR_refresh');\n\n      if (refreshToken && refreshToken.length > 0) {\n        try {\n          const refreshResponse = await AuthService.refreshToken(refreshToken);\n          const newToken = refreshResponse.data.access_token;\n          Cookie.set('EMR_token', newToken);\n\n          const config = error.config;\n          config.headers['Authorization'] = `Bearer ${newToken}`;\n\n          return new Promise((resolve, reject) => {\n            return axios.request(config)\n              .then(res => resolve(res))\n              .catch(error => reject(error))\n          })\n        } catch (error) {\n          Cookie.remove(\"EMR_refresh\");\n          return Promise.reject(error);\n        }\n      }\n    } else {\n      // Do not show error alert on veirfy email page because it already have its own error messages\n      if (!originalRequest.url.includes('/api/auth/verify-email')) {\n        const errorMessage = error.response?.data.message || \"Unexpected error occurred\";\n        message.error(errorMessage);\n      }\n\n    }\n\n    return Promise.reject(error);\n  })\n}","import * as actionTypes from '../actionTypes';\n\nconst initialState = {\n  loginLoading: false\n}\n\nexport default function authReducer (state = initialState, action) {\n  switch(action.type) {\n    case actionTypes.LOGIN_PENDING:\n      return {\n        ...state,\n        loginLoading: true\n      }\n\n    case actionTypes.LOGIN_SUCCESS:\n      return {\n        ...state,\n        loginLoading: false\n      }\n\n    case actionTypes.LOGIN_FAILURE:\n      return {\n        ...state,\n        loginLoading: false\n      }\n\n    default:\n      return {\n        ...state\n      }\n  }\n}","import * as actionTypes from '../actionTypes';\n\nconst initialState = {\n  user: null,\n  getProfileLoading: false,\n}\n\nexport default function userReducer(state = initialState, action) {\n  switch (action.type) {\n    case actionTypes.GET_PROFILE_PENDING:\n      return {\n        ...state,\n        user: null,\n        getProfileLoading: true\n      }\n    case actionTypes.GET_PROFILE_SUCCESS:\n      return {\n        ...state,\n        user: action.payload,\n        getProfileLoading: false\n      }\n    case actionTypes.GET_PROFILE_FAILURE:\n      return {\n        ...state,\n        user: null,\n        getProfileLoading: false\n      }\n    \n    case actionTypes.LOGOUT:\n      return {\n        ...state,\n        user: null,\n        getProfileLoading: false\n      }\n    default:\n      return { ...state }\n  }\n}","import { combineReducers } from 'redux';\nimport authReducer from './reducers/auth.reducer';\nimport userReducer from './reducers/user.reducer';\n\nconst rootReducer = combineReducers({\n  userState: userReducer,\n  authState: authReducer\n})\n\nexport default rootReducer;","import { createStore, compose, applyMiddleware } from 'redux';\nimport rootReducer from './rootReducer';\nimport thunk from 'redux-thunk';\n\nconst middlewares = [thunk]\n\nconst composeEnhancers =\n  typeof window === 'object' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : compose;\n\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(...middlewares)));\n\nexport default store;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from 'store/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\nimport { ConfigProvider } from 'antd';\nimport viVN from 'antd/lib/locale/vi_VN';\n\nReactDOM.render(\n  <Provider store={store}>\n    <ConfigProvider locale={viVN}>\n      <App />\n    </ConfigProvider>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}