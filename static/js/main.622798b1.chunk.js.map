{"version":3,"sources":["components/Icons/LoginIcon.jsx","constant/apiUrl.js","services/auth/auth.service.js","services/auth/user.service.js","store/actionTypes.js","store/actions/user.action.js","forms/LoginForm/LoginForm.jsx","pages/login.jsx","pages/admin/dashboard.jsx","forms/DrugCategoryForm/DrugCategoryForm.jsx","pages/common/drug/drug-category.jsx","forms/DrugUnitForm/DrugUnitForm.jsx","pages/common/drug/drug-unit.jsx","pages/common/drug/drug.jsx","pages/common/drug/drug-instruction.jsx","pages/common/disease/disease-category.jsx","pages/common/disease/disease.jsx","pages/common/notification/notification.jsx","pages/common/visit/visit.jsx","pages/common/patient/patient.jsx","pages/common/appointment/apointment.jsx","pages/common/service/service.jsx","pages/common/working-hour/working-hour.jsx","pages/common/room/room.jsx","pages/admin/account.jsx","pages/admin/setting.jsx","HOCs/withPrivateRoute.jsx","layouts/AdminLayout/AdminLayout.jsx","App.jsx","utils/interceptor.js","store/reducers/user.reducer.js","store/rootReducer.js","store/store.js","serviceWorker.js","index.jsx"],"names":["LoginIcon","width","height","xmlns","xmlnsXlink","version","id","x","y","viewBox","fill","xmlSpace","cx","cy","r","d","API_URL","endpointPrefix","login","email","password","url","axios","post","refreshToken","refresh_token","getProfile","get","SET_USER","REMOVE_USER","setUser","user","type","actionTypes","payload","logout","Cookie","remove","LoginForm","props","history","useHistory","useState","loading","setLoading","dispatch","useDispatch","values","a","AuthService","loginRes","loginData","data","accessToken","access_token","console","log","set","expires","UserService","profileRes","profile","role","replace","className","layout","autoComplete","onFinish","Icon","component","Item","name","placeholder","Password","to","block","size","htmlType","LoginPage","AdminDashboard","DrugCategoryForm","label","DrugCategoryPage","modalVisible","setModalVisible","categories","justify","icon","PlusOutlined","onClick","columns","title","key","render","text","record","index","dataIndex","dataSource","visible","onCancel","DrugUnitForm","DrugUnitPage","DrugPage","DrugInstructionPage","DiseaseCategory","DiseasePage","NotificationPage","VisitPage","PatientPage","AppointmentPage","ServicePage","WorkingHourPage","RoomPage","AdminAccountPage","AdminSettingPage","jwtDecode","require","withPrivateRoute","Child","roles","token","useSelector","state","userState","length","userRole","isValid","includes","isValidRole","error","Header","Layout","Sider","Content","SubMenu","Menu","Divider","Modal","confirm","match","useRouteMatch","location","useLocation","path","ghost","UserOutlined","first_name","last_name","LogoutOutlined","ExclamationCircleOutlined","content","onOk","mode","style","borderRight","selectedKeys","pathname","DashboardOutlined","MedicineBoxOutlined","BugOutlined","NotificationOutlined","ContainerOutlined","IdcardOutlined","CalendarOutlined","DollarOutlined","ClockCircleOutlined","AppstoreOutlined","SettingOutlined","padding","margin","minHeight","exact","App","interceptors","request","use","config","headers","Promise","reject","response","res","originalRequest","status","_retry","refreshResponse","newToken","resolve","then","catch","errorMessage","message","useEffect","fetchProfile","AdminLayout","initialState","rootReducer","combineReducers","action","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","Boolean","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.622798b1.chunk.js","sourcesContent":["import React from 'react';\n\nconst LoginIcon = () => (\n  <svg width=\"50\" height=\"50\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" version=\"1.1\" id=\"Capa_1\" x=\"0px\" y=\"0px\" viewBox=\"0 0 512.002 512.002\" fill=\"currentColor\" xmlSpace=\"preserve\">\n    <g>\n      <g>\n        <g>\n          <circle cx=\"338\" cy=\"346.001\" r=\"20\" />\n          <path d=\"M238,472.001H80c-22.056,0-40-17.944-40-40v-164c0-22.056,17.944-40,40-40h288c22.056,0,40,17.944,40,40v40     c0,11.046,8.954,20,20,20c11.046,0,20-8.954,20-20v-40c0-44.112-35.888-80-80-80h-24.037v-70.534     c0-64.771-53.832-117.466-120-117.466s-120,52.695-120,117.466v70.534H80c-44.112,0-80,35.888-80,80v164     c0,44.112,35.888,80,80,80h158c11.046,0,20-8.954,20-20S249.046,472.001,238,472.001z M143.963,117.467     c0-42.715,35.888-77.466,80-77.466s80,34.751,80,77.466v70.534h-160V117.467z\" />\n          <path d=\"M503.643,325.739c-8.982-6.431-21.477-4.362-27.904,4.62l-98.581,137.7c-2.692,3.122-6.066,3.796-7.874,3.916     c-1.854,0.123-5.424-0.112-8.567-3.061l-63.708-62.171c-7.906-7.716-20.568-7.559-28.282,0.345     c-7.715,7.905-7.561,20.567,0.345,28.282l63.82,62.281c0.06,0.058,0.119,0.116,0.18,0.173C342.639,506.933,355.41,512,368.55,512     c1.129,0,2.261-0.037,3.393-0.113c14.314-0.954,27.679-7.915,36.666-19.097c0.232-0.29,0.456-0.585,0.673-0.887l98.981-138.26     C514.692,344.662,512.624,332.168,503.643,325.739z\" />\n          <circle cx=\"262\" cy=\"346.001\" r=\"20\" />\n          <circle cx=\"112\" cy=\"346.001\" r=\"20\" />\n          <circle cx=\"187\" cy=\"346.001\" r=\"20\" />\n        </g>\n      </g>\n    </g>\n    <g>\n    </g>\n    <g>\n    </g>\n    <g>\n    </g>\n    <g>\n    </g>\n    <g>\n    </g>\n    <g>\n    </g>\n    <g>\n    </g>\n    <g>\n    </g>\n    <g>\n    </g>\n    <g>\n    </g>\n    <g>\n    </g>\n    <g>\n    </g>\n    <g>\n    </g>\n    <g>\n    </g>\n    <g>\n    </g>\n  </svg>\n)\n\nexport default LoginIcon;","export const API_URL = 'https://emr-2020.wl.r.appspot.com/api';","import { API_URL } from \"constant/apiUrl\";\nimport axios from 'axios';\n\n\nconst endpointPrefix = `${API_URL}/auth`;\n\n/**\n * Login to system\n * @param email\n * @param password\n */\nexport function login(email, password) {\n  const url = `${endpointPrefix}/login/`;\n  return axios.post(url, {\n    email: email,\n    password: password\n  });\n}\n\n/**\n * This function is used to get new access token from refresh token\n * when current access token is expired\n * @param refreshToken Refresh token from last login\n */\nexport function refreshToken(refreshToken) {\n  const url = `${endpointPrefix}/refresh-token/`;\n  return axios.post(url, {\n    refresh_token: refreshToken\n  });\n}\n","import { API_URL } from \"constant/apiUrl\";\nimport axios from 'axios';\n\nconst endpointPrefix = `${API_URL}/user`;\n\n/**\n* Get user profile\n* @param token Access token\n*/\nexport function getProfile() {\n  const url = `${endpointPrefix}/profile/`;\n  return axios.get(url);\n}","export const SET_USER = \"SET_USER\";\nexport const REMOVE_USER = \"REMOVE_USER\";","import * as actionTypes from '../actionTypes';\nimport Cookie from 'js-cookie'\n\nexport function setUser(user) {\n  return {\n    type: actionTypes.SET_USER,\n    payload: user\n  }\n}\n\nexport function logout() {\n  Cookie.remove('EMR_access');\n  Cookie.remove('EMR_refresh');\n  return {\n    type: actionTypes.REMOVE_USER\n  }\n}","import React, { useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { Form, Input, Button } from 'antd';\nimport Icon from '@ant-design/icons';\nimport LoginIcon from 'components/Icons/LoginIcon';\nimport * as AuthService from 'services/auth/auth.service';\nimport Cookie from 'js-cookie';\nimport * as UserService from 'services/auth/user.service';\nimport { useDispatch } from 'react-redux';\nimport { setUser } from 'store/actions/user.action';\n\nconst LoginForm = (props) => {\n  const history = useHistory();\n  const [loading, setLoading] = useState(false);\n  const dispatch = useDispatch();\n\n  async function handleSubmit(values) {\n    try {\n      setLoading(true);\n      const loginRes = await AuthService.login(values.email, values.password);\n      const loginData = loginRes.data;\n\n      const accessToken = loginData.access_token;\n      const refreshToken = loginData.refresh_token;\n      console.log(loginData);\n      Cookie.set('EMR_token', accessToken, { expires: 3 / 24 }); // 3 hours\n      Cookie.set('EMR_refresh', refreshToken, { expires: 7 }); // 7 days\n\n      const profileRes = await UserService.getProfile();\n      const profile = profileRes.data;\n      dispatch(setUser(profile));\n\n      switch (profile.role.id) {\n        case 1:\n          history.replace('/admin');\n          break;\n        case 2:\n          history.replace('/physician');\n          break;\n        case 3:\n          history.replace('/receiptionist');\n          break;\n        default:\n          return history.replace('/user');\n      }\n\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  return (\n    <Form\n      className=\"login-form\"\n      layout=\"vertical\"\n      autoComplete=\"off\"\n      onFinish={handleSubmit}>\n\n      <div className=\"text-center\">\n\n        <div className=\"login-form__header\">\n          <Icon component={LoginIcon} />\n          <h1 className=\"text-3xl\">Đăng nhập</h1>\n        </div>\n\n      </div>\n\n      <Form.Item name=\"email\">\n        <Input type=\"email\" placeholder=\"Email\" />\n      </Form.Item>\n\n      <Form.Item name=\"password\" className=\"m-0\">\n        <Input.Password placeholder=\"Mật khẩu\" />\n        {/* <Button type=\"link\"> */}\n        {/* </Button> */}\n      </Form.Item>\n      <Link className=\"block mt-2 mb-6\" to=\"/forgot-password\">Quên mật khẩu</Link>\n\n      <Form.Item>\n        <Button loading={loading} block type=\"primary\" size=\"large\" htmlType=\"submit\">Đăng nhập</Button>\n      </Form.Item>\n    </Form>\n  )\n}\n\nexport default LoginForm;","import React from 'react';\nimport LoginForm from 'forms/LoginForm/LoginForm';\n\nconst LoginPage = (props) => {\n  return (\n    <main className=\"login-page\">\n      <LoginForm />\n    </main>\n  )\n}\n\nexport default LoginPage;","import AdminLayout from 'layouts/AdminLayout/AdminLayout';\nimport React, { ReactNode } from 'react';\n\n\nconst AdminDashboard = () => {\n  return (\n    <div>Admin dashboard</div>\n  )\n}\n\nexport default AdminDashboard;","import React from 'react';\nimport { Form, Input } from 'antd';\n\nconst DrugCategoryForm = () => {\n  return (\n    <Form>\n      <Form.Item label=\"Tên\">\n        <Input />\n      </Form.Item>\n    </Form>\n  )\n}\n\nexport default DrugCategoryForm;","import React, { useState } from 'react';\nimport { Row, Col, Button, Modal, Table } from 'antd';\nimport { PlusOutlined } from '@ant-design/icons';\nimport DrugCategoryForm from 'forms/DrugCategoryForm/DrugCategoryForm';\n\nconst DrugCategoryPage = () => {\n\n  const [modalVisible, setModalVisible] = useState(false);\n  const [categories, setCategories] = useState([]);\n\n  const tableColumns = [\n    {\n      title: '#',\n      key: '#',\n      render: (text, record, index) => index\n    },\n    {\n      title: 'Tên',\n      key: 'name',\n      dataIndex: 'name'\n    }\n  ]\n\n  function handleOpenModal() {\n    setModalVisible(true);\n  }\n\n  function handleCloseModal() {\n    setModalVisible(false);\n  }\n\n  return (\n    <>\n      <Row justify=\"space-between\">\n        <Col><h1 className=\"text-xl\">Loại thuốc</h1></Col>\n        <Col>\n          <Button type=\"primary\" icon={<PlusOutlined />} onClick={handleOpenModal}>Tạo mới</Button>\n        </Col>\n      </Row>\n      <Table columns={tableColumns} dataSource={categories} />\n      <Modal\n        visible={modalVisible}\n        title=\"Thêm loại thuốc\"\n        onCancel={handleCloseModal}>\n        <DrugCategoryForm />\n      </Modal>\n    </>\n  )\n}\n\nexport default DrugCategoryPage;","import React from 'react';\nimport { Form, Input } from 'antd';\n\nconst DrugUnitForm = () => {\n  return (\n    <Form>\n      <Form.Item label=\"Tên\">\n        <Input />\n      </Form.Item>\n    </Form>\n  )\n}\n\nexport default DrugUnitForm;","import React, { useState } from 'react';\nimport { Row, Col, Button, Modal} from 'antd';\nimport { PlusOutlined } from '@ant-design/icons';\nimport DrugUnitForm from 'forms/DrugUnitForm/DrugUnitForm';\n\nconst DrugUnitPage = () => {\n\n  const [modalVisible, setModalVisible] = useState(false);\n\n  function handleOpenModal() {\n    setModalVisible(true);\n  }\n\n  function handleCloseModal() {\n    setModalVisible(false);\n  }\n\n  return (\n    <>\n      <Row justify=\"space-between\">\n        <Col><h1 className=\"text-xl\">Đơn vị tính</h1></Col>\n        <Col>\n          <Button type=\"primary\" icon={<PlusOutlined />} onClick={handleOpenModal}>Tạo mới</Button>\n        </Col>\n      </Row>\n      <Modal\n        visible={modalVisible}\n        title=\"Thêm đơn vị tính\"\n        onCancel={handleCloseModal}>\n        <DrugUnitForm />\n      </Modal>\n    </>\n  )\n}\n\nexport default DrugUnitPage;","import React from 'react';\n\nconst DrugPage = () => {\n  return (\n    <div>Drug Page</div>\n  )\n}\n\nexport default DrugPage;","import React from 'react';\n\nconst DrugInstructionPage = () => {\n  return (\n    <div>Drug Instruction</div>\n  )\n}\n\nexport default DrugInstructionPage;","import React from 'react';\n\nconst DiseaseCategory = () => {\n  return (\n    <div>Disease category page</div>\n  )\n}\n\nexport default DiseaseCategory;","import React from 'react';\n\nconst DiseasePage = () => {\n  return (\n    <div>Disease Page</div>\n  )\n}\n\nexport default DiseasePage;","import React from 'react';\n\nconst NotificationPage = () => {\n  return (\n    <div>Notification Page</div>\n  )\n}\n\nexport default NotificationPage;","import React from 'react';\n\nconst VisitPage = () => {\n  return (\n    <div>Visit page</div>\n  )\n}\n\nexport default VisitPage;","import React from 'react';\n\nconst PatientPage = () => {\n  return (\n    <div>Patient page</div>\n  )\n}\n\nexport default PatientPage; ","import React from 'react';\n\nconst AppointmentPage = () => {\n  return (\n    <div>Appointment Page</div>\n  )\n}\n\nexport default AppointmentPage;","import React from 'react';\n\nconst ServicePage = () => {\n  return (\n    <div>Service Page</div>\n  )\n}\n\nexport default ServicePage;","import React from 'react';\n\nconst WorkingHourPage = () => {\n  return (\n    <div>WorkingHour Page</div>\n  )\n}\n\nexport default WorkingHourPage;","import React from 'react';\n\nconst RoomPage = () => {\n  return (\n    <div>RoomPage</div>\n  )\n}\n\nexport default RoomPage;","import React from 'react';\n\nconst AdminAccountPage = () => {\n  return (\n    <div>Account Page</div>\n  )\n}\n\nexport default AdminAccountPage;","import React from 'react';\n\nconst AdminSettingPage = () => {\n  return (\n    <div>Admin setting page</div>\n  )\n}\n\nexport default AdminSettingPage;","import React from 'react';\nimport Cookie from 'js-cookie';\nimport { Redirect } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { logout } from 'store/actions/user.action';\nconst jwtDecode = require('jwt-decode');\n\nconst withPrivateRoute = (Child, roles) => {\n  const WrapperComponent = (props) => {\n\n    const dispatch = useDispatch();\n    const token = Cookie.get('EMR_token');\n    const user = useSelector((state) => state.userState.user);\n\n    function isValidRole() {\n      const userRole = user.role.name;\n      const isValid = roles.includes(userRole);\n      console.log(isValid);\n      return isValid;\n    }\n\n    try {\n      if (!token || token.length === 0 || !jwtDecode(token)) {\n        return <Redirect to=\"/login\" />;\n      } else if (!isValidRole()) {\n        dispatch(logout());\n        return <Redirect to=\"/login\" />\n      }\n      \n    } catch (error) {\n      console.log(error);\n    }\n\n    return <Child {...props} />\n  }\n\n  return WrapperComponent;\n}\n\nexport default withPrivateRoute;","import React, { ReactNode } from 'react';\nimport { Link, Redirect, useHistory, Switch, Route, useRouteMatch, useLocation } from 'react-router-dom';\nimport { Layout, Menu, Breadcrumb, Button, Modal } from 'antd';\nimport {\n  UserOutlined,\n  LogoutOutlined,\n  DashboardOutlined,\n  MedicineBoxOutlined,\n  BugOutlined,\n  DollarOutlined,\n  IdcardOutlined,\n  ClockCircleOutlined,\n  AppstoreOutlined,\n  CalendarOutlined,\n  ContainerOutlined,\n  SettingOutlined,\n  NotificationOutlined,\n  ExclamationCircleOutlined\n} from '@ant-design/icons';\nimport AdminDashboard from 'pages/admin/dashboard';\nimport DrugCategoryPage from 'pages/common/drug/drug-category';\nimport DrugUnitPage from 'pages/common/drug/drug-unit';\nimport DrugPage from 'pages/common/drug/drug';\nimport DrugInstructionPage from 'pages/common/drug/drug-instruction';\nimport DiseaseCategory from 'pages/common/disease/disease-category';\nimport DiseasePage from 'pages/common/disease/disease';\nimport NotificationPage from 'pages/common/notification/notification';\nimport VisitPage from 'pages/common/visit/visit';\nimport PatientPage from 'pages/common/patient/patient';\nimport AppointmentPage from 'pages/common/appointment/apointment';\nimport ServicePage from 'pages/common/service/service';\nimport WorkingHourPage from 'pages/common/working-hour/working-hour';\nimport RoomPage from 'pages/common/room/room';\nimport AdminAccountPage from 'pages/admin/account';\nimport AdminSettingPage from 'pages/admin/setting';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Cookie from 'js-cookie';\nimport { logout } from 'store/actions/user.action';\nimport withPrivateRoute from 'HOCs/withPrivateRoute';\n\nconst { Header, Sider, Content } = Layout;\nconst { Item, SubMenu, Divider } = Menu;\nconst { confirm } = Modal;\n\nconst AdminLayout = (props) => {\n  const match = useRouteMatch();\n  const location = useLocation();\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const path = match.path;\n  const user = useSelector((state) => state.userState.user);\n\n  function handleLogout() {\n    Modal.confirm({\n      title: \"Đăng xuất\",\n      icon: <ExclamationCircleOutlined />,\n      content: \"Bạn có chắc muốn đăng xuất không?\",\n      async onOk() {\n        await dispatch(logout());\n        history.replace('/login');\n      }\n    })\n  }\n\n  return (\n    <Layout>\n      <Header className=\"header flex items-center\">\n        <Link to=\"/\" className=\"text-2xl text-white\">EMR</Link>\n        <div className=\"ml-auto\"></div>\n        <Button type=\"default\" ghost icon={<UserOutlined />} className=\"border-none\">{user?.first_name} {user?.last_name}</Button>\n        <Button type=\"default\" ghost icon={<LogoutOutlined />} className=\"border-none\" onClick={handleLogout}>Đăng xuất</Button>\n      </Header>\n      <Layout>\n        <Sider width={200} className=\"site-layout-background\">\n          <Menu\n            mode=\"inline\"\n            style={{ height: '100%', borderRight: 0 }}\n            selectedKeys={[location.pathname]}\n          >\n            <Menu.Item key=\"/admin/dashboard\" icon={<DashboardOutlined />}>\n              <Link to=\"/admin/dashboard\">Bảng điều khiển</Link>\n            </Menu.Item>\n            <SubMenu key=\"drug\" icon={<MedicineBoxOutlined />} title=\"Quản lý thuốc\">\n              <Menu.Item key=\"/admin/drug/category\">\n                <Link to=\"/admin/drug/category\">Loại thuốc</Link>\n              </Menu.Item>\n              <Menu.Item key=\"/admin/drug/unit\">\n                <Link to=\"/admin/drug/unit\">Đơn vị tính</Link>\n              </Menu.Item>\n              <Menu.Item key=\"/admin/drug\">\n                <Link to=\"/admin/drug\">Thuốc</Link>\n              </Menu.Item>\n              <Menu.Item key=\"/admin/drug/instruction\">\n                <Link to=\"/admin/drug/instruction\">Sử dụng</Link>\n              </Menu.Item>\n            </SubMenu>\n            <SubMenu key=\"disease\" icon={<BugOutlined />} title=\"Quản lý bệnh\">\n              <Menu.Item key=\"/admin/disease/category\">\n                <Link to=\"/admin/disease/category\">Loại bệnh</Link>\n              </Menu.Item>\n              <Menu.Item key=\"/admin/disease\">\n                <Link to=\"/admin/disease\">Bệnh</Link>\n              </Menu.Item>\n            </SubMenu>\n\n            <Menu.Item key=\"/admin/notification\" icon={<NotificationOutlined />}>\n              <Link to=\"/admin/notification\">Thông báo</Link>\n            </Menu.Item>\n            <Menu.Item key=\"/admin/visit\" icon={<ContainerOutlined />}>\n              <Link to=\"/admin/visit\">Khám chữa bệnh</Link>\n            </Menu.Item>\n            <Menu.Item key=\"/admin/patient\" icon={<IdcardOutlined />}>\n              <Link to=\"/admin/patient\">Bệnh nhân</Link>\n            </Menu.Item>\n            <Menu.Item key=\"/admin/appointment\" icon={<CalendarOutlined />}>\n              <Link to=\"/admin/appointment\">Lịch hẹn</Link>\n            </Menu.Item>\n            <Menu.Item key=\"/admin/service\" icon={<DollarOutlined />}>\n              <Link to=\"/admin/service\">Dịch vụ</Link>\n            </Menu.Item>\n\n            <Menu.Item key=\"/admin/working-hour\" icon={<ClockCircleOutlined />}>\n              <Link to=\"/admin/working-hour\">Giờ làm việc</Link>\n            </Menu.Item>\n            <Menu.Item key=\"/admin/room\" icon={<AppstoreOutlined />}>\n              <Link to=\"/admin/room\">Phòng</Link>\n            </Menu.Item>\n\n            <Menu.Item key=\"/admin/account\" icon={<UserOutlined />}>\n              <Link to=\"/admin/account\">Tài khoản</Link>\n            </Menu.Item>\n            <Menu.Item key=\"/admin/setting\" icon={<SettingOutlined />}>\n              <Link to=\"/admin/setting\">Cài đặt</Link>\n            </Menu.Item>\n          </Menu>\n        </Sider>\n        <Layout style={{ padding: '0 24px 24px' }}>\n          <Content\n            className=\"site-layout-background\"\n            style={{\n              padding: 24,\n              margin: 0,\n              minHeight: 280,\n            }}\n          >\n            <Switch>\n              {/* Dashboard */}\n              <Route path={`${path}/dashboard`}>\n                <AdminDashboard />\n              </Route>\n\n              {/* Drug */}\n              <Route path={`${path}/drug/category`}>\n                <DrugCategoryPage />\n              </Route>\n              <Route path={`${path}/drug/unit`}>\n                <DrugUnitPage />\n              </Route>\n              <Route path={`${path}/drug`} exact>\n                <DrugPage />\n              </Route>\n              <Route path={`${path}/drug/instruction`}>\n                <DrugInstructionPage />\n              </Route>\n\n              {/* Disease */}\n              <Route path={`${path}/disease/category`}>\n                <DiseaseCategory />\n              </Route>\n              <Route path={`${path}/disease`}>\n                <DiseasePage />\n              </Route>\n\n              {/* Notification */}\n              <Route path={`${path}/notification`}>\n                <NotificationPage />\n              </Route>\n\n              {/* Visit */}\n              <Route path={`${path}/visit`}>\n                <VisitPage />\n              </Route>\n\n              {/* Patient */}\n              <Route path={`${path}/patient`}>\n                <PatientPage />\n              </Route>\n\n              {/* Appointment */}\n              <Route path={`${path}/appointment`}>\n                <AppointmentPage />\n              </Route>\n\n              {/* Service */}\n              <Route path={`${path}/service`}>\n                <ServicePage />\n              </Route>\n\n              {/* Service */}\n              <Route path={`${path}/working-hour`}>\n                <WorkingHourPage />\n              </Route>\n\n              {/* Room */}\n              <Route path={`${path}/room`}>\n                <RoomPage />\n              </Route>\n\n              {/* Room */}\n              <Route path={`${path}/account`}>\n                <AdminAccountPage />\n              </Route>\n\n              {/* Room */}\n              <Route path={`${path}/setting`}>\n                <AdminSettingPage />\n              </Route>\n\n              {/* Fallback */}\n              <Redirect to={`/admin/dashboard`} />\n            </Switch>\n          </Content>\n        </Layout>\n      </Layout>\n    </Layout>\n  )\n}\n\nexport default withPrivateRoute(AdminLayout, ['admin']);","import React, { useEffect } from 'react';\nimport { Route, HashRouter as Router, Switch, Redirect } from 'react-router-dom';\nimport LoginPage from 'pages/login';\nimport Cookie from 'js-cookie';\nimport jwtDecode from 'jwt-decode';\n\n// import \"normalize.css/normalize.css\";\n// import \"@blueprintjs/core/lib/css/blueprint.css\";\n// import \"@blueprintjs/icons/lib/css/blueprint-icons.css\";\nimport 'antd/dist/antd.css';\nimport 'styles/main.scss';\nimport AdminLayout from 'layouts/AdminLayout/AdminLayout';\nimport setupInterceptor from 'utils/interceptor';\nimport * as UserService from 'services/auth/user.service';\nimport { useDispatch } from 'react-redux';\nimport { setUser } from 'store/actions/user.action';\n\nfunction App() {\n\n  const dispatch = useDispatch();\n\n  setupInterceptor();\n\n  async function fetchProfile() {\n    try {\n      const token = Cookie.get('EMR_token');\n      if (token && jwtDecode(token)) {\n        const profileRes = await UserService.getProfile();\n        dispatch(setUser(profileRes.data));\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  useEffect(() => {\n    fetchProfile();\n  }, []);\n  \n  return (\n    <div className=\"app\">\n      <Router>\n        <Switch>\n          <Route path=\"/login\">\n            <LoginPage />\n          </Route>\n\n          <Route path=\"/admin\" component={AdminLayout} />\n\n          <Redirect to=\"/login\" />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import axios, { AxiosRequestConfig, AxiosResponse } from 'axios';\nimport { message } from 'antd';\nimport Cookie from 'js-cookie';\nimport * as AuthService from 'services/auth/auth.service';\nimport jwtDecode from 'jwt-decode';\nimport { API_URL } from 'constant/apiUrl';\n\nexport default function setupInterceptor() {\n  axios.interceptors.request.use((config) => {\n    try {\n      const token = Cookie.get('EMR_token');\n      if (token && jwtDecode(token)) {\n        config.headers['Authorization'] = `Bearer ${token}`;\n      }\n    } catch (error) {\n\n    }\n    return config;\n  }, (error) => Promise.reject(error));\n\n  axios.interceptors.response.use(((res) => {\n    return res;\n  }), async (error) => {\n    const originalRequest = error.config;\n\n    if (error.response.status === 401 && !originalRequest._retry  && originalRequest.url !== `${API_URL}/auth/refresh-token/`) {\n      Cookie.remove(\"EMR_token\");\n\n      originalRequest._retry = true;\n\n      let refreshToken = Cookie.get('EMR_refresh');\n\n      if (refreshToken && refreshToken.length > 0) {\n        try {\n          const refreshResponse = await AuthService.refreshToken(refreshToken);\n          const newToken = refreshResponse.data.access_token;\n          Cookie.set('EMR_token', newToken);\n\n          const config = error.config;\n          config.headers['Authorization'] = `Bearer ${newToken}`;\n\n          return new Promise((resolve, reject) => {\n            return axios.request(config)\n            .then(res => resolve(res))\n            .catch(error => reject(error))\n          })\n        } catch (error) {\n          Cookie.remove(\"EMR_refresh\");\n          return Promise.reject(error);\n        }\n      }\n    } else {\n      const errorMessage = error.response?.data.message || \"Unexpected error occurred\";\n      message.error(errorMessage);\n    }\n\n    return Promise.reject(error);\n  })\n}","import * as actionTypes from '../actionTypes';\n\nconst initialState = {\n  user: null\n}\n\nexport default function userReducer(state = initialState, action) {\n  switch (action.type) {\n    case actionTypes.SET_USER:\n      return {\n        ...state,\n        user: action.payload\n      }\n    case actionTypes.REMOVE_USER:\n      return {\n        ...state,\n        user: null\n      }\n    default:\n      return { ...state }\n  }\n}","import { combineReducers } from 'redux';\nimport userReducer from './reducers/user.reducer';\n\nconst rootReducer = combineReducers({\n  userState: userReducer\n})\n\nexport default rootReducer;","import { createStore, compose, StoreEnhancer } from 'redux';\nimport rootReducer from './rootReducer';\n\n\nconst composeEnhancers =\n  typeof window === 'object' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__() : compose;\n\nconst store = createStore(rootReducer, composeEnhancers);\n\nexport default store;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from 'store/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}